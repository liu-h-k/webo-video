{"version":3,"file":"index.umd.js","sources":["../node_modules/video.js/dist/video.js","../src/index.js"],"sourcesContent":["/**\n * @license\n * Video.js 8.0.4 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/main/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/main/LICENSE>\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.videojs = factory());\n})(this, (function () { 'use strict';\n\n  var version$5 = \"8.0.4\";\n\n  /**\n   * An Object that contains lifecycle hooks as keys which point to an array\n   * of functions that are run when a lifecycle is triggered\n   *\n   * @private\n   */\n  const hooks_ = {};\n\n  /**\n   * Get a list of hooks for a specific lifecycle\n   *\n   * @param  {string} type\n   *         the lifecyle to get hooks from\n   *\n   * @param  {Function|Function[]} [fn]\n   *         Optionally add a hook (or hooks) to the lifecycle that your are getting.\n   *\n   * @return {Array}\n   *         an array of hooks, or an empty array if there are none.\n   */\n  const hooks = function (type, fn) {\n    hooks_[type] = hooks_[type] || [];\n    if (fn) {\n      hooks_[type] = hooks_[type].concat(fn);\n    }\n    return hooks_[type];\n  };\n\n  /**\n   * Add a function hook to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n  const hook = function (type, fn) {\n    hooks(type, fn);\n  };\n\n  /**\n   * Remove a hook from a specific videojs lifecycle.\n   *\n   * @param  {string} type\n   *         the lifecycle that the function hooked to\n   *\n   * @param  {Function} fn\n   *         The hooked function to remove\n   *\n   * @return {boolean}\n   *         The function that was removed or undef\n   */\n  const removeHook = function (type, fn) {\n    const index = hooks(type).indexOf(fn);\n    if (index <= -1) {\n      return false;\n    }\n    hooks_[type] = hooks_[type].slice();\n    hooks_[type].splice(index, 1);\n    return true;\n  };\n\n  /**\n   * Add a function hook that will only run once to a specific videojs lifecycle.\n   *\n   * @param {string} type\n   *        the lifecycle to hook the function to.\n   *\n   * @param {Function|Function[]}\n   *        The function or array of functions to attach.\n   */\n  const hookOnce = function (type, fn) {\n    hooks(type, [].concat(fn).map(original => {\n      const wrapper = (...args) => {\n        removeHook(type, wrapper);\n        return original(...args);\n      };\n      return wrapper;\n    }));\n  };\n\n  /**\n   * @file fullscreen-api.js\n   * @module fullscreen-api\n   */\n\n  /**\n   * Store the browser-specific methods for the fullscreen API.\n   *\n   * @type {Object}\n   * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n   * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n   */\n  const FullscreenApi = {\n    prefixed: true\n  };\n\n  // browser API methods\n  const apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror', 'fullscreen'],\n  // WebKit\n  ['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror', '-webkit-full-screen'],\n  // Mozilla\n  ['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror', '-moz-full-screen'],\n  // Microsoft\n  ['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError', '-ms-fullscreen']];\n  const specApi = apiMap[0];\n  let browserApi;\n\n  // determine the supported set of functions\n  for (let i = 0; i < apiMap.length; i++) {\n    // check for exitFullscreen function\n    if (apiMap[i][1] in document) {\n      browserApi = apiMap[i];\n      break;\n    }\n  }\n\n  // map the browser API names to the spec API names\n  if (browserApi) {\n    for (let i = 0; i < browserApi.length; i++) {\n      FullscreenApi[specApi[i]] = browserApi[i];\n    }\n    FullscreenApi.prefixed = browserApi[0] !== specApi[0];\n  }\n\n  /**\n   * @file create-logger.js\n   * @module create-logger\n   */\n\n  // This is the private tracking variable for the logging history.\n  let history = [];\n\n  /**\n   * Log messages to the console and history based on the type of message\n   *\n   * @private\n   * @param  {string} type\n   *         The name of the console method to use.\n   *\n   * @param  {Array} args\n   *         The arguments to be passed to the matching console method.\n   */\n  const LogByTypeFactory = (name, log) => (type, level, args) => {\n    const lvl = log.levels[level];\n    const lvlRegExp = new RegExp(`^(${lvl})$`);\n    if (type !== 'log') {\n      // Add the type to the front of the message when it's not \"log\".\n      args.unshift(type.toUpperCase() + ':');\n    }\n\n    // Add console prefix after adding to history.\n    args.unshift(name + ':');\n\n    // Add a clone of the args at this point to history.\n    if (history) {\n      history.push([].concat(args));\n\n      // only store 1000 history entries\n      const splice = history.length - 1000;\n      history.splice(0, splice > 0 ? splice : 0);\n    }\n\n    // If there's no console then don't try to output messages, but they will\n    // still be stored in history.\n    if (!window.console) {\n      return;\n    }\n\n    // Was setting these once outside of this function, but containing them\n    // in the function makes it easier to test cases where console doesn't exist\n    // when the module is executed.\n    let fn = window.console[type];\n    if (!fn && type === 'debug') {\n      // Certain browsers don't have support for console.debug. For those, we\n      // should default to the closest comparable log.\n      fn = window.console.info || window.console.log;\n    }\n\n    // Bail out if there's no console or if this type is not allowed by the\n    // current logging level.\n    if (!fn || !lvl || !lvlRegExp.test(type)) {\n      return;\n    }\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  };\n  function createLogger$1(name) {\n    // This is the private tracking variable for logging level.\n    let level = 'info';\n\n    // the curried logByType bound to the specific log and history\n    let logByType;\n\n    /**\n     * Logs plain debug messages. Similar to `console.log`.\n     *\n     * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n     * of our JSDoc template, we cannot properly document this as both a function\n     * and a namespace, so its function signature is documented here.\n     *\n     * #### Arguments\n     * ##### *args\n     * Mixed[]\n     *\n     * Any combination of values that could be passed to `console.log()`.\n     *\n     * #### Return Value\n     *\n     * `undefined`\n     *\n     * @namespace\n     * @param    {Mixed[]} args\n     *           One or more messages or objects that should be logged.\n     */\n    const log = function (...args) {\n      logByType('log', level, args);\n    };\n\n    // This is the logByType helper that the logging methods below use\n    logByType = LogByTypeFactory(name, log);\n\n    /**\n     * Create a new sublogger which chains the old name to the new name.\n     *\n     * For example, doing `videojs.log.createLogger('player')` and then using that logger will log the following:\n     * ```js\n     *  mylogger('foo');\n     *  // > VIDEOJS: player: foo\n     * ```\n     *\n     * @param {string} name\n     *        The name to add call the new logger\n     * @return {Object}\n     */\n    log.createLogger = subname => createLogger$1(name + ': ' + subname);\n\n    /**\n     * Enumeration of available logging levels, where the keys are the level names\n     * and the values are `|`-separated strings containing logging methods allowed\n     * in that logging level. These strings are used to create a regular expression\n     * matching the function name being called.\n     *\n     * Levels provided by Video.js are:\n     *\n     * - `off`: Matches no calls. Any value that can be cast to `false` will have\n     *   this effect. The most restrictive.\n     * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n     *   `log.warn`, and `log.error`).\n     * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n     * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n     * - `warn`: Matches `log.warn` and `log.error` calls.\n     * - `error`: Matches only `log.error` calls.\n     *\n     * @type {Object}\n     */\n    log.levels = {\n      all: 'debug|log|warn|error',\n      off: '',\n      debug: 'debug|log|warn|error',\n      info: 'log|warn|error',\n      warn: 'warn|error',\n      error: 'error',\n      DEFAULT: level\n    };\n\n    /**\n     * Get or set the current logging level.\n     *\n     * If a string matching a key from {@link module:log.levels} is provided, acts\n     * as a setter.\n     *\n     * @param  {string} [lvl]\n     *         Pass a valid level to set a new logging level.\n     *\n     * @return {string}\n     *         The current logging level.\n     */\n    log.level = lvl => {\n      if (typeof lvl === 'string') {\n        if (!log.levels.hasOwnProperty(lvl)) {\n          throw new Error(`\"${lvl}\" in not a valid log level`);\n        }\n        level = lvl;\n      }\n      return level;\n    };\n\n    /**\n     * Returns an array containing everything that has been logged to the history.\n     *\n     * This array is a shallow clone of the internal history record. However, its\n     * contents are _not_ cloned; so, mutating objects inside this array will\n     * mutate them in history.\n     *\n     * @return {Array}\n     */\n    log.history = () => history ? [].concat(history) : [];\n\n    /**\n     * Allows you to filter the history by the given logger name\n     *\n     * @param {string} fname\n     *        The name to filter by\n     *\n     * @return {Array}\n     *         The filtered list to return\n     */\n    log.history.filter = fname => {\n      return (history || []).filter(historyItem => {\n        // if the first item in each historyItem includes `fname`, then it's a match\n        return new RegExp(`.*${fname}.*`).test(historyItem[0]);\n      });\n    };\n\n    /**\n     * Clears the internal history tracking, but does not prevent further history\n     * tracking.\n     */\n    log.history.clear = () => {\n      if (history) {\n        history.length = 0;\n      }\n    };\n\n    /**\n     * Disable history tracking if it is currently enabled.\n     */\n    log.history.disable = () => {\n      if (history !== null) {\n        history.length = 0;\n        history = null;\n      }\n    };\n\n    /**\n     * Enable history tracking if it is currently disabled.\n     */\n    log.history.enable = () => {\n      if (history === null) {\n        history = [];\n      }\n    };\n\n    /**\n     * Logs error messages. Similar to `console.error`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as an error\n     */\n    log.error = (...args) => logByType('error', level, args);\n\n    /**\n     * Logs warning messages. Similar to `console.warn`.\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as a warning.\n     */\n    log.warn = (...args) => logByType('warn', level, args);\n\n    /**\n     * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n     * log if `console.debug` is not available\n     *\n     * @param {Mixed[]} args\n     *        One or more messages or objects that should be logged as debug.\n     */\n    log.debug = (...args) => logByType('debug', level, args);\n    return log;\n  }\n\n  /**\n   * @file log.js\n   * @module log\n   */\n  const log$1 = createLogger$1('VIDEOJS');\n  const createLogger = log$1.createLogger;\n\n  /**\n   * @file obj.js\n   * @module obj\n   */\n\n  /**\n   * @callback obj:EachCallback\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   */\n\n  /**\n   * @callback obj:ReduceCallback\n   *\n   * @param {Mixed} accum\n   *        The value that is accumulating over the reduce loop.\n   *\n   * @param {Mixed} value\n   *        The current key for the object that is being iterated over.\n   *\n   * @param {string} key\n   *        The current key-value for object that is being iterated over\n   *\n   * @return {Mixed}\n   *         The new accumulated value.\n   */\n  const toString$1 = Object.prototype.toString;\n\n  /**\n   * Get the keys of an Object\n   *\n   * @param {Object}\n   *        The Object to get the keys from\n   *\n   * @return {string[]}\n   *         An array of the keys from the object. Returns an empty array if the\n   *         object passed in was invalid or had no keys.\n   *\n   * @private\n   */\n  const keys = function (object) {\n    return isObject$1(object) ? Object.keys(object) : [];\n  };\n\n  /**\n   * Array-like iteration for objects.\n   *\n   * @param {Object} object\n   *        The object to iterate over\n   *\n   * @param {obj:EachCallback} fn\n   *        The callback function which is called for each key in the object.\n   */\n  function each(object, fn) {\n    keys(object).forEach(key => fn(object[key], key));\n  }\n\n  /**\n   * Array-like reduce for objects.\n   *\n   * @param {Object} object\n   *        The Object that you want to reduce.\n   *\n   * @param {Function} fn\n   *         A callback function which is called for each key in the object. It\n   *         receives the accumulated value and the per-iteration value and key\n   *         as arguments.\n   *\n   * @param {Mixed} [initial = 0]\n   *        Starting value\n   *\n   * @return {Mixed}\n   *         The final accumulated value.\n   */\n  function reduce(object, fn, initial = 0) {\n    return keys(object).reduce((accum, key) => fn(accum, object[key], key), initial);\n  }\n\n  /**\n   * Returns whether a value is an object of any kind - including DOM nodes,\n   * arrays, regular expressions, etc. Not functions, though.\n   *\n   * This avoids the gotcha where using `typeof` on a `null` value\n   * results in `'object'`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n  function isObject$1(value) {\n    return !!value && typeof value === 'object';\n  }\n\n  /**\n   * Returns whether an object appears to be a \"plain\" object - that is, a\n   * direct instance of `Object`.\n   *\n   * @param  {Object} value\n   * @return {boolean}\n   */\n  function isPlain(value) {\n    return isObject$1(value) && toString$1.call(value) === '[object Object]' && value.constructor === Object;\n  }\n\n  /**\n   * Merge two objects recursively.\n   *\n   * Performs a deep merge like\n   * {@link https://lodash.com/docs/4.17.10#merge|lodash.merge}, but only merges\n   * plain objects (not arrays, elements, or anything else).\n   *\n   * Non-plain object values will be copied directly from the right-most\n   * argument.\n   *\n   * @param   {Object[]} sources\n   *          One or more objects to merge into a new object.\n   *\n   * @return {Object}\n   *          A new object that is the merged result of all sources.\n   */\n  function merge$2(...sources) {\n    const result = {};\n    sources.forEach(source => {\n      if (!source) {\n        return;\n      }\n      each(source, (value, key) => {\n        if (!isPlain(value)) {\n          result[key] = value;\n          return;\n        }\n        if (!isPlain(result[key])) {\n          result[key] = {};\n        }\n        result[key] = merge$2(result[key], value);\n      });\n    });\n    return result;\n  }\n\n  /**\n   * Object.defineProperty but \"lazy\", which means that the value is only set after\n   * it is retrieved the first time, rather than being set right away.\n   *\n   * @param {Object} obj the object to set the property on\n   * @param {string} key the key for the property to set\n   * @param {Function} getValue the function used to get the value when it is needed.\n   * @param {boolean} setter whether a setter should be allowed or not\n   */\n  function defineLazyProperty(obj, key, getValue, setter = true) {\n    const set = value => Object.defineProperty(obj, key, {\n      value,\n      enumerable: true,\n      writable: true\n    });\n    const options = {\n      configurable: true,\n      enumerable: true,\n      get() {\n        const value = getValue();\n        set(value);\n        return value;\n      }\n    };\n    if (setter) {\n      options.set = set;\n    }\n    return Object.defineProperty(obj, key, options);\n  }\n\n  var Obj = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    each: each,\n    reduce: reduce,\n    isObject: isObject$1,\n    isPlain: isPlain,\n    merge: merge$2,\n    defineLazyProperty: defineLazyProperty\n  });\n\n  /**\n   * @file browser.js\n   * @module browser\n   */\n\n  /**\n   * Whether or not this device is an iPod.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_IPOD = false;\n\n  /**\n   * The detected iOS version - or `null`.\n   *\n   * @static\n   * @type {string|null}\n   */\n  let IOS_VERSION = null;\n\n  /**\n   * Whether or not this is an Android device.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_ANDROID = false;\n\n  /**\n   * The detected Android version - or `null` if not Android or indeterminable.\n   *\n   * @static\n   * @type {number|string|null}\n   */\n  let ANDROID_VERSION;\n\n  /**\n   * Whether or not this is Mozilla Firefox.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_FIREFOX = false;\n\n  /**\n   * Whether or not this is Microsoft Edge.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_EDGE = false;\n\n  /**\n   * Whether or not this is any Chromium Browser\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_CHROMIUM = false;\n\n  /**\n   * Whether or not this is any Chromium browser that is not Edge.\n   *\n   * This will also be `true` for Chrome on iOS, which will have different support\n   * as it is actually Safari under the hood.\n   *\n   * Depreacted, as the behaviour to not match Edge was to prevent Legacy Edge's UA matching.\n   * IS_CHROMIUM should be used instead.\n   * \"Chromium but not Edge\" could be explicitly tested with IS_CHROMIUM && !IS_EDGE\n   *\n   * @static\n   * @deprecated\n   * @type {Boolean}\n   */\n  let IS_CHROME = false;\n\n  /**\n   * The detected Chromium version - or `null`.\n   *\n   * @static\n   * @type {number|null}\n   */\n  let CHROMIUM_VERSION = null;\n\n  /**\n   * The detected Google Chrome version - or `null`.\n   * This has always been the _Chromium_ version, i.e. would return on Chromium Edge.\n   * Depreacted, use CHROMIUM_VERSION instead.\n   *\n   * @static\n   * @deprecated\n   * @type {number|null}\n   */\n  let CHROME_VERSION = null;\n\n  /**\n   * The detected Internet Explorer version - or `null`.\n   *\n   * @static\n   * @deprecated\n   * @type {number|null}\n   */\n  let IE_VERSION = null;\n\n  /**\n   * Whether or not this is desktop Safari.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_SAFARI = false;\n\n  /**\n   * Whether or not this is a Windows machine.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_WINDOWS = false;\n\n  /**\n   * Whether or not this device is an iPad.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  let IS_IPAD = false;\n\n  /**\n   * Whether or not this device is an iPhone.\n   *\n   * @static\n   * @type {Boolean}\n   */\n  // The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n  // to identify iPhones, we need to exclude iPads.\n  // http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\n  let IS_IPHONE = false;\n\n  /**\n   * Whether or not this device is touch-enabled.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  const TOUCH_ENABLED = Boolean(isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch));\n  const UAD = window.navigator && window.navigator.userAgentData;\n  if (UAD) {\n    // If userAgentData is present, use it instead of userAgent to avoid warnings\n    // Currently only implemented on Chromium\n    // userAgentData does not expose Android version, so ANDROID_VERSION remains `null`\n\n    IS_ANDROID = UAD.platform === 'Android';\n    IS_EDGE = Boolean(UAD.brands.find(b => b.brand === 'Microsoft Edge'));\n    IS_CHROMIUM = Boolean(UAD.brands.find(b => b.brand === 'Chromium'));\n    IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n    CHROMIUM_VERSION = CHROME_VERSION = (UAD.brands.find(b => b.brand === 'Chromium') || {}).version || null;\n    IS_WINDOWS = UAD.platform === 'Windows';\n  }\n\n  // If the broser is not Chromium, either userAgentData is not present which could be an old Chromium browser,\n  //  or it's a browser that has added userAgentData since that we don't have tests for yet. In either case,\n  // the checks need to be made agiainst the regular userAgent string.\n  if (!IS_CHROMIUM) {\n    const USER_AGENT = window.navigator && window.navigator.userAgent || '';\n    IS_IPOD = /iPod/i.test(USER_AGENT);\n    IOS_VERSION = function () {\n      const match = USER_AGENT.match(/OS (\\d+)_/i);\n      if (match && match[1]) {\n        return match[1];\n      }\n      return null;\n    }();\n    IS_ANDROID = /Android/i.test(USER_AGENT);\n    ANDROID_VERSION = function () {\n      // This matches Android Major.Minor.Patch versions\n      // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n      const match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n      if (!match) {\n        return null;\n      }\n      const major = match[1] && parseFloat(match[1]);\n      const minor = match[2] && parseFloat(match[2]);\n      if (major && minor) {\n        return parseFloat(match[1] + '.' + match[2]);\n      } else if (major) {\n        return major;\n      }\n      return null;\n    }();\n    IS_FIREFOX = /Firefox/i.test(USER_AGENT);\n    IS_EDGE = /Edg/i.test(USER_AGENT);\n    IS_CHROMIUM = /Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT);\n    IS_CHROME = !IS_EDGE && IS_CHROMIUM;\n    CHROMIUM_VERSION = CHROME_VERSION = function () {\n      const match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n      if (match && match[2]) {\n        return parseFloat(match[2]);\n      }\n      return null;\n    }();\n    IE_VERSION = function () {\n      const result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n      let version = result && parseFloat(result[1]);\n      if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n        // IE 11 has a different user agent string than other IE versions\n        version = 11.0;\n      }\n      return version;\n    }();\n    IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\n    IS_WINDOWS = /Windows/i.test(USER_AGENT);\n    IS_IPAD = /iPad/i.test(USER_AGENT) || IS_SAFARI && TOUCH_ENABLED && !/iPhone/i.test(USER_AGENT);\n    IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\n  }\n\n  /**\n   * Whether or not this is an iOS device.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  const IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\n  /**\n   * Whether or not this is any flavor of Safari - including iOS.\n   *\n   * @static\n   * @const\n   * @type {Boolean}\n   */\n  const IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\n  var browser = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    get IS_IPOD () { return IS_IPOD; },\n    get IOS_VERSION () { return IOS_VERSION; },\n    get IS_ANDROID () { return IS_ANDROID; },\n    get ANDROID_VERSION () { return ANDROID_VERSION; },\n    get IS_FIREFOX () { return IS_FIREFOX; },\n    get IS_EDGE () { return IS_EDGE; },\n    get IS_CHROMIUM () { return IS_CHROMIUM; },\n    get IS_CHROME () { return IS_CHROME; },\n    get CHROMIUM_VERSION () { return CHROMIUM_VERSION; },\n    get CHROME_VERSION () { return CHROME_VERSION; },\n    get IE_VERSION () { return IE_VERSION; },\n    get IS_SAFARI () { return IS_SAFARI; },\n    get IS_WINDOWS () { return IS_WINDOWS; },\n    get IS_IPAD () { return IS_IPAD; },\n    get IS_IPHONE () { return IS_IPHONE; },\n    TOUCH_ENABLED: TOUCH_ENABLED,\n    IS_IOS: IS_IOS,\n    IS_ANY_SAFARI: IS_ANY_SAFARI\n  });\n\n  /**\n   * @file dom.js\n   * @module dom\n   */\n\n  /**\n   * Detect if a value is a string with any non-whitespace characters.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check\n   *\n   * @return {boolean}\n   *         Will be `true` if the string is non-blank, `false` otherwise.\n   *\n   */\n  function isNonBlankString(str) {\n    // we use str.trim as it will trim any whitespace characters\n    // from the front or back of non-whitespace characters. aka\n    // Any string that contains non-whitespace characters will\n    // still contain them after `trim` but whitespace only strings\n    // will have a length of 0, failing this check.\n    return typeof str === 'string' && Boolean(str.trim());\n  }\n\n  /**\n   * Throws an error if the passed string has whitespace. This is used by\n   * class methods to be relatively consistent with the classList API.\n   *\n   * @private\n   * @param  {string} str\n   *         The string to check for whitespace.\n   *\n   * @throws {Error}\n   *         Throws an error if there is whitespace in the string.\n   */\n  function throwIfWhitespace(str) {\n    // str.indexOf instead of regex because str.indexOf is faster performance wise.\n    if (str.indexOf(' ') >= 0) {\n      throw new Error('class has illegal whitespace characters');\n    }\n  }\n\n  /**\n   * Whether the current DOM interface appears to be real (i.e. not simulated).\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM appears to be real, `false` otherwise.\n   */\n  function isReal() {\n    // Both document and window will never be undefined thanks to `global`.\n    return document === window.document;\n  }\n\n  /**\n   * Determines, via duck typing, whether or not a value is a DOM element.\n   *\n   * @param  {Mixed} value\n   *         The value to check.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a DOM element, `false` otherwise.\n   */\n  function isEl(value) {\n    return isObject$1(value) && value.nodeType === 1;\n  }\n\n  /**\n   * Determines if the current DOM is embedded in an iframe.\n   *\n   * @return {boolean}\n   *         Will be `true` if the DOM is embedded in an iframe, `false`\n   *         otherwise.\n   */\n  function isInFrame() {\n    // We need a try/catch here because Safari will throw errors when attempting\n    // to get either `parent` or `self`\n    try {\n      return window.parent !== window.self;\n    } catch (x) {\n      return true;\n    }\n  }\n\n  /**\n   * Creates functions to query the DOM using a given method.\n   *\n   * @private\n   * @param   {string} method\n   *          The method to create the query with.\n   *\n   * @return  {Function}\n   *          The query method\n   */\n  function createQuerier(method) {\n    return function (selector, context) {\n      if (!isNonBlankString(selector)) {\n        return document[method](null);\n      }\n      if (isNonBlankString(context)) {\n        context = document.querySelector(context);\n      }\n      const ctx = isEl(context) ? context : document;\n      return ctx[method] && ctx[method](selector);\n    };\n  }\n\n  /**\n   * Creates an element and applies properties, attributes, and inserts content.\n   *\n   * @param  {string} [tagName='div']\n   *         Name of tag to be created.\n   *\n   * @param  {Object} [properties={}]\n   *         Element properties to be applied.\n   *\n   * @param  {Object} [attributes={}]\n   *         Element attributes to be applied.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor object.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  function createEl(tagName = 'div', properties = {}, attributes = {}, content) {\n    const el = document.createElement(tagName);\n    Object.getOwnPropertyNames(properties).forEach(function (propName) {\n      const val = properties[propName];\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n      if (propName === 'textContent') {\n        textContent(el, val);\n      } else if (el[propName] !== val || propName === 'tabIndex') {\n        el[propName] = val;\n      }\n    });\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      el.setAttribute(attrName, attributes[attrName]);\n    });\n    if (content) {\n      appendContent(el, content);\n    }\n    return el;\n  }\n\n  /**\n   * Injects text into an element, replacing any existing contents entirely.\n   *\n   * @param  {Element} el\n   *         The element to add text content into\n   *\n   * @param  {string} text\n   *         The text content to add.\n   *\n   * @return {Element}\n   *         The element with added text content.\n   */\n  function textContent(el, text) {\n    if (typeof el.textContent === 'undefined') {\n      el.innerText = text;\n    } else {\n      el.textContent = text;\n    }\n    return el;\n  }\n\n  /**\n   * Insert an element as the first child node of another\n   *\n   * @param {Element} child\n   *        Element to insert\n   *\n   * @param {Element} parent\n   *        Element to insert child into\n   */\n  function prependTo(child, parent) {\n    if (parent.firstChild) {\n      parent.insertBefore(child, parent.firstChild);\n    } else {\n      parent.appendChild(child);\n    }\n  }\n\n  /**\n   * Check if an element has a class name.\n   *\n   * @param  {Element} element\n   *         Element to check\n   *\n   * @param  {string} classToCheck\n   *         Class name to check for\n   *\n   * @return {boolean}\n   *         Will be `true` if the element has a class, `false` otherwise.\n   *\n   * @throws {Error}\n   *         Throws an error if `classToCheck` has white space.\n   */\n  function hasClass(element, classToCheck) {\n    throwIfWhitespace(classToCheck);\n    return element.classList.contains(classToCheck);\n  }\n\n  /**\n   * Add a class name to an element.\n   *\n   * @param  {Element} element\n   *         Element to add class name to.\n   *\n   * @param  {...string} classesToAdd\n   *         One or more class name to add.\n   *\n   * @return {Element}\n   *         The DOM element with the added class name.\n   */\n  function addClass(element, ...classesToAdd) {\n    element.classList.add(...classesToAdd.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n    return element;\n  }\n\n  /**\n   * Remove a class name from an element.\n   *\n   * @param  {Element} element\n   *         Element to remove a class name from.\n   *\n   * @param  {...string} classesToRemove\n   *         One or more class name to remove.\n   *\n   * @return {Element}\n   *         The DOM element with class name removed.\n   */\n  function removeClass(element, ...classesToRemove) {\n    // Protect in case the player gets disposed\n    if (!element) {\n      log$1.warn(\"removeClass was called with an element that doesn't exist\");\n      return null;\n    }\n    element.classList.remove(...classesToRemove.reduce((prev, current) => prev.concat(current.split(/\\s+/)), []));\n    return element;\n  }\n\n  /**\n   * The callback definition for toggleClass.\n   *\n   * @callback module:dom~PredicateCallback\n   * @param    {Element} element\n   *           The DOM element of the Component.\n   *\n   * @param    {string} classToToggle\n   *           The `className` that wants to be toggled\n   *\n   * @return   {boolean|undefined}\n   *           If `true` is returned, the `classToToggle` will be added to the\n   *           `element`. If `false`, the `classToToggle` will be removed from\n   *           the `element`. If `undefined`, the callback will be ignored.\n   */\n\n  /**\n   * Adds or removes a class name to/from an element depending on an optional\n   * condition or the presence/absence of the class name.\n   *\n   * @param  {Element} element\n   *         The element to toggle a class name on.\n   *\n   * @param  {string} classToToggle\n   *         The class that should be toggled.\n   *\n   * @param  {boolean|module:dom~PredicateCallback} [predicate]\n   *         See the return value for {@link module:dom~PredicateCallback}\n   *\n   * @return {Element}\n   *         The element with a class that has been toggled.\n   */\n  function toggleClass(element, classToToggle, predicate) {\n    if (typeof predicate === 'function') {\n      predicate = predicate(element, classToToggle);\n    }\n    if (typeof predicate !== 'boolean') {\n      predicate = undefined;\n    }\n    classToToggle.split(/\\s+/).forEach(className => element.classList.toggle(className, predicate));\n    return element;\n  }\n\n  /**\n   * Apply attributes to an HTML element.\n   *\n   * @param {Element} el\n   *        Element to add attributes to.\n   *\n   * @param {Object} [attributes]\n   *        Attributes to be applied.\n   */\n  function setAttributes(el, attributes) {\n    Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n      const attrValue = attributes[attrName];\n      if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n        el.removeAttribute(attrName);\n      } else {\n        el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n      }\n    });\n  }\n\n  /**\n   * Get an element's attribute values, as defined on the HTML tag.\n   *\n   * Attributes are not the same as properties. They're defined on the tag\n   * or with setAttribute.\n   *\n   * @param  {Element} tag\n   *         Element from which to get tag attributes.\n   *\n   * @return {Object}\n   *         All attributes of the element. Boolean attributes will be `true` or\n   *         `false`, others will be strings.\n   */\n  function getAttributes(tag) {\n    const obj = {};\n\n    // known boolean attributes\n    // we can check for matching boolean properties, but not all browsers\n    // and not all tags know about these attributes, so, we still want to check them manually\n    const knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n    if (tag && tag.attributes && tag.attributes.length > 0) {\n      const attrs = tag.attributes;\n      for (let i = attrs.length - 1; i >= 0; i--) {\n        const attrName = attrs[i].name;\n        let attrVal = attrs[i].value;\n\n        // check for known booleans\n        // the matching element property will return a value for typeof\n        if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n          // the value of an included boolean attribute is typically an empty\n          // string ('') which would equal false if we just check for a false value.\n          // we also don't want support bad code like autoplay='false'\n          attrVal = attrVal !== null ? true : false;\n        }\n        obj[attrName] = attrVal;\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Get the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to get the value of.\n   *\n   * @return {string}\n   *         The value of the attribute.\n   */\n  function getAttribute(el, attribute) {\n    return el.getAttribute(attribute);\n  }\n\n  /**\n   * Set the value of an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   */\n  function setAttribute(el, attribute, value) {\n    el.setAttribute(attribute, value);\n  }\n\n  /**\n   * Remove an element's attribute.\n   *\n   * @param {Element} el\n   *        A DOM element.\n   *\n   * @param {string} attribute\n   *        Attribute to remove.\n   */\n  function removeAttribute(el, attribute) {\n    el.removeAttribute(attribute);\n  }\n\n  /**\n   * Attempt to block the ability to select text.\n   */\n  function blockTextSelection() {\n    document.body.focus();\n    document.onselectstart = function () {\n      return false;\n    };\n  }\n\n  /**\n   * Turn off text selection blocking.\n   */\n  function unblockTextSelection() {\n    document.onselectstart = function () {\n      return true;\n    };\n  }\n\n  /**\n   * Identical to the native `getBoundingClientRect` function, but ensures that\n   * the method is supported at all (it is in all browsers we claim to support)\n   * and that the element is in the DOM before continuing.\n   *\n   * This wrapper function also shims properties which are not provided by some\n   * older browsers (namely, IE8).\n   *\n   * Additionally, some browsers do not support adding properties to a\n   * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n   * properties (except `x` and `y` which are not widely supported). This helps\n   * avoid implementations where keys are non-enumerable.\n   *\n   * @param  {Element} el\n   *         Element whose `ClientRect` we want to calculate.\n   *\n   * @return {Object|undefined}\n   *         Always returns a plain object - or `undefined` if it cannot.\n   */\n  function getBoundingClientRect(el) {\n    if (el && el.getBoundingClientRect && el.parentNode) {\n      const rect = el.getBoundingClientRect();\n      const result = {};\n      ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(k => {\n        if (rect[k] !== undefined) {\n          result[k] = rect[k];\n        }\n      });\n      if (!result.height) {\n        result.height = parseFloat(computedStyle(el, 'height'));\n      }\n      if (!result.width) {\n        result.width = parseFloat(computedStyle(el, 'width'));\n      }\n      return result;\n    }\n  }\n\n  /**\n   * Represents the position of a DOM element on the page.\n   *\n   * @typedef  {Object} module:dom~Position\n   *\n   * @property {number} left\n   *           Pixels to the left.\n   *\n   * @property {number} top\n   *           Pixels from the top.\n   */\n\n  /**\n   * Get the position of an element in the DOM.\n   *\n   * Uses `getBoundingClientRect` technique from John Resig.\n   *\n   * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n   *\n   * @param  {Element} el\n   *         Element from which to get offset.\n   *\n   * @return {module:dom~Position}\n   *         The position of the element that was passed in.\n   */\n  function findPosition(el) {\n    if (!el || el && !el.offsetParent) {\n      return {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      };\n    }\n    const width = el.offsetWidth;\n    const height = el.offsetHeight;\n    let left = 0;\n    let top = 0;\n    while (el.offsetParent && el !== document[FullscreenApi.fullscreenElement]) {\n      left += el.offsetLeft;\n      top += el.offsetTop;\n      el = el.offsetParent;\n    }\n    return {\n      left,\n      top,\n      width,\n      height\n    };\n  }\n\n  /**\n   * Represents x and y coordinates for a DOM element or mouse pointer.\n   *\n   * @typedef  {Object} module:dom~Coordinates\n   *\n   * @property {number} x\n   *           x coordinate in pixels\n   *\n   * @property {number} y\n   *           y coordinate in pixels\n   */\n\n  /**\n   * Get the pointer position within an element.\n   *\n   * The base on the coordinates are the bottom left of the element.\n   *\n   * @param  {Element} el\n   *         Element on which to get the pointer position on.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {module:dom~Coordinates}\n   *         A coordinates object corresponding to the mouse position.\n   *\n   */\n  function getPointerPosition(el, event) {\n    const translated = {\n      x: 0,\n      y: 0\n    };\n    if (IS_IOS) {\n      let item = el;\n      while (item && item.nodeName.toLowerCase() !== 'html') {\n        const transform = computedStyle(item, 'transform');\n        if (/^matrix/.test(transform)) {\n          const values = transform.slice(7, -1).split(/,\\s/).map(Number);\n          translated.x += values[4];\n          translated.y += values[5];\n        } else if (/^matrix3d/.test(transform)) {\n          const values = transform.slice(9, -1).split(/,\\s/).map(Number);\n          translated.x += values[12];\n          translated.y += values[13];\n        }\n        item = item.parentNode;\n      }\n    }\n    const position = {};\n    const boxTarget = findPosition(event.target);\n    const box = findPosition(el);\n    const boxW = box.width;\n    const boxH = box.height;\n    let offsetY = event.offsetY - (box.top - boxTarget.top);\n    let offsetX = event.offsetX - (box.left - boxTarget.left);\n    if (event.changedTouches) {\n      offsetX = event.changedTouches[0].pageX - box.left;\n      offsetY = event.changedTouches[0].pageY + box.top;\n      if (IS_IOS) {\n        offsetX -= translated.x;\n        offsetY -= translated.y;\n      }\n    }\n    position.y = 1 - Math.max(0, Math.min(1, offsetY / boxH));\n    position.x = Math.max(0, Math.min(1, offsetX / boxW));\n    return position;\n  }\n\n  /**\n   * Determines, via duck typing, whether or not a value is a text node.\n   *\n   * @param  {Mixed} value\n   *         Check if this value is a text node.\n   *\n   * @return {boolean}\n   *         Will be `true` if the value is a text node, `false` otherwise.\n   */\n  function isTextNode$1(value) {\n    return isObject$1(value) && value.nodeType === 3;\n  }\n\n  /**\n   * Empties the contents of an element.\n   *\n   * @param  {Element} el\n   *         The element to empty children from\n   *\n   * @return {Element}\n   *         The element with no children\n   */\n  function emptyEl(el) {\n    while (el.firstChild) {\n      el.removeChild(el.firstChild);\n    }\n    return el;\n  }\n\n  /**\n   * This is a mixed value that describes content to be injected into the DOM\n   * via some method. It can be of the following types:\n   *\n   * Type       | Description\n   * -----------|-------------\n   * `string`   | The value will be normalized into a text node.\n   * `Element`  | The value will be accepted as-is.\n   * `TextNode` | The value will be accepted as-is.\n   * `Array`    | A one-dimensional array of strings, elements, text nodes, or functions. These functions should return a string, element, or text node (any other return value, like an array, will be ignored).\n   * `Function` | A function, which is expected to return a string, element, text node, or array - any of the other possible values described above. This means that a content descriptor could be a function that returns an array of functions, but those second-level functions must return strings, elements, or text nodes.\n   *\n   * @typedef {string|Element|TextNode|Array|Function} module:dom~ContentDescriptor\n   */\n\n  /**\n   * Normalizes content for eventual insertion into the DOM.\n   *\n   * This allows a wide range of content definition methods, but helps protect\n   * from falling into the trap of simply writing to `innerHTML`, which could\n   * be an XSS concern.\n   *\n   * The content for an element can be passed in multiple types and\n   * combinations, whose behavior is as follows:\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Array}\n   *         All of the content that was passed in, normalized to an array of\n   *         elements or text nodes.\n   */\n  function normalizeContent(content) {\n    // First, invoke content if it is a function. If it produces an array,\n    // that needs to happen before normalization.\n    if (typeof content === 'function') {\n      content = content();\n    }\n\n    // Next up, normalize to an array, so one or many items can be normalized,\n    // filtered, and returned.\n    return (Array.isArray(content) ? content : [content]).map(value => {\n      // First, invoke value if it is a function to produce a new value,\n      // which will be subsequently normalized to a Node of some kind.\n      if (typeof value === 'function') {\n        value = value();\n      }\n      if (isEl(value) || isTextNode$1(value)) {\n        return value;\n      }\n      if (typeof value === 'string' && /\\S/.test(value)) {\n        return document.createTextNode(value);\n      }\n    }).filter(value => value);\n  }\n\n  /**\n   * Normalizes and appends content to an element.\n   *\n   * @param  {Element} el\n   *         Element to append normalized content to.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with appended normalized content.\n   */\n  function appendContent(el, content) {\n    normalizeContent(content).forEach(node => el.appendChild(node));\n    return el;\n  }\n\n  /**\n   * Normalizes and inserts content into an element; this is identical to\n   * `appendContent()`, except it empties the element first.\n   *\n   * @param {Element} el\n   *        Element to insert normalized content into.\n   *\n   * @param {module:dom~ContentDescriptor} content\n   *        A content descriptor value.\n   *\n   * @return {Element}\n   *         The element with inserted normalized content.\n   */\n  function insertContent(el, content) {\n    return appendContent(emptyEl(el), content);\n  }\n\n  /**\n   * Check if an event was a single left click.\n   *\n   * @param  {EventTarget~Event} event\n   *         Event object.\n   *\n   * @return {boolean}\n   *         Will be `true` if a single left click, `false` otherwise.\n   */\n  function isSingleLeftClick(event) {\n    // Note: if you create something draggable, be sure to\n    // call it on both `mousedown` and `mousemove` event,\n    // otherwise `mousedown` should be enough for a button\n\n    if (event.button === undefined && event.buttons === undefined) {\n      // Why do we need `buttons` ?\n      // Because, middle mouse sometimes have this:\n      // e.button === 0 and e.buttons === 4\n      // Furthermore, we want to prevent combination click, something like\n      // HOLD middlemouse then left click, that would be\n      // e.button === 0, e.buttons === 5\n      // just `button` is not gonna work\n\n      // Alright, then what this block does ?\n      // this is for chrome `simulate mobile devices`\n      // I want to support this as well\n\n      return true;\n    }\n    if (event.button === 0 && event.buttons === undefined) {\n      // Touch screen, sometimes on some specific device, `buttons`\n      // doesn't have anything (safari on ios, blackberry...)\n\n      return true;\n    }\n\n    // `mouseup` event on a single left click has\n    // `button` and `buttons` equal to 0\n    if (event.type === 'mouseup' && event.button === 0 && event.buttons === 0) {\n      return true;\n    }\n    if (event.button !== 0 || event.buttons !== 1) {\n      // This is the reason we have those if else block above\n      // if any special case we can catch and let it slide\n      // we do it above, when get to here, this definitely\n      // is-not-left-click\n\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Finds a single DOM element matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {Element|null}\n   *         The element that was found or null.\n   */\n  const $ = createQuerier('querySelector');\n\n  /**\n   * Finds a all DOM elements matching `selector` within the optional\n   * `context` of another DOM element (defaulting to `document`).\n   *\n   * @param  {string} selector\n   *         A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param  {Element|String} [context=document]\n   *         A DOM element within which to query. Can also be a selector\n   *         string in which case the first matching element will be used\n   *         as context. If missing (or no element matches selector), falls\n   *         back to `document`.\n   *\n   * @return {NodeList}\n   *         A element list of elements that were found. Will be empty if none\n   *         were found.\n   *\n   */\n  const $$ = createQuerier('querySelectorAll');\n\n  /**\n   * A safe getComputedStyle.\n   *\n   * This is needed because in Firefox, if the player is loaded in an iframe with\n   * `display:none`, then `getComputedStyle` returns `null`, so, we do a\n   * null-check to make sure that the player doesn't break in these cases.\n   *\n   * @param    {Element} el\n   *           The element you want the computed style of\n   *\n   * @param    {string} prop\n   *           The property name you want\n   *\n   * @see      https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   */\n  function computedStyle(el, prop) {\n    if (!el || !prop) {\n      return '';\n    }\n    if (typeof window.getComputedStyle === 'function') {\n      let computedStyleValue;\n      try {\n        computedStyleValue = window.getComputedStyle(el);\n      } catch (e) {\n        return '';\n      }\n      return computedStyleValue ? computedStyleValue.getPropertyValue(prop) || computedStyleValue[prop] : '';\n    }\n    return '';\n  }\n\n  var Dom = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    isReal: isReal,\n    isEl: isEl,\n    isInFrame: isInFrame,\n    createEl: createEl,\n    textContent: textContent,\n    prependTo: prependTo,\n    hasClass: hasClass,\n    addClass: addClass,\n    removeClass: removeClass,\n    toggleClass: toggleClass,\n    setAttributes: setAttributes,\n    getAttributes: getAttributes,\n    getAttribute: getAttribute,\n    setAttribute: setAttribute,\n    removeAttribute: removeAttribute,\n    blockTextSelection: blockTextSelection,\n    unblockTextSelection: unblockTextSelection,\n    getBoundingClientRect: getBoundingClientRect,\n    findPosition: findPosition,\n    getPointerPosition: getPointerPosition,\n    isTextNode: isTextNode$1,\n    emptyEl: emptyEl,\n    normalizeContent: normalizeContent,\n    appendContent: appendContent,\n    insertContent: insertContent,\n    isSingleLeftClick: isSingleLeftClick,\n    $: $,\n    $$: $$,\n    computedStyle: computedStyle\n  });\n\n  /**\n   * @file setup.js - Functions for setting up a player without\n   * user interaction based on the data-setup `attribute` of the video tag.\n   *\n   * @module setup\n   */\n  let _windowLoaded = false;\n  let videojs$1;\n\n  /**\n   * Set up any tags that have a data-setup `attribute` when the player is started.\n   */\n  const autoSetup = function () {\n    if (videojs$1.options.autoSetup === false) {\n      return;\n    }\n    const vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n    const audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n    const divs = Array.prototype.slice.call(document.getElementsByTagName('video-js'));\n    const mediaEls = vids.concat(audios, divs);\n\n    // Check if any media elements exist\n    if (mediaEls && mediaEls.length > 0) {\n      for (let i = 0, e = mediaEls.length; i < e; i++) {\n        const mediaEl = mediaEls[i];\n\n        // Check if element exists, has getAttribute func.\n        if (mediaEl && mediaEl.getAttribute) {\n          // Make sure this player hasn't already been set up.\n          if (mediaEl.player === undefined) {\n            const options = mediaEl.getAttribute('data-setup');\n\n            // Check if data-setup attr exists.\n            // We only auto-setup if they've added the data-setup attr.\n            if (options !== null) {\n              // Create new video.js instance.\n              videojs$1(mediaEl);\n            }\n          }\n\n          // If getAttribute isn't defined, we need to wait for the DOM.\n        } else {\n          autoSetupTimeout(1);\n          break;\n        }\n      }\n\n      // No videos were found, so keep looping unless page is finished loading.\n    } else if (!_windowLoaded) {\n      autoSetupTimeout(1);\n    }\n  };\n\n  /**\n   * Wait until the page is loaded before running autoSetup. This will be called in\n   * autoSetup if `hasLoaded` returns false.\n   *\n   * @param {number} wait\n   *        How long to wait in ms\n   *\n   * @param {module:videojs} [vjs]\n   *        The videojs library function\n   */\n  function autoSetupTimeout(wait, vjs) {\n    // Protect against breakage in non-browser environments\n    if (!isReal()) {\n      return;\n    }\n    if (vjs) {\n      videojs$1 = vjs;\n    }\n    window.setTimeout(autoSetup, wait);\n  }\n\n  /**\n   * Used to set the internal tracking of window loaded state to true.\n   *\n   * @private\n   */\n  function setWindowLoaded() {\n    _windowLoaded = true;\n    window.removeEventListener('load', setWindowLoaded);\n  }\n  if (isReal()) {\n    if (document.readyState === 'complete') {\n      setWindowLoaded();\n    } else {\n      /**\n       * Listen for the load event on window, and set _windowLoaded to true.\n       *\n       * We use a standard event listener here to avoid incrementing the GUID\n       * before any players are created.\n       *\n       * @listens load\n       */\n      window.addEventListener('load', setWindowLoaded);\n    }\n  }\n\n  /**\n   * @file stylesheet.js\n   * @module stylesheet\n   */\n\n  /**\n   * Create a DOM syle element given a className for it.\n   *\n   * @param {string} className\n   *        The className to add to the created style element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  const createStyleElement = function (className) {\n    const style = document.createElement('style');\n    style.className = className;\n    return style;\n  };\n\n  /**\n   * Add text to a DOM element.\n   *\n   * @param {Element} el\n   *        The Element to add text content to.\n   *\n   * @param {string} content\n   *        The text to add to the element.\n   */\n  const setTextContent = function (el, content) {\n    if (el.styleSheet) {\n      el.styleSheet.cssText = content;\n    } else {\n      el.textContent = content;\n    }\n  };\n\n  /**\n   * @file dom-data.js\n   * @module dom-data\n   */\n\n  /**\n   * Element Data Store.\n   *\n   * Allows for binding data to an element without putting it directly on the\n   * element. Ex. Event listeners are stored here.\n   * (also from jsninja.com, slightly modified and updated for closure compiler)\n   *\n   * @type {Object}\n   * @private\n   */\n  var DomData = new WeakMap();\n\n  /**\n   * @file guid.js\n   * @module guid\n   */\n\n  // Default value for GUIDs. This allows us to reset the GUID counter in tests.\n  //\n  // The initial GUID is 3 because some users have come to rely on the first\n  // default player ID ending up as `vjs_video_3`.\n  //\n  // See: https://github.com/videojs/video.js/pull/6216\n  const _initialGuid = 3;\n\n  /**\n   * Unique ID for an element or function\n   *\n   * @type {Number}\n   */\n  let _guid = _initialGuid;\n\n  /**\n   * Get a unique auto-incrementing ID by number that has not been returned before.\n   *\n   * @return {number}\n   *         A new unique ID.\n   */\n  function newGUID() {\n    return _guid++;\n  }\n\n  /**\n   * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n   * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n   * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n   * robust as jquery's, so there's probably some differences.\n   *\n   * @file events.js\n   * @module events\n   */\n\n  /**\n   * Clean up the listener cache and dispatchers\n   *\n   * @param {Element|Object} elem\n   *        Element to clean up\n   *\n   * @param {string} type\n   *        Type of event to clean up\n   */\n  function _cleanUpEvents(elem, type) {\n    if (!DomData.has(elem)) {\n      return;\n    }\n    const data = DomData.get(elem);\n\n    // Remove the events of a particular type if there are none left\n    if (data.handlers[type].length === 0) {\n      delete data.handlers[type];\n      // data.handlers[type] = null;\n      // Setting to null was causing an error with data.handlers\n\n      // Remove the meta-handler from the element\n      if (elem.removeEventListener) {\n        elem.removeEventListener(type, data.dispatcher, false);\n      } else if (elem.detachEvent) {\n        elem.detachEvent('on' + type, data.dispatcher);\n      }\n    }\n\n    // Remove the events object if there are no types left\n    if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n      delete data.handlers;\n      delete data.dispatcher;\n      delete data.disabled;\n    }\n\n    // Finally remove the element data if there is no data left\n    if (Object.getOwnPropertyNames(data).length === 0) {\n      DomData.delete(elem);\n    }\n  }\n\n  /**\n   * Loops through an array of event types and calls the requested method for each type.\n   *\n   * @param {Function} fn\n   *        The event method we want to use.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} callback\n   *        Event listener.\n   */\n  function _handleMultipleEvents(fn, elem, types, callback) {\n    types.forEach(function (type) {\n      // Call the event method for each one of the types\n      fn(elem, type, callback);\n    });\n  }\n\n  /**\n   * Fix a native event to have standard property values\n   *\n   * @param {Object} event\n   *        Event object to fix.\n   *\n   * @return {Object}\n   *         Fixed event object.\n   */\n  function fixEvent(event) {\n    if (event.fixed_) {\n      return event;\n    }\n    function returnTrue() {\n      return true;\n    }\n    function returnFalse() {\n      return false;\n    }\n\n    // Test if fixing up is needed\n    // Used to check if !event.stopPropagation instead of isPropagationStopped\n    // But native events return true for stopPropagation, but don't have\n    // other expected methods like isPropagationStopped. Seems to be a problem\n    // with the Javascript Ninja code. So we're just overriding all events now.\n    if (!event || !event.isPropagationStopped || !event.isImmediatePropagationStopped) {\n      const old = event || window.event;\n      event = {};\n      // Clone the old object so that we can modify the values event = {};\n      // IE8 Doesn't like when you mess with native event properties\n      // Firefox returns false for event.hasOwnProperty('type') and other props\n      //  which makes copying more difficult.\n      // TODO: Probably best to create a whitelist of event props\n      for (const key in old) {\n        // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n        // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n        // and webkitMovementX/Y\n        // Lighthouse complains if Event.path is copied\n        if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY' && key !== 'path') {\n          // Chrome 32+ warns if you try to copy deprecated returnValue, but\n          // we still want to if preventDefault isn't supported (IE8).\n          if (!(key === 'returnValue' && old.preventDefault)) {\n            event[key] = old[key];\n          }\n        }\n      }\n\n      // The event occurred on this element\n      if (!event.target) {\n        event.target = event.srcElement || document;\n      }\n\n      // Handle which other element the event is related to\n      if (!event.relatedTarget) {\n        event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n      }\n\n      // Stop the default browser action\n      event.preventDefault = function () {\n        if (old.preventDefault) {\n          old.preventDefault();\n        }\n        event.returnValue = false;\n        old.returnValue = false;\n        event.defaultPrevented = true;\n      };\n      event.defaultPrevented = false;\n\n      // Stop the event from bubbling\n      event.stopPropagation = function () {\n        if (old.stopPropagation) {\n          old.stopPropagation();\n        }\n        event.cancelBubble = true;\n        old.cancelBubble = true;\n        event.isPropagationStopped = returnTrue;\n      };\n      event.isPropagationStopped = returnFalse;\n\n      // Stop the event from bubbling and executing other handlers\n      event.stopImmediatePropagation = function () {\n        if (old.stopImmediatePropagation) {\n          old.stopImmediatePropagation();\n        }\n        event.isImmediatePropagationStopped = returnTrue;\n        event.stopPropagation();\n      };\n      event.isImmediatePropagationStopped = returnFalse;\n\n      // Handle mouse position\n      if (event.clientX !== null && event.clientX !== undefined) {\n        const doc = document.documentElement;\n        const body = document.body;\n        event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n        event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n      }\n\n      // Handle key presses\n      event.which = event.charCode || event.keyCode;\n\n      // Fix button for mouse clicks:\n      // 0 == left; 1 == middle; 2 == right\n      if (event.button !== null && event.button !== undefined) {\n        // The following is disabled because it does not pass videojs-standard\n        // and... yikes.\n        /* eslint-disable */\n        event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n        /* eslint-enable */\n      }\n    }\n\n    event.fixed_ = true;\n    // Returns fixed-up instance\n    return event;\n  }\n\n  /**\n   * Whether passive event listeners are supported\n   */\n  let _supportsPassive;\n  const supportsPassive = function () {\n    if (typeof _supportsPassive !== 'boolean') {\n      _supportsPassive = false;\n      try {\n        const opts = Object.defineProperty({}, 'passive', {\n          get() {\n            _supportsPassive = true;\n          }\n        });\n        window.addEventListener('test', null, opts);\n        window.removeEventListener('test', null, opts);\n      } catch (e) {\n        // disregard\n      }\n    }\n    return _supportsPassive;\n  };\n\n  /**\n   * Touch events Chrome expects to be passive\n   */\n  const passiveEvents = ['touchstart', 'touchmove'];\n\n  /**\n   * Add an event listener to element\n   * It stores the handler function in a separate cache object\n   * and adds a generic handler to the element's event,\n   * along with a unique id (guid) to the element.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind listeners to\n   *\n   * @param {string|string[]} type\n   *        Type of event to bind to.\n   *\n   * @param {EventTarget~EventListener} fn\n   *        Event listener.\n   */\n  function on(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(on, elem, type, fn);\n    }\n    if (!DomData.has(elem)) {\n      DomData.set(elem, {});\n    }\n    const data = DomData.get(elem);\n\n    // We need a place to store all our handler data\n    if (!data.handlers) {\n      data.handlers = {};\n    }\n    if (!data.handlers[type]) {\n      data.handlers[type] = [];\n    }\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n    data.handlers[type].push(fn);\n    if (!data.dispatcher) {\n      data.disabled = false;\n      data.dispatcher = function (event, hash) {\n        if (data.disabled) {\n          return;\n        }\n        event = fixEvent(event);\n        const handlers = data.handlers[event.type];\n        if (handlers) {\n          // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n          const handlersCopy = handlers.slice(0);\n          for (let m = 0, n = handlersCopy.length; m < n; m++) {\n            if (event.isImmediatePropagationStopped()) {\n              break;\n            } else {\n              try {\n                handlersCopy[m].call(elem, event, hash);\n              } catch (e) {\n                log$1.error(e);\n              }\n            }\n          }\n        }\n      };\n    }\n    if (data.handlers[type].length === 1) {\n      if (elem.addEventListener) {\n        let options = false;\n        if (supportsPassive() && passiveEvents.indexOf(type) > -1) {\n          options = {\n            passive: true\n          };\n        }\n        elem.addEventListener(type, data.dispatcher, options);\n      } else if (elem.attachEvent) {\n        elem.attachEvent('on' + type, data.dispatcher);\n      }\n    }\n  }\n\n  /**\n   * Removes event listeners from an element\n   *\n   * @param {Element|Object} elem\n   *        Object to remove listeners from.\n   *\n   * @param {string|string[]} [type]\n   *        Type of listener to remove. Don't include to remove all events from element.\n   *\n   * @param {EventTarget~EventListener} [fn]\n   *        Specific listener to remove. Don't include to remove listeners for an event\n   *        type.\n   */\n  function off(elem, type, fn) {\n    // Don't want to add a cache object through getElData if not needed\n    if (!DomData.has(elem)) {\n      return;\n    }\n    const data = DomData.get(elem);\n\n    // If no events exist, nothing to unbind\n    if (!data.handlers) {\n      return;\n    }\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(off, elem, type, fn);\n    }\n\n    // Utility function\n    const removeType = function (el, t) {\n      data.handlers[t] = [];\n      _cleanUpEvents(el, t);\n    };\n\n    // Are we removing all bound events?\n    if (type === undefined) {\n      for (const t in data.handlers) {\n        if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n          removeType(elem, t);\n        }\n      }\n      return;\n    }\n    const handlers = data.handlers[type];\n\n    // If no handlers exist, nothing to unbind\n    if (!handlers) {\n      return;\n    }\n\n    // If no listener was provided, remove all listeners for type\n    if (!fn) {\n      removeType(elem, type);\n      return;\n    }\n\n    // We're only removing a single handler\n    if (fn.guid) {\n      for (let n = 0; n < handlers.length; n++) {\n        if (handlers[n].guid === fn.guid) {\n          handlers.splice(n--, 1);\n        }\n      }\n    }\n    _cleanUpEvents(elem, type);\n  }\n\n  /**\n   * Trigger an event for an element\n   *\n   * @param {Element|Object} elem\n   *        Element to trigger an event on\n   *\n   * @param {EventTarget~Event|string} event\n   *        A string (the type) or an event object with a type attribute\n   *\n   * @param {Object} [hash]\n   *        data hash to pass along with the event\n   *\n   * @return {boolean|undefined}\n   *         Returns the opposite of `defaultPrevented` if default was\n   *         prevented. Otherwise, returns `undefined`\n   */\n  function trigger(elem, event, hash) {\n    // Fetches element data and a reference to the parent (for bubbling).\n    // Don't want to add a data object to cache for every parent,\n    // so checking hasElData first.\n    const elemData = DomData.has(elem) ? DomData.get(elem) : {};\n    const parent = elem.parentNode || elem.ownerDocument;\n    // type = event.type || event,\n    // handler;\n\n    // If an event name was passed as a string, creates an event out of it\n    if (typeof event === 'string') {\n      event = {\n        type: event,\n        target: elem\n      };\n    } else if (!event.target) {\n      event.target = elem;\n    }\n\n    // Normalizes the event properties.\n    event = fixEvent(event);\n\n    // If the passed element has a dispatcher, executes the established handlers.\n    if (elemData.dispatcher) {\n      elemData.dispatcher.call(elem, event, hash);\n    }\n\n    // Unless explicitly stopped or the event does not bubble (e.g. media events)\n    // recursively calls this function to bubble the event up the DOM.\n    if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n      trigger.call(null, parent, event, hash);\n\n      // If at the top of the DOM, triggers the default action unless disabled.\n    } else if (!parent && !event.defaultPrevented && event.target && event.target[event.type]) {\n      if (!DomData.has(event.target)) {\n        DomData.set(event.target, {});\n      }\n      const targetData = DomData.get(event.target);\n\n      // Checks if the target has a default action for this event.\n      if (event.target[event.type]) {\n        // Temporarily disables event dispatching on the target as we have already executed the handler.\n        targetData.disabled = true;\n        // Executes the default action.\n        if (typeof event.target[event.type] === 'function') {\n          event.target[event.type]();\n        }\n        // Re-enables event dispatching.\n        targetData.disabled = false;\n      }\n    }\n\n    // Inform the triggerer if the default was prevented by returning false\n    return !event.defaultPrevented;\n  }\n\n  /**\n   * Trigger a listener only once for an event.\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n  function one(elem, type, fn) {\n    if (Array.isArray(type)) {\n      return _handleMultipleEvents(one, elem, type, fn);\n    }\n    const func = function () {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    };\n\n    // copy the guid to the new function so it can removed using the original function's ID\n    func.guid = fn.guid = fn.guid || newGUID();\n    on(elem, type, func);\n  }\n\n  /**\n   * Trigger a listener only once and then turn if off for all\n   * configured events\n   *\n   * @param {Element|Object} elem\n   *        Element or object to bind to.\n   *\n   * @param {string|string[]} type\n   *        Name/type of event\n   *\n   * @param {Event~EventListener} fn\n   *        Event listener function\n   */\n  function any(elem, type, fn) {\n    const func = function () {\n      off(elem, type, func);\n      fn.apply(this, arguments);\n    };\n\n    // copy the guid to the new function so it can removed using the original function's ID\n    func.guid = fn.guid = fn.guid || newGUID();\n\n    // multiple ons, but one off for everything\n    on(elem, type, func);\n  }\n\n  var Events = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    fixEvent: fixEvent,\n    on: on,\n    off: off,\n    trigger: trigger,\n    one: one,\n    any: any\n  });\n\n  /**\n   * @file fn.js\n   * @module fn\n   */\n  const UPDATE_REFRESH_INTERVAL = 30;\n\n  /**\n   * A private, internal-only function for changing the context of a function.\n   *\n   * It also stores a unique id on the function so it can be easily removed from\n   * events.\n   *\n   * @private\n   * @function\n   * @param    {Mixed} context\n   *           The object to bind as scope.\n   *\n   * @param    {Function} fn\n   *           The function to be bound to a scope.\n   *\n   * @param    {number} [uid]\n   *           An optional unique ID for the function to be set\n   *\n   * @return   {Function}\n   *           The new function that will be bound into the context given\n   */\n  const bind_ = function (context, fn, uid) {\n    // Make sure the function has a unique ID\n    if (!fn.guid) {\n      fn.guid = newGUID();\n    }\n\n    // Create the new function that changes the context\n    const bound = fn.bind(context);\n\n    // Allow for the ability to individualize this function\n    // Needed in the case where multiple objects might share the same prototype\n    // IF both items add an event listener with the same function, then you try to remove just one\n    // it will remove both because they both have the same guid.\n    // when using this, you need to use the bind method when you remove the listener as well.\n    // currently used in text tracks\n    bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n    return bound;\n  };\n\n  /**\n   * Wraps the given function, `fn`, with a new function that only invokes `fn`\n   * at most once per every `wait` milliseconds.\n   *\n   * @function\n   * @param    {Function} fn\n   *           The function to be throttled.\n   *\n   * @param    {number}   wait\n   *           The number of milliseconds by which to throttle.\n   *\n   * @return   {Function}\n   */\n  const throttle = function (fn, wait) {\n    let last = window.performance.now();\n    const throttled = function (...args) {\n      const now = window.performance.now();\n      if (now - last >= wait) {\n        fn(...args);\n        last = now;\n      }\n    };\n    return throttled;\n  };\n\n  /**\n   * Creates a debounced function that delays invoking `func` until after `wait`\n   * milliseconds have elapsed since the last time the debounced function was\n   * invoked.\n   *\n   * Inspired by lodash and underscore implementations.\n   *\n   * @function\n   * @param    {Function} func\n   *           The function to wrap with debounce behavior.\n   *\n   * @param    {number} wait\n   *           The number of milliseconds to wait after the last invocation.\n   *\n   * @param    {boolean} [immediate]\n   *           Whether or not to invoke the function immediately upon creation.\n   *\n   * @param    {Object} [context=window]\n   *           The \"context\" in which the debounced function should debounce. For\n   *           example, if this function should be tied to a Video.js player,\n   *           the player can be passed here. Alternatively, defaults to the\n   *           global `window` object.\n   *\n   * @return   {Function}\n   *           A debounced function.\n   */\n  const debounce = function (func, wait, immediate, context = window) {\n    let timeout;\n    const cancel = () => {\n      context.clearTimeout(timeout);\n      timeout = null;\n    };\n\n    /* eslint-disable consistent-this */\n    const debounced = function () {\n      const self = this;\n      const args = arguments;\n      let later = function () {\n        timeout = null;\n        later = null;\n        if (!immediate) {\n          func.apply(self, args);\n        }\n      };\n      if (!timeout && immediate) {\n        func.apply(self, args);\n      }\n      context.clearTimeout(timeout);\n      timeout = context.setTimeout(later, wait);\n    };\n    /* eslint-enable consistent-this */\n\n    debounced.cancel = cancel;\n    return debounced;\n  };\n\n  var Fn = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    UPDATE_REFRESH_INTERVAL: UPDATE_REFRESH_INTERVAL,\n    bind_: bind_,\n    throttle: throttle,\n    debounce: debounce\n  });\n\n  /**\n   * @file src/js/event-target.js\n   */\n  let EVENT_MAP;\n\n  /**\n   * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n   * adds shorthand functions that wrap around lengthy functions. For example:\n   * the `on` function is a wrapper around `addEventListener`.\n   *\n   * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n   * @class EventTarget\n   */\n  class EventTarget$2 {\n    /**\n     * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n     * function that will get called when an event with a certain name gets triggered.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {EventTarget~EventListener} fn\n     *        The function to call with `EventTarget`s\n     */\n    on(type, fn) {\n      // Remove the addEventListener alias before calling Events.on\n      // so we don't get into an infinite type loop\n      const ael = this.addEventListener;\n      this.addEventListener = () => {};\n      on(this, type, fn);\n      this.addEventListener = ael;\n    }\n    /**\n     * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n     * This makes it so that the `event listener` will no longer get called when the\n     * named event happens.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {EventTarget~EventListener} fn\n     *        The function to remove.\n     */\n    off(type, fn) {\n      off(this, type, fn);\n    }\n    /**\n     * This function will add an `event listener` that gets triggered only once. After the\n     * first trigger it will get removed. This is like adding an `event listener`\n     * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n     *\n     * @param {string|string[]} type\n     *        An event name or an array of event names.\n     *\n     * @param {EventTarget~EventListener} fn\n     *        The function to be called once for each event name.\n     */\n    one(type, fn) {\n      // Remove the addEventListener aliasing Events.on\n      // so we don't get into an infinite type loop\n      const ael = this.addEventListener;\n      this.addEventListener = () => {};\n      one(this, type, fn);\n      this.addEventListener = ael;\n    }\n    any(type, fn) {\n      // Remove the addEventListener aliasing Events.on\n      // so we don't get into an infinite type loop\n      const ael = this.addEventListener;\n      this.addEventListener = () => {};\n      any(this, type, fn);\n      this.addEventListener = ael;\n    }\n    /**\n     * This function causes an event to happen. This will then cause any `event listeners`\n     * that are waiting for that event, to get called. If there are no `event listeners`\n     * for an event then nothing will happen.\n     *\n     * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n     * Trigger will also call the `on` + `uppercaseEventName` function.\n     *\n     * Example:\n     * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n     * `onClick` if it exists.\n     *\n     * @param {string|EventTarget~Event|Object} event\n     *        The name of the event, an `Event`, or an object with a key of type set to\n     *        an event name.\n     */\n    trigger(event) {\n      const type = event.type || event;\n\n      // deprecation\n      // In a future version we should default target to `this`\n      // similar to how we default the target to `elem` in\n      // `Events.trigger`. Right now the default `target` will be\n      // `document` due to the `Event.fixEvent` call.\n      if (typeof event === 'string') {\n        event = {\n          type\n        };\n      }\n      event = fixEvent(event);\n      if (this.allowedEvents_[type] && this['on' + type]) {\n        this['on' + type](event);\n      }\n      trigger(this, event);\n    }\n    queueTrigger(event) {\n      // only set up EVENT_MAP if it'll be used\n      if (!EVENT_MAP) {\n        EVENT_MAP = new Map();\n      }\n      const type = event.type || event;\n      let map = EVENT_MAP.get(this);\n      if (!map) {\n        map = new Map();\n        EVENT_MAP.set(this, map);\n      }\n      const oldTimeout = map.get(type);\n      map.delete(type);\n      window.clearTimeout(oldTimeout);\n      const timeout = window.setTimeout(() => {\n        map.delete(type);\n        // if we cleared out all timeouts for the current target, delete its map\n        if (map.size === 0) {\n          map = null;\n          EVENT_MAP.delete(this);\n        }\n        this.trigger(event);\n      }, 0);\n      map.set(type, timeout);\n    }\n  }\n\n  /**\n   * A Custom DOM event.\n   *\n   * @typedef {EventTarget} Event\n   * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n   */\n\n  /**\n   * All event listeners should follow the following format.\n   *\n   * @callback EventTarget~EventListener\n   * @this {EventTarget}\n   *\n   * @param {EventTarget~Event} event\n   *        the event that triggered this function\n   *\n   * @param {Object} [hash]\n   *        hash of data sent during the event\n   */\n\n  /**\n   * An object containing event names as keys and booleans as values.\n   *\n   * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n   *         will have extra functionality. See that function for more information.\n   *\n   * @property EventTarget.prototype.allowedEvents_\n   * @private\n   */\n  EventTarget$2.prototype.allowedEvents_ = {};\n\n  /**\n   * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#on}\n   */\n  EventTarget$2.prototype.addEventListener = EventTarget$2.prototype.on;\n\n  /**\n   * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#off}\n   */\n  EventTarget$2.prototype.removeEventListener = EventTarget$2.prototype.off;\n\n  /**\n   * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n   * the standard DOM API.\n   *\n   * @function\n   * @see {@link EventTarget#trigger}\n   */\n  EventTarget$2.prototype.dispatchEvent = EventTarget$2.prototype.trigger;\n\n  /**\n   * @file mixins/evented.js\n   * @module evented\n   */\n  const objName = obj => {\n    if (typeof obj.name === 'function') {\n      return obj.name();\n    }\n    if (typeof obj.name === 'string') {\n      return obj.name;\n    }\n    if (obj.name_) {\n      return obj.name_;\n    }\n    if (obj.constructor && obj.constructor.name) {\n      return obj.constructor.name;\n    }\n    return typeof obj;\n  };\n\n  /**\n   * Returns whether or not an object has had the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to test.\n   *\n   * @return {boolean}\n   *         Whether or not the object appears to be evented.\n   */\n  const isEvented = object => object instanceof EventTarget$2 || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(k => typeof object[k] === 'function');\n\n  /**\n   * Adds a callback to run after the evented mixin applied.\n   *\n   * @param  {Object} object\n   *         An object to Add\n   * @param  {Function} callback\n   *         The callback to run.\n   */\n  const addEventedCallback = (target, callback) => {\n    if (isEvented(target)) {\n      callback();\n    } else {\n      if (!target.eventedCallbacks) {\n        target.eventedCallbacks = [];\n      }\n      target.eventedCallbacks.push(callback);\n    }\n  };\n\n  /**\n   * Whether a value is a valid event type - non-empty string or array.\n   *\n   * @private\n   * @param  {string|Array} type\n   *         The type value to test.\n   *\n   * @return {boolean}\n   *         Whether or not the type is a valid event type.\n   */\n  const isValidEventType = type =>\n  // The regex here verifies that the `type` contains at least one non-\n  // whitespace character.\n  typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length;\n\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the target does not appear to be a valid event target.\n   *\n   * @param  {Object} target\n   *         The object to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n  const validateTarget = (target, obj, fnName) => {\n    if (!target || !target.nodeName && !isEvented(target)) {\n      throw new Error(`Invalid target for ${objName(obj)}#${fnName}; must be a DOM node or evented object.`);\n    }\n  };\n\n  /**\n   * Validates a value to determine if it is a valid event target. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the type does not appear to be a valid event type.\n   *\n   * @param  {string|Array} type\n   *         The type to test.\n   *\n   * @param  {Object} obj\n  *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n  const validateEventType = (type, obj, fnName) => {\n    if (!isValidEventType(type)) {\n      throw new Error(`Invalid event type for ${objName(obj)}#${fnName}; must be a non-empty string or array.`);\n    }\n  };\n\n  /**\n   * Validates a value to determine if it is a valid listener. Throws if not.\n   *\n   * @private\n   * @throws {Error}\n   *         If the listener is not a function.\n   *\n   * @param  {Function} listener\n   *         The listener to test.\n   *\n   * @param  {Object} obj\n   *         The evented object we are validating for\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   */\n  const validateListener = (listener, obj, fnName) => {\n    if (typeof listener !== 'function') {\n      throw new Error(`Invalid listener for ${objName(obj)}#${fnName}; must be a function.`);\n    }\n  };\n\n  /**\n   * Takes an array of arguments given to `on()` or `one()`, validates them, and\n   * normalizes them into an object.\n   *\n   * @private\n   * @param  {Object} self\n   *         The evented object on which `on()` or `one()` was called. This\n   *         object will be bound as the `this` value for the listener.\n   *\n   * @param  {Array} args\n   *         An array of arguments passed to `on()` or `one()`.\n   *\n   * @param  {string} fnName\n   *         The name of the evented mixin function that called this.\n   *\n   * @return {Object}\n   *         An object containing useful values for `on()` or `one()` calls.\n   */\n  const normalizeListenArgs = (self, args, fnName) => {\n    // If the number of arguments is less than 3, the target is always the\n    // evented object itself.\n    const isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n    let target;\n    let type;\n    let listener;\n    if (isTargetingSelf) {\n      target = self.eventBusEl_;\n\n      // Deal with cases where we got 3 arguments, but we are still listening to\n      // the evented object itself.\n      if (args.length >= 3) {\n        args.shift();\n      }\n      [type, listener] = args;\n    } else {\n      [target, type, listener] = args;\n    }\n    validateTarget(target, self, fnName);\n    validateEventType(type, self, fnName);\n    validateListener(listener, self, fnName);\n    listener = bind_(self, listener);\n    return {\n      isTargetingSelf,\n      target,\n      type,\n      listener\n    };\n  };\n\n  /**\n   * Adds the listener to the event type(s) on the target, normalizing for\n   * the type of target.\n   *\n   * @private\n   * @param  {Element|Object} target\n   *         A DOM node or evented object.\n   *\n   * @param  {string} method\n   *         The event binding method to use (\"on\" or \"one\").\n   *\n   * @param  {string|Array} type\n   *         One or more event type(s).\n   *\n   * @param  {Function} listener\n   *         A listener function.\n   */\n  const listen = (target, method, type, listener) => {\n    validateTarget(target, target, method);\n    if (target.nodeName) {\n      Events[method](target, type, listener);\n    } else {\n      target[method](type, listener);\n    }\n  };\n\n  /**\n   * Contains methods that provide event capabilities to an object which is passed\n   * to {@link module:evented|evented}.\n   *\n   * @mixin EventedMixin\n   */\n  const EventedMixin = {\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    on(...args) {\n      const {\n        isTargetingSelf,\n        target,\n        type,\n        listener\n      } = normalizeListenArgs(this, args, 'on');\n      listen(target, 'on', type, listener);\n\n      // If this object is listening to another evented object.\n      if (!isTargetingSelf) {\n        // If this object is disposed, remove the listener.\n        const removeListenerOnDispose = () => this.off(target, type, listener);\n\n        // Use the same function ID as the listener so we can remove it later it\n        // using the ID of the original listener.\n        removeListenerOnDispose.guid = listener.guid;\n\n        // Add a listener to the target's dispose event as well. This ensures\n        // that if the target is disposed BEFORE this object, we remove the\n        // removal listener that was just added. Otherwise, we create a memory leak.\n        const removeRemoverOnTargetDispose = () => this.off('dispose', removeListenerOnDispose);\n\n        // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n        removeRemoverOnTargetDispose.guid = listener.guid;\n        listen(this, 'on', 'dispose', removeListenerOnDispose);\n        listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n      }\n    },\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will be called once per event and then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    one(...args) {\n      const {\n        isTargetingSelf,\n        target,\n        type,\n        listener\n      } = normalizeListenArgs(this, args, 'one');\n\n      // Targeting this evented object.\n      if (isTargetingSelf) {\n        listen(target, 'one', type, listener);\n\n        // Targeting another evented object.\n      } else {\n        // TODO: This wrapper is incorrect! It should only\n        //       remove the wrapper for the event type that called it.\n        //       Instead all listners are removed on the first trigger!\n        //       see https://github.com/videojs/video.js/issues/5962\n        const wrapper = (...largs) => {\n          this.off(target, type, wrapper);\n          listener.apply(null, largs);\n        };\n\n        // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n        wrapper.guid = listener.guid;\n        listen(target, 'one', type, wrapper);\n      }\n    },\n    /**\n     * Add a listener to an event (or events) on this object or another evented\n     * object. The listener will only be called once for the first event that is triggered\n     * then removed.\n     *\n     * @param  {string|Array|Element|Object} targetOrType\n     *         If this is a string or array, it represents the event type(s)\n     *         that will trigger the listener.\n     *\n     *         Another evented object can be passed here instead, which will\n     *         cause the listener to listen for events on _that_ object.\n     *\n     *         In either case, the listener's `this` value will be bound to\n     *         this object.\n     *\n     * @param  {string|Array|Function} typeOrListener\n     *         If the first argument was a string or array, this should be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function.\n     */\n    any(...args) {\n      const {\n        isTargetingSelf,\n        target,\n        type,\n        listener\n      } = normalizeListenArgs(this, args, 'any');\n\n      // Targeting this evented object.\n      if (isTargetingSelf) {\n        listen(target, 'any', type, listener);\n\n        // Targeting another evented object.\n      } else {\n        const wrapper = (...largs) => {\n          this.off(target, type, wrapper);\n          listener.apply(null, largs);\n        };\n\n        // Use the same function ID as the listener so we can remove it later\n        // it using the ID of the original listener.\n        wrapper.guid = listener.guid;\n        listen(target, 'any', type, wrapper);\n      }\n    },\n    /**\n     * Removes listener(s) from event(s) on an evented object.\n     *\n     * @param  {string|Array|Element|Object} [targetOrType]\n     *         If this is a string or array, it represents the event type(s).\n     *\n     *         Another evented object can be passed here instead, in which case\n     *         ALL 3 arguments are _required_.\n     *\n     * @param  {string|Array|Function} [typeOrListener]\n     *         If the first argument was a string or array, this may be the\n     *         listener function. Otherwise, this is a string or array of event\n     *         type(s).\n     *\n     * @param  {Function} [listener]\n     *         If the first argument was another evented object, this will be\n     *         the listener function; otherwise, _all_ listeners bound to the\n     *         event type(s) will be removed.\n     */\n    off(targetOrType, typeOrListener, listener) {\n      // Targeting this evented object.\n      if (!targetOrType || isValidEventType(targetOrType)) {\n        off(this.eventBusEl_, targetOrType, typeOrListener);\n\n        // Targeting another evented object.\n      } else {\n        const target = targetOrType;\n        const type = typeOrListener;\n\n        // Fail fast and in a meaningful way!\n        validateTarget(target, this, 'off');\n        validateEventType(type, this, 'off');\n        validateListener(listener, this, 'off');\n\n        // Ensure there's at least a guid, even if the function hasn't been used\n        listener = bind_(this, listener);\n\n        // Remove the dispose listener on this evented object, which was given\n        // the same guid as the event listener in on().\n        this.off('dispose', listener);\n        if (target.nodeName) {\n          off(target, type, listener);\n          off(target, 'dispose', listener);\n        } else if (isEvented(target)) {\n          target.off(type, listener);\n          target.off('dispose', listener);\n        }\n      }\n    },\n    /**\n     * Fire an event on this evented object, causing its listeners to be called.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash]\n     *          An additional object to pass along to listeners.\n     *\n     * @return {boolean}\n     *          Whether or not the default behavior was prevented.\n     */\n    trigger(event, hash) {\n      validateTarget(this.eventBusEl_, this, 'trigger');\n      const type = event && typeof event !== 'string' ? event.type : event;\n      if (!isValidEventType(type)) {\n        throw new Error(`Invalid event type for ${objName(this)}#trigger; ` + 'must be a non-empty string or object with a type key that has a non-empty value.');\n      }\n      return trigger(this.eventBusEl_, event, hash);\n    }\n  };\n\n  /**\n   * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n   *\n   * @param  {Object} target\n   *         The object to which to add event methods.\n   *\n   * @param  {Object} [options={}]\n   *         Options for customizing the mixin behavior.\n   *\n   * @param  {string} [options.eventBusKey]\n   *         By default, adds a `eventBusEl_` DOM element to the target object,\n   *         which is used as an event bus. If the target object already has a\n   *         DOM element that should be used, pass its key here.\n   *\n   * @return {Object}\n   *         The target object.\n   */\n  function evented(target, options = {}) {\n    const {\n      eventBusKey\n    } = options;\n\n    // Set or create the eventBusEl_.\n    if (eventBusKey) {\n      if (!target[eventBusKey].nodeName) {\n        throw new Error(`The eventBusKey \"${eventBusKey}\" does not refer to an element.`);\n      }\n      target.eventBusEl_ = target[eventBusKey];\n    } else {\n      target.eventBusEl_ = createEl('span', {\n        className: 'vjs-event-bus'\n      });\n    }\n    Object.assign(target, EventedMixin);\n    if (target.eventedCallbacks) {\n      target.eventedCallbacks.forEach(callback => {\n        callback();\n      });\n    }\n\n    // When any evented object is disposed, it removes all its listeners.\n    target.on('dispose', () => {\n      target.off();\n      [target, target.el_, target.eventBusEl_].forEach(function (val) {\n        if (val && DomData.has(val)) {\n          DomData.delete(val);\n        }\n      });\n      window.setTimeout(() => {\n        target.eventBusEl_ = null;\n      }, 0);\n    });\n    return target;\n  }\n\n  /**\n   * @file mixins/stateful.js\n   * @module stateful\n   */\n\n  /**\n   * Contains methods that provide statefulness to an object which is passed\n   * to {@link module:stateful}.\n   *\n   * @mixin StatefulMixin\n   */\n  const StatefulMixin = {\n    /**\n     * A hash containing arbitrary keys and values representing the state of\n     * the object.\n     *\n     * @type {Object}\n     */\n    state: {},\n    /**\n     * Set the state of an object by mutating its\n     * {@link module:stateful~StatefulMixin.state|state} object in place.\n     *\n     * @fires   module:stateful~StatefulMixin#statechanged\n     * @param   {Object|Function} stateUpdates\n     *          A new set of properties to shallow-merge into the plugin state.\n     *          Can be a plain object or a function returning a plain object.\n     *\n     * @return {Object|undefined}\n     *          An object containing changes that occurred. If no changes\n     *          occurred, returns `undefined`.\n     */\n    setState(stateUpdates) {\n      // Support providing the `stateUpdates` state as a function.\n      if (typeof stateUpdates === 'function') {\n        stateUpdates = stateUpdates();\n      }\n      let changes;\n      each(stateUpdates, (value, key) => {\n        // Record the change if the value is different from what's in the\n        // current state.\n        if (this.state[key] !== value) {\n          changes = changes || {};\n          changes[key] = {\n            from: this.state[key],\n            to: value\n          };\n        }\n        this.state[key] = value;\n      });\n\n      // Only trigger \"statechange\" if there were changes AND we have a trigger\n      // function. This allows us to not require that the target object be an\n      // evented object.\n      if (changes && isEvented(this)) {\n        /**\n         * An event triggered on an object that is both\n         * {@link module:stateful|stateful} and {@link module:evented|evented}\n         * indicating that its state has changed.\n         *\n         * @event    module:stateful~StatefulMixin#statechanged\n         * @type     {Object}\n         * @property {Object} changes\n         *           A hash containing the properties that were changed and\n         *           the values they were changed `from` and `to`.\n         */\n        this.trigger({\n          changes,\n          type: 'statechanged'\n        });\n      }\n      return changes;\n    }\n  };\n\n  /**\n   * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n   * object.\n   *\n   * If the target object is {@link module:evented|evented} and has a\n   * `handleStateChanged` method, that method will be automatically bound to the\n   * `statechanged` event on itself.\n   *\n   * @param   {Object} target\n   *          The object to be made stateful.\n   *\n   * @param   {Object} [defaultState]\n   *          A default set of properties to populate the newly-stateful object's\n   *          `state` property.\n   *\n   * @return {Object}\n   *          Returns the `target`.\n   */\n  function stateful(target, defaultState) {\n    Object.assign(target, StatefulMixin);\n\n    // This happens after the mixing-in because we need to replace the `state`\n    // added in that step.\n    target.state = Object.assign({}, target.state, defaultState);\n\n    // Auto-bind the `handleStateChanged` method of the target object if it exists.\n    if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n      target.on('statechanged', target.handleStateChanged);\n    }\n    return target;\n  }\n\n  /**\n   * @file str.js\n   * @module to-lower-case\n   */\n\n  /**\n   * Lowercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be lowercased\n   *\n   * @return {string}\n   *         The string with a lowercased first letter\n   */\n  const toLowerCase = function (string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n    return string.replace(/./, w => w.toLowerCase());\n  };\n\n  /**\n   * Uppercase the first letter of a string.\n   *\n   * @param {string} string\n   *        String to be uppercased\n   *\n   * @return {string}\n   *         The string with an uppercased first letter\n   */\n  const toTitleCase$1 = function (string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n    return string.replace(/./, w => w.toUpperCase());\n  };\n\n  /**\n   * Compares the TitleCase versions of the two strings for equality.\n   *\n   * @param {string} str1\n   *        The first string to compare\n   *\n   * @param {string} str2\n   *        The second string to compare\n   *\n   * @return {boolean}\n   *         Whether the TitleCase versions of the strings are equal\n   */\n  const titleCaseEquals = function (str1, str2) {\n    return toTitleCase$1(str1) === toTitleCase$1(str2);\n  };\n\n  var Str = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    toLowerCase: toLowerCase,\n    toTitleCase: toTitleCase$1,\n    titleCaseEquals: titleCaseEquals\n  });\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function unwrapExports (x) {\n  \treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n  }\n\n  function createCommonjsModule(fn, module) {\n  \treturn module = { exports: {} }, fn(module, module.exports), module.exports;\n  }\n\n  var keycode = createCommonjsModule(function (module, exports) {\n    // Source: http://jsfiddle.net/vWx8V/\n    // http://stackoverflow.com/questions/5603195/full-list-of-javascript-keycodes\n\n    /**\n     * Conenience method returns corresponding value for given keyName or keyCode.\n     *\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Mixed}\n     * @api public\n     */\n\n    function keyCode(searchInput) {\n      // Keyboard Events\n      if (searchInput && 'object' === typeof searchInput) {\n        var hasKeyCode = searchInput.which || searchInput.keyCode || searchInput.charCode;\n        if (hasKeyCode) searchInput = hasKeyCode;\n      }\n\n      // Numbers\n      if ('number' === typeof searchInput) return names[searchInput];\n\n      // Everything else (cast to string)\n      var search = String(searchInput);\n\n      // check codes\n      var foundNamedKey = codes[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey;\n\n      // check aliases\n      var foundNamedKey = aliases[search.toLowerCase()];\n      if (foundNamedKey) return foundNamedKey;\n\n      // weird character?\n      if (search.length === 1) return search.charCodeAt(0);\n      return undefined;\n    }\n\n    /**\n     * Compares a keyboard event with a given keyCode or keyName.\n     *\n     * @param {Event} event Keyboard event that should be tested\n     * @param {Mixed} keyCode {Number} or keyName {String}\n     * @return {Boolean}\n     * @api public\n     */\n    keyCode.isEventKey = function isEventKey(event, nameOrCode) {\n      if (event && 'object' === typeof event) {\n        var keyCode = event.which || event.keyCode || event.charCode;\n        if (keyCode === null || keyCode === undefined) {\n          return false;\n        }\n        if (typeof nameOrCode === 'string') {\n          // check codes\n          var foundNamedKey = codes[nameOrCode.toLowerCase()];\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          }\n\n          // check aliases\n          var foundNamedKey = aliases[nameOrCode.toLowerCase()];\n          if (foundNamedKey) {\n            return foundNamedKey === keyCode;\n          }\n        } else if (typeof nameOrCode === 'number') {\n          return nameOrCode === keyCode;\n        }\n        return false;\n      }\n    };\n    exports = module.exports = keyCode;\n\n    /**\n     * Get by name\n     *\n     *   exports.code['enter'] // => 13\n     */\n\n    var codes = exports.code = exports.codes = {\n      'backspace': 8,\n      'tab': 9,\n      'enter': 13,\n      'shift': 16,\n      'ctrl': 17,\n      'alt': 18,\n      'pause/break': 19,\n      'caps lock': 20,\n      'esc': 27,\n      'space': 32,\n      'page up': 33,\n      'page down': 34,\n      'end': 35,\n      'home': 36,\n      'left': 37,\n      'up': 38,\n      'right': 39,\n      'down': 40,\n      'insert': 45,\n      'delete': 46,\n      'command': 91,\n      'left command': 91,\n      'right command': 93,\n      'numpad *': 106,\n      'numpad +': 107,\n      'numpad -': 109,\n      'numpad .': 110,\n      'numpad /': 111,\n      'num lock': 144,\n      'scroll lock': 145,\n      'my computer': 182,\n      'my calculator': 183,\n      ';': 186,\n      '=': 187,\n      ',': 188,\n      '-': 189,\n      '.': 190,\n      '/': 191,\n      '`': 192,\n      '[': 219,\n      '\\\\': 220,\n      ']': 221,\n      \"'\": 222\n    };\n\n    // Helper aliases\n\n    var aliases = exports.aliases = {\n      'windows': 91,\n      '⇧': 16,\n      '⌥': 18,\n      '⌃': 17,\n      '⌘': 91,\n      'ctl': 17,\n      'control': 17,\n      'option': 18,\n      'pause': 19,\n      'break': 19,\n      'caps': 20,\n      'return': 13,\n      'escape': 27,\n      'spc': 32,\n      'spacebar': 32,\n      'pgup': 33,\n      'pgdn': 34,\n      'ins': 45,\n      'del': 46,\n      'cmd': 91\n    };\n\n    /*!\n     * Programatically add the following\n     */\n\n    // lower case chars\n    for (i = 97; i < 123; i++) codes[String.fromCharCode(i)] = i - 32;\n\n    // numbers\n    for (var i = 48; i < 58; i++) codes[i - 48] = i;\n\n    // function keys\n    for (i = 1; i < 13; i++) codes['f' + i] = i + 111;\n\n    // numpad keys\n    for (i = 0; i < 10; i++) codes['numpad ' + i] = i + 96;\n\n    /**\n     * Get by code\n     *\n     *   exports.name[13] // => 'Enter'\n     */\n\n    var names = exports.names = exports.title = {}; // title for backward compat\n\n    // Create reverse mapping\n    for (i in codes) names[codes[i]] = i;\n\n    // Add aliases\n    for (var alias in aliases) {\n      codes[alias] = aliases[alias];\n    }\n  });\n  keycode.code;\n  keycode.codes;\n  keycode.aliases;\n  keycode.names;\n  keycode.title;\n\n  /**\n   * Player Component - Base class for all UI objects\n   *\n   * @file component.js\n   */\n\n  /**\n   * Base class for all UI Components.\n   * Components are UI objects which represent both a javascript object and an element\n   * in the DOM. They can be children of other components, and can have\n   * children themselves.\n   *\n   * Components can also use methods from {@link EventTarget}\n   */\n  class Component$1 {\n    /**\n     * A callback that is called when a component is ready. Does not have any\n     * parameters and any callback value will be ignored.\n     *\n     * @callback Component~ReadyCallback\n     * @this Component\n     */\n\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of component options.\n     *\n     * @param {Object[]} [options.children]\n     *        An array of children objects to intialize this component with. Children objects have\n     *        a name property that will be used if more than one component of the same type needs to be\n     *        added.\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Function that gets called when the `Component` is ready.\n     */\n    constructor(player, options, ready) {\n      // The component might be the player itself and we can't pass `this` to super\n      if (!player && this.play) {\n        this.player_ = player = this; // eslint-disable-line\n      } else {\n        this.player_ = player;\n      }\n      this.isDisposed_ = false;\n\n      // Hold the reference to the parent component via `addChild` method\n      this.parentComponent_ = null;\n\n      // Make a copy of prototype.options_ to protect against overriding defaults\n      this.options_ = merge$2({}, this.options_);\n\n      // Updated options with supplied options\n      options = this.options_ = merge$2(this.options_, options);\n\n      // Get ID from options or options element if one is supplied\n      this.id_ = options.id || options.el && options.el.id;\n\n      // If there was no ID from the options, generate one\n      if (!this.id_) {\n        // Don't require the player ID function in the case of mock players\n        const id = player && player.id && player.id() || 'no_player';\n        this.id_ = `${id}_component_${newGUID()}`;\n      }\n      this.name_ = options.name || null;\n\n      // Create element if one wasn't provided in options\n      if (options.el) {\n        this.el_ = options.el;\n      } else if (options.createEl !== false) {\n        this.el_ = this.createEl();\n      }\n      if (options.className && this.el_) {\n        options.className.split(' ').forEach(c => this.addClass(c));\n      }\n\n      // if evented is anything except false, we want to mixin in evented\n      if (options.evented !== false) {\n        // Make this an evented object and use `el_`, if available, as its event bus\n        evented(this, {\n          eventBusKey: this.el_ ? 'el_' : null\n        });\n        this.handleLanguagechange = this.handleLanguagechange.bind(this);\n        this.on(this.player_, 'languagechange', this.handleLanguagechange);\n      }\n      stateful(this, this.constructor.defaultState);\n      this.children_ = [];\n      this.childIndex_ = {};\n      this.childNameIndex_ = {};\n      this.setTimeoutIds_ = new Set();\n      this.setIntervalIds_ = new Set();\n      this.rafIds_ = new Set();\n      this.namedRafs_ = new Map();\n      this.clearingTimersOnDispose_ = false;\n\n      // Add any child components in options\n      if (options.initChildren !== false) {\n        this.initChildren();\n      }\n\n      // Don't want to trigger ready here or it will go before init is actually\n      // finished for all children that run this constructor\n      this.ready(ready);\n      if (options.reportTouchActivity !== false) {\n        this.enableTouchActivity();\n      }\n    }\n\n    /**\n     * Dispose of the `Component` and all child components.\n     *\n     * @fires Component#dispose\n     *\n     * @param {Object} options\n     * @param {Element} options.originalEl element with which to replace player element\n     */\n    dispose(options = {}) {\n      // Bail out if the component has already been disposed.\n      if (this.isDisposed_) {\n        return;\n      }\n      if (this.readyQueue_) {\n        this.readyQueue_.length = 0;\n      }\n\n      /**\n       * Triggered when a `Component` is disposed.\n       *\n       * @event Component#dispose\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the dispose event does not\n       *           bubble up\n       */\n      this.trigger({\n        type: 'dispose',\n        bubbles: false\n      });\n      this.isDisposed_ = true;\n\n      // Dispose all children.\n      if (this.children_) {\n        for (let i = this.children_.length - 1; i >= 0; i--) {\n          if (this.children_[i].dispose) {\n            this.children_[i].dispose();\n          }\n        }\n      }\n\n      // Delete child references\n      this.children_ = null;\n      this.childIndex_ = null;\n      this.childNameIndex_ = null;\n      this.parentComponent_ = null;\n      if (this.el_) {\n        // Remove element from DOM\n        if (this.el_.parentNode) {\n          if (options.restoreEl) {\n            this.el_.parentNode.replaceChild(options.restoreEl, this.el_);\n          } else {\n            this.el_.parentNode.removeChild(this.el_);\n          }\n        }\n        this.el_ = null;\n      }\n\n      // remove reference to the player after disposing of the element\n      this.player_ = null;\n    }\n\n    /**\n     * Determine whether or not this component has been disposed.\n     *\n     * @return {boolean}\n     *         If the component has been disposed, will be `true`. Otherwise, `false`.\n     */\n    isDisposed() {\n      return Boolean(this.isDisposed_);\n    }\n\n    /**\n     * Return the {@link Player} that the `Component` has attached to.\n     *\n     * @return {Player}\n     *         The player that this `Component` has attached to.\n     */\n    player() {\n      return this.player_;\n    }\n\n    /**\n     * Deep merge of options objects with new options.\n     * > Note: When both `obj` and `options` contain properties whose values are objects.\n     *         The two properties get merged using {@link module:obj.merge}\n     *\n     * @param {Object} obj\n     *        The object that contains new options.\n     *\n     * @return {Object}\n     *         A new object of `this.options_` and `obj` merged together.\n     */\n    options(obj) {\n      if (!obj) {\n        return this.options_;\n      }\n      this.options_ = merge$2(this.options_, obj);\n      return this.options_;\n    }\n\n    /**\n     * Get the `Component`s DOM element\n     *\n     * @return {Element}\n     *         The DOM element for this `Component`.\n     */\n    el() {\n      return this.el_;\n    }\n\n    /**\n     * Create the `Component`s DOM element.\n     *\n     * @param {string} [tagName]\n     *        Element's DOM node type. e.g. 'div'\n     *\n     * @param {Object} [properties]\n     *        An object of properties that should be set.\n     *\n     * @param {Object} [attributes]\n     *        An object of attributes that should be set.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(tagName, properties, attributes) {\n      return createEl(tagName, properties, attributes);\n    }\n\n    /**\n     * Localize a string given the string in english.\n     *\n     * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n     * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n     *\n     * If a `defaultValue` is provided, it'll use that over `string`,\n     * if a value isn't found in provided language files.\n     * This is useful if you want to have a descriptive key for token replacement\n     * but have a succinct localized string and not require `en.json` to be included.\n     *\n     * Currently, it is used for the progress bar timing.\n     * ```js\n     * {\n     *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n     * }\n     * ```\n     * It is then used like so:\n     * ```js\n     * this.localize('progress bar timing: currentTime={1} duration{2}',\n     *               [this.player_.currentTime(), this.player_.duration()],\n     *               '{1} of {2}');\n     * ```\n     *\n     * Which outputs something like: `01:23 of 24:56`.\n     *\n     *\n     * @param {string} string\n     *        The string to localize and the key to lookup in the language files.\n     * @param {string[]} [tokens]\n     *        If the current item has token replacements, provide the tokens here.\n     * @param {string} [defaultValue]\n     *        Defaults to `string`. Can be a default value to use for token replacement\n     *        if the lookup key is needed to be separate.\n     *\n     * @return {string}\n     *         The localized string or if no localization exists the english string.\n     */\n    localize(string, tokens, defaultValue = string) {\n      const code = this.player_.language && this.player_.language();\n      const languages = this.player_.languages && this.player_.languages();\n      const language = languages && languages[code];\n      const primaryCode = code && code.split('-')[0];\n      const primaryLang = languages && languages[primaryCode];\n      let localizedString = defaultValue;\n      if (language && language[string]) {\n        localizedString = language[string];\n      } else if (primaryLang && primaryLang[string]) {\n        localizedString = primaryLang[string];\n      }\n      if (tokens) {\n        localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n          const value = tokens[index - 1];\n          let ret = value;\n          if (typeof value === 'undefined') {\n            ret = match;\n          }\n          return ret;\n        });\n      }\n      return localizedString;\n    }\n\n    /**\n     * Handles language change for the player in components. Should be overriden by sub-components.\n     *\n     * @abstract\n     */\n    handleLanguagechange() {}\n\n    /**\n     * Return the `Component`s DOM element. This is where children get inserted.\n     * This will usually be the the same as the element returned in {@link Component#el}.\n     *\n     * @return {Element}\n     *         The content element for this `Component`.\n     */\n    contentEl() {\n      return this.contentEl_ || this.el_;\n    }\n\n    /**\n     * Get this `Component`s ID\n     *\n     * @return {string}\n     *         The id of this `Component`\n     */\n    id() {\n      return this.id_;\n    }\n\n    /**\n     * Get the `Component`s name. The name gets used to reference the `Component`\n     * and is set during registration.\n     *\n     * @return {string}\n     *         The name of this `Component`.\n     */\n    name() {\n      return this.name_;\n    }\n\n    /**\n     * Get an array of all child components\n     *\n     * @return {Array}\n     *         The children\n     */\n    children() {\n      return this.children_;\n    }\n\n    /**\n     * Returns the child `Component` with the given `id`.\n     *\n     * @param {string} id\n     *        The id of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `id` or undefined.\n     */\n    getChildById(id) {\n      return this.childIndex_[id];\n    }\n\n    /**\n     * Returns the child `Component` with the given `name`.\n     *\n     * @param {string} name\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The child `Component` with the given `name` or undefined.\n     */\n    getChild(name) {\n      if (!name) {\n        return;\n      }\n      return this.childNameIndex_[name];\n    }\n\n    /**\n     * Returns the descendant `Component` following the givent\n     * descendant `names`. For instance ['foo', 'bar', 'baz'] would\n     * try to get 'foo' on the current component, 'bar' on the 'foo'\n     * component and 'baz' on the 'bar' component and return undefined\n     * if any of those don't exist.\n     *\n     * @param {...string[]|...string} names\n     *        The name of the child `Component` to get.\n     *\n     * @return {Component|undefined}\n     *         The descendant `Component` following the given descendant\n     *         `names` or undefined.\n     */\n    getDescendant(...names) {\n      // flatten array argument into the main array\n      names = names.reduce((acc, n) => acc.concat(n), []);\n      let currentChild = this;\n      for (let i = 0; i < names.length; i++) {\n        currentChild = currentChild.getChild(names[i]);\n        if (!currentChild || !currentChild.getChild) {\n          return;\n        }\n      }\n      return currentChild;\n    }\n\n    /**\n     * Add a child `Component` inside the current `Component`.\n     *\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @param {number} [index=this.children_.length]\n     *        The index to attempt to add a child into.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     */\n    addChild(child, options = {}, index = this.children_.length) {\n      let component;\n      let componentName;\n\n      // If child is a string, create component with options\n      if (typeof child === 'string') {\n        componentName = toTitleCase$1(child);\n        const componentClassName = options.componentClass || componentName;\n\n        // Set name through options\n        options.name = componentName;\n\n        // Create a new object & element for this controls set\n        // If there's no .player_, this is a player\n        const ComponentClass = Component$1.getComponent(componentClassName);\n        if (!ComponentClass) {\n          throw new Error(`Component ${componentClassName} does not exist`);\n        }\n\n        // data stored directly on the videojs object may be\n        // misidentified as a component to retain\n        // backwards-compatibility with 4.x. check to make sure the\n        // component class can be instantiated.\n        if (typeof ComponentClass !== 'function') {\n          return null;\n        }\n        component = new ComponentClass(this.player_ || this, options);\n\n        // child is a component instance\n      } else {\n        component = child;\n      }\n      if (component.parentComponent_) {\n        component.parentComponent_.removeChild(component);\n      }\n      this.children_.splice(index, 0, component);\n      component.parentComponent_ = this;\n      if (typeof component.id === 'function') {\n        this.childIndex_[component.id()] = component;\n      }\n\n      // If a name wasn't used to create the component, check if we can use the\n      // name function of the component\n      componentName = componentName || component.name && toTitleCase$1(component.name());\n      if (componentName) {\n        this.childNameIndex_[componentName] = component;\n        this.childNameIndex_[toLowerCase(componentName)] = component;\n      }\n\n      // Add the UI object's element to the container div (box)\n      // Having an element is not required\n      if (typeof component.el === 'function' && component.el()) {\n        // If inserting before a component, insert before that component's element\n        let refNode = null;\n        if (this.children_[index + 1]) {\n          // Most children are components, but the video tech is an HTML element\n          if (this.children_[index + 1].el_) {\n            refNode = this.children_[index + 1].el_;\n          } else if (isEl(this.children_[index + 1])) {\n            refNode = this.children_[index + 1];\n          }\n        }\n        this.contentEl().insertBefore(component.el(), refNode);\n      }\n\n      // Return so it can stored on parent object if desired.\n      return component;\n    }\n\n    /**\n     * Remove a child `Component` from this `Component`s list of children. Also removes\n     * the child `Component`s element from this `Component`s element.\n     *\n     * @param {Component} component\n     *        The child `Component` to remove.\n     */\n    removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n      if (!component || !this.children_) {\n        return;\n      }\n      let childFound = false;\n      for (let i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i] === component) {\n          childFound = true;\n          this.children_.splice(i, 1);\n          break;\n        }\n      }\n      if (!childFound) {\n        return;\n      }\n      component.parentComponent_ = null;\n      this.childIndex_[component.id()] = null;\n      this.childNameIndex_[toTitleCase$1(component.name())] = null;\n      this.childNameIndex_[toLowerCase(component.name())] = null;\n      const compEl = component.el();\n      if (compEl && compEl.parentNode === this.contentEl()) {\n        this.contentEl().removeChild(component.el());\n      }\n    }\n\n    /**\n     * Add and initialize default child `Component`s based upon options.\n     */\n    initChildren() {\n      const children = this.options_.children;\n      if (children) {\n        // `this` is `parent`\n        const parentOptions = this.options_;\n        const handleAdd = child => {\n          const name = child.name;\n          let opts = child.opts;\n\n          // Allow options for children to be set at the parent options\n          // e.g. videojs(id, { controlBar: false });\n          // instead of videojs(id, { children: { controlBar: false });\n          if (parentOptions[name] !== undefined) {\n            opts = parentOptions[name];\n          }\n\n          // Allow for disabling default components\n          // e.g. options['children']['posterImage'] = false\n          if (opts === false) {\n            return;\n          }\n\n          // Allow options to be passed as a simple boolean if no configuration\n          // is necessary.\n          if (opts === true) {\n            opts = {};\n          }\n\n          // We also want to pass the original player options\n          // to each component as well so they don't need to\n          // reach back into the player for options later.\n          opts.playerOptions = this.options_.playerOptions;\n\n          // Create and add the child component.\n          // Add a direct reference to the child by name on the parent instance.\n          // If two of the same component are used, different names should be supplied\n          // for each\n          const newChild = this.addChild(name, opts);\n          if (newChild) {\n            this[name] = newChild;\n          }\n        };\n\n        // Allow for an array of children details to passed in the options\n        let workingChildren;\n        const Tech = Component$1.getComponent('Tech');\n        if (Array.isArray(children)) {\n          workingChildren = children;\n        } else {\n          workingChildren = Object.keys(children);\n        }\n        workingChildren\n        // children that are in this.options_ but also in workingChildren  would\n        // give us extra children we do not want. So, we want to filter them out.\n        .concat(Object.keys(this.options_).filter(function (child) {\n          return !workingChildren.some(function (wchild) {\n            if (typeof wchild === 'string') {\n              return child === wchild;\n            }\n            return child === wchild.name;\n          });\n        })).map(child => {\n          let name;\n          let opts;\n          if (typeof child === 'string') {\n            name = child;\n            opts = children[name] || this.options_[name] || {};\n          } else {\n            name = child.name;\n            opts = child;\n          }\n          return {\n            name,\n            opts\n          };\n        }).filter(child => {\n          // we have to make sure that child.name isn't in the techOrder since\n          // techs are registerd as Components but can't aren't compatible\n          // See https://github.com/videojs/video.js/issues/2772\n          const c = Component$1.getComponent(child.opts.componentClass || toTitleCase$1(child.name));\n          return c && !Tech.isTech(c);\n        }).forEach(handleAdd);\n      }\n    }\n\n    /**\n     * Builds the default DOM class name. Should be overriden by sub-components.\n     *\n     * @return {string}\n     *         The DOM class name for this object.\n     *\n     * @abstract\n     */\n    buildCSSClass() {\n      // Child classes can include a function that does:\n      // return 'CLASS NAME' + this._super();\n      return '';\n    }\n\n    /**\n     * Bind a listener to the component's ready state.\n     * Different from event listeners in that if the ready event has already happened\n     * it will trigger the function immediately.\n     *\n     * @param {Component~ReadyCallback} fn\n     *        Function that gets called when the `Component` is ready.\n     *\n     * @return {Component}\n     *         Returns itself; method can be chained.\n     */\n    ready(fn, sync = false) {\n      if (!fn) {\n        return;\n      }\n      if (!this.isReady_) {\n        this.readyQueue_ = this.readyQueue_ || [];\n        this.readyQueue_.push(fn);\n        return;\n      }\n      if (sync) {\n        fn.call(this);\n      } else {\n        // Call the function asynchronously by default for consistency\n        this.setTimeout(fn, 1);\n      }\n    }\n\n    /**\n     * Trigger all the ready listeners for this `Component`.\n     *\n     * @fires Component#ready\n     */\n    triggerReady() {\n      this.isReady_ = true;\n\n      // Ensure ready is triggered asynchronously\n      this.setTimeout(function () {\n        const readyQueue = this.readyQueue_;\n\n        // Reset Ready Queue\n        this.readyQueue_ = [];\n        if (readyQueue && readyQueue.length > 0) {\n          readyQueue.forEach(function (fn) {\n            fn.call(this);\n          }, this);\n        }\n\n        // Allow for using event listeners also\n        /**\n         * Triggered when a `Component` is ready.\n         *\n         * @event Component#ready\n         * @type {EventTarget~Event}\n         */\n        this.trigger('ready');\n      }, 1);\n    }\n\n    /**\n     * Find a single DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelector`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {Element|null}\n     *         the dom element that was found, or null\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    $(selector, context) {\n      return $(selector, context || this.contentEl());\n    }\n\n    /**\n     * Finds all DOM element matching a `selector`. This can be within the `Component`s\n     * `contentEl()` or another custom context.\n     *\n     * @param {string} selector\n     *        A valid CSS selector, which will be passed to `querySelectorAll`.\n     *\n     * @param {Element|string} [context=this.contentEl()]\n     *        A DOM element within which to query. Can also be a selector string in\n     *        which case the first matching element will get used as context. If\n     *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n     *        nothing it falls back to `document`.\n     *\n     * @return {NodeList}\n     *         a list of dom elements that were found\n     *\n     * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n     */\n    $$(selector, context) {\n      return $$(selector, context || this.contentEl());\n    }\n\n    /**\n     * Check if a component's element has a CSS class name.\n     *\n     * @param {string} classToCheck\n     *        CSS class name to check.\n     *\n     * @return {boolean}\n     *         - True if the `Component` has the class.\n     *         - False if the `Component` does not have the class`\n     */\n    hasClass(classToCheck) {\n      return hasClass(this.el_, classToCheck);\n    }\n\n    /**\n     * Add a CSS class name to the `Component`s element.\n     *\n     * @param {...string} classesToAdd\n     *        One or more CSS class name to add.\n     */\n    addClass(...classesToAdd) {\n      addClass(this.el_, ...classesToAdd);\n    }\n\n    /**\n     * Remove a CSS class name from the `Component`s element.\n     *\n     * @param {...string} classesToRemove\n     *        One or more CSS class name to remove.\n     */\n    removeClass(...classesToRemove) {\n      removeClass(this.el_, ...classesToRemove);\n    }\n\n    /**\n     * Add or remove a CSS class name from the component's element.\n     * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n     * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n     *\n     * @param  {string} classToToggle\n     *         The class to add or remove based on (@link Component#hasClass}\n     *\n     * @param  {boolean|Dom~predicate} [predicate]\n     *         An {@link Dom~predicate} function or a boolean\n     */\n    toggleClass(classToToggle, predicate) {\n      toggleClass(this.el_, classToToggle, predicate);\n    }\n\n    /**\n     * Show the `Component`s element if it is hidden by removing the\n     * 'vjs-hidden' class name from it.\n     */\n    show() {\n      this.removeClass('vjs-hidden');\n    }\n\n    /**\n     * Hide the `Component`s element if it is currently showing by adding the\n     * 'vjs-hidden` class name to it.\n     */\n    hide() {\n      this.addClass('vjs-hidden');\n    }\n\n    /**\n     * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n     * class name to it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    lockShowing() {\n      this.addClass('vjs-lock-showing');\n    }\n\n    /**\n     * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n     * class name from it. Used during fadeIn/fadeOut.\n     *\n     * @private\n     */\n    unlockShowing() {\n      this.removeClass('vjs-lock-showing');\n    }\n\n    /**\n     * Get the value of an attribute on the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to get the value from.\n     *\n     * @return {string|null}\n     *         - The value of the attribute that was asked for.\n     *         - Can be an empty string on some browsers if the attribute does not exist\n     *           or has no value\n     *         - Most browsers will return null if the attibute does not exist or has\n     *           no value.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n     */\n    getAttribute(attribute) {\n      return getAttribute(this.el_, attribute);\n    }\n\n    /**\n     * Set the value of an attribute on the `Component`'s element\n     *\n     * @param {string} attribute\n     *        Name of the attribute to set.\n     *\n     * @param {string} value\n     *        Value to set the attribute to.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n     */\n    setAttribute(attribute, value) {\n      setAttribute(this.el_, attribute, value);\n    }\n\n    /**\n     * Remove an attribute from the `Component`s element.\n     *\n     * @param {string} attribute\n     *        Name of the attribute to remove.\n     *\n     * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n     */\n    removeAttribute(attribute) {\n      removeAttribute(this.el_, attribute);\n    }\n\n    /**\n     * Get or set the width of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The width that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *           postpixed with '%' or 'px'.\n     */\n    width(num, skipListeners) {\n      return this.dimension('width', num, skipListeners);\n    }\n\n    /**\n     * Get or set the height of the component based upon the CSS styles.\n     * See {@link Component#dimension} for more detailed information.\n     *\n     * @param {number|string} [num]\n     *        The height that you want to set postfixed with '%', 'px' or nothing.\n     *\n     * @param {boolean} [skipListeners]\n     *        Skip the componentresize event trigger\n     *\n     * @return {number|string}\n     *         The width when getting, zero if there is no width. Can be a string\n     *         postpixed with '%' or 'px'.\n     */\n    height(num, skipListeners) {\n      return this.dimension('height', num, skipListeners);\n    }\n\n    /**\n     * Set both the width and height of the `Component` element at the same time.\n     *\n     * @param  {number|string} width\n     *         Width to set the `Component`s element to.\n     *\n     * @param  {number|string} height\n     *         Height to set the `Component`s element to.\n     */\n    dimensions(width, height) {\n      // Skip componentresize listeners on width for optimization\n      this.width(width, true);\n      this.height(height);\n    }\n\n    /**\n     * Get or set width or height of the `Component` element. This is the shared code\n     * for the {@link Component#width} and {@link Component#height}.\n     *\n     * Things to know:\n     * - If the width or height in an number this will return the number postfixed with 'px'.\n     * - If the width/height is a percent this will return the percent postfixed with '%'\n     * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n     *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n     *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n     *   for more information\n     * - If you want the computed style of the component, use {@link Component#currentWidth}\n     *   and {@link {Component#currentHeight}\n     *\n     * @fires Component#componentresize\n     *\n     * @param {string} widthOrHeight\n     8        'width' or 'height'\n     *\n     * @param  {number|string} [num]\n     8         New dimension\n     *\n     * @param  {boolean} [skipListeners]\n     *         Skip componentresize event trigger\n     *\n     * @return {number}\n     *         The dimension when getting or 0 if unset\n     */\n    dimension(widthOrHeight, num, skipListeners) {\n      if (num !== undefined) {\n        // Set to zero if null or literally NaN (NaN !== NaN)\n        if (num === null || num !== num) {\n          num = 0;\n        }\n\n        // Check if using css width/height (% or px) and adjust\n        if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n          this.el_.style[widthOrHeight] = num;\n        } else if (num === 'auto') {\n          this.el_.style[widthOrHeight] = '';\n        } else {\n          this.el_.style[widthOrHeight] = num + 'px';\n        }\n\n        // skipListeners allows us to avoid triggering the resize event when setting both width and height\n        if (!skipListeners) {\n          /**\n           * Triggered when a component is resized.\n           *\n           * @event Component#componentresize\n           * @type {EventTarget~Event}\n           */\n          this.trigger('componentresize');\n        }\n        return;\n      }\n\n      // Not setting a value, so getting it\n      // Make sure element exists\n      if (!this.el_) {\n        return 0;\n      }\n\n      // Get dimension value from style\n      const val = this.el_.style[widthOrHeight];\n      const pxIndex = val.indexOf('px');\n      if (pxIndex !== -1) {\n        // Return the pixel value with no 'px'\n        return parseInt(val.slice(0, pxIndex), 10);\n      }\n\n      // No px so using % or no style was set, so falling back to offsetWidth/height\n      // If component has display:none, offset will return 0\n      // TODO: handle display:none and no dimension style using px\n      return parseInt(this.el_['offset' + toTitleCase$1(widthOrHeight)], 10);\n    }\n\n    /**\n     * Get the computed width or the height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @param {string} widthOrHeight\n     *        A string containing 'width' or 'height'. Whichever one you want to get.\n     *\n     * @return {number}\n     *         The dimension that gets asked for or 0 if nothing was set\n     *         for that dimension.\n     */\n    currentDimension(widthOrHeight) {\n      let computedWidthOrHeight = 0;\n      if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n        throw new Error('currentDimension only accepts width or height value');\n      }\n      computedWidthOrHeight = computedStyle(this.el_, widthOrHeight);\n\n      // remove 'px' from variable and parse as integer\n      computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n      // if the computed value is still 0, it's possible that the browser is lying\n      // and we want to check the offset values.\n      // This code also runs wherever getComputedStyle doesn't exist.\n      if (computedWidthOrHeight === 0 || isNaN(computedWidthOrHeight)) {\n        const rule = `offset${toTitleCase$1(widthOrHeight)}`;\n        computedWidthOrHeight = this.el_[rule];\n      }\n      return computedWidthOrHeight;\n    }\n\n    /**\n     * An object that contains width and height values of the `Component`s\n     * computed style. Uses `window.getComputedStyle`.\n     *\n     * @typedef {Object} Component~DimensionObject\n     *\n     * @property {number} width\n     *           The width of the `Component`s computed style.\n     *\n     * @property {number} height\n     *           The height of the `Component`s computed style.\n     */\n\n    /**\n     * Get an object that contains computed width and height values of the\n     * component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {Component~DimensionObject}\n     *         The computed dimensions of the component's element.\n     */\n    currentDimensions() {\n      return {\n        width: this.currentDimension('width'),\n        height: this.currentDimension('height')\n      };\n    }\n\n    /**\n     * Get the computed width of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed width of the component's element.\n     */\n    currentWidth() {\n      return this.currentDimension('width');\n    }\n\n    /**\n     * Get the computed height of the component's element.\n     *\n     * Uses `window.getComputedStyle`.\n     *\n     * @return {number}\n     *         The computed height of the component's element.\n     */\n    currentHeight() {\n      return this.currentDimension('height');\n    }\n\n    /**\n     * Set the focus to this component\n     */\n    focus() {\n      this.el_.focus();\n    }\n\n    /**\n     * Remove the focus from this component\n     */\n    blur() {\n      this.el_.blur();\n    }\n\n    /**\n     * When this Component receives a `keydown` event which it does not process,\n     *  it passes the event to the Player for handling.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    handleKeyDown(event) {\n      if (this.player_) {\n        // We only stop propagation here because we want unhandled events to fall\n        // back to the browser. Exclude Tab for focus trapping.\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.stopPropagation();\n        }\n        this.player_.handleKeyDown(event);\n      }\n    }\n\n    /**\n     * Many components used to have a `handleKeyPress` method, which was poorly\n     * named because it listened to a `keydown` event. This method name now\n     * delegates to `handleKeyDown`. This means anyone calling `handleKeyPress`\n     * will not see their method calls stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    handleKeyPress(event) {\n      this.handleKeyDown(event);\n    }\n\n    /**\n     * Emit a 'tap' events when touch event support gets detected. This gets used to\n     * support toggling the controls through a tap on the video. They get enabled\n     * because every sub-component would have extra overhead otherwise.\n     *\n     * @private\n     * @fires Component#tap\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchleave\n     * @listens Component#touchcancel\n     * @listens Component#touchend\n      */\n    emitTapEvents() {\n      // Track the start time so we can determine how long the touch lasted\n      let touchStart = 0;\n      let firstTouch = null;\n\n      // Maximum movement allowed during a touch event to still be considered a tap\n      // Other popular libs use anywhere from 2 (hammer.js) to 15,\n      // so 10 seems like a nice, round number.\n      const tapMovementThreshold = 10;\n\n      // The maximum length a touch can be while still being considered a tap\n      const touchTimeThreshold = 200;\n      let couldBeTap;\n      this.on('touchstart', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length === 1) {\n          // Copy pageX/pageY from the object\n          firstTouch = {\n            pageX: event.touches[0].pageX,\n            pageY: event.touches[0].pageY\n          };\n          // Record start time so we can detect a tap vs. \"touch and hold\"\n          touchStart = window.performance.now();\n          // Reset couldBeTap tracking\n          couldBeTap = true;\n        }\n      });\n      this.on('touchmove', function (event) {\n        // If more than one finger, don't consider treating this as a click\n        if (event.touches.length > 1) {\n          couldBeTap = false;\n        } else if (firstTouch) {\n          // Some devices will throw touchmoves for all but the slightest of taps.\n          // So, if we moved only a small distance, this could still be a tap\n          const xdiff = event.touches[0].pageX - firstTouch.pageX;\n          const ydiff = event.touches[0].pageY - firstTouch.pageY;\n          const touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n          if (touchDistance > tapMovementThreshold) {\n            couldBeTap = false;\n          }\n        }\n      });\n      const noTap = function () {\n        couldBeTap = false;\n      };\n\n      // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n      this.on('touchleave', noTap);\n      this.on('touchcancel', noTap);\n\n      // When the touch ends, measure how long it took and trigger the appropriate\n      // event\n      this.on('touchend', function (event) {\n        firstTouch = null;\n        // Proceed only if the touchmove/leave/cancel event didn't happen\n        if (couldBeTap === true) {\n          // Measure how long the touch lasted\n          const touchTime = window.performance.now() - touchStart;\n\n          // Make sure the touch was less than the threshold to be considered a tap\n          if (touchTime < touchTimeThreshold) {\n            // Don't let browser turn this into a click\n            event.preventDefault();\n            /**\n             * Triggered when a `Component` is tapped.\n             *\n             * @event Component#tap\n             * @type {EventTarget~Event}\n             */\n            this.trigger('tap');\n            // It may be good to copy the touchend event object and change the\n            // type to tap, if the other event properties aren't exact after\n            // Events.fixEvent runs (e.g. event.target)\n          }\n        }\n      });\n    }\n\n    /**\n     * This function reports user activity whenever touch events happen. This can get\n     * turned off by any sub-components that wants touch events to act another way.\n     *\n     * Report user touch activity when touch events occur. User activity gets used to\n     * determine when controls should show/hide. It is simple when it comes to mouse\n     * events, because any mouse event should show the controls. So we capture mouse\n     * events that bubble up to the player and report activity when that happens.\n     * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n     * controls. So touch events can't help us at the player level either.\n     *\n     * User activity gets checked asynchronously. So what could happen is a tap event\n     * on the video turns the controls off. Then the `touchend` event bubbles up to\n     * the player. Which, if it reported user activity, would turn the controls right\n     * back on. We also don't want to completely block touch events from bubbling up.\n     * Furthermore a `touchmove` event and anything other than a tap, should not turn\n     * controls back on.\n     *\n     * @listens Component#touchstart\n     * @listens Component#touchmove\n     * @listens Component#touchend\n     * @listens Component#touchcancel\n     */\n    enableTouchActivity() {\n      // Don't continue if the root player doesn't support reporting user activity\n      if (!this.player() || !this.player().reportUserActivity) {\n        return;\n      }\n\n      // listener for reporting that the user is active\n      const report = bind_(this.player(), this.player().reportUserActivity);\n      let touchHolding;\n      this.on('touchstart', function () {\n        report();\n        // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n        this.clearInterval(touchHolding);\n        // report at the same interval as activityCheck\n        touchHolding = this.setInterval(report, 250);\n      });\n      const touchEnd = function (event) {\n        report();\n        // stop the interval that maintains activity if the touch is holding\n        this.clearInterval(touchHolding);\n      };\n      this.on('touchmove', report);\n      this.on('touchend', touchEnd);\n      this.on('touchcancel', touchEnd);\n    }\n\n    /**\n     * A callback that has no parameters and is bound into `Component`s context.\n     *\n     * @callback Component~GenericCallback\n     * @this Component\n     */\n\n    /**\n     * Creates a function that runs after an `x` millisecond timeout. This function is a\n     * wrapper around `window.setTimeout`. There are a few reasons to use this one\n     * instead though:\n     * 1. It gets cleared via  {@link Component#clearTimeout} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n     *\n     * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n     *         will cause its dispose listener not to get cleaned up! Please use\n     *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function that will be run after `timeout`.\n     *\n     * @param {number} timeout\n     *        Timeout in milliseconds to delay before executing the specified function.\n     *\n     * @return {number}\n     *         Returns a timeout ID that gets used to identify the timeout. It can also\n     *         get used in {@link Component#clearTimeout} to clear the timeout that\n     *         was set.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n     */\n    setTimeout(fn, timeout) {\n      // declare as variables so they are properly available in timeout function\n      // eslint-disable-next-line\n      var timeoutId;\n      fn = bind_(this, fn);\n      this.clearTimersOnDispose_();\n      timeoutId = window.setTimeout(() => {\n        if (this.setTimeoutIds_.has(timeoutId)) {\n          this.setTimeoutIds_.delete(timeoutId);\n        }\n        fn();\n      }, timeout);\n      this.setTimeoutIds_.add(timeoutId);\n      return timeoutId;\n    }\n\n    /**\n     * Clears a timeout that gets created via `window.setTimeout` or\n     * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n     * use this function instead of `window.clearTimout`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} timeoutId\n     *        The id of the timeout to clear. The return value of\n     *        {@link Component#setTimeout} or `window.setTimeout`.\n     *\n     * @return {number}\n     *         Returns the timeout id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n     */\n    clearTimeout(timeoutId) {\n      if (this.setTimeoutIds_.has(timeoutId)) {\n        this.setTimeoutIds_.delete(timeoutId);\n        window.clearTimeout(timeoutId);\n      }\n      return timeoutId;\n    }\n\n    /**\n     * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n     * around `window.setInterval`. There are a few reasons to use this one instead though.\n     * 1. It gets cleared via  {@link Component#clearInterval} when\n     *    {@link Component#dispose} gets called.\n     * 2. The function callback will be a {@link Component~GenericCallback}\n     *\n     * @param {Component~GenericCallback} fn\n     *        The function to run every `x` seconds.\n     *\n     * @param {number} interval\n     *        Execute the specified function every `x` milliseconds.\n     *\n     * @return {number}\n     *         Returns an id that can be used to identify the interval. It can also be be used in\n     *         {@link Component#clearInterval} to clear the interval.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n     */\n    setInterval(fn, interval) {\n      fn = bind_(this, fn);\n      this.clearTimersOnDispose_();\n      const intervalId = window.setInterval(fn, interval);\n      this.setIntervalIds_.add(intervalId);\n      return intervalId;\n    }\n\n    /**\n     * Clears an interval that gets created via `window.setInterval` or\n     * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n     * use this function instead of `window.clearInterval`. If you don't your dispose\n     * listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} intervalId\n     *        The id of the interval to clear. The return value of\n     *        {@link Component#setInterval} or `window.setInterval`.\n     *\n     * @return {number}\n     *         Returns the interval id that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n     */\n    clearInterval(intervalId) {\n      if (this.setIntervalIds_.has(intervalId)) {\n        this.setIntervalIds_.delete(intervalId);\n        window.clearInterval(intervalId);\n      }\n      return intervalId;\n    }\n\n    /**\n     * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n     * with a few extra bonuses:\n     *\n     * - Supports browsers that do not support rAF by falling back to\n     *   {@link Component#setTimeout}.\n     *\n     * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n     *   bound to the component).\n     *\n     * - Automatic cancellation of the rAF callback is handled if the component\n     *   is disposed before it is called.\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     *\n     * @return {number}\n     *         Returns an rAF ID that gets used to identify the timeout. It can\n     *         also be used in {@link Component#cancelAnimationFrame} to cancel\n     *         the animation frame callback.\n     *\n     * @listens Component#dispose\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n     */\n    requestAnimationFrame(fn) {\n      this.clearTimersOnDispose_();\n\n      // declare as variables so they are properly available in rAF function\n      // eslint-disable-next-line\n      var id;\n      fn = bind_(this, fn);\n      id = window.requestAnimationFrame(() => {\n        if (this.rafIds_.has(id)) {\n          this.rafIds_.delete(id);\n        }\n        fn();\n      });\n      this.rafIds_.add(id);\n      return id;\n    }\n\n    /**\n     * Request an animation frame, but only one named animation\n     * frame will be queued. Another will never be added until\n     * the previous one finishes.\n     *\n     * @param {string} name\n     *        The name to give this requestAnimationFrame\n     *\n     * @param  {Component~GenericCallback} fn\n     *         A function that will be bound to this component and executed just\n     *         before the browser's next repaint.\n     */\n    requestNamedAnimationFrame(name, fn) {\n      if (this.namedRafs_.has(name)) {\n        return;\n      }\n      this.clearTimersOnDispose_();\n      fn = bind_(this, fn);\n      const id = this.requestAnimationFrame(() => {\n        fn();\n        if (this.namedRafs_.has(name)) {\n          this.namedRafs_.delete(name);\n        }\n      });\n      this.namedRafs_.set(name, id);\n      return name;\n    }\n\n    /**\n     * Cancels a current named animation frame if it exists.\n     *\n     * @param {string} name\n     *        The name of the requestAnimationFrame to cancel.\n     */\n    cancelNamedAnimationFrame(name) {\n      if (!this.namedRafs_.has(name)) {\n        return;\n      }\n      this.cancelAnimationFrame(this.namedRafs_.get(name));\n      this.namedRafs_.delete(name);\n    }\n\n    /**\n     * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n     * (rAF).\n     *\n     * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n     * use this function instead of `window.cancelAnimationFrame`. If you don't,\n     * your dispose listener will not get cleaned up until {@link Component#dispose}!\n     *\n     * @param {number} id\n     *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n     *\n     * @return {number}\n     *         Returns the rAF ID that was cleared.\n     *\n     * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n     */\n    cancelAnimationFrame(id) {\n      if (this.rafIds_.has(id)) {\n        this.rafIds_.delete(id);\n        window.cancelAnimationFrame(id);\n      }\n      return id;\n    }\n\n    /**\n     * A function to setup `requestAnimationFrame`, `setTimeout`,\n     * and `setInterval`, clearing on dispose.\n     *\n     * > Previously each timer added and removed dispose listeners on it's own.\n     * For better performance it was decided to batch them all, and use `Set`s\n     * to track outstanding timer ids.\n     *\n     * @private\n     */\n    clearTimersOnDispose_() {\n      if (this.clearingTimersOnDispose_) {\n        return;\n      }\n      this.clearingTimersOnDispose_ = true;\n      this.one('dispose', () => {\n        [['namedRafs_', 'cancelNamedAnimationFrame'], ['rafIds_', 'cancelAnimationFrame'], ['setTimeoutIds_', 'clearTimeout'], ['setIntervalIds_', 'clearInterval']].forEach(([idName, cancelName]) => {\n          // for a `Set` key will actually be the value again\n          // so forEach((val, val) =>` but for maps we want to use\n          // the key.\n          this[idName].forEach((val, key) => this[cancelName](key));\n        });\n        this.clearingTimersOnDispose_ = false;\n      });\n    }\n\n    /**\n     * Register a `Component` with `videojs` given the name and the component.\n     *\n     * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n     *         should be registered using {@link Tech.registerTech} or\n     *         {@link videojs:videojs.registerTech}.\n     *\n     * > NOTE: This function can also be seen on videojs as\n     *         {@link videojs:videojs.registerComponent}.\n     *\n     * @param {string} name\n     *        The name of the `Component` to register.\n     *\n     * @param {Component} ComponentToRegister\n     *        The `Component` class to register.\n     *\n     * @return {Component}\n     *         The `Component` that was registered.\n     */\n    static registerComponent(name, ComponentToRegister) {\n      if (typeof name !== 'string' || !name) {\n        throw new Error(`Illegal component name, \"${name}\"; must be a non-empty string.`);\n      }\n      const Tech = Component$1.getComponent('Tech');\n\n      // We need to make sure this check is only done if Tech has been registered.\n      const isTech = Tech && Tech.isTech(ComponentToRegister);\n      const isComp = Component$1 === ComponentToRegister || Component$1.prototype.isPrototypeOf(ComponentToRegister.prototype);\n      if (isTech || !isComp) {\n        let reason;\n        if (isTech) {\n          reason = 'techs must be registered using Tech.registerTech()';\n        } else {\n          reason = 'must be a Component subclass';\n        }\n        throw new Error(`Illegal component, \"${name}\"; ${reason}.`);\n      }\n      name = toTitleCase$1(name);\n      if (!Component$1.components_) {\n        Component$1.components_ = {};\n      }\n      const Player = Component$1.getComponent('Player');\n      if (name === 'Player' && Player && Player.players) {\n        const players = Player.players;\n        const playerNames = Object.keys(players);\n\n        // If we have players that were disposed, then their name will still be\n        // in Players.players. So, we must loop through and verify that the value\n        // for each item is not null. This allows registration of the Player component\n        // after all players have been disposed or before any were created.\n        if (players && playerNames.length > 0 && playerNames.map(pname => players[pname]).every(Boolean)) {\n          throw new Error('Can not register Player component after player has been created.');\n        }\n      }\n      Component$1.components_[name] = ComponentToRegister;\n      Component$1.components_[toLowerCase(name)] = ComponentToRegister;\n      return ComponentToRegister;\n    }\n\n    /**\n     * Get a `Component` based on the name it was registered with.\n     *\n     * @param {string} name\n     *        The Name of the component to get.\n     *\n     * @return {Component}\n     *         The `Component` that got registered under the given name.\n     */\n    static getComponent(name) {\n      if (!name || !Component$1.components_) {\n        return;\n      }\n      return Component$1.components_[name];\n    }\n  }\n  Component$1.registerComponent('Component', Component$1);\n\n  /**\n   * @file time.js\n   * @module time\n   */\n\n  /**\n   * Returns the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @typedef    {Function} TimeRangeIndex\n   *\n   * @param      {number} [index=0]\n   *             The range number to return the time for.\n   *\n   * @return     {number}\n   *             The time offset at the specified index.\n   *\n   * @deprecated The index argument must be provided.\n   *             In the future, leaving it out will throw an error.\n   */\n\n  /**\n   * An object that contains ranges of time.\n   *\n   * @typedef  {Object} TimeRange\n   *\n   * @property {number} length\n   *           The number of time ranges represented by this object.\n   *\n   * @property {module:time~TimeRangeIndex} start\n   *           Returns the time offset at which a specified time range begins.\n   *\n   * @property {module:time~TimeRangeIndex} end\n   *           Returns the time offset at which a specified time range ends.\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n   */\n\n  /**\n   * Check if any of the time ranges are over the maximum index.\n   *\n   * @private\n   * @param   {string} fnName\n   *          The function name to use for logging\n   *\n   * @param   {number} index\n   *          The index to check\n   *\n   * @param   {number} maxIndex\n   *          The maximum possible index\n   *\n   * @throws  {Error} if the timeRanges provided are over the maxIndex\n   */\n  function rangeCheck(fnName, index, maxIndex) {\n    if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n      throw new Error(`Failed to execute '${fnName}' on 'TimeRanges': The index provided (${index}) is non-numeric or out of bounds (0-${maxIndex}).`);\n    }\n  }\n\n  /**\n   * Get the time for the specified index at the start or end\n   * of a TimeRange object.\n   *\n   * @private\n   * @param      {string} fnName\n   *             The function name to use for logging\n   *\n   * @param      {string} valueIndex\n   *             The property that should be used to get the time. should be\n   *             'start' or 'end'\n   *\n   * @param      {Array} ranges\n   *             An array of time ranges\n   *\n   * @param      {Array} [rangeIndex=0]\n   *             The index to start the search at\n   *\n   * @return     {number}\n   *             The time that offset at the specified index.\n   *\n   * @deprecated rangeIndex must be set to a value, in the future this will throw an error.\n   * @throws     {Error} if rangeIndex is more than the length of ranges\n   */\n  function getRange(fnName, valueIndex, ranges, rangeIndex) {\n    rangeCheck(fnName, rangeIndex, ranges.length - 1);\n    return ranges[rangeIndex][valueIndex];\n  }\n\n  /**\n   * Create a time range object given ranges of time.\n   *\n   * @private\n   * @param   {Array} [ranges]\n   *          An array of time ranges.\n   */\n  function createTimeRangesObj(ranges) {\n    let timeRangesObj;\n    if (ranges === undefined || ranges.length === 0) {\n      timeRangesObj = {\n        length: 0,\n        start() {\n          throw new Error('This TimeRanges object is empty');\n        },\n        end() {\n          throw new Error('This TimeRanges object is empty');\n        }\n      };\n    } else {\n      timeRangesObj = {\n        length: ranges.length,\n        start: getRange.bind(null, 'start', 0, ranges),\n        end: getRange.bind(null, 'end', 1, ranges)\n      };\n    }\n    if (window.Symbol && window.Symbol.iterator) {\n      timeRangesObj[window.Symbol.iterator] = () => (ranges || []).values();\n    }\n    return timeRangesObj;\n  }\n\n  /**\n   * Create a `TimeRange` object which mimics an\n   * {@link https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges|HTML5 TimeRanges instance}.\n   *\n   * @param {number|Array[]} start\n   *        The start of a single range (a number) or an array of ranges (an\n   *        array of arrays of two numbers each).\n   *\n   * @param {number} end\n   *        The end of a single range. Cannot be used with the array form of\n   *        the `start` argument.\n   */\n  function createTimeRanges$1(start, end) {\n    if (Array.isArray(start)) {\n      return createTimeRangesObj(start);\n    } else if (start === undefined || end === undefined) {\n      return createTimeRangesObj();\n    }\n    return createTimeRangesObj([[start, end]]);\n  }\n\n  /**\n   * Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in\n   * seconds) will force a number of leading zeros to cover the length of the\n   * guide.\n   *\n   * @private\n   * @param  {number} seconds\n   *         Number of seconds to be turned into a string\n   *\n   * @param  {number} guide\n   *         Number (in seconds) to model the string after\n   *\n   * @return {string}\n   *         Time formatted as H:MM:SS or M:SS\n   */\n  const defaultImplementation = function (seconds, guide) {\n    seconds = seconds < 0 ? 0 : seconds;\n    let s = Math.floor(seconds % 60);\n    let m = Math.floor(seconds / 60 % 60);\n    let h = Math.floor(seconds / 3600);\n    const gm = Math.floor(guide / 60 % 60);\n    const gh = Math.floor(guide / 3600);\n\n    // handle invalid times\n    if (isNaN(seconds) || seconds === Infinity) {\n      // '-' is false for all relational operators (e.g. <, >=) so this setting\n      // will add the minimum number of fields specified by the guide\n      h = m = s = '-';\n    }\n\n    // Check if we need to show hours\n    h = h > 0 || gh > 0 ? h + ':' : '';\n\n    // If hours are showing, we may need to add a leading zero.\n    // Always show at least one digit of minutes.\n    m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n    // Check if leading zero is need for seconds\n    s = s < 10 ? '0' + s : s;\n    return h + m + s;\n  };\n\n  // Internal pointer to the current implementation.\n  let implementation = defaultImplementation;\n\n  /**\n   * Replaces the default formatTime implementation with a custom implementation.\n   *\n   * @param {Function} customImplementation\n   *        A function which will be used in place of the default formatTime\n   *        implementation. Will receive the current time in seconds and the\n   *        guide (in seconds) as arguments.\n   */\n  function setFormatTime(customImplementation) {\n    implementation = customImplementation;\n  }\n\n  /**\n   * Resets formatTime to the default implementation.\n   */\n  function resetFormatTime() {\n    implementation = defaultImplementation;\n  }\n\n  /**\n   * Delegates to either the default time formatting function or a custom\n   * function supplied via `setFormatTime`.\n   *\n   * Formats seconds as a time string (H:MM:SS or M:SS). Supplying a\n   * guide (in seconds) will force a number of leading zeros to cover the\n   * length of the guide.\n   *\n   * @example  formatTime(125, 600) === \"02:05\"\n   * @param    {number} seconds\n   *           Number of seconds to be turned into a string\n   *\n   * @param    {number} guide\n   *           Number (in seconds) to model the string after\n   *\n   * @return   {string}\n   *           Time formatted as H:MM:SS or M:SS\n   */\n  function formatTime(seconds, guide = seconds) {\n    return implementation(seconds, guide);\n  }\n\n  var Time = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTimeRanges: createTimeRanges$1,\n    createTimeRange: createTimeRanges$1,\n    setFormatTime: setFormatTime,\n    resetFormatTime: resetFormatTime,\n    formatTime: formatTime\n  });\n\n  /**\n   * @file buffer.js\n   * @module buffer\n   */\n\n  /**\n   * Compute the percentage of the media that has been buffered.\n   *\n   * @param {TimeRange} buffered\n   *        The current `TimeRange` object representing buffered time ranges\n   *\n   * @param {number} duration\n   *        Total duration of the media\n   *\n   * @return {number}\n   *         Percent buffered of the total duration in decimal form.\n   */\n  function bufferedPercent(buffered, duration) {\n    let bufferedDuration = 0;\n    let start;\n    let end;\n    if (!duration) {\n      return 0;\n    }\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges$1(0, 0);\n    }\n    for (let i = 0; i < buffered.length; i++) {\n      start = buffered.start(i);\n      end = buffered.end(i);\n\n      // buffered end can be bigger than duration by a very small fraction\n      if (end > duration) {\n        end = duration;\n      }\n      bufferedDuration += end - start;\n    }\n    return bufferedDuration / duration;\n  }\n\n  /**\n   * @file media-error.js\n   */\n\n  /**\n   * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n   *\n   * @param {number|string|Object|MediaError} value\n   *        This can be of multiple types:\n   *        - number: should be a standard error code\n   *        - string: an error message (the code will be 0)\n   *        - Object: arbitrary properties\n   *        - `MediaError` (native): used to populate a video.js `MediaError` object\n   *        - `MediaError` (video.js): will return itself if it's already a\n   *          video.js `MediaError` object.\n   *\n   * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n   * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n   *\n   * @class MediaError\n   */\n  function MediaError(value) {\n    // Allow redundant calls to this constructor to avoid having `instanceof`\n    // checks peppered around the code.\n    if (value instanceof MediaError) {\n      return value;\n    }\n    if (typeof value === 'number') {\n      this.code = value;\n    } else if (typeof value === 'string') {\n      // default code is zero, so this is a custom error\n      this.message = value;\n    } else if (isObject$1(value)) {\n      // We assign the `code` property manually because native `MediaError` objects\n      // do not expose it as an own/enumerable property of the object.\n      if (typeof value.code === 'number') {\n        this.code = value.code;\n      }\n      Object.assign(this, value);\n    }\n    if (!this.message) {\n      this.message = MediaError.defaultMessages[this.code] || '';\n    }\n  }\n\n  /**\n   * The error code that refers two one of the defined `MediaError` types\n   *\n   * @type {Number}\n   */\n  MediaError.prototype.code = 0;\n\n  /**\n   * An optional message that to show with the error. Message is not part of the HTML5\n   * video spec but allows for more informative custom errors.\n   *\n   * @type {String}\n   */\n  MediaError.prototype.message = '';\n\n  /**\n   * An optional status code that can be set by plugins to allow even more detail about\n   * the error. For example a plugin might provide a specific HTTP status code and an\n   * error message for that code. Then when the plugin gets that error this class will\n   * know how to display an error message for it. This allows a custom message to show\n   * up on the `Player` error overlay.\n   *\n   * @type {Array}\n   */\n  MediaError.prototype.status = null;\n\n  /**\n   * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n   * specification listed under {@link MediaError} for more information.\n   *\n   * @enum {array}\n   * @readonly\n   * @property {string} 0 - MEDIA_ERR_CUSTOM\n   * @property {string} 1 - MEDIA_ERR_ABORTED\n   * @property {string} 2 - MEDIA_ERR_NETWORK\n   * @property {string} 3 - MEDIA_ERR_DECODE\n   * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n   * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n   */\n  MediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n  /**\n   * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n   *\n   * @type {Array}\n   * @constant\n   */\n  MediaError.defaultMessages = {\n    1: 'You aborted the media playback',\n    2: 'A network error caused the media download to fail part-way.',\n    3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n    4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n    5: 'The media is encrypted and we do not have the keys to decrypt it.'\n  };\n\n  // Add types as properties on MediaError\n  // e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\n  for (let errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n    MediaError[MediaError.errorTypes[errNum]] = errNum;\n    // values should be accessible on both the class and instance\n    MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n  }\n\n  var tuple = SafeParseTuple;\n  function SafeParseTuple(obj, reviver) {\n    var json;\n    var error = null;\n    try {\n      json = JSON.parse(obj, reviver);\n    } catch (err) {\n      error = err;\n    }\n    return [error, json];\n  }\n\n  /**\n   * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n   *\n   * @param  {Object}  value\n   *         An object that may or may not be `Promise`-like.\n   *\n   * @return {boolean}\n   *         Whether or not the object is `Promise`-like.\n   */\n  function isPromise(value) {\n    return value !== undefined && value !== null && typeof value.then === 'function';\n  }\n\n  /**\n   * Silence a Promise-like object.\n   *\n   * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n   * play promise\" rejection error messages.\n   *\n   * @param  {Object} value\n   *         An object that may or may not be `Promise`-like.\n   */\n  function silencePromise(value) {\n    if (isPromise(value)) {\n      value.then(null, e => {});\n    }\n  }\n\n  /**\n   * @file text-track-list-converter.js Utilities for capturing text track state and\n   * re-creating tracks based on a capture.\n   *\n   * @module text-track-list-converter\n   */\n\n  /**\n   * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n   * represents the {@link TextTrack}'s state.\n   *\n   * @param {TextTrack} track\n   *        The text track to query.\n   *\n   * @return {Object}\n   *         A serializable javascript representation of the TextTrack.\n   * @private\n   */\n  const trackToJson_ = function (track) {\n    const ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce((acc, prop, i) => {\n      if (track[prop]) {\n        acc[prop] = track[prop];\n      }\n      return acc;\n    }, {\n      cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n        return {\n          startTime: cue.startTime,\n          endTime: cue.endTime,\n          text: cue.text,\n          id: cue.id\n        };\n      })\n    });\n    return ret;\n  };\n\n  /**\n   * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n   * state of all {@link TextTrack}s currently configured. The return array is compatible with\n   * {@link text-track-list-converter:jsonToTextTracks}.\n   *\n   * @param {Tech} tech\n   *        The tech object to query\n   *\n   * @return {Array}\n   *         A serializable javascript representation of the {@link Tech}s\n   *         {@link TextTrackList}.\n   */\n  const textTracksToJson = function (tech) {\n    const trackEls = tech.$$('track');\n    const trackObjs = Array.prototype.map.call(trackEls, t => t.track);\n    const tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n      const json = trackToJson_(trackEl.track);\n      if (trackEl.src) {\n        json.src = trackEl.src;\n      }\n      return json;\n    });\n    return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n      return trackObjs.indexOf(track) === -1;\n    }).map(trackToJson_));\n  };\n\n  /**\n   * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n   * object {@link TextTrack} representations.\n   *\n   * @param {Array} json\n   *        An array of `TextTrack` representation objects, like those that would be\n   *        produced by `textTracksToJson`.\n   *\n   * @param {Tech} tech\n   *        The `Tech` to create the `TextTrack`s on.\n   */\n  const jsonToTextTracks = function (json, tech) {\n    json.forEach(function (track) {\n      const addedTrack = tech.addRemoteTextTrack(track).track;\n      if (!track.src && track.cues) {\n        track.cues.forEach(cue => addedTrack.addCue(cue));\n      }\n    });\n    return tech.textTracks();\n  };\n  var textTrackConverter = {\n    textTracksToJson,\n    jsonToTextTracks,\n    trackToJson_\n  };\n\n  /**\n   * @file modal-dialog.js\n   */\n  const MODAL_CLASS_NAME = 'vjs-modal-dialog';\n\n  /**\n   * The `ModalDialog` displays over the video and its controls, which blocks\n   * interaction with the player until it is closed.\n   *\n   * Modal dialogs include a \"Close\" button and will close when that button\n   * is activated - or when ESC is pressed anywhere.\n   *\n   * @extends Component\n   */\n  class ModalDialog extends Component$1 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Mixed} [options.content=undefined]\n     *        Provide customized content for this modal.\n     *\n     * @param {string} [options.description]\n     *        A text description for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.fillAlways=false]\n     *        Normally, modals are automatically filled only the first time\n     *        they open. This tells the modal to refresh its content\n     *        every time it opens.\n     *\n     * @param {string} [options.label]\n     *        A text label for the modal, primarily for accessibility.\n     *\n     * @param {boolean} [options.pauseOnOpen=true]\n     *        If `true`, playback will will be paused if playing when\n     *        the modal opens, and resumed when it closes.\n     *\n     * @param {boolean} [options.temporary=true]\n     *        If `true`, the modal can only be opened once; it will be\n     *        disposed as soon as it's closed.\n     *\n     * @param {boolean} [options.uncloseable=false]\n     *        If `true`, the user will not be able to close the modal\n     *        through the UI in the normal ways. Programmatic closing is\n     *        still possible.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.handleKeyDown_ = e => this.handleKeyDown(e);\n      this.close_ = e => this.close(e);\n      this.opened_ = this.hasBeenOpened_ = this.hasBeenFilled_ = false;\n      this.closeable(!this.options_.uncloseable);\n      this.content(this.options_.content);\n\n      // Make sure the contentEl is defined AFTER any children are initialized\n      // because we only want the contents of the modal in the contentEl\n      // (not the UI elements like the close button).\n      this.contentEl_ = createEl('div', {\n        className: `${MODAL_CLASS_NAME}-content`\n      }, {\n        role: 'document'\n      });\n      this.descEl_ = createEl('p', {\n        className: `${MODAL_CLASS_NAME}-description vjs-control-text`,\n        id: this.el().getAttribute('aria-describedby')\n      });\n      textContent(this.descEl_, this.description());\n      this.el_.appendChild(this.descEl_);\n      this.el_.appendChild(this.contentEl_);\n    }\n\n    /**\n     * Create the `ModalDialog`'s DOM element\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: this.buildCSSClass(),\n        tabIndex: -1\n      }, {\n        'aria-describedby': `${this.id()}_description`,\n        'aria-hidden': 'true',\n        'aria-label': this.label(),\n        'role': 'dialog'\n      });\n    }\n    dispose() {\n      this.contentEl_ = null;\n      this.descEl_ = null;\n      this.previouslyActiveEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `${MODAL_CLASS_NAME} vjs-hidden ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Returns the label string for this modal. Primarily used for accessibility.\n     *\n     * @return {string}\n     *         the localized or raw label of this modal.\n     */\n    label() {\n      return this.localize(this.options_.label || 'Modal Window');\n    }\n\n    /**\n     * Returns the description string for this modal. Primarily used for\n     * accessibility.\n     *\n     * @return {string}\n     *         The localized or raw description of this modal.\n     */\n    description() {\n      let desc = this.options_.description || this.localize('This is a modal window.');\n\n      // Append a universal closeability message if the modal is closeable.\n      if (this.closeable()) {\n        desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n      }\n      return desc;\n    }\n\n    /**\n     * Opens the modal.\n     *\n     * @fires ModalDialog#beforemodalopen\n     * @fires ModalDialog#modalopen\n     */\n    open() {\n      if (!this.opened_) {\n        const player = this.player();\n\n        /**\n          * Fired just before a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#beforemodalopen\n          * @type {EventTarget~Event}\n          */\n        this.trigger('beforemodalopen');\n        this.opened_ = true;\n\n        // Fill content if the modal has never opened before and\n        // never been filled.\n        if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n          this.fill();\n        }\n\n        // If the player was playing, pause it and take note of its previously\n        // playing state.\n        this.wasPlaying_ = !player.paused();\n        if (this.options_.pauseOnOpen && this.wasPlaying_) {\n          player.pause();\n        }\n        this.on('keydown', this.handleKeyDown_);\n\n        // Hide controls and note if they were enabled.\n        this.hadControls_ = player.controls();\n        player.controls(false);\n        this.show();\n        this.conditionalFocus_();\n        this.el().setAttribute('aria-hidden', 'false');\n\n        /**\n          * Fired just after a `ModalDialog` is opened.\n          *\n          * @event ModalDialog#modalopen\n          * @type {EventTarget~Event}\n          */\n        this.trigger('modalopen');\n        this.hasBeenOpened_ = true;\n      }\n    }\n\n    /**\n     * If the `ModalDialog` is currently open or closed.\n     *\n     * @param  {boolean} [value]\n     *         If given, it will open (`true`) or close (`false`) the modal.\n     *\n     * @return {boolean}\n     *         the current open state of the modaldialog\n     */\n    opened(value) {\n      if (typeof value === 'boolean') {\n        this[value ? 'open' : 'close']();\n      }\n      return this.opened_;\n    }\n\n    /**\n     * Closes the modal, does nothing if the `ModalDialog` is\n     * not open.\n     *\n     * @fires ModalDialog#beforemodalclose\n     * @fires ModalDialog#modalclose\n     */\n    close() {\n      if (!this.opened_) {\n        return;\n      }\n      const player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#beforemodalclose\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalclose');\n      this.opened_ = false;\n      if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n        player.play();\n      }\n      this.off('keydown', this.handleKeyDown_);\n      if (this.hadControls_) {\n        player.controls(true);\n      }\n      this.hide();\n      this.el().setAttribute('aria-hidden', 'true');\n\n      /**\n        * Fired just after a `ModalDialog` is closed.\n        *\n        * @event ModalDialog#modalclose\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalclose');\n      this.conditionalBlur_();\n      if (this.options_.temporary) {\n        this.dispose();\n      }\n    }\n\n    /**\n     * Check to see if the `ModalDialog` is closeable via the UI.\n     *\n     * @param  {boolean} [value]\n     *         If given as a boolean, it will set the `closeable` option.\n     *\n     * @return {boolean}\n     *         Returns the final value of the closable option.\n     */\n    closeable(value) {\n      if (typeof value === 'boolean') {\n        const closeable = this.closeable_ = !!value;\n        let close = this.getChild('closeButton');\n\n        // If this is being made closeable and has no close button, add one.\n        if (closeable && !close) {\n          // The close button should be a child of the modal - not its\n          // content element, so temporarily change the content element.\n          const temp = this.contentEl_;\n          this.contentEl_ = this.el_;\n          close = this.addChild('closeButton', {\n            controlText: 'Close Modal Dialog'\n          });\n          this.contentEl_ = temp;\n          this.on(close, 'close', this.close_);\n        }\n\n        // If this is being made uncloseable and has a close button, remove it.\n        if (!closeable && close) {\n          this.off(close, 'close', this.close_);\n          this.removeChild(close);\n          close.dispose();\n        }\n      }\n      return this.closeable_;\n    }\n\n    /**\n     * Fill the modal's content element with the modal's \"content\" option.\n     * The content element will be emptied before this change takes place.\n     */\n    fill() {\n      this.fillWith(this.content());\n    }\n\n    /**\n     * Fill the modal's content element with arbitrary content.\n     * The content element will be emptied before this change takes place.\n     *\n     * @fires ModalDialog#beforemodalfill\n     * @fires ModalDialog#modalfill\n     *\n     * @param {Mixed} [content]\n     *        The same rules apply to this as apply to the `content` option.\n     */\n    fillWith(content) {\n      const contentEl = this.contentEl();\n      const parentEl = contentEl.parentNode;\n      const nextSiblingEl = contentEl.nextSibling;\n\n      /**\n        * Fired just before a `ModalDialog` is filled with content.\n        *\n        * @event ModalDialog#beforemodalfill\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalfill');\n      this.hasBeenFilled_ = true;\n\n      // Detach the content element from the DOM before performing\n      // manipulation to avoid modifying the live DOM multiple times.\n      parentEl.removeChild(contentEl);\n      this.empty();\n      insertContent(contentEl, content);\n      /**\n       * Fired just after a `ModalDialog` is filled with content.\n       *\n       * @event ModalDialog#modalfill\n       * @type {EventTarget~Event}\n       */\n      this.trigger('modalfill');\n\n      // Re-inject the re-filled content element.\n      if (nextSiblingEl) {\n        parentEl.insertBefore(contentEl, nextSiblingEl);\n      } else {\n        parentEl.appendChild(contentEl);\n      }\n\n      // make sure that the close button is last in the dialog DOM\n      const closeButton = this.getChild('closeButton');\n      if (closeButton) {\n        parentEl.appendChild(closeButton.el_);\n      }\n    }\n\n    /**\n     * Empties the content element. This happens anytime the modal is filled.\n     *\n     * @fires ModalDialog#beforemodalempty\n     * @fires ModalDialog#modalempty\n     */\n    empty() {\n      /**\n      * Fired just before a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#beforemodalempty\n      * @type {EventTarget~Event}\n      */\n      this.trigger('beforemodalempty');\n      emptyEl(this.contentEl());\n\n      /**\n      * Fired just after a `ModalDialog` is emptied.\n      *\n      * @event ModalDialog#modalempty\n      * @type {EventTarget~Event}\n      */\n      this.trigger('modalempty');\n    }\n\n    /**\n     * Gets or sets the modal content, which gets normalized before being\n     * rendered into the DOM.\n     *\n     * This does not update the DOM or fill the modal, but it is called during\n     * that process.\n     *\n     * @param  {Mixed} [value]\n     *         If defined, sets the internal content value to be used on the\n     *         next call(s) to `fill`. This value is normalized before being\n     *         inserted. To \"clear\" the internal content value, pass `null`.\n     *\n     * @return {Mixed}\n     *         The current content of the modal dialog\n     */\n    content(value) {\n      if (typeof value !== 'undefined') {\n        this.content_ = value;\n      }\n      return this.content_;\n    }\n\n    /**\n     * conditionally focus the modal dialog if focus was previously on the player.\n     *\n     * @private\n     */\n    conditionalFocus_() {\n      const activeEl = document.activeElement;\n      const playerEl = this.player_.el_;\n      this.previouslyActiveEl_ = null;\n      if (playerEl.contains(activeEl) || playerEl === activeEl) {\n        this.previouslyActiveEl_ = activeEl;\n        this.focus();\n      }\n    }\n\n    /**\n     * conditionally blur the element and refocus the last focused element\n     *\n     * @private\n     */\n    conditionalBlur_() {\n      if (this.previouslyActiveEl_) {\n        this.previouslyActiveEl_.focus();\n        this.previouslyActiveEl_ = null;\n      }\n    }\n\n    /**\n     * Keydown handler. Attached when modal is focused.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Do not allow keydowns to reach out of the modal dialog.\n      event.stopPropagation();\n      if (keycode.isEventKey(event, 'Escape') && this.closeable()) {\n        event.preventDefault();\n        this.close();\n        return;\n      }\n\n      // exit early if it isn't a tab key\n      if (!keycode.isEventKey(event, 'Tab')) {\n        return;\n      }\n      const focusableEls = this.focusableEls_();\n      const activeEl = this.el_.querySelector(':focus');\n      let focusIndex;\n      for (let i = 0; i < focusableEls.length; i++) {\n        if (activeEl === focusableEls[i]) {\n          focusIndex = i;\n          break;\n        }\n      }\n      if (document.activeElement === this.el_) {\n        focusIndex = 0;\n      }\n      if (event.shiftKey && focusIndex === 0) {\n        focusableEls[focusableEls.length - 1].focus();\n        event.preventDefault();\n      } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n        focusableEls[0].focus();\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * get all focusable elements\n     *\n     * @private\n     */\n    focusableEls_() {\n      const allChildren = this.el_.querySelectorAll('*');\n      return Array.prototype.filter.call(allChildren, child => {\n        return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n      });\n    }\n  }\n\n  /**\n   * Default options for `ModalDialog` default options.\n   *\n   * @type {Object}\n   * @private\n   */\n  ModalDialog.prototype.options_ = {\n    pauseOnOpen: true,\n    temporary: true\n  };\n  Component$1.registerComponent('ModalDialog', ModalDialog);\n\n  /**\n   * @file track-list.js\n   */\n\n  /**\n   * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n   * {@link VideoTrackList}\n   *\n   * @extends EventTarget\n   */\n  class TrackList extends EventTarget$2 {\n    /**\n     * Create an instance of this class\n     *\n     * @param {Track[]} tracks\n     *        A list of tracks to initialize the list with.\n     *\n     * @abstract\n     */\n    constructor(tracks = []) {\n      super();\n      this.tracks_ = [];\n\n      /**\n       * @memberof TrackList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n      Object.defineProperty(this, 'length', {\n        get() {\n          return this.tracks_.length;\n        }\n      });\n      for (let i = 0; i < tracks.length; i++) {\n        this.addTrack(tracks[i]);\n      }\n    }\n\n    /**\n     * Add a {@link Track} to the `TrackList`\n     *\n     * @param {Track} track\n     *        The audio, video, or text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      const index = this.tracks_.length;\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get() {\n            return this.tracks_[index];\n          }\n        });\n      }\n\n      // Do not add duplicate tracks\n      if (this.tracks_.indexOf(track) === -1) {\n        this.tracks_.push(track);\n        /**\n         * Triggered when a track is added to a track list.\n         *\n         * @event TrackList#addtrack\n         * @type {EventTarget~Event}\n         * @property {Track} track\n         *           A reference to track that was added.\n         */\n        this.trigger({\n          track,\n          type: 'addtrack',\n          target: this\n        });\n      }\n\n      /**\n       * Triggered when a track label is changed.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      track.labelchange_ = () => {\n        this.trigger({\n          track,\n          type: 'labelchange',\n          target: this\n        });\n      };\n      if (isEvented(track)) {\n        track.addEventListener('labelchange', track.labelchange_);\n      }\n    }\n\n    /**\n     * Remove a {@link Track} from the `TrackList`\n     *\n     * @param {Track} rtrack\n     *        The audio, video, or text track to remove from the list.\n     *\n     * @fires TrackList#removetrack\n     */\n    removeTrack(rtrack) {\n      let track;\n      for (let i = 0, l = this.length; i < l; i++) {\n        if (this[i] === rtrack) {\n          track = this[i];\n          if (track.off) {\n            track.off();\n          }\n          this.tracks_.splice(i, 1);\n          break;\n        }\n      }\n      if (!track) {\n        return;\n      }\n\n      /**\n       * Triggered when a track is removed from track list.\n       *\n       * @event TrackList#removetrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was removed.\n       */\n      this.trigger({\n        track,\n        type: 'removetrack',\n        target: this\n      });\n    }\n\n    /**\n     * Get a Track from the TrackList by a tracks id\n     *\n     * @param {string} id - the id of the track to get\n     * @method getTrackById\n     * @return {Track}\n     * @private\n     */\n    getTrackById(id) {\n      let result = null;\n      for (let i = 0, l = this.length; i < l; i++) {\n        const track = this[i];\n        if (track.id === id) {\n          result = track;\n          break;\n        }\n      }\n      return result;\n    }\n  }\n\n  /**\n   * Triggered when a different track is selected/enabled.\n   *\n   * @event TrackList#change\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Events that can be called with on + eventName. See {@link EventHandler}.\n   *\n   * @property {Object} TrackList#allowedEvents_\n   * @private\n   */\n  TrackList.prototype.allowedEvents_ = {\n    change: 'change',\n    addtrack: 'addtrack',\n    removetrack: 'removetrack',\n    labelchange: 'labelchange'\n  };\n\n  // emulate attribute EventHandler support to allow for feature detection\n  for (const event in TrackList.prototype.allowedEvents_) {\n    TrackList.prototype['on' + event] = null;\n  }\n\n  /**\n   * @file audio-track-list.js\n   */\n\n  /**\n   * Anywhere we call this function we diverge from the spec\n   * as we only support one enabled audiotrack at a time\n   *\n   * @param {AudioTrackList} list\n   *        list to work on\n   *\n   * @param {AudioTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n  const disableOthers$1 = function (list, track) {\n    for (let i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      }\n      // another audio track is enabled, disable it\n      list[i].enabled = false;\n    }\n  };\n\n  /**\n   * The current list of {@link AudioTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n   * @extends TrackList\n   */\n  class AudioTrackList extends TrackList {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {AudioTrack[]} [tracks=[]]\n     *        A list of `AudioTrack` to instantiate the list with.\n     */\n    constructor(tracks = []) {\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (let i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].enabled) {\n          disableOthers$1(tracks, tracks[i]);\n          break;\n        }\n      }\n      super(tracks);\n      this.changing_ = false;\n    }\n\n    /**\n     * Add an {@link AudioTrack} to the `AudioTrackList`.\n     *\n     * @param {AudioTrack} track\n     *        The AudioTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      if (track.enabled) {\n        disableOthers$1(this, track);\n      }\n      super.addTrack(track);\n      // native tracks don't have this\n      if (!track.addEventListener) {\n        return;\n      }\n      track.enabledChange_ = () => {\n        // when we are disabling other tracks (since we don't support\n        // more than one track at a time) we will set changing_\n        // to true so that we don't trigger additional change events\n        if (this.changing_) {\n          return;\n        }\n        this.changing_ = true;\n        disableOthers$1(this, track);\n        this.changing_ = false;\n        this.trigger('change');\n      };\n\n      /**\n       * @listens AudioTrack#enabledchange\n       * @fires TrackList#change\n       */\n      track.addEventListener('enabledchange', track.enabledChange_);\n    }\n    removeTrack(rtrack) {\n      super.removeTrack(rtrack);\n      if (rtrack.removeEventListener && rtrack.enabledChange_) {\n        rtrack.removeEventListener('enabledchange', rtrack.enabledChange_);\n        rtrack.enabledChange_ = null;\n      }\n    }\n  }\n\n  /**\n   * @file video-track-list.js\n   */\n\n  /**\n   * Un-select all other {@link VideoTrack}s that are selected.\n   *\n   * @param {VideoTrackList} list\n   *        list to work on\n   *\n   * @param {VideoTrack} track\n   *        The track to skip\n   *\n   * @private\n   */\n  const disableOthers = function (list, track) {\n    for (let i = 0; i < list.length; i++) {\n      if (!Object.keys(list[i]).length || track.id === list[i].id) {\n        continue;\n      }\n      // another video track is enabled, disable it\n      list[i].selected = false;\n    }\n  };\n\n  /**\n   * The current list of {@link VideoTrack} for a video.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n   * @extends TrackList\n   */\n  class VideoTrackList extends TrackList {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {VideoTrack[]} [tracks=[]]\n     *        A list of `VideoTrack` to instantiate the list with.\n     */\n    constructor(tracks = []) {\n      // make sure only 1 track is enabled\n      // sorted from last index to first index\n      for (let i = tracks.length - 1; i >= 0; i--) {\n        if (tracks[i].selected) {\n          disableOthers(tracks, tracks[i]);\n          break;\n        }\n      }\n      super(tracks);\n      this.changing_ = false;\n\n      /**\n       * @member {number} VideoTrackList#selectedIndex\n       *         The current index of the selected {@link VideoTrack`}.\n       */\n      Object.defineProperty(this, 'selectedIndex', {\n        get() {\n          for (let i = 0; i < this.length; i++) {\n            if (this[i].selected) {\n              return i;\n            }\n          }\n          return -1;\n        },\n        set() {}\n      });\n    }\n\n    /**\n     * Add a {@link VideoTrack} to the `VideoTrackList`.\n     *\n     * @param {VideoTrack} track\n     *        The VideoTrack to add to the list\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      if (track.selected) {\n        disableOthers(this, track);\n      }\n      super.addTrack(track);\n      // native tracks don't have this\n      if (!track.addEventListener) {\n        return;\n      }\n      track.selectedChange_ = () => {\n        if (this.changing_) {\n          return;\n        }\n        this.changing_ = true;\n        disableOthers(this, track);\n        this.changing_ = false;\n        this.trigger('change');\n      };\n\n      /**\n       * @listens VideoTrack#selectedchange\n       * @fires TrackList#change\n       */\n      track.addEventListener('selectedchange', track.selectedChange_);\n    }\n    removeTrack(rtrack) {\n      super.removeTrack(rtrack);\n      if (rtrack.removeEventListener && rtrack.selectedChange_) {\n        rtrack.removeEventListener('selectedchange', rtrack.selectedChange_);\n        rtrack.selectedChange_ = null;\n      }\n    }\n  }\n\n  /**\n   * @file text-track-list.js\n   */\n\n  /**\n   * The current list of {@link TextTrack} for a media file.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n   * @extends TrackList\n   */\n  class TextTrackList extends TrackList {\n    /**\n     * Add a {@link TextTrack} to the `TextTrackList`\n     *\n     * @param {TextTrack} track\n     *        The text track to add to the list.\n     *\n     * @fires TrackList#addtrack\n     */\n    addTrack(track) {\n      super.addTrack(track);\n      if (!this.queueChange_) {\n        this.queueChange_ = () => this.queueTrigger('change');\n      }\n      if (!this.triggerSelectedlanguagechange) {\n        this.triggerSelectedlanguagechange_ = () => this.trigger('selectedlanguagechange');\n      }\n\n      /**\n       * @listens TextTrack#modechange\n       * @fires TrackList#change\n       */\n      track.addEventListener('modechange', this.queueChange_);\n      const nonLanguageTextTrackKind = ['metadata', 'chapters'];\n      if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n        track.addEventListener('modechange', this.triggerSelectedlanguagechange_);\n      }\n    }\n    removeTrack(rtrack) {\n      super.removeTrack(rtrack);\n\n      // manually remove the event handlers we added\n      if (rtrack.removeEventListener) {\n        if (this.queueChange_) {\n          rtrack.removeEventListener('modechange', this.queueChange_);\n        }\n        if (this.selectedlanguagechange_) {\n          rtrack.removeEventListener('modechange', this.triggerSelectedlanguagechange_);\n        }\n      }\n    }\n  }\n\n  /**\n   * @file html-track-element-list.js\n   */\n\n  /**\n   * The current list of {@link HtmlTrackElement}s.\n   */\n  class HtmlTrackElementList {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {HtmlTrackElement[]} [tracks=[]]\n     *        A list of `HtmlTrackElement` to instantiate the list with.\n     */\n    constructor(trackElements = []) {\n      this.trackElements_ = [];\n\n      /**\n       * @memberof HtmlTrackElementList\n       * @member {number} length\n       *         The current number of `Track`s in the this Trackist.\n       * @instance\n       */\n      Object.defineProperty(this, 'length', {\n        get() {\n          return this.trackElements_.length;\n        }\n      });\n      for (let i = 0, length = trackElements.length; i < length; i++) {\n        this.addTrackElement_(trackElements[i]);\n      }\n    }\n\n    /**\n     * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to add to the list.\n     *\n     * @private\n     */\n    addTrackElement_(trackElement) {\n      const index = this.trackElements_.length;\n      if (!('' + index in this)) {\n        Object.defineProperty(this, index, {\n          get() {\n            return this.trackElements_[index];\n          }\n        });\n      }\n\n      // Do not add duplicate elements\n      if (this.trackElements_.indexOf(trackElement) === -1) {\n        this.trackElements_.push(trackElement);\n      }\n    }\n\n    /**\n     * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n     * {@link TextTrack}.\n     *\n     * @param {TextTrack} track\n     *        The track associated with a track element.\n     *\n     * @return {HtmlTrackElement|undefined}\n     *         The track element that was found or undefined.\n     *\n     * @private\n     */\n    getTrackElementByTrack_(track) {\n      let trackElement_;\n      for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (track === this.trackElements_[i].track) {\n          trackElement_ = this.trackElements_[i];\n          break;\n        }\n      }\n      return trackElement_;\n    }\n\n    /**\n     * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n     *\n     * @param {HtmlTrackElement} trackElement\n     *        The track element to remove from the list.\n     *\n     * @private\n     */\n    removeTrackElement_(trackElement) {\n      for (let i = 0, length = this.trackElements_.length; i < length; i++) {\n        if (trackElement === this.trackElements_[i]) {\n          if (this.trackElements_[i].track && typeof this.trackElements_[i].track.off === 'function') {\n            this.trackElements_[i].track.off();\n          }\n          if (typeof this.trackElements_[i].off === 'function') {\n            this.trackElements_[i].off();\n          }\n          this.trackElements_.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @file text-track-cue-list.js\n   */\n\n  /**\n   * @typedef {Object} TextTrackCueList~TextTrackCue\n   *\n   * @property {string} id\n   *           The unique id for this text track cue\n   *\n   * @property {number} startTime\n   *           The start time for this text track cue\n   *\n   * @property {number} endTime\n   *           The end time for this text track cue\n   *\n   * @property {boolean} pauseOnExit\n   *           Pause when the end time is reached if true.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n   */\n\n  /**\n   * A List of TextTrackCues.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n   */\n  class TextTrackCueList {\n    /**\n     * Create an instance of this class..\n     *\n     * @param {Array} cues\n     *        A list of cues to be initialized with\n     */\n    constructor(cues) {\n      TextTrackCueList.prototype.setCues_.call(this, cues);\n\n      /**\n       * @memberof TextTrackCueList\n       * @member {number} length\n       *         The current number of `TextTrackCue`s in the TextTrackCueList.\n       * @instance\n       */\n      Object.defineProperty(this, 'length', {\n        get() {\n          return this.length_;\n        }\n      });\n    }\n\n    /**\n     * A setter for cues in this list. Creates getters\n     * an an index for the cues.\n     *\n     * @param {Array} cues\n     *        An array of cues to set\n     *\n     * @private\n     */\n    setCues_(cues) {\n      const oldLength = this.length || 0;\n      let i = 0;\n      const l = cues.length;\n      this.cues_ = cues;\n      this.length_ = cues.length;\n      const defineProp = function (index) {\n        if (!('' + index in this)) {\n          Object.defineProperty(this, '' + index, {\n            get() {\n              return this.cues_[index];\n            }\n          });\n        }\n      };\n      if (oldLength < l) {\n        i = oldLength;\n        for (; i < l; i++) {\n          defineProp.call(this, i);\n        }\n      }\n    }\n\n    /**\n     * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n     *\n     * @param {string} id\n     *        The id of the cue that should be searched for.\n     *\n     * @return {TextTrackCueList~TextTrackCue|null}\n     *         A single cue or null if none was found.\n     */\n    getCueById(id) {\n      let result = null;\n      for (let i = 0, l = this.length; i < l; i++) {\n        const cue = this[i];\n        if (cue.id === id) {\n          result = cue;\n          break;\n        }\n      }\n      return result;\n    }\n  }\n\n  /**\n   * @file track-kinds.js\n   */\n\n  /**\n   * All possible `VideoTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n   * @typedef VideoTrack~Kind\n   * @enum\n   */\n  const VideoTrackKind = {\n    alternative: 'alternative',\n    captions: 'captions',\n    main: 'main',\n    sign: 'sign',\n    subtitles: 'subtitles',\n    commentary: 'commentary'\n  };\n\n  /**\n   * All possible `AudioTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n   * @typedef AudioTrack~Kind\n   * @enum\n   */\n  const AudioTrackKind = {\n    'alternative': 'alternative',\n    'descriptions': 'descriptions',\n    'main': 'main',\n    'main-desc': 'main-desc',\n    'translation': 'translation',\n    'commentary': 'commentary'\n  };\n\n  /**\n   * All possible `TextTrackKind`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n   * @typedef TextTrack~Kind\n   * @enum\n   */\n  const TextTrackKind = {\n    subtitles: 'subtitles',\n    captions: 'captions',\n    descriptions: 'descriptions',\n    chapters: 'chapters',\n    metadata: 'metadata'\n  };\n\n  /**\n   * All possible `TextTrackMode`s\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n   * @typedef TextTrack~Mode\n   * @enum\n   */\n  const TextTrackMode = {\n    disabled: 'disabled',\n    hidden: 'hidden',\n    showing: 'showing'\n  };\n\n  /**\n   * @file track.js\n   */\n\n  /**\n   * A Track class that contains all of the common functionality for {@link AudioTrack},\n   * {@link VideoTrack}, and {@link TextTrack}.\n   *\n   * > Note: This class should not be used directly\n   *\n   * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n   * @extends EventTarget\n   * @abstract\n   */\n  class Track extends EventTarget$2 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid kind for the track type you are creating.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @abstract\n     */\n    constructor(options = {}) {\n      super();\n      const trackProps = {\n        id: options.id || 'vjs_track_' + newGUID(),\n        kind: options.kind || '',\n        language: options.language || ''\n      };\n      let label = options.label || '';\n\n      /**\n       * @memberof Track\n       * @member {string} id\n       *         The id of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} kind\n       *         The kind of track that this is. Cannot be changed after creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      /**\n       * @memberof Track\n       * @member {string} language\n       *         The two letter language code for this track. Cannot be changed after\n       *         creation.\n       * @instance\n       *\n       * @readonly\n       */\n\n      for (const key in trackProps) {\n        Object.defineProperty(this, key, {\n          get() {\n            return trackProps[key];\n          },\n          set() {}\n        });\n      }\n\n      /**\n       * @memberof Track\n       * @member {string} label\n       *         The label of this track. Cannot be changed after creation.\n       * @instance\n       *\n       * @fires Track#labelchange\n       */\n      Object.defineProperty(this, 'label', {\n        get() {\n          return label;\n        },\n        set(newLabel) {\n          if (newLabel !== label) {\n            label = newLabel;\n\n            /**\n             * An event that fires when label changes on this track.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event Track#labelchange\n             * @type {EventTarget~Event}\n             */\n            this.trigger('labelchange');\n          }\n        }\n      });\n    }\n  }\n\n  /**\n   * @file url.js\n   * @module url\n   */\n\n  /**\n   * @typedef {Object} url:URLObject\n   *\n   * @property {string} protocol\n   *           The protocol of the url that was parsed.\n   *\n   * @property {string} hostname\n   *           The hostname of the url that was parsed.\n   *\n   * @property {string} port\n   *           The port of the url that was parsed.\n   *\n   * @property {string} pathname\n   *           The pathname of the url that was parsed.\n   *\n   * @property {string} search\n   *           The search query of the url that was parsed.\n   *\n   * @property {string} hash\n   *           The hash of the url that was parsed.\n   *\n   * @property {string} host\n   *           The host of the url that was parsed.\n   */\n\n  /**\n   * Resolve and parse the elements of a URL.\n   *\n   * @function\n   * @param    {String} url\n   *           The url to parse\n   *\n   * @return   {url:URLObject}\n   *           An object of url details\n   */\n  const parseUrl = function (url) {\n    // This entire method can be replace with URL once we are able to drop IE11\n\n    const props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n    // add the url to an anchor and let the browser parse the URL\n    const a = document.createElement('a');\n    a.href = url;\n\n    // Copy the specific URL properties to a new object\n    // This is also needed for IE because the anchor loses its\n    // properties when it's removed from the dom\n    const details = {};\n    for (let i = 0; i < props.length; i++) {\n      details[props[i]] = a[props[i]];\n    }\n\n    // IE adds the port to the host property unlike everyone else. If\n    // a port identifier is added for standard ports, strip it.\n    if (details.protocol === 'http:') {\n      details.host = details.host.replace(/:80$/, '');\n    }\n    if (details.protocol === 'https:') {\n      details.host = details.host.replace(/:443$/, '');\n    }\n    if (!details.protocol) {\n      details.protocol = window.location.protocol;\n    }\n\n    /* istanbul ignore if */\n    if (!details.host) {\n      details.host = window.location.host;\n    }\n    return details;\n  };\n\n  /**\n   * Get absolute version of relative URL.\n   *\n   * @function\n   * @param    {string} url\n   *           URL to make absolute\n   *\n   * @return   {string}\n   *           Absolute URL\n   *\n   * @see      http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n   */\n  const getAbsoluteURL = function (url) {\n    // Check if absolute URL\n    if (!url.match(/^https?:\\/\\//)) {\n      // Add the url to an anchor and let the browser parse it to convert to an absolute url\n      const a = document.createElement('a');\n      a.href = url;\n      url = a.href;\n    }\n    return url;\n  };\n\n  /**\n   * Returns the extension of the passed file name. It will return an empty string\n   * if passed an invalid path.\n   *\n   * @function\n   * @param    {string} path\n   *           The fileName path like '/path/to/file.mp4'\n   *\n   * @return  {string}\n   *           The extension in lower case or an empty string if no\n   *           extension could be found.\n   */\n  const getFileExtension = function (path) {\n    if (typeof path === 'string') {\n      const splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/;\n      const pathParts = splitPathRe.exec(path);\n      if (pathParts) {\n        return pathParts.pop().toLowerCase();\n      }\n    }\n    return '';\n  };\n\n  /**\n   * Returns whether the url passed is a cross domain request or not.\n   *\n   * @function\n   * @param    {string} url\n   *           The url to check.\n   *\n   * @param    {Object} [winLoc]\n   *           the domain to check the url against, defaults to window.location\n   *\n   * @param    {string} [winLoc.protocol]\n   *           The window location protocol defaults to window.location.protocol\n   *\n   * @param    {string} [winLoc.host]\n   *           The window location host defaults to window.location.host\n   *\n   * @return   {boolean}\n   *           Whether it is a cross domain request or not.\n   */\n  const isCrossOrigin = function (url, winLoc = window.location) {\n    const urlInfo = parseUrl(url);\n\n    // IE8 protocol relative urls will return ':' for protocol\n    const srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n    // Check if url is for another domain/origin\n    // IE8 doesn't know location.origin, so we won't rely on it here\n    const crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n    return crossOrigin;\n  };\n\n  var Url = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    parseUrl: parseUrl,\n    getAbsoluteURL: getAbsoluteURL,\n    getFileExtension: getFileExtension,\n    isCrossOrigin: isCrossOrigin\n  });\n\n  var win;\n  if (typeof window !== \"undefined\") {\n    win = window;\n  } else if (typeof commonjsGlobal !== \"undefined\") {\n    win = commonjsGlobal;\n  } else if (typeof self !== \"undefined\") {\n    win = self;\n  } else {\n    win = {};\n  }\n  var window_1 = win;\n\n  var _extends_1 = createCommonjsModule(function (module) {\n    function _extends() {\n      module.exports = _extends = Object.assign ? Object.assign.bind() : function (target) {\n        for (var i = 1; i < arguments.length; i++) {\n          var source = arguments[i];\n          for (var key in source) {\n            if (Object.prototype.hasOwnProperty.call(source, key)) {\n              target[key] = source[key];\n            }\n          }\n        }\n        return target;\n      }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n      return _extends.apply(this, arguments);\n    }\n    module.exports = _extends, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  });\n  var _extends$1 = unwrapExports(_extends_1);\n\n  var isFunction_1 = isFunction;\n  var toString = Object.prototype.toString;\n  function isFunction(fn) {\n    if (!fn) {\n      return false;\n    }\n    var string = toString.call(fn);\n    return string === '[object Function]' || typeof fn === 'function' && string !== '[object RegExp]' || typeof window !== 'undefined' && (\n    // IE8 and below\n    fn === window.setTimeout || fn === window.alert || fn === window.confirm || fn === window.prompt);\n  }\n\n  var httpResponseHandler = function httpResponseHandler(callback, decodeResponseBody) {\n    if (decodeResponseBody === void 0) {\n      decodeResponseBody = false;\n    }\n    return function (err, response, responseBody) {\n      // if the XHR failed, return that error\n      if (err) {\n        callback(err);\n        return;\n      } // if the HTTP status code is 4xx or 5xx, the request also failed\n\n      if (response.statusCode >= 400 && response.statusCode <= 599) {\n        var cause = responseBody;\n        if (decodeResponseBody) {\n          if (window_1.TextDecoder) {\n            var charset = getCharset(response.headers && response.headers['content-type']);\n            try {\n              cause = new TextDecoder(charset).decode(responseBody);\n            } catch (e) {}\n          } else {\n            cause = String.fromCharCode.apply(null, new Uint8Array(responseBody));\n          }\n        }\n        callback({\n          cause: cause\n        });\n        return;\n      } // otherwise, request succeeded\n\n      callback(null, responseBody);\n    };\n  };\n  function getCharset(contentTypeHeader) {\n    if (contentTypeHeader === void 0) {\n      contentTypeHeader = '';\n    }\n    return contentTypeHeader.toLowerCase().split(';').reduce(function (charset, contentType) {\n      var _contentType$split = contentType.split('='),\n        type = _contentType$split[0],\n        value = _contentType$split[1];\n      if (type.trim() === 'charset') {\n        return value.trim();\n      }\n      return charset;\n    }, 'utf-8');\n  }\n  var httpHandler = httpResponseHandler;\n\n  createXHR.httpHandler = httpHandler;\n  /**\n   * @license\n   * slighly modified parse-headers 2.0.2 <https://github.com/kesla/parse-headers/>\n   * Copyright (c) 2014 David Björklund\n   * Available under the MIT license\n   * <https://github.com/kesla/parse-headers/blob/master/LICENCE>\n   */\n\n  var parseHeaders = function parseHeaders(headers) {\n    var result = {};\n    if (!headers) {\n      return result;\n    }\n    headers.trim().split('\\n').forEach(function (row) {\n      var index = row.indexOf(':');\n      var key = row.slice(0, index).trim().toLowerCase();\n      var value = row.slice(index + 1).trim();\n      if (typeof result[key] === 'undefined') {\n        result[key] = value;\n      } else if (Array.isArray(result[key])) {\n        result[key].push(value);\n      } else {\n        result[key] = [result[key], value];\n      }\n    });\n    return result;\n  };\n  var lib = createXHR; // Allow use of default import syntax in TypeScript\n\n  var default_1 = createXHR;\n  createXHR.XMLHttpRequest = window_1.XMLHttpRequest || noop$1;\n  createXHR.XDomainRequest = \"withCredentials\" in new createXHR.XMLHttpRequest() ? createXHR.XMLHttpRequest : window_1.XDomainRequest;\n  forEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function (method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function (uri, options, callback) {\n      options = initParams(uri, options, callback);\n      options.method = method.toUpperCase();\n      return _createXHR(options);\n    };\n  });\n  function forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n      iterator(array[i]);\n    }\n  }\n  function isEmpty(obj) {\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) return false;\n    }\n    return true;\n  }\n  function initParams(uri, options, callback) {\n    var params = uri;\n    if (isFunction_1(options)) {\n      callback = options;\n      if (typeof uri === \"string\") {\n        params = {\n          uri: uri\n        };\n      }\n    } else {\n      params = _extends_1({}, options, {\n        uri: uri\n      });\n    }\n    params.callback = callback;\n    return params;\n  }\n  function createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback);\n    return _createXHR(options);\n  }\n  function _createXHR(options) {\n    if (typeof options.callback === \"undefined\") {\n      throw new Error(\"callback argument missing\");\n    }\n    var called = false;\n    var callback = function cbOnce(err, response, body) {\n      if (!called) {\n        called = true;\n        options.callback(err, response, body);\n      }\n    };\n    function readystatechange() {\n      if (xhr.readyState === 4) {\n        setTimeout(loadFunc, 0);\n      }\n    }\n    function getBody() {\n      // Chrome with requestType=blob throws errors arround when even testing access to responseText\n      var body = undefined;\n      if (xhr.response) {\n        body = xhr.response;\n      } else {\n        body = xhr.responseText || getXml(xhr);\n      }\n      if (isJson) {\n        try {\n          body = JSON.parse(body);\n        } catch (e) {}\n      }\n      return body;\n    }\n    function errorFunc(evt) {\n      clearTimeout(timeoutTimer);\n      if (!(evt instanceof Error)) {\n        evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\"));\n      }\n      evt.statusCode = 0;\n      return callback(evt, failureResponse);\n    } // will load the data & process the response in a special response object\n\n    function loadFunc() {\n      if (aborted) return;\n      var status;\n      clearTimeout(timeoutTimer);\n      if (options.useXDR && xhr.status === undefined) {\n        //IE8 CORS GET successful response doesn't have a status field, but body is fine\n        status = 200;\n      } else {\n        status = xhr.status === 1223 ? 204 : xhr.status;\n      }\n      var response = failureResponse;\n      var err = null;\n      if (status !== 0) {\n        response = {\n          body: getBody(),\n          statusCode: status,\n          method: method,\n          headers: {},\n          url: uri,\n          rawRequest: xhr\n        };\n        if (xhr.getAllResponseHeaders) {\n          //remember xhr can in fact be XDR for CORS in IE\n          response.headers = parseHeaders(xhr.getAllResponseHeaders());\n        }\n      } else {\n        err = new Error(\"Internal XMLHttpRequest Error\");\n      }\n      return callback(err, response, response.body);\n    }\n    var xhr = options.xhr || null;\n    if (!xhr) {\n      if (options.cors || options.useXDR) {\n        xhr = new createXHR.XDomainRequest();\n      } else {\n        xhr = new createXHR.XMLHttpRequest();\n      }\n    }\n    var key;\n    var aborted;\n    var uri = xhr.url = options.uri || options.url;\n    var method = xhr.method = options.method || \"GET\";\n    var body = options.body || options.data;\n    var headers = xhr.headers = options.headers || {};\n    var sync = !!options.sync;\n    var isJson = false;\n    var timeoutTimer;\n    var failureResponse = {\n      body: undefined,\n      headers: {},\n      statusCode: 0,\n      method: method,\n      url: uri,\n      rawRequest: xhr\n    };\n    if (\"json\" in options && options.json !== false) {\n      isJson = true;\n      headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n      if (method !== \"GET\" && method !== \"HEAD\") {\n        headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\"); //Don't override existing accept header declared by user\n\n        body = JSON.stringify(options.json === true ? body : options.json);\n      }\n    }\n    xhr.onreadystatechange = readystatechange;\n    xhr.onload = loadFunc;\n    xhr.onerror = errorFunc; // IE9 must have onprogress be set to a unique function.\n\n    xhr.onprogress = function () {// IE must die\n    };\n    xhr.onabort = function () {\n      aborted = true;\n    };\n    xhr.ontimeout = errorFunc;\n    xhr.open(method, uri, !sync, options.username, options.password); //has to be after open\n\n    if (!sync) {\n      xhr.withCredentials = !!options.withCredentials;\n    } // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n\n    if (!sync && options.timeout > 0) {\n      timeoutTimer = setTimeout(function () {\n        if (aborted) return;\n        aborted = true; //IE9 may still call readystatechange\n\n        xhr.abort(\"timeout\");\n        var e = new Error(\"XMLHttpRequest timeout\");\n        e.code = \"ETIMEDOUT\";\n        errorFunc(e);\n      }, options.timeout);\n    }\n    if (xhr.setRequestHeader) {\n      for (key in headers) {\n        if (headers.hasOwnProperty(key)) {\n          xhr.setRequestHeader(key, headers[key]);\n        }\n      }\n    } else if (options.headers && !isEmpty(options.headers)) {\n      throw new Error(\"Headers cannot be set on an XDomainRequest object\");\n    }\n    if (\"responseType\" in options) {\n      xhr.responseType = options.responseType;\n    }\n    if (\"beforeSend\" in options && typeof options.beforeSend === \"function\") {\n      options.beforeSend(xhr);\n    } // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n\n    xhr.send(body || null);\n    return xhr;\n  }\n  function getXml(xhr) {\n    // xhr.responseXML will throw Exception \"InvalidStateError\" or \"DOMException\"\n    // See https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/responseXML.\n    try {\n      if (xhr.responseType === \"document\") {\n        return xhr.responseXML;\n      }\n      var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\";\n      if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML;\n      }\n    } catch (e) {}\n    return null;\n  }\n  function noop$1() {}\n  lib.default = default_1;\n\n  /**\n   * @file text-track.js\n   */\n\n  /**\n   * Takes a webvtt file contents and parses it into cues\n   *\n   * @param {string} srcContent\n   *        webVTT file contents\n   *\n   * @param {TextTrack} track\n   *        TextTrack to add cues to. Cues come from the srcContent.\n   *\n   * @private\n   */\n  const parseCues = function (srcContent, track) {\n    const parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n    const errors = [];\n    parser.oncue = function (cue) {\n      track.addCue(cue);\n    };\n    parser.onparsingerror = function (error) {\n      errors.push(error);\n    };\n    parser.onflush = function () {\n      track.trigger({\n        type: 'loadeddata',\n        target: track\n      });\n    };\n    parser.parse(srcContent);\n    if (errors.length > 0) {\n      if (window.console && window.console.groupCollapsed) {\n        window.console.groupCollapsed(`Text Track parsing errors for ${track.src}`);\n      }\n      errors.forEach(error => log$1.error(error));\n      if (window.console && window.console.groupEnd) {\n        window.console.groupEnd();\n      }\n    }\n    parser.flush();\n  };\n\n  /**\n   * Load a `TextTrack` from a specified url.\n   *\n   * @param {string} src\n   *        Url to load track from.\n   *\n   * @param {TextTrack} track\n   *        Track to add cues to. Comes from the content at the end of `url`.\n   *\n   * @private\n   */\n  const loadTrack = function (src, track) {\n    const opts = {\n      uri: src\n    };\n    const crossOrigin = isCrossOrigin(src);\n    if (crossOrigin) {\n      opts.cors = crossOrigin;\n    }\n    const withCredentials = track.tech_.crossOrigin() === 'use-credentials';\n    if (withCredentials) {\n      opts.withCredentials = withCredentials;\n    }\n    lib(opts, bind_(this, function (err, response, responseBody) {\n      if (err) {\n        return log$1.error(err, response);\n      }\n      track.loaded_ = true;\n\n      // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n      // NOTE: this is only used for the alt/video.novtt.js build\n      if (typeof window.WebVTT !== 'function') {\n        if (track.tech_) {\n          // to prevent use before define eslint error, we define loadHandler\n          // as a let here\n          track.tech_.any(['vttjsloaded', 'vttjserror'], event => {\n            if (event.type === 'vttjserror') {\n              log$1.error(`vttjs failed to load, stopping trying to process ${track.src}`);\n              return;\n            }\n            return parseCues(responseBody, track);\n          });\n        }\n      } else {\n        parseCues(responseBody, track);\n      }\n    }));\n  };\n\n  /**\n   * A representation of a single `TextTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n   * @extends Track\n   */\n  class TextTrack extends Track {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this TextTrack.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    constructor(options = {}) {\n      if (!options.tech) {\n        throw new Error('A tech was not provided.');\n      }\n      const settings = merge$2(options, {\n        kind: TextTrackKind[options.kind] || 'subtitles',\n        language: options.language || options.srclang || ''\n      });\n      let mode = TextTrackMode[settings.mode] || 'disabled';\n      const default_ = settings.default;\n      if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n        mode = 'hidden';\n      }\n      super(settings);\n      this.tech_ = settings.tech;\n      this.cues_ = [];\n      this.activeCues_ = [];\n      this.preload_ = this.tech_.preloadTextTracks !== false;\n      const cues = new TextTrackCueList(this.cues_);\n      const activeCues = new TextTrackCueList(this.activeCues_);\n      let changed = false;\n      this.timeupdateHandler = bind_(this, function (event = {}) {\n        if (this.tech_.isDisposed()) {\n          return;\n        }\n        if (!this.tech_.isReady_) {\n          if (event.type !== 'timeupdate') {\n            this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n          }\n          return;\n        }\n\n        // Accessing this.activeCues for the side-effects of updating itself\n        // due to its nature as a getter function. Do not remove or cues will\n        // stop updating!\n        // Use the setter to prevent deletion from uglify (pure_getters rule)\n        this.activeCues = this.activeCues;\n        if (changed) {\n          this.trigger('cuechange');\n          changed = false;\n        }\n        if (event.type !== 'timeupdate') {\n          this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n        }\n      });\n      const disposeHandler = () => {\n        this.stopTracking();\n      };\n      this.tech_.one('dispose', disposeHandler);\n      if (mode !== 'disabled') {\n        this.startTracking();\n      }\n      Object.defineProperties(this, {\n        /**\n         * @memberof TextTrack\n         * @member {boolean} default\n         *         If this track was set to be on or off by default. Cannot be changed after\n         *         creation.\n         * @instance\n         *\n         * @readonly\n         */\n        default: {\n          get() {\n            return default_;\n          },\n          set() {}\n        },\n        /**\n         * @memberof TextTrack\n         * @member {string} mode\n         *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n         *         not be set if setting to an invalid mode.\n         * @instance\n         *\n         * @fires TextTrack#modechange\n         */\n        mode: {\n          get() {\n            return mode;\n          },\n          set(newMode) {\n            if (!TextTrackMode[newMode]) {\n              return;\n            }\n            if (mode === newMode) {\n              return;\n            }\n            mode = newMode;\n            if (!this.preload_ && mode !== 'disabled' && this.cues.length === 0) {\n              // On-demand load.\n              loadTrack(this.src, this);\n            }\n            this.stopTracking();\n            if (mode !== 'disabled') {\n              this.startTracking();\n            }\n            /**\n             * An event that fires when mode changes on this track. This allows\n             * the TextTrackList that holds this track to act accordingly.\n             *\n             * > Note: This is not part of the spec!\n             *\n             * @event TextTrack#modechange\n             * @type {EventTarget~Event}\n             */\n            this.trigger('modechange');\n          }\n        },\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} cues\n         *         The text track cue list for this TextTrack.\n         * @instance\n         */\n        cues: {\n          get() {\n            if (!this.loaded_) {\n              return null;\n            }\n            return cues;\n          },\n          set() {}\n        },\n        /**\n         * @memberof TextTrack\n         * @member {TextTrackCueList} activeCues\n         *         The list text track cues that are currently active for this TextTrack.\n         * @instance\n         */\n        activeCues: {\n          get() {\n            if (!this.loaded_) {\n              return null;\n            }\n\n            // nothing to do\n            if (this.cues.length === 0) {\n              return activeCues;\n            }\n            const ct = this.tech_.currentTime();\n            const active = [];\n            for (let i = 0, l = this.cues.length; i < l; i++) {\n              const cue = this.cues[i];\n              if (cue.startTime <= ct && cue.endTime >= ct) {\n                active.push(cue);\n              }\n            }\n            changed = false;\n            if (active.length !== this.activeCues_.length) {\n              changed = true;\n            } else {\n              for (let i = 0; i < active.length; i++) {\n                if (this.activeCues_.indexOf(active[i]) === -1) {\n                  changed = true;\n                }\n              }\n            }\n            this.activeCues_ = active;\n            activeCues.setCues_(this.activeCues_);\n            return activeCues;\n          },\n          // /!\\ Keep this setter empty (see the timeupdate handler above)\n          set() {}\n        }\n      });\n      if (settings.src) {\n        this.src = settings.src;\n        if (!this.preload_) {\n          // Tracks will load on-demand.\n          // Act like we're loaded for other purposes.\n          this.loaded_ = true;\n        }\n        if (this.preload_ || settings.kind !== 'subtitles' && settings.kind !== 'captions') {\n          loadTrack(this.src, this);\n        }\n      } else {\n        this.loaded_ = true;\n      }\n    }\n    startTracking() {\n      // More precise cues based on requestVideoFrameCallback with a requestAnimationFram fallback\n      this.rvf_ = this.tech_.requestVideoFrameCallback(this.timeupdateHandler);\n      // Also listen to timeupdate in case rVFC/rAF stops (window in background, audio in video el)\n      this.tech_.on('timeupdate', this.timeupdateHandler);\n    }\n    stopTracking() {\n      if (this.rvf_) {\n        this.tech_.cancelVideoFrameCallback(this.rvf_);\n        this.rvf_ = undefined;\n      }\n      this.tech_.off('timeupdate', this.timeupdateHandler);\n    }\n\n    /**\n     * Add a cue to the internal list of cues.\n     *\n     * @param {TextTrack~Cue} cue\n     *        The cue to add to our internal list\n     */\n    addCue(originalCue) {\n      let cue = originalCue;\n      if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n        cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n        for (const prop in originalCue) {\n          if (!(prop in cue)) {\n            cue[prop] = originalCue[prop];\n          }\n        }\n\n        // make sure that `id` is copied over\n        cue.id = originalCue.id;\n        cue.originalCue_ = originalCue;\n      }\n      const tracks = this.tech_.textTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        if (tracks[i] !== this) {\n          tracks[i].removeCue(cue);\n        }\n      }\n      this.cues_.push(cue);\n      this.cues.setCues_(this.cues_);\n    }\n\n    /**\n     * Remove a cue from our internal list\n     *\n     * @param {TextTrack~Cue} removeCue\n     *        The cue to remove from our internal list\n     */\n    removeCue(removeCue) {\n      let i = this.cues_.length;\n      while (i--) {\n        const cue = this.cues_[i];\n        if (cue === removeCue || cue.originalCue_ && cue.originalCue_ === removeCue) {\n          this.cues_.splice(i, 1);\n          this.cues.setCues_(this.cues_);\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * cuechange - One or more cues in the track have become active or stopped being active.\n   */\n  TextTrack.prototype.allowedEvents_ = {\n    cuechange: 'cuechange'\n  };\n\n  /**\n   * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n   * only one `AudioTrack` in the list will be enabled at a time.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n   * @extends Track\n   */\n  class AudioTrack extends Track {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {AudioTrack~Kind} [options.kind='']\n     *        A valid audio track kind\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.enabled]\n     *        If this track is the one that is currently playing. If this track is part of\n     *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n     */\n    constructor(options = {}) {\n      const settings = merge$2(options, {\n        kind: AudioTrackKind[options.kind] || ''\n      });\n      super(settings);\n      let enabled = false;\n\n      /**\n       * @memberof AudioTrack\n       * @member {boolean} enabled\n       *         If this `AudioTrack` is enabled or not. When setting this will\n       *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n      Object.defineProperty(this, 'enabled', {\n        get() {\n          return enabled;\n        },\n        set(newEnabled) {\n          // an invalid or unchanged value\n          if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n            return;\n          }\n          enabled = newEnabled;\n\n          /**\n           * An event that fires when enabled changes on this track. This allows\n           * the AudioTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event AudioTrack#enabledchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('enabledchange');\n        }\n      });\n\n      // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n      if (settings.enabled) {\n        this.enabled = settings.enabled;\n      }\n      this.loaded_ = true;\n    }\n  }\n\n  /**\n   * A representation of a single `VideoTrack`.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n   * @extends Track\n   */\n  class VideoTrack extends Track {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} [options={}]\n     *        Object of option names and values\n     *\n     * @param {string} [options.kind='']\n     *        A valid {@link VideoTrack~Kind}\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this AudioTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {boolean} [options.selected]\n     *        If this track is the one that is currently playing.\n     */\n    constructor(options = {}) {\n      const settings = merge$2(options, {\n        kind: VideoTrackKind[options.kind] || ''\n      });\n      super(settings);\n      let selected = false;\n\n      /**\n       * @memberof VideoTrack\n       * @member {boolean} selected\n       *         If this `VideoTrack` is selected or not. When setting this will\n       *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n       * @instance\n       *\n       * @fires VideoTrack#selectedchange\n       */\n      Object.defineProperty(this, 'selected', {\n        get() {\n          return selected;\n        },\n        set(newSelected) {\n          // an invalid or unchanged value\n          if (typeof newSelected !== 'boolean' || newSelected === selected) {\n            return;\n          }\n          selected = newSelected;\n\n          /**\n           * An event that fires when selected changes on this track. This allows\n           * the VideoTrackList that holds this track to act accordingly.\n           *\n           * > Note: This is not part of the spec! Native tracks will do\n           *         this internally without an event.\n           *\n           * @event VideoTrack#selectedchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('selectedchange');\n        }\n      });\n\n      // if the user sets this track to selected then\n      // set selected to that true value otherwise\n      // we keep it false\n      if (settings.selected) {\n        this.selected = settings.selected;\n      }\n    }\n  }\n\n  /**\n   * @file html-track-element.js\n   */\n\n  /**\n   * A single track represented in the DOM.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n   * @extends EventTarget\n   */\n  class HTMLTrackElement extends EventTarget$2 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Object} options={}\n     *        Object of option names and values\n     *\n     * @param {Tech} options.tech\n     *        A reference to the tech that owns this HTMLTrackElement.\n     *\n     * @param {TextTrack~Kind} [options.kind='subtitles']\n     *        A valid text track kind.\n     *\n     * @param {TextTrack~Mode} [options.mode='disabled']\n     *        A valid text track mode.\n     *\n     * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n     *        A unique id for this TextTrack.\n     *\n     * @param {string} [options.label='']\n     *        The menu label for this track.\n     *\n     * @param {string} [options.language='']\n     *        A valid two character language code.\n     *\n     * @param {string} [options.srclang='']\n     *        A valid two character language code. An alternative, but deprioritized\n     *        version of `options.language`\n     *\n     * @param {string} [options.src]\n     *        A url to TextTrack cues.\n     *\n     * @param {boolean} [options.default]\n     *        If this track should default to on or off.\n     */\n    constructor(options = {}) {\n      super();\n      let readyState;\n      const track = new TextTrack(options);\n      this.kind = track.kind;\n      this.src = track.src;\n      this.srclang = track.language;\n      this.label = track.label;\n      this.default = track.default;\n      Object.defineProperties(this, {\n        /**\n         * @memberof HTMLTrackElement\n         * @member {HTMLTrackElement~ReadyState} readyState\n         *         The current ready state of the track element.\n         * @instance\n         */\n        readyState: {\n          get() {\n            return readyState;\n          }\n        },\n        /**\n         * @memberof HTMLTrackElement\n         * @member {TextTrack} track\n         *         The underlying TextTrack object.\n         * @instance\n         *\n         */\n        track: {\n          get() {\n            return track;\n          }\n        }\n      });\n      readyState = HTMLTrackElement.NONE;\n\n      /**\n       * @listens TextTrack#loadeddata\n       * @fires HTMLTrackElement#load\n       */\n      track.addEventListener('loadeddata', () => {\n        readyState = HTMLTrackElement.LOADED;\n        this.trigger({\n          type: 'load',\n          target: this\n        });\n      });\n    }\n  }\n  HTMLTrackElement.prototype.allowedEvents_ = {\n    load: 'load'\n  };\n\n  /**\n   * The text track not loaded state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.NONE = 0;\n\n  /**\n   * The text track loading state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.LOADING = 1;\n\n  /**\n   * The text track loaded state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.LOADED = 2;\n\n  /**\n   * The text track failed to load state.\n   *\n   * @type {number}\n   * @static\n   */\n  HTMLTrackElement.ERROR = 3;\n\n  /*\n   * This file contains all track properties that are used in\n   * player.js, tech.js, html5.js and possibly other techs in the future.\n   */\n\n  const NORMAL = {\n    audio: {\n      ListClass: AudioTrackList,\n      TrackClass: AudioTrack,\n      capitalName: 'Audio'\n    },\n    video: {\n      ListClass: VideoTrackList,\n      TrackClass: VideoTrack,\n      capitalName: 'Video'\n    },\n    text: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'Text'\n    }\n  };\n  Object.keys(NORMAL).forEach(function (type) {\n    NORMAL[type].getterName = `${type}Tracks`;\n    NORMAL[type].privateName = `${type}Tracks_`;\n  });\n  const REMOTE = {\n    remoteText: {\n      ListClass: TextTrackList,\n      TrackClass: TextTrack,\n      capitalName: 'RemoteText',\n      getterName: 'remoteTextTracks',\n      privateName: 'remoteTextTracks_'\n    },\n    remoteTextEl: {\n      ListClass: HtmlTrackElementList,\n      TrackClass: HTMLTrackElement,\n      capitalName: 'RemoteTextTrackEls',\n      getterName: 'remoteTextTrackEls',\n      privateName: 'remoteTextTrackEls_'\n    }\n  };\n  const ALL = Object.assign({}, NORMAL, REMOTE);\n  REMOTE.names = Object.keys(REMOTE);\n  NORMAL.names = Object.keys(NORMAL);\n  ALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n  var minDoc = {};\n\n  var topLevel = typeof commonjsGlobal !== 'undefined' ? commonjsGlobal : typeof window !== 'undefined' ? window : {};\n  var doccy;\n  if (typeof document !== 'undefined') {\n    doccy = document;\n  } else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n    if (!doccy) {\n      doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n  }\n  var document_1 = doccy;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  /* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n  /* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\n\n  var _objCreate = Object.create || function () {\n    function F() {}\n    return function (o) {\n      if (arguments.length !== 1) {\n        throw new Error('Object.create shim only accepts one parameter.');\n      }\n      F.prototype = o;\n      return new F();\n    };\n  }();\n\n  // Creates a new ParserError object from an errorData object. The errorData\n  // object should have default code and message properties. The default message\n  // property can be overriden by passing in a message parameter.\n  // See ParsingError.Errors below for acceptable errors.\n  function ParsingError(errorData, message) {\n    this.name = \"ParsingError\";\n    this.code = errorData.code;\n    this.message = message || errorData.message;\n  }\n  ParsingError.prototype = _objCreate(Error.prototype);\n  ParsingError.prototype.constructor = ParsingError;\n\n  // ParsingError metadata for acceptable ParsingErrors.\n  ParsingError.Errors = {\n    BadSignature: {\n      code: 0,\n      message: \"Malformed WebVTT signature.\"\n    },\n    BadTimeStamp: {\n      code: 1,\n      message: \"Malformed time stamp.\"\n    }\n  };\n\n  // Try to parse input as a time stamp.\n  function parseTimeStamp(input) {\n    function computeSeconds(h, m, s, f) {\n      return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n    }\n    var m = input.match(/^(\\d+):(\\d{1,2})(:\\d{1,2})?\\.(\\d{3})/);\n    if (!m) {\n      return null;\n    }\n    if (m[3]) {\n      // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n      return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n    } else if (m[1] > 59) {\n      // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n      // First position is hours as it's over 59.\n      return computeSeconds(m[1], m[2], 0, m[4]);\n    } else {\n      // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n      return computeSeconds(0, m[1], m[2], m[4]);\n    }\n  }\n\n  // A settings object holds key/value pairs and will ignore anything but the first\n  // assignment to a specific key.\n  function Settings() {\n    this.values = _objCreate(null);\n  }\n  Settings.prototype = {\n    // Only accept the first assignment to any key.\n    set: function (k, v) {\n      if (!this.get(k) && v !== \"\") {\n        this.values[k] = v;\n      }\n    },\n    // Return the value for a key, or a default value.\n    // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n    // a number of possible default values as properties where 'defaultKey' is\n    // the key of the property that will be chosen; otherwise it's assumed to be\n    // a single value.\n    get: function (k, dflt, defaultKey) {\n      if (defaultKey) {\n        return this.has(k) ? this.values[k] : dflt[defaultKey];\n      }\n      return this.has(k) ? this.values[k] : dflt;\n    },\n    // Check whether we have a value for a key.\n    has: function (k) {\n      return k in this.values;\n    },\n    // Accept a setting if its one of the given alternatives.\n    alt: function (k, v, a) {\n      for (var n = 0; n < a.length; ++n) {\n        if (v === a[n]) {\n          this.set(k, v);\n          break;\n        }\n      }\n    },\n    // Accept a setting if its a valid (signed) integer.\n    integer: function (k, v) {\n      if (/^-?\\d+$/.test(v)) {\n        // integer\n        this.set(k, parseInt(v, 10));\n      }\n    },\n    // Accept a setting if its a valid percentage.\n    percent: function (k, v) {\n      if (v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/)) {\n        v = parseFloat(v);\n        if (v >= 0 && v <= 100) {\n          this.set(k, v);\n          return true;\n        }\n      }\n      return false;\n    }\n  };\n\n  // Helper function to parse input into groups separated by 'groupDelim', and\n  // interprete each group as a key/value pair separated by 'keyValueDelim'.\n  function parseOptions(input, callback, keyValueDelim, groupDelim) {\n    var groups = groupDelim ? input.split(groupDelim) : [input];\n    for (var i in groups) {\n      if (typeof groups[i] !== \"string\") {\n        continue;\n      }\n      var kv = groups[i].split(keyValueDelim);\n      if (kv.length !== 2) {\n        continue;\n      }\n      var k = kv[0].trim();\n      var v = kv[1].trim();\n      callback(k, v);\n    }\n  }\n  function parseCue(input, cue, regionList) {\n    // Remember the original input if we need to throw an error.\n    var oInput = input;\n    // 4.1 WebVTT timestamp\n    function consumeTimeStamp() {\n      var ts = parseTimeStamp(input);\n      if (ts === null) {\n        throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed timestamp: \" + oInput);\n      }\n      // Remove time stamp from input.\n      input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n      return ts;\n    }\n\n    // 4.4.2 WebVTT cue settings\n    function consumeCueSettings(input, cue) {\n      var settings = new Settings();\n      parseOptions(input, function (k, v) {\n        switch (k) {\n          case \"region\":\n            // Find the last region we parsed with the same region id.\n            for (var i = regionList.length - 1; i >= 0; i--) {\n              if (regionList[i].id === v) {\n                settings.set(k, regionList[i].region);\n                break;\n              }\n            }\n            break;\n          case \"vertical\":\n            settings.alt(k, v, [\"rl\", \"lr\"]);\n            break;\n          case \"line\":\n            var vals = v.split(\",\"),\n              vals0 = vals[0];\n            settings.integer(k, vals0);\n            settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n            settings.alt(k, vals0, [\"auto\"]);\n            if (vals.length === 2) {\n              settings.alt(\"lineAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n            break;\n          case \"position\":\n            vals = v.split(\",\");\n            settings.percent(k, vals[0]);\n            if (vals.length === 2) {\n              settings.alt(\"positionAlign\", vals[1], [\"start\", \"center\", \"end\"]);\n            }\n            break;\n          case \"size\":\n            settings.percent(k, v);\n            break;\n          case \"align\":\n            settings.alt(k, v, [\"start\", \"center\", \"end\", \"left\", \"right\"]);\n            break;\n        }\n      }, /:/, /\\s/);\n\n      // Apply default values for any missing fields.\n      cue.region = settings.get(\"region\", null);\n      cue.vertical = settings.get(\"vertical\", \"\");\n      try {\n        cue.line = settings.get(\"line\", \"auto\");\n      } catch (e) {}\n      cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n      cue.snapToLines = settings.get(\"snapToLines\", true);\n      cue.size = settings.get(\"size\", 100);\n      // Safari still uses the old middle value and won't accept center\n      try {\n        cue.align = settings.get(\"align\", \"center\");\n      } catch (e) {\n        cue.align = settings.get(\"align\", \"middle\");\n      }\n      try {\n        cue.position = settings.get(\"position\", \"auto\");\n      } catch (e) {\n        cue.position = settings.get(\"position\", {\n          start: 0,\n          left: 0,\n          center: 50,\n          middle: 50,\n          end: 100,\n          right: 100\n        }, cue.align);\n      }\n      cue.positionAlign = settings.get(\"positionAlign\", {\n        start: \"start\",\n        left: \"start\",\n        center: \"center\",\n        middle: \"center\",\n        end: \"end\",\n        right: \"end\"\n      }, cue.align);\n    }\n    function skipWhitespace() {\n      input = input.replace(/^\\s+/, \"\");\n    }\n\n    // 4.1 WebVTT cue timings.\n    skipWhitespace();\n    cue.startTime = consumeTimeStamp(); // (1) collect cue start time\n    skipWhitespace();\n    if (input.substr(0, 3) !== \"-->\") {\n      // (3) next characters must match \"-->\"\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp, \"Malformed time stamp (time stamps must be separated by '-->'): \" + oInput);\n    }\n    input = input.substr(3);\n    skipWhitespace();\n    cue.endTime = consumeTimeStamp(); // (5) collect cue end time\n\n    // 4.1 WebVTT cue settings list.\n    skipWhitespace();\n    consumeCueSettings(input, cue);\n  }\n\n  // When evaluating this file as part of a Webpack bundle for server\n  // side rendering, `document` is an empty object.\n  var TEXTAREA_ELEMENT = document_1.createElement && document_1.createElement(\"textarea\");\n  var TAG_NAME = {\n    c: \"span\",\n    i: \"i\",\n    b: \"b\",\n    u: \"u\",\n    ruby: \"ruby\",\n    rt: \"rt\",\n    v: \"span\",\n    lang: \"span\"\n  };\n\n  // 5.1 default text color\n  // 5.2 default text background color is equivalent to text color with bg_ prefix\n  var DEFAULT_COLOR_CLASS = {\n    white: 'rgba(255,255,255,1)',\n    lime: 'rgba(0,255,0,1)',\n    cyan: 'rgba(0,255,255,1)',\n    red: 'rgba(255,0,0,1)',\n    yellow: 'rgba(255,255,0,1)',\n    magenta: 'rgba(255,0,255,1)',\n    blue: 'rgba(0,0,255,1)',\n    black: 'rgba(0,0,0,1)'\n  };\n  var TAG_ANNOTATION = {\n    v: \"title\",\n    lang: \"lang\"\n  };\n  var NEEDS_PARENT = {\n    rt: \"ruby\"\n  };\n\n  // Parse content into a document fragment.\n  function parseContent(window, input) {\n    function nextToken() {\n      // Check for end-of-string.\n      if (!input) {\n        return null;\n      }\n\n      // Consume 'n' characters from the input.\n      function consume(result) {\n        input = input.substr(result.length);\n        return result;\n      }\n      var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n      // If there is some text before the next tag, return it, otherwise return\n      // the tag.\n      return consume(m[1] ? m[1] : m[2]);\n    }\n    function unescape(s) {\n      TEXTAREA_ELEMENT.innerHTML = s;\n      s = TEXTAREA_ELEMENT.textContent;\n      TEXTAREA_ELEMENT.textContent = \"\";\n      return s;\n    }\n    function shouldAdd(current, element) {\n      return !NEEDS_PARENT[element.localName] || NEEDS_PARENT[element.localName] === current.localName;\n    }\n\n    // Create an element for this tag.\n    function createElement(type, annotation) {\n      var tagName = TAG_NAME[type];\n      if (!tagName) {\n        return null;\n      }\n      var element = window.document.createElement(tagName);\n      var name = TAG_ANNOTATION[type];\n      if (name && annotation) {\n        element[name] = annotation.trim();\n      }\n      return element;\n    }\n    var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n    while ((t = nextToken()) !== null) {\n      if (t[0] === '<') {\n        if (t[1] === \"/\") {\n          // If the closing tag matches, move back up to the parent node.\n          if (tagStack.length && tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n            tagStack.pop();\n            current = current.parentNode;\n          }\n          // Otherwise just ignore the end tag.\n          continue;\n        }\n        var ts = parseTimeStamp(t.substr(1, t.length - 2));\n        var node;\n        if (ts) {\n          // Timestamps are lead nodes as well.\n          node = window.document.createProcessingInstruction(\"timestamp\", ts);\n          current.appendChild(node);\n          continue;\n        }\n        var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n        // If we can't parse the tag, skip to the next tag.\n        if (!m) {\n          continue;\n        }\n        // Try to construct an element, and ignore the tag if we couldn't.\n        node = createElement(m[1], m[3]);\n        if (!node) {\n          continue;\n        }\n        // Determine if the tag should be added based on the context of where it\n        // is placed in the cuetext.\n        if (!shouldAdd(current, node)) {\n          continue;\n        }\n        // Set the class list (as a list of classes, separated by space).\n        if (m[2]) {\n          var classes = m[2].split('.');\n          classes.forEach(function (cl) {\n            var bgColor = /^bg_/.test(cl);\n            // slice out `bg_` if it's a background color\n            var colorName = bgColor ? cl.slice(3) : cl;\n            if (DEFAULT_COLOR_CLASS.hasOwnProperty(colorName)) {\n              var propName = bgColor ? 'background-color' : 'color';\n              var propValue = DEFAULT_COLOR_CLASS[colorName];\n              node.style[propName] = propValue;\n            }\n          });\n          node.className = classes.join(' ');\n        }\n        // Append the node to the current node, and enter the scope of the new\n        // node.\n        tagStack.push(m[1]);\n        current.appendChild(node);\n        current = node;\n        continue;\n      }\n\n      // Text nodes are leaf nodes.\n      current.appendChild(window.document.createTextNode(unescape(t)));\n    }\n    return rootDiv;\n  }\n\n  // This is a list of all the Unicode characters that have a strong\n  // right-to-left category. What this means is that these characters are\n  // written right-to-left for sure. It was generated by pulling all the strong\n  // right-to-left characters out of the Unicode data table. That table can\n  // found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\n  var strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6], [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d], [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6], [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5], [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815], [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858], [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f], [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c], [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1], [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc], [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808], [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855], [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f], [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13], [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58], [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72], [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f], [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32], [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42], [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f], [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59], [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62], [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77], [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b], [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n  function isStrongRTLChar(charCode) {\n    for (var i = 0; i < strongRTLRanges.length; i++) {\n      var currentRange = strongRTLRanges[i];\n      if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n        return true;\n      }\n    }\n    return false;\n  }\n  function determineBidi(cueDiv) {\n    var nodeStack = [],\n      text = \"\",\n      charCode;\n    if (!cueDiv || !cueDiv.childNodes) {\n      return \"ltr\";\n    }\n    function pushNodes(nodeStack, node) {\n      for (var i = node.childNodes.length - 1; i >= 0; i--) {\n        nodeStack.push(node.childNodes[i]);\n      }\n    }\n    function nextTextNode(nodeStack) {\n      if (!nodeStack || !nodeStack.length) {\n        return null;\n      }\n      var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n      if (text) {\n        // TODO: This should match all unicode type B characters (paragraph\n        // separator characters). See issue #115.\n        var m = text.match(/^.*(\\n|\\r)/);\n        if (m) {\n          nodeStack.length = 0;\n          return m[0];\n        }\n        return text;\n      }\n      if (node.tagName === \"ruby\") {\n        return nextTextNode(nodeStack);\n      }\n      if (node.childNodes) {\n        pushNodes(nodeStack, node);\n        return nextTextNode(nodeStack);\n      }\n    }\n    pushNodes(nodeStack, cueDiv);\n    while (text = nextTextNode(nodeStack)) {\n      for (var i = 0; i < text.length; i++) {\n        charCode = text.charCodeAt(i);\n        if (isStrongRTLChar(charCode)) {\n          return \"rtl\";\n        }\n      }\n    }\n    return \"ltr\";\n  }\n  function computeLinePos(cue) {\n    if (typeof cue.line === \"number\" && (cue.snapToLines || cue.line >= 0 && cue.line <= 100)) {\n      return cue.line;\n    }\n    if (!cue.track || !cue.track.textTrackList || !cue.track.textTrackList.mediaElement) {\n      return -1;\n    }\n    var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n    for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n      if (trackList[i].mode === \"showing\") {\n        count++;\n      }\n    }\n    return ++count * -1;\n  }\n  function StyleBox() {}\n\n  // Apply styles to a div. If there is no div passed then it defaults to the\n  // div on 'this'.\n  StyleBox.prototype.applyStyles = function (styles, div) {\n    div = div || this.div;\n    for (var prop in styles) {\n      if (styles.hasOwnProperty(prop)) {\n        div.style[prop] = styles[prop];\n      }\n    }\n  };\n  StyleBox.prototype.formatStyle = function (val, unit) {\n    return val === 0 ? 0 : val + unit;\n  };\n\n  // Constructs the computed display state of the cue (a div). Places the div\n  // into the overlay which should be a block level element (usually a div).\n  function CueStyleBox(window, cue, styleOptions) {\n    StyleBox.call(this);\n    this.cue = cue;\n\n    // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n    // have inline positioning and will function as the cue background box.\n    this.cueDiv = parseContent(window, cue.text);\n    var styles = {\n      color: \"rgba(255, 255, 255, 1)\",\n      backgroundColor: \"rgba(0, 0, 0, 0.8)\",\n      position: \"relative\",\n      left: 0,\n      right: 0,\n      top: 0,\n      bottom: 0,\n      display: \"inline\",\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\"\n    };\n    this.applyStyles(styles, this.cueDiv);\n\n    // Create an absolutely positioned div that will be used to position the cue\n    // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n    // mirrors of them except middle instead of center on Safari.\n    this.div = window.document.createElement(\"div\");\n    styles = {\n      direction: determineBidi(this.cueDiv),\n      writingMode: cue.vertical === \"\" ? \"horizontal-tb\" : cue.vertical === \"lr\" ? \"vertical-lr\" : \"vertical-rl\",\n      unicodeBidi: \"plaintext\",\n      textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n      font: styleOptions.font,\n      whiteSpace: \"pre-line\",\n      position: \"absolute\"\n    };\n    this.applyStyles(styles);\n    this.div.appendChild(this.cueDiv);\n\n    // Calculate the distance from the reference edge of the viewport to the text\n    // position of the cue box. The reference edge will be resolved later when\n    // the box orientation styles are applied.\n    var textPos = 0;\n    switch (cue.positionAlign) {\n      case \"start\":\n        textPos = cue.position;\n        break;\n      case \"center\":\n        textPos = cue.position - cue.size / 2;\n        break;\n      case \"end\":\n        textPos = cue.position - cue.size;\n        break;\n    }\n\n    // Horizontal box orientation; textPos is the distance from the left edge of the\n    // area to the left edge of the box and cue.size is the distance extending to\n    // the right from there.\n    if (cue.vertical === \"\") {\n      this.applyStyles({\n        left: this.formatStyle(textPos, \"%\"),\n        width: this.formatStyle(cue.size, \"%\")\n      });\n      // Vertical box orientation; textPos is the distance from the top edge of the\n      // area to the top edge of the box and cue.size is the height extending\n      // downwards from there.\n    } else {\n      this.applyStyles({\n        top: this.formatStyle(textPos, \"%\"),\n        height: this.formatStyle(cue.size, \"%\")\n      });\n    }\n    this.move = function (box) {\n      this.applyStyles({\n        top: this.formatStyle(box.top, \"px\"),\n        bottom: this.formatStyle(box.bottom, \"px\"),\n        left: this.formatStyle(box.left, \"px\"),\n        right: this.formatStyle(box.right, \"px\"),\n        height: this.formatStyle(box.height, \"px\"),\n        width: this.formatStyle(box.width, \"px\")\n      });\n    };\n  }\n  CueStyleBox.prototype = _objCreate(StyleBox.prototype);\n  CueStyleBox.prototype.constructor = CueStyleBox;\n\n  // Represents the co-ordinates of an Element in a way that we can easily\n  // compute things with such as if it overlaps or intersects with another Element.\n  // Can initialize it with either a StyleBox or another BoxPosition.\n  function BoxPosition(obj) {\n    // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n    // was passed in and we need to copy the results of 'getBoundingClientRect'\n    // as the object returned is readonly. All co-ordinate values are in reference\n    // to the viewport origin (top left).\n    var lh, height, width, top;\n    if (obj.div) {\n      height = obj.div.offsetHeight;\n      width = obj.div.offsetWidth;\n      top = obj.div.offsetTop;\n      var rects = (rects = obj.div.childNodes) && (rects = rects[0]) && rects.getClientRects && rects.getClientRects();\n      obj = obj.div.getBoundingClientRect();\n      // In certain cases the outter div will be slightly larger then the sum of\n      // the inner div's lines. This could be due to bold text, etc, on some platforms.\n      // In this case we should get the average line height and use that. This will\n      // result in the desired behaviour.\n      lh = rects ? Math.max(rects[0] && rects[0].height || 0, obj.height / rects.length) : 0;\n    }\n    this.left = obj.left;\n    this.right = obj.right;\n    this.top = obj.top || top;\n    this.height = obj.height || height;\n    this.bottom = obj.bottom || top + (obj.height || height);\n    this.width = obj.width || width;\n    this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n  }\n\n  // Move the box along a particular axis. Optionally pass in an amount to move\n  // the box. If no amount is passed then the default is the line height of the\n  // box.\n  BoxPosition.prototype.move = function (axis, toMove) {\n    toMove = toMove !== undefined ? toMove : this.lineHeight;\n    switch (axis) {\n      case \"+x\":\n        this.left += toMove;\n        this.right += toMove;\n        break;\n      case \"-x\":\n        this.left -= toMove;\n        this.right -= toMove;\n        break;\n      case \"+y\":\n        this.top += toMove;\n        this.bottom += toMove;\n        break;\n      case \"-y\":\n        this.top -= toMove;\n        this.bottom -= toMove;\n        break;\n    }\n  };\n\n  // Check if this box overlaps another box, b2.\n  BoxPosition.prototype.overlaps = function (b2) {\n    return this.left < b2.right && this.right > b2.left && this.top < b2.bottom && this.bottom > b2.top;\n  };\n\n  // Check if this box overlaps any other boxes in boxes.\n  BoxPosition.prototype.overlapsAny = function (boxes) {\n    for (var i = 0; i < boxes.length; i++) {\n      if (this.overlaps(boxes[i])) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // Check if this box is within another box.\n  BoxPosition.prototype.within = function (container) {\n    return this.top >= container.top && this.bottom <= container.bottom && this.left >= container.left && this.right <= container.right;\n  };\n\n  // Check if this box is entirely within the container or it is overlapping\n  // on the edge opposite of the axis direction passed. For example, if \"+x\" is\n  // passed and the box is overlapping on the left edge of the container, then\n  // return true.\n  BoxPosition.prototype.overlapsOppositeAxis = function (container, axis) {\n    switch (axis) {\n      case \"+x\":\n        return this.left < container.left;\n      case \"-x\":\n        return this.right > container.right;\n      case \"+y\":\n        return this.top < container.top;\n      case \"-y\":\n        return this.bottom > container.bottom;\n    }\n  };\n\n  // Find the percentage of the area that this box is overlapping with another\n  // box.\n  BoxPosition.prototype.intersectPercentage = function (b2) {\n    var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n    return intersectArea / (this.height * this.width);\n  };\n\n  // Convert the positions from this box to CSS compatible positions using\n  // the reference container's positions. This has to be done because this\n  // box's positions are in reference to the viewport origin, whereas, CSS\n  // values are in referecne to their respective edges.\n  BoxPosition.prototype.toCSSCompatValues = function (reference) {\n    return {\n      top: this.top - reference.top,\n      bottom: reference.bottom - this.bottom,\n      left: this.left - reference.left,\n      right: reference.right - this.right,\n      height: this.height,\n      width: this.width\n    };\n  };\n\n  // Get an object that represents the box's position without anything extra.\n  // Can pass a StyleBox, HTMLElement, or another BoxPositon.\n  BoxPosition.getSimpleBoxPosition = function (obj) {\n    var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n    var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n    var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n    obj = obj.div ? obj.div.getBoundingClientRect() : obj.tagName ? obj.getBoundingClientRect() : obj;\n    var ret = {\n      left: obj.left,\n      right: obj.right,\n      top: obj.top || top,\n      height: obj.height || height,\n      bottom: obj.bottom || top + (obj.height || height),\n      width: obj.width || width\n    };\n    return ret;\n  };\n\n  // Move a StyleBox to its specified, or next best, position. The containerBox\n  // is the box that contains the StyleBox, such as a div. boxPositions are\n  // a list of other boxes that the styleBox can't overlap with.\n  function moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n    // Find the best position for a cue box, b, on the video. The axis parameter\n    // is a list of axis, the order of which, it will move the box along. For example:\n    // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n    // direction. If it doesn't find a good position for it there it will then move\n    // it along the x axis in the negative direction.\n    function findBestPosition(b, axis) {\n      var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n      for (var i = 0; i < axis.length; i++) {\n        while (b.overlapsOppositeAxis(containerBox, axis[i]) || b.within(containerBox) && b.overlapsAny(boxPositions)) {\n          b.move(axis[i]);\n        }\n        // We found a spot where we aren't overlapping anything. This is our\n        // best position.\n        if (b.within(containerBox)) {\n          return b;\n        }\n        var p = b.intersectPercentage(containerBox);\n        // If we're outside the container box less then we were on our last try\n        // then remember this position as the best position.\n        if (percentage > p) {\n          bestPosition = new BoxPosition(b);\n          percentage = p;\n        }\n        // Reset the box position to the specified position.\n        b = new BoxPosition(specifiedPosition);\n      }\n      return bestPosition || specifiedPosition;\n    }\n    var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n    // If we have a line number to align the cue to.\n    if (cue.snapToLines) {\n      var size;\n      switch (cue.vertical) {\n        case \"\":\n          axis = [\"+y\", \"-y\"];\n          size = \"height\";\n          break;\n        case \"rl\":\n          axis = [\"+x\", \"-x\"];\n          size = \"width\";\n          break;\n        case \"lr\":\n          axis = [\"-x\", \"+x\"];\n          size = \"width\";\n          break;\n      }\n      var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n      // If the specified intial position is greater then the max position then\n      // clamp the box to the amount of steps it would take for the box to\n      // reach the max position.\n      if (Math.abs(position) > maxPosition) {\n        position = position < 0 ? -1 : 1;\n        position *= Math.ceil(maxPosition / step) * step;\n      }\n\n      // If computed line position returns negative then line numbers are\n      // relative to the bottom of the video instead of the top. Therefore, we\n      // need to increase our initial position by the length or width of the\n      // video, depending on the writing direction, and reverse our axis directions.\n      if (linePos < 0) {\n        position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n        axis = axis.reverse();\n      }\n\n      // Move the box to the specified position. This may not be its best\n      // position.\n      boxPosition.move(initialAxis, position);\n    } else {\n      // If we have a percentage line value for the cue.\n      var calculatedPercentage = boxPosition.lineHeight / containerBox.height * 100;\n      switch (cue.lineAlign) {\n        case \"center\":\n          linePos -= calculatedPercentage / 2;\n          break;\n        case \"end\":\n          linePos -= calculatedPercentage;\n          break;\n      }\n\n      // Apply initial line position to the cue box.\n      switch (cue.vertical) {\n        case \"\":\n          styleBox.applyStyles({\n            top: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n        case \"rl\":\n          styleBox.applyStyles({\n            left: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n        case \"lr\":\n          styleBox.applyStyles({\n            right: styleBox.formatStyle(linePos, \"%\")\n          });\n          break;\n      }\n      axis = [\"+y\", \"-x\", \"+x\", \"-y\"];\n\n      // Get the box position again after we've applied the specified positioning\n      // to it.\n      boxPosition = new BoxPosition(styleBox);\n    }\n    var bestPosition = findBestPosition(boxPosition, axis);\n    styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n  }\n  function WebVTT$1() {\n    // Nothing\n  }\n\n  // Helper to allow strings to be decoded instead of the default binary utf8 data.\n  WebVTT$1.StringDecoder = function () {\n    return {\n      decode: function (data) {\n        if (!data) {\n          return \"\";\n        }\n        if (typeof data !== \"string\") {\n          throw new Error(\"Error - expected string data.\");\n        }\n        return decodeURIComponent(encodeURIComponent(data));\n      }\n    };\n  };\n  WebVTT$1.convertCueToDOMTree = function (window, cuetext) {\n    if (!window || !cuetext) {\n      return null;\n    }\n    return parseContent(window, cuetext);\n  };\n  var FONT_SIZE_PERCENT = 0.05;\n  var FONT_STYLE = \"sans-serif\";\n  var CUE_BACKGROUND_PADDING = \"1.5%\";\n\n  // Runs the processing model over the cues and regions passed to it.\n  // @param overlay A block level element (usually a div) that the computed cues\n  //                and regions will be placed into.\n  WebVTT$1.processCues = function (window, cues, overlay) {\n    if (!window || !cues || !overlay) {\n      return null;\n    }\n\n    // Remove all previous children.\n    while (overlay.firstChild) {\n      overlay.removeChild(overlay.firstChild);\n    }\n    var paddedOverlay = window.document.createElement(\"div\");\n    paddedOverlay.style.position = \"absolute\";\n    paddedOverlay.style.left = \"0\";\n    paddedOverlay.style.right = \"0\";\n    paddedOverlay.style.top = \"0\";\n    paddedOverlay.style.bottom = \"0\";\n    paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n    overlay.appendChild(paddedOverlay);\n\n    // Determine if we need to compute the display states of the cues. This could\n    // be the case if a cue's state has been changed since the last computation or\n    // if it has not been computed yet.\n    function shouldCompute(cues) {\n      for (var i = 0; i < cues.length; i++) {\n        if (cues[i].hasBeenReset || !cues[i].displayState) {\n          return true;\n        }\n      }\n      return false;\n    }\n\n    // We don't need to recompute the cues' display states. Just reuse them.\n    if (!shouldCompute(cues)) {\n      for (var i = 0; i < cues.length; i++) {\n        paddedOverlay.appendChild(cues[i].displayState);\n      }\n      return;\n    }\n    var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n    var styleOptions = {\n      font: fontSize + \"px \" + FONT_STYLE\n    };\n    (function () {\n      var styleBox, cue;\n      for (var i = 0; i < cues.length; i++) {\n        cue = cues[i];\n\n        // Compute the intial position and styles of the cue div.\n        styleBox = new CueStyleBox(window, cue, styleOptions);\n        paddedOverlay.appendChild(styleBox.div);\n\n        // Move the cue div to it's correct line position.\n        moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n        // Remember the computed div so that we don't have to recompute it later\n        // if we don't have too.\n        cue.displayState = styleBox.div;\n        boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n      }\n    })();\n  };\n  WebVTT$1.Parser = function (window, vttjs, decoder) {\n    if (!decoder) {\n      decoder = vttjs;\n      vttjs = {};\n    }\n    if (!vttjs) {\n      vttjs = {};\n    }\n    this.window = window;\n    this.vttjs = vttjs;\n    this.state = \"INITIAL\";\n    this.buffer = \"\";\n    this.decoder = decoder || new TextDecoder(\"utf8\");\n    this.regionList = [];\n  };\n  WebVTT$1.Parser.prototype = {\n    // If the error is a ParsingError then report it to the consumer if\n    // possible. If it's not a ParsingError then throw it like normal.\n    reportOrThrowError: function (e) {\n      if (e instanceof ParsingError) {\n        this.onparsingerror && this.onparsingerror(e);\n      } else {\n        throw e;\n      }\n    },\n    parse: function (data) {\n      var self = this;\n\n      // If there is no data then we won't decode it, but will just try to parse\n      // whatever is in buffer already. This may occur in circumstances, for\n      // example when flush() is called.\n      if (data) {\n        // Try to decode the data that we received.\n        self.buffer += self.decoder.decode(data, {\n          stream: true\n        });\n      }\n      function collectNextLine() {\n        var buffer = self.buffer;\n        var pos = 0;\n        while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n          ++pos;\n        }\n        var line = buffer.substr(0, pos);\n        // Advance the buffer early in case we fail below.\n        if (buffer[pos] === '\\r') {\n          ++pos;\n        }\n        if (buffer[pos] === '\\n') {\n          ++pos;\n        }\n        self.buffer = buffer.substr(pos);\n        return line;\n      }\n\n      // 3.4 WebVTT region and WebVTT region settings syntax\n      function parseRegion(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"id\":\n              settings.set(k, v);\n              break;\n            case \"width\":\n              settings.percent(k, v);\n              break;\n            case \"lines\":\n              settings.integer(k, v);\n              break;\n            case \"regionanchor\":\n            case \"viewportanchor\":\n              var xy = v.split(',');\n              if (xy.length !== 2) {\n                break;\n              }\n              // We have to make sure both x and y parse, so use a temporary\n              // settings object here.\n              var anchor = new Settings();\n              anchor.percent(\"x\", xy[0]);\n              anchor.percent(\"y\", xy[1]);\n              if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n                break;\n              }\n              settings.set(k + \"X\", anchor.get(\"x\"));\n              settings.set(k + \"Y\", anchor.get(\"y\"));\n              break;\n            case \"scroll\":\n              settings.alt(k, v, [\"up\"]);\n              break;\n          }\n        }, /=/, /\\s/);\n\n        // Create the region, using default values for any values that were not\n        // specified.\n        if (settings.has(\"id\")) {\n          var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n          region.width = settings.get(\"width\", 100);\n          region.lines = settings.get(\"lines\", 3);\n          region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n          region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n          region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n          region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n          region.scroll = settings.get(\"scroll\", \"\");\n          // Register the region.\n          self.onregion && self.onregion(region);\n          // Remember the VTTRegion for later in case we parse any VTTCues that\n          // reference it.\n          self.regionList.push({\n            id: settings.get(\"id\"),\n            region: region\n          });\n        }\n      }\n\n      // draft-pantos-http-live-streaming-20\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n      // 3.5 WebVTT\n      function parseTimestampMap(input) {\n        var settings = new Settings();\n        parseOptions(input, function (k, v) {\n          switch (k) {\n            case \"MPEGT\":\n              settings.integer(k + 'S', v);\n              break;\n            case \"LOCA\":\n              settings.set(k + 'L', parseTimeStamp(v));\n              break;\n          }\n        }, /[^\\d]:/, /,/);\n        self.ontimestampmap && self.ontimestampmap({\n          \"MPEGTS\": settings.get(\"MPEGTS\"),\n          \"LOCAL\": settings.get(\"LOCAL\")\n        });\n      }\n\n      // 3.2 WebVTT metadata header syntax\n      function parseHeader(input) {\n        if (input.match(/X-TIMESTAMP-MAP/)) {\n          // This line contains HLS X-TIMESTAMP-MAP metadata\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"X-TIMESTAMP-MAP\":\n                parseTimestampMap(v);\n                break;\n            }\n          }, /=/);\n        } else {\n          parseOptions(input, function (k, v) {\n            switch (k) {\n              case \"Region\":\n                // 3.3 WebVTT region metadata header syntax\n                parseRegion(v);\n                break;\n            }\n          }, /:/);\n        }\n      }\n\n      // 5.1 WebVTT file parsing.\n      try {\n        var line;\n        if (self.state === \"INITIAL\") {\n          // We can't start parsing until we have the first line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n          line = collectNextLine();\n          var m = line.match(/^WEBVTT([ \\t].*)?$/);\n          if (!m || !m[0]) {\n            throw new ParsingError(ParsingError.Errors.BadSignature);\n          }\n          self.state = \"HEADER\";\n        }\n        var alreadyCollectedLine = false;\n        while (self.buffer) {\n          // We can't parse a line until we have the full line.\n          if (!/\\r\\n|\\n/.test(self.buffer)) {\n            return this;\n          }\n          if (!alreadyCollectedLine) {\n            line = collectNextLine();\n          } else {\n            alreadyCollectedLine = false;\n          }\n          switch (self.state) {\n            case \"HEADER\":\n              // 13-18 - Allow a header (metadata) under the WEBVTT line.\n              if (/:/.test(line)) {\n                parseHeader(line);\n              } else if (!line) {\n                // An empty line terminates the header and starts the body (cues).\n                self.state = \"ID\";\n              }\n              continue;\n            case \"NOTE\":\n              // Ignore NOTE blocks.\n              if (!line) {\n                self.state = \"ID\";\n              }\n              continue;\n            case \"ID\":\n              // Check for the start of NOTE blocks.\n              if (/^NOTE($|[ \\t])/.test(line)) {\n                self.state = \"NOTE\";\n                break;\n              }\n              // 19-29 - Allow any number of line terminators, then initialize new cue values.\n              if (!line) {\n                continue;\n              }\n              self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n              // Safari still uses the old middle value and won't accept center\n              try {\n                self.cue.align = \"center\";\n              } catch (e) {\n                self.cue.align = \"middle\";\n              }\n              self.state = \"CUE\";\n              // 30-39 - Check if self line contains an optional identifier or timing data.\n              if (line.indexOf(\"-->\") === -1) {\n                self.cue.id = line;\n                continue;\n              }\n            // Process line as start of a cue.\n            /*falls through*/\n            case \"CUE\":\n              // 40 - Collect cue timings and settings.\n              try {\n                parseCue(line, self.cue, self.regionList);\n              } catch (e) {\n                self.reportOrThrowError(e);\n                // In case of an error ignore rest of the cue.\n                self.cue = null;\n                self.state = \"BADCUE\";\n                continue;\n              }\n              self.state = \"CUETEXT\";\n              continue;\n            case \"CUETEXT\":\n              var hasSubstring = line.indexOf(\"-->\") !== -1;\n              // 34 - If we have an empty line then report the cue.\n              // 35 - If we have the special substring '-->' then report the cue,\n              // but do not collect the line as we need to process the current\n              // one as a new cue.\n              if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n                // We are done parsing self cue.\n                self.oncue && self.oncue(self.cue);\n                self.cue = null;\n                self.state = \"ID\";\n                continue;\n              }\n              if (self.cue.text) {\n                self.cue.text += \"\\n\";\n              }\n              self.cue.text += line.replace(/\\u2028/g, '\\n').replace(/u2029/g, '\\n');\n              continue;\n            case \"BADCUE\":\n              // BADCUE\n              // 54-62 - Collect and discard the remaining cue.\n              if (!line) {\n                self.state = \"ID\";\n              }\n              continue;\n          }\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n\n        // If we are currently parsing a cue, report what we have.\n        if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n          self.oncue(self.cue);\n        }\n        self.cue = null;\n        // Enter BADWEBVTT state if header was not parsed correctly otherwise\n        // another exception occurred so enter BADCUE state.\n        self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n      }\n      return this;\n    },\n    flush: function () {\n      var self = this;\n      try {\n        // Finish decoding the stream.\n        self.buffer += self.decoder.decode();\n        // Synthesize the end of the current cue or region.\n        if (self.cue || self.state === \"HEADER\") {\n          self.buffer += \"\\n\\n\";\n          self.parse();\n        }\n        // If we've flushed, parsed, and we're still on the INITIAL state then\n        // that means we don't have enough of the stream to parse the first\n        // line.\n        if (self.state === \"INITIAL\") {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n      } catch (e) {\n        self.reportOrThrowError(e);\n      }\n      self.onflush && self.onflush();\n      return this;\n    }\n  };\n  var vtt = WebVTT$1;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  var autoKeyword = \"auto\";\n  var directionSetting = {\n    \"\": 1,\n    \"lr\": 1,\n    \"rl\": 1\n  };\n  var alignSetting = {\n    \"start\": 1,\n    \"center\": 1,\n    \"end\": 1,\n    \"left\": 1,\n    \"right\": 1,\n    \"auto\": 1,\n    \"line-left\": 1,\n    \"line-right\": 1\n  };\n  function findDirectionSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var dir = directionSetting[value.toLowerCase()];\n    return dir ? value.toLowerCase() : false;\n  }\n  function findAlignSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var align = alignSetting[value.toLowerCase()];\n    return align ? value.toLowerCase() : false;\n  }\n  function VTTCue(startTime, endTime, text) {\n    /**\n     * Shim implementation specific properties. These properties are not in\n     * the spec.\n     */\n\n    // Lets us know when the VTTCue's data has changed in such a way that we need\n    // to recompute its display state. This lets us compute its display state\n    // lazily.\n    this.hasBeenReset = false;\n\n    /**\n     * VTTCue and TextTrackCue properties\n     * http://dev.w3.org/html5/webvtt/#vttcue-interface\n     */\n\n    var _id = \"\";\n    var _pauseOnExit = false;\n    var _startTime = startTime;\n    var _endTime = endTime;\n    var _text = text;\n    var _region = null;\n    var _vertical = \"\";\n    var _snapToLines = true;\n    var _line = \"auto\";\n    var _lineAlign = \"start\";\n    var _position = \"auto\";\n    var _positionAlign = \"auto\";\n    var _size = 100;\n    var _align = \"center\";\n    Object.defineProperties(this, {\n      \"id\": {\n        enumerable: true,\n        get: function () {\n          return _id;\n        },\n        set: function (value) {\n          _id = \"\" + value;\n        }\n      },\n      \"pauseOnExit\": {\n        enumerable: true,\n        get: function () {\n          return _pauseOnExit;\n        },\n        set: function (value) {\n          _pauseOnExit = !!value;\n        }\n      },\n      \"startTime\": {\n        enumerable: true,\n        get: function () {\n          return _startTime;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Start time must be set to a number.\");\n          }\n          _startTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"endTime\": {\n        enumerable: true,\n        get: function () {\n          return _endTime;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"End time must be set to a number.\");\n          }\n          _endTime = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"text\": {\n        enumerable: true,\n        get: function () {\n          return _text;\n        },\n        set: function (value) {\n          _text = \"\" + value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"region\": {\n        enumerable: true,\n        get: function () {\n          return _region;\n        },\n        set: function (value) {\n          _region = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"vertical\": {\n        enumerable: true,\n        get: function () {\n          return _vertical;\n        },\n        set: function (value) {\n          var setting = findDirectionSetting(value);\n          // Have to check for false because the setting an be an empty string.\n          if (setting === false) {\n            throw new SyntaxError(\"Vertical: an invalid or illegal direction string was specified.\");\n          }\n          _vertical = setting;\n          this.hasBeenReset = true;\n        }\n      },\n      \"snapToLines\": {\n        enumerable: true,\n        get: function () {\n          return _snapToLines;\n        },\n        set: function (value) {\n          _snapToLines = !!value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"line\": {\n        enumerable: true,\n        get: function () {\n          return _line;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\" && value !== autoKeyword) {\n            throw new SyntaxError(\"Line: an invalid number or illegal string was specified.\");\n          }\n          _line = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"lineAlign\": {\n        enumerable: true,\n        get: function () {\n          return _lineAlign;\n        },\n        set: function (value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            console.warn(\"lineAlign: an invalid or illegal string was specified.\");\n          } else {\n            _lineAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"position\": {\n        enumerable: true,\n        get: function () {\n          return _position;\n        },\n        set: function (value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Position must be between 0 and 100.\");\n          }\n          _position = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"positionAlign\": {\n        enumerable: true,\n        get: function () {\n          return _positionAlign;\n        },\n        set: function (value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            console.warn(\"positionAlign: an invalid or illegal string was specified.\");\n          } else {\n            _positionAlign = setting;\n            this.hasBeenReset = true;\n          }\n        }\n      },\n      \"size\": {\n        enumerable: true,\n        get: function () {\n          return _size;\n        },\n        set: function (value) {\n          if (value < 0 || value > 100) {\n            throw new Error(\"Size must be between 0 and 100.\");\n          }\n          _size = value;\n          this.hasBeenReset = true;\n        }\n      },\n      \"align\": {\n        enumerable: true,\n        get: function () {\n          return _align;\n        },\n        set: function (value) {\n          var setting = findAlignSetting(value);\n          if (!setting) {\n            throw new SyntaxError(\"align: an invalid or illegal alignment string was specified.\");\n          }\n          _align = setting;\n          this.hasBeenReset = true;\n        }\n      }\n    });\n\n    /**\n     * Other <track> spec defined properties\n     */\n\n    // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n    this.displayState = undefined;\n  }\n\n  /**\n   * VTTCue methods\n   */\n\n  VTTCue.prototype.getCueAsHTML = function () {\n    // Assume WebVTT.convertCueToDOMTree is on the global.\n    return WebVTT.convertCueToDOMTree(window, this.text);\n  };\n  var vttcue = VTTCue;\n\n  /**\n   * Copyright 2013 vtt.js Contributors\n   *\n   * Licensed under the Apache License, Version 2.0 (the \"License\");\n   * you may not use this file except in compliance with the License.\n   * You may obtain a copy of the License at\n   *\n   *   http://www.apache.org/licenses/LICENSE-2.0\n   *\n   * Unless required by applicable law or agreed to in writing, software\n   * distributed under the License is distributed on an \"AS IS\" BASIS,\n   * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n   * See the License for the specific language governing permissions and\n   * limitations under the License.\n   */\n\n  var scrollSetting = {\n    \"\": true,\n    \"up\": true\n  };\n  function findScrollSetting(value) {\n    if (typeof value !== \"string\") {\n      return false;\n    }\n    var scroll = scrollSetting[value.toLowerCase()];\n    return scroll ? value.toLowerCase() : false;\n  }\n  function isValidPercentValue(value) {\n    return typeof value === \"number\" && value >= 0 && value <= 100;\n  }\n\n  // VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\n  function VTTRegion() {\n    var _width = 100;\n    var _lines = 3;\n    var _regionAnchorX = 0;\n    var _regionAnchorY = 100;\n    var _viewportAnchorX = 0;\n    var _viewportAnchorY = 100;\n    var _scroll = \"\";\n    Object.defineProperties(this, {\n      \"width\": {\n        enumerable: true,\n        get: function () {\n          return _width;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"Width must be between 0 and 100.\");\n          }\n          _width = value;\n        }\n      },\n      \"lines\": {\n        enumerable: true,\n        get: function () {\n          return _lines;\n        },\n        set: function (value) {\n          if (typeof value !== \"number\") {\n            throw new TypeError(\"Lines must be set to a number.\");\n          }\n          _lines = value;\n        }\n      },\n      \"regionAnchorY\": {\n        enumerable: true,\n        get: function () {\n          return _regionAnchorY;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n          }\n          _regionAnchorY = value;\n        }\n      },\n      \"regionAnchorX\": {\n        enumerable: true,\n        get: function () {\n          return _regionAnchorX;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n          }\n          _regionAnchorX = value;\n        }\n      },\n      \"viewportAnchorY\": {\n        enumerable: true,\n        get: function () {\n          return _viewportAnchorY;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n          }\n          _viewportAnchorY = value;\n        }\n      },\n      \"viewportAnchorX\": {\n        enumerable: true,\n        get: function () {\n          return _viewportAnchorX;\n        },\n        set: function (value) {\n          if (!isValidPercentValue(value)) {\n            throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n          }\n          _viewportAnchorX = value;\n        }\n      },\n      \"scroll\": {\n        enumerable: true,\n        get: function () {\n          return _scroll;\n        },\n        set: function (value) {\n          var setting = findScrollSetting(value);\n          // Have to check for false as an empty string is a legal value.\n          if (setting === false) {\n            console.warn(\"Scroll: an invalid or illegal string was specified.\");\n          } else {\n            _scroll = setting;\n          }\n        }\n      }\n    });\n  }\n  var vttregion = VTTRegion;\n\n  var browserIndex = createCommonjsModule(function (module) {\n    /**\n     * Copyright 2013 vtt.js Contributors\n     *\n     * Licensed under the Apache License, Version 2.0 (the \"License\");\n     * you may not use this file except in compliance with the License.\n     * You may obtain a copy of the License at\n     *\n     *   http://www.apache.org/licenses/LICENSE-2.0\n     *\n     * Unless required by applicable law or agreed to in writing, software\n     * distributed under the License is distributed on an \"AS IS\" BASIS,\n     * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n     * See the License for the specific language governing permissions and\n     * limitations under the License.\n     */\n\n    // Default exports for Node. Export the extended versions of VTTCue and\n    // VTTRegion in Node since we likely want the capability to convert back and\n    // forth between JSON. If we don't then it's not that big of a deal since we're\n    // off browser.\n\n    var vttjs = module.exports = {\n      WebVTT: vtt,\n      VTTCue: vttcue,\n      VTTRegion: vttregion\n    };\n    window_1.vttjs = vttjs;\n    window_1.WebVTT = vttjs.WebVTT;\n    var cueShim = vttjs.VTTCue;\n    var regionShim = vttjs.VTTRegion;\n    var nativeVTTCue = window_1.VTTCue;\n    var nativeVTTRegion = window_1.VTTRegion;\n    vttjs.shim = function () {\n      window_1.VTTCue = cueShim;\n      window_1.VTTRegion = regionShim;\n    };\n    vttjs.restore = function () {\n      window_1.VTTCue = nativeVTTCue;\n      window_1.VTTRegion = nativeVTTRegion;\n    };\n    if (!window_1.VTTCue) {\n      vttjs.shim();\n    }\n  });\n  browserIndex.WebVTT;\n  browserIndex.VTTCue;\n  browserIndex.VTTRegion;\n\n  /**\n   * @file tech.js\n   */\n\n  /**\n   * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n   * that just contains the src url alone.\n   * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n     * `var SourceString = 'http://example.com/some-video.mp4';`\n   *\n   * @typedef {Object|string} Tech~SourceObject\n   *\n   * @property {string} src\n   *           The url to the source\n   *\n   * @property {string} type\n   *           The mime type of the source\n   */\n\n  /**\n   * A function used by {@link Tech} to create a new {@link TextTrack}.\n   *\n   * @private\n   *\n   * @param {Tech} self\n   *        An instance of the Tech class.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @param {Object} [options={}]\n   *        An object with additional text track options\n   *\n   * @return {TextTrack}\n   *          The text track that was created.\n   */\n  function createTrackHelper(self, kind, label, language, options = {}) {\n    const tracks = self.textTracks();\n    options.kind = kind;\n    if (label) {\n      options.label = label;\n    }\n    if (language) {\n      options.language = language;\n    }\n    options.tech = self;\n    const track = new ALL.text.TrackClass(options);\n    tracks.addTrack(track);\n    return track;\n  }\n\n  /**\n   * This is the base class for media playback technology controllers, such as\n   * {@link HTML5}\n   *\n   * @extends Component\n   */\n  class Tech extends Component$1 {\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} [ready]\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    constructor(options = {}, ready = function () {}) {\n      // we don't want the tech to report user activity automatically.\n      // This is done manually in addControlsListeners\n      options.reportTouchActivity = false;\n      super(null, options, ready);\n      this.onDurationChange_ = e => this.onDurationChange(e);\n      this.trackProgress_ = e => this.trackProgress(e);\n      this.trackCurrentTime_ = e => this.trackCurrentTime(e);\n      this.stopTrackingCurrentTime_ = e => this.stopTrackingCurrentTime(e);\n      this.disposeSourceHandler_ = e => this.disposeSourceHandler(e);\n      this.queuedHanders_ = new Set();\n\n      // keep track of whether the current source has played at all to\n      // implement a very limited played()\n      this.hasStarted_ = false;\n      this.on('playing', function () {\n        this.hasStarted_ = true;\n      });\n      this.on('loadstart', function () {\n        this.hasStarted_ = false;\n      });\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        if (options && options[props.getterName]) {\n          this[props.privateName] = options[props.getterName];\n        }\n      });\n\n      // Manually track progress in cases where the browser/tech doesn't report it.\n      if (!this.featuresProgressEvents) {\n        this.manualProgressOn();\n      }\n\n      // Manually track timeupdates in cases where the browser/tech doesn't report it.\n      if (!this.featuresTimeupdateEvents) {\n        this.manualTimeUpdatesOn();\n      }\n      ['Text', 'Audio', 'Video'].forEach(track => {\n        if (options[`native${track}Tracks`] === false) {\n          this[`featuresNative${track}Tracks`] = false;\n        }\n      });\n      if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n        this.featuresNativeTextTracks = false;\n      } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n        this.featuresNativeTextTracks = true;\n      }\n      if (!this.featuresNativeTextTracks) {\n        this.emulateTextTracks();\n      }\n      this.preloadTextTracks = options.preloadTextTracks !== false;\n      this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n      this.initTrackListeners();\n\n      // Turn on component tap events only if not using native controls\n      if (!options.nativeControlsForTouch) {\n        this.emitTapEvents();\n      }\n      if (this.constructor) {\n        this.name_ = this.constructor.name || 'Unknown Tech';\n      }\n    }\n\n    /**\n     * A special function to trigger source set in a way that will allow player\n     * to re-trigger if the player or tech are not ready yet.\n     *\n     * @fires Tech#sourceset\n     * @param {string} src The source string at the time of the source changing.\n     */\n    triggerSourceset(src) {\n      if (!this.isReady_) {\n        // on initial ready we have to trigger source set\n        // 1ms after ready so that player can watch for it.\n        this.one('ready', () => this.setTimeout(() => this.triggerSourceset(src), 1));\n      }\n\n      /**\n       * Fired when the source is set on the tech causing the media element\n       * to reload.\n       *\n       * @see {@link Player#event:sourceset}\n       * @event Tech#sourceset\n       * @type {EventTarget~Event}\n       */\n      this.trigger({\n        src,\n        type: 'sourceset'\n      });\n    }\n\n    /* Fallbacks for unsupported event types\n    ================================================================================ */\n\n    /**\n     * Polyfill the `progress` event for browsers that don't support it natively.\n     *\n     * @see {@link Tech#trackProgress}\n     */\n    manualProgressOn() {\n      this.on('durationchange', this.onDurationChange_);\n      this.manualProgress = true;\n\n      // Trigger progress watching when a source begins loading\n      this.one('ready', this.trackProgress_);\n    }\n\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     */\n    manualProgressOff() {\n      this.manualProgress = false;\n      this.stopTrackingProgress();\n      this.off('durationchange', this.onDurationChange_);\n    }\n\n    /**\n     * This is used to trigger a `progress` event when the buffered percent changes. It\n     * sets an interval function that will be called every 500 milliseconds to check if the\n     * buffer end percent has changed.\n     *\n     * > This function is called by {@link Tech#manualProgressOn}\n     *\n     * @param {EventTarget~Event} event\n     *        The `ready` event that caused this to run.\n     *\n     * @listens Tech#ready\n     * @fires Tech#progress\n     */\n    trackProgress(event) {\n      this.stopTrackingProgress();\n      this.progressInterval = this.setInterval(bind_(this, function () {\n        // Don't trigger unless buffered amount is greater than last time\n\n        const numBufferedPercent = this.bufferedPercent();\n        if (this.bufferedPercent_ !== numBufferedPercent) {\n          /**\n           * See {@link Player#progress}\n           *\n           * @event Tech#progress\n           * @type {EventTarget~Event}\n           */\n          this.trigger('progress');\n        }\n        this.bufferedPercent_ = numBufferedPercent;\n        if (numBufferedPercent === 1) {\n          this.stopTrackingProgress();\n        }\n      }), 500);\n    }\n\n    /**\n     * Update our internal duration on a `durationchange` event by calling\n     * {@link Tech#duration}.\n     *\n     * @param {EventTarget~Event} event\n     *        The `durationchange` event that caused this to run.\n     *\n     * @listens Tech#durationchange\n     */\n    onDurationChange(event) {\n      this.duration_ = this.duration();\n    }\n\n    /**\n     * Get and create a `TimeRange` object for buffering.\n     *\n     * @return {TimeRange}\n     *         The time range object that was created.\n     */\n    buffered() {\n      return createTimeRanges$1(0, 0);\n    }\n\n    /**\n     * Get the percentage of the current video that is currently buffered.\n     *\n     * @return {number}\n     *         A number from 0 to 1 that represents the decimal percentage of the\n     *         video that is buffered.\n     *\n     */\n    bufferedPercent() {\n      return bufferedPercent(this.buffered(), this.duration_);\n    }\n\n    /**\n     * Turn off the polyfill for `progress` events that was created in\n     * {@link Tech#manualProgressOn}\n     * Stop manually tracking progress events by clearing the interval that was set in\n     * {@link Tech#trackProgress}.\n     */\n    stopTrackingProgress() {\n      this.clearInterval(this.progressInterval);\n    }\n\n    /**\n     * Polyfill the `timeupdate` event for browsers that don't support it.\n     *\n     * @see {@link Tech#trackCurrentTime}\n     */\n    manualTimeUpdatesOn() {\n      this.manualTimeUpdates = true;\n      this.on('play', this.trackCurrentTime_);\n      this.on('pause', this.stopTrackingCurrentTime_);\n    }\n\n    /**\n     * Turn off the polyfill for `timeupdate` events that was created in\n     * {@link Tech#manualTimeUpdatesOn}\n     */\n    manualTimeUpdatesOff() {\n      this.manualTimeUpdates = false;\n      this.stopTrackingCurrentTime();\n      this.off('play', this.trackCurrentTime_);\n      this.off('pause', this.stopTrackingCurrentTime_);\n    }\n\n    /**\n     * Sets up an interval function to track current time and trigger `timeupdate` every\n     * 250 milliseconds.\n     *\n     * @listens Tech#play\n     * @triggers Tech#timeupdate\n     */\n    trackCurrentTime() {\n      if (this.currentTimeInterval) {\n        this.stopTrackingCurrentTime();\n      }\n      this.currentTimeInterval = this.setInterval(function () {\n        /**\n         * Triggered at an interval of 250ms to indicated that time is passing in the video.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n\n        // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n      }, 250);\n    }\n\n    /**\n     * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n     * `timeupdate` event is no longer triggered.\n     *\n     * @listens {Tech#pause}\n     */\n    stopTrackingCurrentTime() {\n      this.clearInterval(this.currentTimeInterval);\n\n      // #1002 - if the video ends right before the next timeupdate would happen,\n      // the progress bar won't make it all the way to the end\n      this.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n    }\n\n    /**\n     * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n     * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n     *\n     * @fires Component#dispose\n     */\n    dispose() {\n      // clear out all tracks because we can't reuse them between techs\n      this.clearTracks(NORMAL.names);\n\n      // Turn off any manual progress or timeupdate tracking\n      if (this.manualProgress) {\n        this.manualProgressOff();\n      }\n      if (this.manualTimeUpdates) {\n        this.manualTimeUpdatesOff();\n      }\n      super.dispose();\n    }\n\n    /**\n     * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n     *\n     * > Note: Techs without source handlers should call this between sources for `video`\n     *         & `audio` tracks. You don't want to use them between tracks!\n     *\n     * @param {string[]|string} types\n     *        TrackList names to clear, valid names are `video`, `audio`, and\n     *        `text`.\n     */\n    clearTracks(types) {\n      types = [].concat(types);\n      // clear out all tracks because we can't reuse them between techs\n      types.forEach(type => {\n        const list = this[`${type}Tracks`]() || [];\n        let i = list.length;\n        while (i--) {\n          const track = list[i];\n          if (type === 'text') {\n            this.removeRemoteTextTrack(track);\n          }\n          list.removeTrack(track);\n        }\n      });\n    }\n\n    /**\n     * Remove any TextTracks added via addRemoteTextTrack that are\n     * flagged for automatic garbage collection\n     */\n    cleanupAutoTextTracks() {\n      const list = this.autoRemoteTextTracks_ || [];\n      let i = list.length;\n      while (i--) {\n        const track = list[i];\n        this.removeRemoteTextTrack(track);\n      }\n    }\n\n    /**\n     * Reset the tech, which will removes all sources and reset the internal readyState.\n     *\n     * @abstract\n     */\n    reset() {}\n\n    /**\n     * Get the value of `crossOrigin` from the tech.\n     *\n     * @abstract\n     *\n     * @see {Html5#crossOrigin}\n     */\n    crossOrigin() {}\n\n    /**\n     * Set the value of `crossOrigin` on the tech.\n     *\n     * @abstract\n     *\n     * @param {string} crossOrigin the crossOrigin value\n     * @see {Html5#setCrossOrigin}\n     */\n    setCrossOrigin() {}\n\n    /**\n     * Get or set an error on the Tech.\n     *\n     * @param {MediaError} [err]\n     *        Error to set on the Tech\n     *\n     * @return {MediaError|null}\n     *         The current error object on the tech, or null if there isn't one.\n     */\n    error(err) {\n      if (err !== undefined) {\n        this.error_ = new MediaError(err);\n        this.trigger('error');\n      }\n      return this.error_;\n    }\n\n    /**\n     * Returns the `TimeRange`s that have been played through for the current source.\n     *\n     * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n     *         It only checks whether the source has played at all or not.\n     *\n     * @return {TimeRange}\n     *         - A single time range if this video has played\n     *         - An empty set of ranges if not.\n     */\n    played() {\n      if (this.hasStarted_) {\n        return createTimeRanges$1(0, 0);\n      }\n      return createTimeRanges$1();\n    }\n\n    /**\n     * Start playback\n     *\n     * @abstract\n     *\n     * @see {Html5#play}\n     */\n    play() {}\n\n    /**\n     * Set whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#setScrubbing}\n     */\n    setScrubbing() {}\n\n    /**\n     * Get whether we are scrubbing or not\n     *\n     * @abstract\n     *\n     * @see {Html5#scrubbing}\n     */\n    scrubbing() {}\n\n    /**\n     * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n     * previously called.\n     *\n     * @fires Tech#timeupdate\n     */\n    setCurrentTime() {\n      // improve the accuracy of manual timeupdates\n      if (this.manualTimeUpdates) {\n        /**\n         * A manual `timeupdate` event.\n         *\n         * @event Tech#timeupdate\n         * @type {EventTarget~Event}\n         */\n        this.trigger({\n          type: 'timeupdate',\n          target: this,\n          manuallyTriggered: true\n        });\n      }\n    }\n\n    /**\n     * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n     * {@link TextTrackList} events.\n     *\n     * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n     *\n     * @fires Tech#audiotrackchange\n     * @fires Tech#videotrackchange\n     * @fires Tech#texttrackchange\n     */\n    initTrackListeners() {\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n        *\n        * @event Tech#audiotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n        *\n        * @event Tech#videotrackchange\n        * @type {EventTarget~Event}\n        */\n\n      /**\n        * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n        *\n        * @event Tech#texttrackchange\n        * @type {EventTarget~Event}\n        */\n      NORMAL.names.forEach(name => {\n        const props = NORMAL[name];\n        const trackListChanges = () => {\n          this.trigger(`${name}trackchange`);\n        };\n        const tracks = this[props.getterName]();\n        tracks.addEventListener('removetrack', trackListChanges);\n        tracks.addEventListener('addtrack', trackListChanges);\n        this.on('dispose', () => {\n          tracks.removeEventListener('removetrack', trackListChanges);\n          tracks.removeEventListener('addtrack', trackListChanges);\n        });\n      });\n    }\n\n    /**\n     * Emulate TextTracks using vtt.js if necessary\n     *\n     * @fires Tech#vttjsloaded\n     * @fires Tech#vttjserror\n     */\n    addWebVttScript_() {\n      if (window.WebVTT) {\n        return;\n      }\n\n      // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n      // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n      // before inserting the WebVTT script\n      if (document.body.contains(this.el())) {\n        // load via require if available and vtt.js script location was not passed in\n        // as an option. novtt builds will turn the above require call into an empty object\n        // which will cause this if check to always fail.\n        if (!this.options_['vtt.js'] && isPlain(browserIndex) && Object.keys(browserIndex).length > 0) {\n          this.trigger('vttjsloaded');\n          return;\n        }\n\n        // load vtt.js via the script location option or the cdn of no location was\n        // passed in\n        const script = document.createElement('script');\n        script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.14.1/vtt.min.js';\n        script.onload = () => {\n          /**\n           * Fired when vtt.js is loaded.\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          this.trigger('vttjsloaded');\n        };\n        script.onerror = () => {\n          /**\n           * Fired when vtt.js was not loaded due to an error\n           *\n           * @event Tech#vttjsloaded\n           * @type {EventTarget~Event}\n           */\n          this.trigger('vttjserror');\n        };\n        this.on('dispose', () => {\n          script.onload = null;\n          script.onerror = null;\n        });\n        // but have not loaded yet and we set it to true before the inject so that\n        // we don't overwrite the injected window.WebVTT if it loads right away\n        window.WebVTT = true;\n        this.el().parentNode.appendChild(script);\n      } else {\n        this.ready(this.addWebVttScript_);\n      }\n    }\n\n    /**\n     * Emulate texttracks\n     *\n     */\n    emulateTextTracks() {\n      const tracks = this.textTracks();\n      const remoteTracks = this.remoteTextTracks();\n      const handleAddTrack = e => tracks.addTrack(e.track);\n      const handleRemoveTrack = e => tracks.removeTrack(e.track);\n      remoteTracks.on('addtrack', handleAddTrack);\n      remoteTracks.on('removetrack', handleRemoveTrack);\n      this.addWebVttScript_();\n      const updateDisplay = () => this.trigger('texttrackchange');\n      const textTracksChanges = () => {\n        updateDisplay();\n        for (let i = 0; i < tracks.length; i++) {\n          const track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n          if (track.mode === 'showing') {\n            track.addEventListener('cuechange', updateDisplay);\n          }\n        }\n      };\n      textTracksChanges();\n      tracks.addEventListener('change', textTracksChanges);\n      tracks.addEventListener('addtrack', textTracksChanges);\n      tracks.addEventListener('removetrack', textTracksChanges);\n      this.on('dispose', function () {\n        remoteTracks.off('addtrack', handleAddTrack);\n        remoteTracks.off('removetrack', handleRemoveTrack);\n        tracks.removeEventListener('change', textTracksChanges);\n        tracks.removeEventListener('addtrack', textTracksChanges);\n        tracks.removeEventListener('removetrack', textTracksChanges);\n        for (let i = 0; i < tracks.length; i++) {\n          const track = tracks[i];\n          track.removeEventListener('cuechange', updateDisplay);\n        }\n      });\n    }\n\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    addTextTrack(kind, label, language) {\n      if (!kind) {\n        throw new Error('TextTrack kind is required but was not provided');\n      }\n      return createTrackHelper(this, kind, label, language);\n    }\n\n    /**\n     * Create an emulated TextTrack for use by addRemoteTextTrack\n     *\n     * This is intended to be overridden by classes that inherit from\n     * Tech in order to create native or custom TextTracks.\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label].\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    createRemoteTextTrack(options) {\n      const track = merge$2(options, {\n        tech: this\n      });\n      return new REMOTE.remoteTextEl.TrackClass(track);\n    }\n\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     * @param {Object} options\n     *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n     *\n     * @param {boolean} [manualCleanup=false]\n     *        - When false: the TextTrack will be automatically removed from the video\n     *          element whenever the source changes\n     *        - When True: The TextTrack will have to be cleaned up manually\n     *\n     * @return {HTMLTrackElement}\n     *         An Html Track Element.\n     *\n     */\n    addRemoteTextTrack(options = {}, manualCleanup) {\n      const htmlTrackElement = this.createRemoteTextTrack(options);\n      if (typeof manualCleanup !== 'boolean') {\n        manualCleanup = false;\n      }\n\n      // store HTMLTrackElement and TextTrack to remote list\n      this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n      this.remoteTextTracks().addTrack(htmlTrackElement.track);\n      if (manualCleanup === false) {\n        // create the TextTrackList if it doesn't exist\n        this.ready(() => this.autoRemoteTextTracks_.addTrack(htmlTrackElement.track));\n      }\n      return htmlTrackElement;\n    }\n\n    /**\n     * Remove a remote text track from the remote `TextTrackList`.\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` to remove from the `TextTrackList`\n     */\n    removeRemoteTextTrack(track) {\n      const trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n      // remove HTMLTrackElement and TextTrack from remote list\n      this.remoteTextTrackEls().removeTrackElement_(trackElement);\n      this.remoteTextTracks().removeTrack(track);\n      this.autoRemoteTextTracks_.removeTrack(track);\n    }\n\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     *\n     * @abstract\n     */\n    getVideoPlaybackQuality() {\n      return {};\n    }\n\n    /**\n     * Attempt to create a floating video window always on top of other windows\n     * so that users may continue consuming media while they interact with other\n     * content sites, or applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise|undefined}\n     *         A promise with a Picture-in-Picture window if the browser supports\n     *         Promises (or one was passed in as an option). It returns undefined\n     *         otherwise.\n     *\n     * @abstract\n     */\n    requestPictureInPicture() {\n      return Promise.reject();\n    }\n\n    /**\n     * A method to check for the value of the 'disablePictureInPicture' <video> property.\n     * Defaults to true, as it should be considered disabled if the tech does not support pip\n     *\n     * @abstract\n     */\n    disablePictureInPicture() {\n      return true;\n    }\n\n    /**\n     * A method to set or unset the 'disablePictureInPicture' <video> property.\n     *\n     * @abstract\n     */\n    setDisablePictureInPicture() {}\n\n    /**\n     * A fallback implementation of requestVideoFrameCallback using requestAnimationFrame\n     *\n     * @param {function} cb\n     * @return {number} request id\n     */\n    requestVideoFrameCallback(cb) {\n      const id = newGUID();\n      if (!this.isReady_ || this.paused()) {\n        this.queuedHanders_.add(id);\n        this.one('playing', () => {\n          if (this.queuedHanders_.has(id)) {\n            this.queuedHanders_.delete(id);\n            cb();\n          }\n        });\n      } else {\n        this.requestNamedAnimationFrame(id, cb);\n      }\n      return id;\n    }\n\n    /**\n     * A fallback implementation of cancelVideoFrameCallback\n     *\n     * @param {number} id id of callback to be cancelled\n     */\n    cancelVideoFrameCallback(id) {\n      if (this.queuedHanders_.has(id)) {\n        this.queuedHanders_.delete(id);\n      } else {\n        this.cancelNamedAnimationFrame(id);\n      }\n    }\n\n    /**\n     * A method to set a poster from a `Tech`.\n     *\n     * @abstract\n     */\n    setPoster() {}\n\n    /**\n     * A method to check for the presence of the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    playsinline() {}\n\n    /**\n     * A method to set or unset the 'playsinline' <video> attribute.\n     *\n     * @abstract\n     */\n    setPlaysinline() {}\n\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     *\n     * @abstract\n     */\n    overrideNativeAudioTracks() {}\n\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     *\n     * @abstract\n     */\n    overrideNativeVideoTracks() {}\n\n    /*\n     * Check if the tech can support the given mime-type.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param  {string} type\n     *         The mimetype to check for support\n     *\n     * @return {string}\n     *         'probably', 'maybe', or empty string\n     *\n     * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n     *\n     * @abstract\n     */\n    canPlayType() {\n      return '';\n    }\n\n    /**\n     * Check if the type is supported by this tech.\n     *\n     * The base tech does not support any type, but source handlers might\n     * overwrite this.\n     *\n     * @param {string} type\n     *        The media type to check\n     * @return {string} Returns the native video element's response\n     */\n    static canPlayType() {\n      return '';\n    }\n\n    /**\n     * Check if the tech can support the given source\n     *\n     * @param {Object} srcObj\n     *        The source object\n     * @param {Object} options\n     *        The options passed to the tech\n     * @return {string} 'probably', 'maybe', or '' (empty string)\n     */\n    static canPlaySource(srcObj, options) {\n      return Tech.canPlayType(srcObj.type);\n    }\n\n    /*\n     * Return whether the argument is a Tech or not.\n     * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n     *\n     * @param {Object} component\n     *        The item to check\n     *\n     * @return {boolean}\n     *         Whether it is a tech or not\n     *         - True if it is a tech\n     *         - False if it is not\n     */\n    static isTech(component) {\n      return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n    }\n\n    /**\n     * Registers a `Tech` into a shared list for videojs.\n     *\n     * @param {string} name\n     *        Name of the `Tech` to register.\n     *\n     * @param {Object} tech\n     *        The `Tech` class to register.\n     */\n    static registerTech(name, tech) {\n      if (!Tech.techs_) {\n        Tech.techs_ = {};\n      }\n      if (!Tech.isTech(tech)) {\n        throw new Error(`Tech ${name} must be a Tech`);\n      }\n      if (!Tech.canPlayType) {\n        throw new Error('Techs must have a static canPlayType method on them');\n      }\n      if (!Tech.canPlaySource) {\n        throw new Error('Techs must have a static canPlaySource method on them');\n      }\n      name = toTitleCase$1(name);\n      Tech.techs_[name] = tech;\n      Tech.techs_[toLowerCase(name)] = tech;\n      if (name !== 'Tech') {\n        // camel case the techName for use in techOrder\n        Tech.defaultTechOrder_.push(name);\n      }\n      return tech;\n    }\n\n    /**\n     * Get a `Tech` from the shared list by name.\n     *\n     * @param {string} name\n     *        `camelCase` or `TitleCase` name of the Tech to get\n     *\n     * @return {Tech|undefined}\n     *         The `Tech` or undefined if there was no tech with the name requested.\n     */\n    static getTech(name) {\n      if (!name) {\n        return;\n      }\n      if (Tech.techs_ && Tech.techs_[name]) {\n        return Tech.techs_[name];\n      }\n      name = toTitleCase$1(name);\n      if (window && window.videojs && window.videojs[name]) {\n        log$1.warn(`The ${name} tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)`);\n        return window.videojs[name];\n      }\n    }\n  }\n\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @returns {VideoTrackList}\n   * @method Tech.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @returns {AudioTrackList}\n   * @method Tech.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.textTracks\n   */\n\n  /**\n   * Get the remote element {@link TextTrackList}\n   *\n   * @returns {TextTrackList}\n   * @method Tech.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote element {@link HtmlTrackElementList}\n   *\n   * @returns {HtmlTrackElementList}\n   * @method Tech.prototype.remoteTextTrackEls\n   */\n\n  ALL.names.forEach(function (name) {\n    const props = ALL[name];\n    Tech.prototype[props.getterName] = function () {\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n\n  /**\n   * List of associated text tracks\n   *\n   * @type {TextTrackList}\n   * @private\n   * @property Tech#textTracks_\n   */\n\n  /**\n   * List of associated audio tracks.\n   *\n   * @type {AudioTrackList}\n   * @private\n   * @property Tech#audioTracks_\n   */\n\n  /**\n   * List of associated video tracks.\n   *\n   * @type {VideoTrackList}\n   * @private\n   * @property Tech#videoTracks_\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresVolumeControl = true;\n\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default\n   */\n  Tech.prototype.featuresMuteControl = true;\n\n  /**\n   * Boolean indicating whether the `Tech` supports fullscreen resize control.\n   * Resizing plugins using request fullscreen reloads the plugin\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresFullscreenResize = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the video\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresPlaybackRate = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `progress` event.\n   * This will be used to determine if {@link Tech#manualProgressOn} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresProgressEvents = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n   * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n   * a new source.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresSourceset = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `timeupdate` event.\n   * This will be used to determine if {@link Tech#manualTimeUpdates} should be called.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresTimeupdateEvents = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports the native `TextTrack`s.\n   * This will help us integrate with native `TextTrack`s if the browser supports them.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresNativeTextTracks = false;\n\n  /**\n   * Boolean indicating whether the `Tech` supports `requestVideoFrameCallback`.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Tech.prototype.featuresVideoFrameCallback = false;\n\n  /**\n   * A functional mixin for techs that want to use the Source Handler pattern.\n   * Source handlers are scripts for handling specific formats.\n   * The source handler pattern is used for adaptive formats (HLS, DASH) that\n   * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n   * Example: `Tech.withSourceHandlers.call(MyTech);`\n   *\n   * @param {Tech} _Tech\n   *        The tech to add source handler functions to.\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   */\n  Tech.withSourceHandlers = function (_Tech) {\n    /**\n     * Register a source handler\n     *\n     * @param {Function} handler\n     *        The source handler class\n     *\n     * @param {number} [index]\n     *        Register it at the following index\n     */\n    _Tech.registerSourceHandler = function (handler, index) {\n      let handlers = _Tech.sourceHandlers;\n      if (!handlers) {\n        handlers = _Tech.sourceHandlers = [];\n      }\n      if (index === undefined) {\n        // add to the end of the list\n        index = handlers.length;\n      }\n      handlers.splice(index, 0, handler);\n    };\n\n    /**\n     * Check if the tech can support the given type. Also checks the\n     * Techs sourceHandlers.\n     *\n     * @param {string} type\n     *         The mimetype to check.\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    _Tech.canPlayType = function (type) {\n      const handlers = _Tech.sourceHandlers || [];\n      let can;\n      for (let i = 0; i < handlers.length; i++) {\n        can = handlers[i].canPlayType(type);\n        if (can) {\n          return can;\n        }\n      }\n      return '';\n    };\n\n    /**\n     * Returns the first source handler that supports the source.\n     *\n     * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {SourceHandler|null}\n     *          The first source handler that supports the source or null if\n     *          no SourceHandler supports the source\n     */\n    _Tech.selectSourceHandler = function (source, options) {\n      const handlers = _Tech.sourceHandlers || [];\n      let can;\n      for (let i = 0; i < handlers.length; i++) {\n        can = handlers[i].canHandleSource(source, options);\n        if (can) {\n          return handlers[i];\n        }\n      }\n      return null;\n    };\n\n    /**\n     * Check if the tech can support the given source.\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        The source object\n     *\n     * @param {Object} options\n     *        The options passed to the tech\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    _Tech.canPlaySource = function (srcObj, options) {\n      const sh = _Tech.selectSourceHandler(srcObj, options);\n      if (sh) {\n        return sh.canHandleSource(srcObj, options);\n      }\n      return '';\n    };\n\n    /**\n     * When using a source handler, prefer its implementation of\n     * any function normally provided by the tech.\n     */\n    const deferrable = ['seekable', 'seeking', 'duration'];\n\n    /**\n     * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n     * function if it exists, with a fallback to the Techs seekable function.\n     *\n     * @method _Tech.seekable\n     */\n\n    /**\n     * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n     * function if it exists, otherwise it will fallback to the techs duration function.\n     *\n     * @method _Tech.duration\n     */\n\n    deferrable.forEach(function (fnName) {\n      const originalFn = this[fnName];\n      if (typeof originalFn !== 'function') {\n        return;\n      }\n      this[fnName] = function () {\n        if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n          return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n        }\n        return originalFn.apply(this, arguments);\n      };\n    }, _Tech.prototype);\n\n    /**\n     * Create a function for setting the source using a source object\n     * and source handlers.\n     * Should never be called unless a source handler was found.\n     *\n     * @param {Tech~SourceObject} source\n     *        A source object with src and type keys\n     */\n    _Tech.prototype.setSource = function (source) {\n      let sh = _Tech.selectSourceHandler(source, this.options_);\n      if (!sh) {\n        // Fall back to a native source hander when unsupported sources are\n        // deliberately set\n        if (_Tech.nativeSourceHandler) {\n          sh = _Tech.nativeSourceHandler;\n        } else {\n          log$1.error('No source handler found for the current source.');\n        }\n      }\n\n      // Dispose any existing source handler\n      this.disposeSourceHandler();\n      this.off('dispose', this.disposeSourceHandler_);\n      if (sh !== _Tech.nativeSourceHandler) {\n        this.currentSource_ = source;\n      }\n      this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n      this.one('dispose', this.disposeSourceHandler_);\n    };\n\n    /**\n     * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n     *\n     * @listens Tech#dispose\n     */\n    _Tech.prototype.disposeSourceHandler = function () {\n      // if we have a source and get another one\n      // then we are loading something new\n      // than clear all of our current tracks\n      if (this.currentSource_) {\n        this.clearTracks(['audio', 'video']);\n        this.currentSource_ = null;\n      }\n\n      // always clean up auto-text tracks\n      this.cleanupAutoTextTracks();\n      if (this.sourceHandler_) {\n        if (this.sourceHandler_.dispose) {\n          this.sourceHandler_.dispose();\n        }\n        this.sourceHandler_ = null;\n      }\n    };\n  };\n\n  // The base Tech class needs to be registered as a Component. It is the only\n  // Tech that can be registered as a Component.\n  Component$1.registerComponent('Tech', Tech);\n  Tech.registerTech('Tech', Tech);\n\n  /**\n   * A list of techs that should be added to techOrder on Players\n   *\n   * @private\n   */\n  Tech.defaultTechOrder_ = [];\n\n  /**\n   * @file middleware.js\n   * @module middleware\n   */\n  const middlewares = {};\n  const middlewareInstances = {};\n  const TERMINATOR = {};\n\n  /**\n   * A middleware object is a plain JavaScript object that has methods that\n   * match the {@link Tech} methods found in the lists of allowed\n   * {@link module:middleware.allowedGetters|getters},\n   * {@link module:middleware.allowedSetters|setters}, and\n   * {@link module:middleware.allowedMediators|mediators}.\n   *\n   * @typedef {Object} MiddlewareObject\n   */\n\n  /**\n   * A middleware factory function that should return a\n   * {@link module:middleware~MiddlewareObject|MiddlewareObject}.\n   *\n   * This factory will be called for each player when needed, with the player\n   * passed in as an argument.\n   *\n   * @callback MiddlewareFactory\n   * @param {Player} player\n   *        A Video.js player.\n   */\n\n  /**\n   * Define a middleware that the player should use by way of a factory function\n   * that returns a middleware object.\n   *\n   * @param  {string} type\n   *         The MIME type to match or `\"*\"` for all MIME types.\n   *\n   * @param  {MiddlewareFactory} middleware\n   *         A middleware factory function that will be executed for\n   *         matching types.\n   */\n  function use(type, middleware) {\n    middlewares[type] = middlewares[type] || [];\n    middlewares[type].push(middleware);\n  }\n\n  /**\n   * Asynchronously sets a source using middleware by recursing through any\n   * matching middlewares and calling `setSource` on each, passing along the\n   * previous returned value each time.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   *\n   * @param  {Tech~SourceObject} src\n   *         A source object.\n   *\n   * @param  {Function}\n   *         The next middleware to run.\n   */\n  function setSource(player, src, next) {\n    player.setTimeout(() => setSourceHelper(src, middlewares[src.type], next, player), 1);\n  }\n\n  /**\n   * When the tech is set, passes the tech to each middleware's `setTech` method.\n   *\n   * @param {Object[]} middleware\n   *        An array of middleware instances.\n   *\n   * @param {Tech} tech\n   *        A Video.js tech.\n   */\n  function setTech(middleware, tech) {\n    middleware.forEach(mw => mw.setTech && mw.setTech(tech));\n  }\n\n  /**\n   * Calls a getter on the tech first, through each middleware\n   * from right to left to the player.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @return {Mixed}\n   *         The final value from the tech after middleware has intercepted it.\n   */\n  function get(middleware, tech, method) {\n    return middleware.reduceRight(middlewareIterator(method), tech[method]());\n  }\n\n  /**\n   * Takes the argument given to the player and calls the setter method on each\n   * middleware from left to right to the tech.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`.\n   */\n  function set(middleware, tech, method, arg) {\n    return tech[method](middleware.reduce(middlewareIterator(method), arg));\n  }\n\n  /**\n   * Takes the argument given to the player and calls the `call` version of the\n   * method on each middleware from left to right.\n   *\n   * Then, call the passed in method on the tech and return the result unchanged\n   * back to the player, through middleware, this time from right to left.\n   *\n   * @param  {Object[]} middleware\n   *         An array of middleware instances.\n   *\n   * @param  {Tech} tech\n   *         The current tech.\n   *\n   * @param  {string} method\n   *         A method name.\n   *\n   * @param  {Mixed} arg\n   *         The value to set on the tech.\n   *\n   * @return {Mixed}\n   *         The return value of the `method` of the `tech`, regardless of the\n   *         return values of middlewares.\n   */\n  function mediate(middleware, tech, method, arg = null) {\n    const callMethod = 'call' + toTitleCase$1(method);\n    const middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n    const terminated = middlewareValue === TERMINATOR;\n    // deprecated. The `null` return value should instead return TERMINATOR to\n    // prevent confusion if a techs method actually returns null.\n    const returnValue = terminated ? null : tech[method](middlewareValue);\n    executeRight(middleware, method, returnValue, terminated);\n    return returnValue;\n  }\n\n  /**\n   * Enumeration of allowed getters where the keys are method names.\n   *\n   * @type {Object}\n   */\n  const allowedGetters = {\n    buffered: 1,\n    currentTime: 1,\n    duration: 1,\n    muted: 1,\n    played: 1,\n    paused: 1,\n    seekable: 1,\n    volume: 1,\n    ended: 1\n  };\n\n  /**\n   * Enumeration of allowed setters where the keys are method names.\n   *\n   * @type {Object}\n   */\n  const allowedSetters = {\n    setCurrentTime: 1,\n    setMuted: 1,\n    setVolume: 1\n  };\n\n  /**\n   * Enumeration of allowed mediators where the keys are method names.\n   *\n   * @type {Object}\n   */\n  const allowedMediators = {\n    play: 1,\n    pause: 1\n  };\n  function middlewareIterator(method) {\n    return (value, mw) => {\n      // if the previous middleware terminated, pass along the termination\n      if (value === TERMINATOR) {\n        return TERMINATOR;\n      }\n      if (mw[method]) {\n        return mw[method](value);\n      }\n      return value;\n    };\n  }\n  function executeRight(mws, method, value, terminated) {\n    for (let i = mws.length - 1; i >= 0; i--) {\n      const mw = mws[i];\n      if (mw[method]) {\n        mw[method](terminated, value);\n      }\n    }\n  }\n\n  /**\n   * Clear the middleware cache for a player.\n   *\n   * @param  {Player} player\n   *         A {@link Player} instance.\n   */\n  function clearCacheForPlayer(player) {\n    middlewareInstances[player.id()] = null;\n  }\n\n  /**\n   * {\n   *  [playerId]: [[mwFactory, mwInstance], ...]\n   * }\n   *\n   * @private\n   */\n  function getOrCreateFactory(player, mwFactory) {\n    const mws = middlewareInstances[player.id()];\n    let mw = null;\n    if (mws === undefined || mws === null) {\n      mw = mwFactory(player);\n      middlewareInstances[player.id()] = [[mwFactory, mw]];\n      return mw;\n    }\n    for (let i = 0; i < mws.length; i++) {\n      const [mwf, mwi] = mws[i];\n      if (mwf !== mwFactory) {\n        continue;\n      }\n      mw = mwi;\n    }\n    if (mw === null) {\n      mw = mwFactory(player);\n      mws.push([mwFactory, mw]);\n    }\n    return mw;\n  }\n  function setSourceHelper(src = {}, middleware = [], next, player, acc = [], lastRun = false) {\n    const [mwFactory, ...mwrest] = middleware;\n\n    // if mwFactory is a string, then we're at a fork in the road\n    if (typeof mwFactory === 'string') {\n      setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n      // if we have an mwFactory, call it with the player to get the mw,\n      // then call the mw's setSource method\n    } else if (mwFactory) {\n      const mw = getOrCreateFactory(player, mwFactory);\n\n      // if setSource isn't present, implicitly select this middleware\n      if (!mw.setSource) {\n        acc.push(mw);\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n      mw.setSource(Object.assign({}, src), function (err, _src) {\n        // something happened, try the next middleware on the current level\n        // make sure to use the old src\n        if (err) {\n          return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n        }\n\n        // we've succeeded, now we need to go deeper\n        acc.push(mw);\n\n        // if it's the same type, continue down the current chain\n        // otherwise, we want to go down the new chain\n        setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n      });\n    } else if (mwrest.length) {\n      setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    } else if (lastRun) {\n      next(src, acc);\n    } else {\n      setSourceHelper(src, middlewares['*'], next, player, acc, true);\n    }\n  }\n\n  /**\n   * Mimetypes\n   *\n   * @see https://www.iana.org/assignments/media-types/media-types.xhtml\n   * @typedef Mimetypes~Kind\n   * @enum\n   */\n  const MimetypesKind = {\n    opus: 'video/ogg',\n    ogv: 'video/ogg',\n    mp4: 'video/mp4',\n    mov: 'video/mp4',\n    m4v: 'video/mp4',\n    mkv: 'video/x-matroska',\n    m4a: 'audio/mp4',\n    mp3: 'audio/mpeg',\n    aac: 'audio/aac',\n    caf: 'audio/x-caf',\n    flac: 'audio/flac',\n    oga: 'audio/ogg',\n    wav: 'audio/wav',\n    m3u8: 'application/x-mpegURL',\n    mpd: 'application/dash+xml',\n    jpg: 'image/jpeg',\n    jpeg: 'image/jpeg',\n    gif: 'image/gif',\n    png: 'image/png',\n    svg: 'image/svg+xml',\n    webp: 'image/webp'\n  };\n\n  /**\n   * Get the mimetype of a given src url if possible\n   *\n   * @param {string} src\n   *        The url to the src\n   *\n   * @return {string}\n   *         return the mimetype if it was known or empty string otherwise\n   */\n  const getMimetype = function (src = '') {\n    const ext = getFileExtension(src);\n    const mimetype = MimetypesKind[ext.toLowerCase()];\n    return mimetype || '';\n  };\n\n  /**\n   * Find the mime type of a given source string if possible. Uses the player\n   * source cache.\n   *\n   * @param {Player} player\n   *        The player object\n   *\n   * @param {string} src\n   *        The source string\n   *\n   * @return {string}\n   *         The type that was found\n   */\n  const findMimetype = (player, src) => {\n    if (!src) {\n      return '';\n    }\n\n    // 1. check for the type in the `source` cache\n    if (player.cache_.source.src === src && player.cache_.source.type) {\n      return player.cache_.source.type;\n    }\n\n    // 2. see if we have this source in our `currentSources` cache\n    const matchingSources = player.cache_.sources.filter(s => s.src === src);\n    if (matchingSources.length) {\n      return matchingSources[0].type;\n    }\n\n    // 3. look for the src url in source elements and use the type there\n    const sources = player.$$('source');\n    for (let i = 0; i < sources.length; i++) {\n      const s = sources[i];\n      if (s.type && s.src && s.src === src) {\n        return s.type;\n      }\n    }\n\n    // 4. finally fallback to our list of mime types based on src url extension\n    return getMimetype(src);\n  };\n\n  /**\n   * @module filter-source\n   */\n\n  /**\n   * Filter out single bad source objects or multiple source objects in an\n   * array. Also flattens nested source object arrays into a 1 dimensional\n   * array of source objects.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]} src\n   *        The src object to filter\n   *\n   * @return {Tech~SourceObject[]}\n   *         An array of sourceobjects containing only valid sources\n   *\n   * @private\n   */\n  const filterSource = function (src) {\n    // traverse array\n    if (Array.isArray(src)) {\n      let newsrc = [];\n      src.forEach(function (srcobj) {\n        srcobj = filterSource(srcobj);\n        if (Array.isArray(srcobj)) {\n          newsrc = newsrc.concat(srcobj);\n        } else if (isObject$1(srcobj)) {\n          newsrc.push(srcobj);\n        }\n      });\n      src = newsrc;\n    } else if (typeof src === 'string' && src.trim()) {\n      // convert string into object\n      src = [fixSource({\n        src\n      })];\n    } else if (isObject$1(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n      // src is already valid\n      src = [fixSource(src)];\n    } else {\n      // invalid source, turn it into an empty array\n      src = [];\n    }\n    return src;\n  };\n\n  /**\n   * Checks src mimetype, adding it when possible\n   *\n   * @param {Tech~SourceObject} src\n   *        The src object to check\n   * @return {Tech~SourceObject}\n   *        src Object with known type\n   */\n  function fixSource(src) {\n    if (!src.type) {\n      const mimetype = getMimetype(src.src);\n      if (mimetype) {\n        src.type = mimetype;\n      }\n    }\n    return src;\n  }\n\n  /**\n   * @file loader.js\n   */\n\n  /**\n   * The `MediaLoader` is the `Component` that decides which playback technology to load\n   * when a player is initialized.\n   *\n   * @extends Component\n   */\n  class MediaLoader extends Component$1 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function that is run when this component is ready.\n     */\n    constructor(player, options, ready) {\n      // MediaLoader has no element\n      const options_ = merge$2({\n        createEl: false\n      }, options);\n      super(player, options_, ready);\n\n      // If there are no sources when the player is initialized,\n      // load the first supported playback technology.\n\n      if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n        for (let i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n          const techName = toTitleCase$1(j[i]);\n          let tech = Tech.getTech(techName);\n\n          // Support old behavior of techs being registered as components.\n          // Remove once that deprecated behavior is removed.\n          if (!techName) {\n            tech = Component$1.getComponent(techName);\n          }\n\n          // Check if the browser supports this technology\n          if (tech && tech.isSupported()) {\n            player.loadTech_(techName);\n            break;\n          }\n        }\n      } else {\n        // Loop through playback technologies (e.g. HTML5) and check for support.\n        // Then load the best source.\n        // A few assumptions here:\n        //   All playback technologies respect preload false.\n        player.src(options.playerOptions.sources);\n      }\n    }\n  }\n  Component$1.registerComponent('MediaLoader', MediaLoader);\n\n  /**\n   * @file clickable-component.js\n   */\n\n  /**\n   * Component which is clickable or keyboard actionable, but is not a\n   * native HTML button.\n   *\n   * @extends Component\n   */\n  class ClickableComponent extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of component options.\n     *\n     * @param  {function} [options.clickHandler]\n     *         The function to call when the button is clicked / activated\n     *\n     * @param  {string} [options.controlText]\n     *         The text to set on the button\n     *\n     * @param  {string} [options.className]\n     *         A class or space separated list of classes to add the component\n     *\n     */\n    constructor(player, options) {\n      super(player, options);\n      if (this.options_.controlText) {\n        this.controlText(this.options_.controlText);\n      }\n      this.handleMouseOver_ = e => this.handleMouseOver(e);\n      this.handleMouseOut_ = e => this.handleMouseOut(e);\n      this.handleClick_ = e => this.handleClick(e);\n      this.handleKeyDown_ = e => this.handleKeyDown(e);\n      this.emitTapEvents();\n      this.enable();\n    }\n\n    /**\n     * Create the `ClickableComponent`s DOM element.\n     *\n     * @param {string} [tag=div]\n     *        The element's node type.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(tag = 'div', props = {}, attributes = {}) {\n      props = Object.assign({\n        className: this.buildCSSClass(),\n        tabIndex: 0\n      }, props);\n      if (tag === 'button') {\n        log$1.error(`Creating a ClickableComponent with an HTML element of ${tag} is not supported; use a Button instead.`);\n      }\n\n      // Add ARIA attributes for clickable element which is not a native HTML button\n      attributes = Object.assign({\n        role: 'button'\n      }, attributes);\n      this.tabIndex_ = props.tabIndex;\n      const el = createEl(tag, props, attributes);\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    }\n    dispose() {\n      // remove controlTextEl_ on dispose\n      this.controlTextEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Create a control text element on this `ClickableComponent`\n     *\n     * @param {Element} [el]\n     *        Parent element for the control text.\n     *\n     * @return {Element}\n     *         The control text element that gets created.\n     */\n    createControlTextEl(el) {\n      this.controlTextEl_ = createEl('span', {\n        className: 'vjs-control-text'\n      }, {\n        // let the screen reader user know that the text of the element may change\n        'aria-live': 'polite'\n      });\n      if (el) {\n        el.appendChild(this.controlTextEl_);\n      }\n      this.controlText(this.controlText_, el);\n      return this.controlTextEl_;\n    }\n\n    /**\n     * Get or set the localize text to use for the controls on the `ClickableComponent`.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    controlText(text, el = this.el()) {\n      if (text === undefined) {\n        return this.controlText_ || 'Need Text';\n      }\n      const localizedText = this.localize(text);\n\n      /** @protected */\n      this.controlText_ = text;\n      textContent(this.controlTextEl_, localizedText);\n      if (!this.nonIconControl && !this.player_.options_.noUITitleAttributes) {\n        // Set title attribute if only an icon is shown\n        el.setAttribute('title', localizedText);\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-control vjs-button ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Enable this `ClickableComponent`\n     */\n    enable() {\n      if (!this.enabled_) {\n        this.enabled_ = true;\n        this.removeClass('vjs-disabled');\n        this.el_.setAttribute('aria-disabled', 'false');\n        if (typeof this.tabIndex_ !== 'undefined') {\n          this.el_.setAttribute('tabIndex', this.tabIndex_);\n        }\n        this.on(['tap', 'click'], this.handleClick_);\n        this.on('keydown', this.handleKeyDown_);\n      }\n    }\n\n    /**\n     * Disable this `ClickableComponent`\n     */\n    disable() {\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'true');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.removeAttribute('tabIndex');\n      }\n      this.off('mouseover', this.handleMouseOver_);\n      this.off('mouseout', this.handleMouseOut_);\n      this.off(['tap', 'click'], this.handleClick_);\n      this.off('keydown', this.handleKeyDown_);\n    }\n\n    /**\n     * Handles language change in ClickableComponent for the player in components\n     *\n     *\n     */\n    handleLanguagechange() {\n      this.controlText(this.controlText_);\n    }\n\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `click` or `tap` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `tap` or `click` event that caused this function to be called.\n     *\n     * @listens tap\n     * @listens click\n     * @abstract\n     */\n    handleClick(event) {\n      if (this.options_.clickHandler) {\n        this.options_.clickHandler.call(this, arguments);\n      }\n    }\n\n    /**\n     * Event handler that is called when a `ClickableComponent` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Space or Enter, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Support Space or Enter key operation to fire a click event. Also,\n      // prevent the event from propagating through the DOM and triggering\n      // Player hotkeys.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n  }\n  Component$1.registerComponent('ClickableComponent', ClickableComponent);\n\n  /**\n   * @file poster-image.js\n   */\n\n  /**\n   * A `ClickableComponent` that handles showing the poster image for the player.\n   *\n   * @extends ClickableComponent\n   */\n  class PosterImage extends ClickableComponent {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should attach to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update();\n      this.update_ = e => this.update(e);\n      player.on('posterchange', this.update_);\n    }\n\n    /**\n     * Clean up and dispose of the `PosterImage`.\n     */\n    dispose() {\n      this.player().off('posterchange', this.update_);\n      super.dispose();\n    }\n\n    /**\n     * Create the `PosterImage`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl() {\n      const el = createEl('picture', {\n        className: 'vjs-poster',\n        // Don't want poster to be tabbable.\n        tabIndex: -1\n      }, {}, createEl('img', {\n        loading: 'lazy',\n        crossOrigin: this.crossOrigin()\n      }, {\n        alt: ''\n      }));\n      return el;\n    }\n\n    /**\n     * Get or set the `PosterImage`'s crossOrigin option.\n     *\n     * @param {string|null} [value]\n     *        The value to set the crossOrigin to. If an argument is\n     *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n     *\n     * @return {string|null}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    crossOrigin(value) {\n      // `null` can be set to unset a value\n      if (typeof value === 'undefined') {\n        if (this.el_) {\n          // If the poster's element exists, give its value\n          return this.el_.querySelector('img').crossOrigin;\n        } else if (this.player_.tech_ && this.player_.tech_.isReady_) {\n          // If not but the tech is ready, query the tech\n          return this.player_.crossOrigin();\n        }\n        // Otherwise check options as the  poster is usually set before the state of crossorigin\n        // can be retrieved by the getter\n        return this.player_.options_.crossOrigin || this.player_.options_.crossorigin || null;\n      }\n      if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n        this.player_.log.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n        return;\n      }\n      this.el_.querySelector('img').crossOrigin = value;\n      return;\n    }\n\n    /**\n     * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n     *\n     * @listens Player#posterchange\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `Player#posterchange` event that triggered this function.\n     */\n    update(event) {\n      const url = this.player().poster();\n      this.setSrc(url);\n\n      // If there's no poster source we should display:none on this component\n      // so it's not still clickable or right-clickable\n      if (url) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    /**\n     * Set the source of the `PosterImage` depending on the display method.\n     *\n     * @param {string} url\n     *        The URL to the source for the `PosterImage`.\n     */\n    setSrc(url) {\n      this.el_.querySelector('img').src = url;\n    }\n\n    /**\n     * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n     * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n     *\n     * @listens tap\n     * @listens click\n     * @listens keydown\n     *\n     * @param {EventTarget~Event} event\n     +        The `click`, `tap` or `keydown` event that caused this function to be called.\n     */\n    handleClick(event) {\n      // We don't want a click to trigger playback when controls are disabled\n      if (!this.player_.controls()) {\n        return;\n      }\n      if (this.player_.tech(true)) {\n        this.player_.tech(true).focus();\n      }\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n  }\n\n  /**\n   * Get or set the `PosterImage`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<img>` tag to control the CORS\n   * behavior.\n   *\n   * @param {string|null} [value]\n   *        The value to set the `PosterImages`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|null|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  PosterImage.prototype.crossorigin = PosterImage.prototype.crossOrigin;\n  Component$1.registerComponent('PosterImage', PosterImage);\n\n  /**\n   * @file text-track-display.js\n   */\n  const darkGray = '#222';\n  const lightGray = '#ccc';\n  const fontMap = {\n    monospace: 'monospace',\n    sansSerif: 'sans-serif',\n    serif: 'serif',\n    monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n    monospaceSerif: '\"Courier New\", monospace',\n    proportionalSansSerif: 'sans-serif',\n    proportionalSerif: 'serif',\n    casual: '\"Comic Sans MS\", Impact, fantasy',\n    script: '\"Monotype Corsiva\", cursive',\n    smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n  };\n\n  /**\n   * Construct an rgba color from a given hex color code.\n   *\n   * @param {number} color\n   *        Hex number for color, like #f0e or #f604e2.\n   *\n   * @param {number} opacity\n   *        Value for opacity, 0.0 - 1.0.\n   *\n   * @return {string}\n   *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n   */\n  function constructColor(color, opacity) {\n    let hex;\n    if (color.length === 4) {\n      // color looks like \"#f0e\"\n      hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n    } else if (color.length === 7) {\n      // color looks like \"#f604e2\"\n      hex = color.slice(1);\n    } else {\n      throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n    }\n    return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n  }\n\n  /**\n   * Try to update the style of a DOM element. Some style changes will throw an error,\n   * particularly in IE8. Those should be noops.\n   *\n   * @param {Element} el\n   *        The DOM element to be styled.\n   *\n   * @param {string} style\n   *        The CSS property on the element that should be styled.\n   *\n   * @param {string} rule\n   *        The style rule that should be applied to the property.\n   *\n   * @private\n   */\n  function tryUpdateStyle(el, style, rule) {\n    try {\n      el.style[style] = rule;\n    } catch (e) {\n      // Satisfies linter.\n      return;\n    }\n  }\n\n  /**\n   * The component for displaying text track cues.\n   *\n   * @extends Component\n   */\n  class TextTrackDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when `TextTrackDisplay` is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      const updateDisplayHandler = e => this.updateDisplay(e);\n      player.on('loadstart', e => this.toggleDisplay(e));\n      player.on('texttrackchange', updateDisplayHandler);\n      player.on('loadedmetadata', e => this.preselectTrack(e));\n\n      // This used to be called during player init, but was causing an error\n      // if a track should show by default and the display hadn't loaded yet.\n      // Should probably be moved to an external track loader when we support\n      // tracks that don't need a display.\n      player.ready(bind_(this, function () {\n        if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n          this.hide();\n          return;\n        }\n        player.on('fullscreenchange', updateDisplayHandler);\n        player.on('playerresize', updateDisplayHandler);\n        const screenOrientation = window.screen.orientation || window;\n        const changeOrientationEvent = window.screen.orientation ? 'change' : 'orientationchange';\n        screenOrientation.addEventListener(changeOrientationEvent, updateDisplayHandler);\n        player.on('dispose', () => screenOrientation.removeEventListener(changeOrientationEvent, updateDisplayHandler));\n        const tracks = this.options_.playerOptions.tracks || [];\n        for (let i = 0; i < tracks.length; i++) {\n          this.player_.addRemoteTextTrack(tracks[i], true);\n        }\n        this.preselectTrack();\n      }));\n    }\n\n    /**\n    * Preselect a track following this precedence:\n    * - matches the previously selected {@link TextTrack}'s language and kind\n    * - matches the previously selected {@link TextTrack}'s language only\n    * - is the first default captions track\n    * - is the first default descriptions track\n    *\n    * @listens Player#loadstart\n    */\n    preselectTrack() {\n      const modes = {\n        captions: 1,\n        subtitles: 1\n      };\n      const trackList = this.player_.textTracks();\n      const userPref = this.player_.cache_.selectedLanguage;\n      let firstDesc;\n      let firstCaptions;\n      let preferredTrack;\n      for (let i = 0; i < trackList.length; i++) {\n        const track = trackList[i];\n        if (userPref && userPref.enabled && userPref.language && userPref.language === track.language && track.kind in modes) {\n          // Always choose the track that matches both language and kind\n          if (track.kind === userPref.kind) {\n            preferredTrack = track;\n            // or choose the first track that matches language\n          } else if (!preferredTrack) {\n            preferredTrack = track;\n          }\n\n          // clear everything if offTextTrackMenuItem was clicked\n        } else if (userPref && !userPref.enabled) {\n          preferredTrack = null;\n          firstDesc = null;\n          firstCaptions = null;\n        } else if (track.default) {\n          if (track.kind === 'descriptions' && !firstDesc) {\n            firstDesc = track;\n          } else if (track.kind in modes && !firstCaptions) {\n            firstCaptions = track;\n          }\n        }\n      }\n\n      // The preferredTrack matches the user preference and takes\n      // precedence over all the other tracks.\n      // So, display the preferredTrack before the first default track\n      // and the subtitles/captions track before the descriptions track\n      if (preferredTrack) {\n        preferredTrack.mode = 'showing';\n      } else if (firstCaptions) {\n        firstCaptions.mode = 'showing';\n      } else if (firstDesc) {\n        firstDesc.mode = 'showing';\n      }\n    }\n\n    /**\n     * Turn display of {@link TextTrack}'s from the current state into the other state.\n     * There are only two states:\n     * - 'shown'\n     * - 'hidden'\n     *\n     * @listens Player#loadstart\n     */\n    toggleDisplay() {\n      if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n        this.hide();\n      } else {\n        this.show();\n      }\n    }\n\n    /**\n     * Create the {@link Component}'s DOM element.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-text-track-display'\n      }, {\n        'translate': 'yes',\n        'aria-live': 'off',\n        'aria-atomic': 'true'\n      });\n    }\n\n    /**\n     * Clear all displayed {@link TextTrack}s.\n     */\n    clearDisplay() {\n      if (typeof window.WebVTT === 'function') {\n        window.WebVTT.processCues(window, [], this.el_);\n      }\n    }\n\n    /**\n     * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n     * a {@link Player#fullscreenchange} is fired.\n     *\n     * @listens Player#texttrackchange\n     * @listens Player#fullscreenchange\n     */\n    updateDisplay() {\n      const tracks = this.player_.textTracks();\n      const allowMultipleShowingTracks = this.options_.allowMultipleShowingTracks;\n      this.clearDisplay();\n      if (allowMultipleShowingTracks) {\n        const showingTracks = [];\n        for (let i = 0; i < tracks.length; ++i) {\n          const track = tracks[i];\n          if (track.mode !== 'showing') {\n            continue;\n          }\n          showingTracks.push(track);\n        }\n        this.updateForTrack(showingTracks);\n        return;\n      }\n\n      //  Track display prioritization model: if multiple tracks are 'showing',\n      //  display the first 'subtitles' or 'captions' track which is 'showing',\n      //  otherwise display the first 'descriptions' track which is 'showing'\n\n      let descriptionsTrack = null;\n      let captionsSubtitlesTrack = null;\n      let i = tracks.length;\n      while (i--) {\n        const track = tracks[i];\n        if (track.mode === 'showing') {\n          if (track.kind === 'descriptions') {\n            descriptionsTrack = track;\n          } else {\n            captionsSubtitlesTrack = track;\n          }\n        }\n      }\n      if (captionsSubtitlesTrack) {\n        if (this.getAttribute('aria-live') !== 'off') {\n          this.setAttribute('aria-live', 'off');\n        }\n        this.updateForTrack(captionsSubtitlesTrack);\n      } else if (descriptionsTrack) {\n        if (this.getAttribute('aria-live') !== 'assertive') {\n          this.setAttribute('aria-live', 'assertive');\n        }\n        this.updateForTrack(descriptionsTrack);\n      }\n    }\n\n    /**\n     * Style {@Link TextTrack} activeCues according to {@Link TextTrackSettings}.\n     *\n     * @param {TextTrack} track\n     *        Text track object containing active cues to style.\n     */\n    updateDisplayState(track) {\n      const overrides = this.player_.textTrackSettings.getValues();\n      const cues = track.activeCues;\n      let i = cues.length;\n      while (i--) {\n        const cue = cues[i];\n        if (!cue) {\n          continue;\n        }\n        const cueDiv = cue.displayState;\n        if (overrides.color) {\n          cueDiv.firstChild.style.color = overrides.color;\n        }\n        if (overrides.textOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n        }\n        if (overrides.backgroundColor) {\n          cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n        }\n        if (overrides.backgroundOpacity) {\n          tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n        }\n        if (overrides.windowColor) {\n          if (overrides.windowOpacity) {\n            tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n          } else {\n            cueDiv.style.backgroundColor = overrides.windowColor;\n          }\n        }\n        if (overrides.edgeStyle) {\n          if (overrides.edgeStyle === 'dropshadow') {\n            cueDiv.firstChild.style.textShadow = `2px 2px 3px ${darkGray}, 2px 2px 4px ${darkGray}, 2px 2px 5px ${darkGray}`;\n          } else if (overrides.edgeStyle === 'raised') {\n            cueDiv.firstChild.style.textShadow = `1px 1px ${darkGray}, 2px 2px ${darkGray}, 3px 3px ${darkGray}`;\n          } else if (overrides.edgeStyle === 'depressed') {\n            cueDiv.firstChild.style.textShadow = `1px 1px ${lightGray}, 0 1px ${lightGray}, -1px -1px ${darkGray}, 0 -1px ${darkGray}`;\n          } else if (overrides.edgeStyle === 'uniform') {\n            cueDiv.firstChild.style.textShadow = `0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}, 0 0 4px ${darkGray}`;\n          }\n        }\n        if (overrides.fontPercent && overrides.fontPercent !== 1) {\n          const fontSize = window.parseFloat(cueDiv.style.fontSize);\n          cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n          cueDiv.style.height = 'auto';\n          cueDiv.style.top = 'auto';\n        }\n        if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n          if (overrides.fontFamily === 'small-caps') {\n            cueDiv.firstChild.style.fontVariant = 'small-caps';\n          } else {\n            cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n          }\n        }\n      }\n    }\n\n    /**\n     * Add an {@link TextTrack} to to the {@link Tech}s {@link TextTrackList}.\n     *\n     * @param {TextTrack|TextTrack[]} tracks\n     *        Text track object or text track array to be added to the list.\n     */\n    updateForTrack(tracks) {\n      if (!Array.isArray(tracks)) {\n        tracks = [tracks];\n      }\n      if (typeof window.WebVTT !== 'function' || tracks.every(track => {\n        return !track.activeCues;\n      })) {\n        return;\n      }\n      const cues = [];\n\n      // push all active track cues\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        for (let j = 0; j < track.activeCues.length; ++j) {\n          cues.push(track.activeCues[j]);\n        }\n      }\n\n      // removes all cues before it processes new ones\n      window.WebVTT.processCues(window, cues, this.el_);\n\n      // add unique class to each language text track & add settings styling if necessary\n      for (let i = 0; i < tracks.length; ++i) {\n        const track = tracks[i];\n        for (let j = 0; j < track.activeCues.length; ++j) {\n          const cueEl = track.activeCues[j].displayState;\n          addClass(cueEl, 'vjs-text-track-cue', 'vjs-text-track-cue-' + (track.language ? track.language : i));\n          if (track.language) {\n            setAttribute(cueEl, 'lang', track.language);\n          }\n        }\n        if (this.player_.textTrackSettings) {\n          this.updateDisplayState(track);\n        }\n      }\n    }\n  }\n  Component$1.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n  /**\n   * @file loading-spinner.js\n   */\n\n  /**\n   * A loading spinner for use during waiting/loading events.\n   *\n   * @extends Component\n   */\n  class LoadingSpinner extends Component$1 {\n    /**\n     * Create the `LoadingSpinner`s DOM element.\n     *\n     * @return {Element}\n     *         The dom element that gets created.\n     */\n    createEl() {\n      const isAudio = this.player_.isAudio();\n      const playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n      const controlText = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: this.localize('{1} is loading.', [playerType])\n      });\n      const el = super.createEl('div', {\n        className: 'vjs-loading-spinner',\n        dir: 'ltr'\n      });\n      el.appendChild(controlText);\n      return el;\n    }\n  }\n  Component$1.registerComponent('LoadingSpinner', LoadingSpinner);\n\n  /**\n   * @file button.js\n   */\n\n  /**\n   * Base class for all buttons.\n   *\n   * @extends ClickableComponent\n   */\n  class Button extends ClickableComponent {\n    /**\n     * Create the `Button`s DOM element.\n     *\n     * @param {string} [tag=\"button\"]\n     *        The element's node type. This argument is IGNORED: no matter what\n     *        is passed, it will always create a `button` element.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element.\n     *\n     * @param {Object} [attributes={}]\n     *        An object of attributes that should be set on the element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(tag, props = {}, attributes = {}) {\n      tag = 'button';\n      props = Object.assign({\n        className: this.buildCSSClass()\n      }, props);\n\n      // Add attributes for button element\n      attributes = Object.assign({\n        // Necessary since the default button type is \"submit\"\n        type: 'button'\n      }, attributes);\n      const el = createEl(tag, props, attributes);\n      el.appendChild(createEl('span', {\n        className: 'vjs-icon-placeholder'\n      }, {\n        'aria-hidden': true\n      }));\n      this.createControlTextEl(el);\n      return el;\n    }\n\n    /**\n     * Add a child `Component` inside of this `Button`.\n     *\n     * @param {string|Component} child\n     *        The name or instance of a child to add.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of options that will get passed to children of\n     *        the child.\n     *\n     * @return {Component}\n     *         The `Component` that gets added as a child. When using a string the\n     *         `Component` will get created by this process.\n     *\n     * @deprecated since version 5\n     */\n    addChild(child, options = {}) {\n      const className = this.constructor.name;\n      log$1.warn(`Adding an actionable (user controllable) child to a Button (${className}) is not supported; use a ClickableComponent instead.`);\n\n      // Avoid the error message generated by ClickableComponent's addChild method\n      return Component$1.prototype.addChild.call(this, child, options);\n    }\n\n    /**\n     * Enable the `Button` element so that it can be activated or clicked. Use this with\n     * {@link Button#disable}.\n     */\n    enable() {\n      super.enable();\n      this.el_.removeAttribute('disabled');\n    }\n\n    /**\n     * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n     * {@link Button#enable}.\n     */\n    disable() {\n      super.disable();\n      this.el_.setAttribute('disabled', 'disabled');\n    }\n\n    /**\n     * This gets called when a `Button` has focus and `keydown` is triggered via a key\n     * press.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to get called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Ignore Space or Enter key operation, which is handled by the browser for\n      // a button - though not for its super class, ClickableComponent. Also,\n      // prevent the event from propagating through the DOM and triggering Player\n      // hotkeys. We do not preventDefault here because we _want_ the browser to\n      // handle it.\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.stopPropagation();\n        return;\n      }\n\n      // Pass keypress handling up for unsupported keys\n      super.handleKeyDown(event);\n    }\n  }\n  Component$1.registerComponent('Button', Button);\n\n  /**\n   * @file big-play-button.js\n   */\n\n  /**\n   * The initial play button that shows before the video has played. The hiding of the\n   * `BigPlayButton` get done via CSS and `Player` states.\n   *\n   * @extends Button\n   */\n  class BigPlayButton extends Button {\n    constructor(player, options) {\n      super(player, options);\n      this.mouseused_ = false;\n      this.on('mousedown', e => this.handleMouseDown(e));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n     */\n    buildCSSClass() {\n      return 'vjs-big-play-button';\n    }\n\n    /**\n     * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      const playPromise = this.player_.play();\n\n      // exit early if clicked via the mouse\n      if (this.mouseused_ && event.clientX && event.clientY) {\n        silencePromise(playPromise);\n        if (this.player_.tech(true)) {\n          this.player_.tech(true).focus();\n        }\n        return;\n      }\n      const cb = this.player_.getChild('controlBar');\n      const playToggle = cb && cb.getChild('playToggle');\n      if (!playToggle) {\n        this.player_.tech(true).focus();\n        return;\n      }\n      const playFocus = () => playToggle.focus();\n      if (isPromise(playPromise)) {\n        playPromise.then(playFocus, () => {});\n      } else {\n        this.setTimeout(playFocus, 1);\n      }\n    }\n    handleKeyDown(event) {\n      this.mouseused_ = false;\n      super.handleKeyDown(event);\n    }\n    handleMouseDown(event) {\n      this.mouseused_ = true;\n    }\n  }\n\n  /**\n   * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  BigPlayButton.prototype.controlText_ = 'Play Video';\n  Component$1.registerComponent('BigPlayButton', BigPlayButton);\n\n  /**\n   * @file close-button.js\n   */\n\n  /**\n   * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n   * it gets clicked.\n   *\n   * @extends Button\n   */\n  class CloseButton extends Button {\n    /**\n    * Creates an instance of the this class.\n    *\n    * @param  {Player} player\n    *         The `Player` that this class should be attached to.\n    *\n    * @param  {Object} [options]\n    *         The key/value store of player options.\n    */\n    constructor(player, options) {\n      super(player, options);\n      this.controlText(options && options.controlText || this.localize('Close'));\n    }\n\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    buildCSSClass() {\n      return `vjs-close-button ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * This gets called when a `CloseButton` gets clicked. See\n     * {@link ClickableComponent#handleClick} for more information on when\n     * this will be triggered\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     * @fires CloseButton#close\n     */\n    handleClick(event) {\n      /**\n       * Triggered when the a `CloseButton` is clicked.\n       *\n       * @event CloseButton#close\n       * @type {EventTarget~Event}\n       *\n       * @property {boolean} [bubbles=false]\n       *           set to false so that the close event does not\n       *           bubble up to parents if there is no listener\n       */\n      this.trigger({\n        type: 'close',\n        bubbles: false\n      });\n    }\n    /**\n     * Event handler that is called when a `CloseButton` receives a\n     * `keydown` event.\n     *\n     * By default, if the key is Esc, it will trigger a `click` event.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Esc button will trigger `click` event\n      if (keycode.isEventKey(event, 'Esc')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.trigger('click');\n      } else {\n        // Pass keypress handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n  }\n  Component$1.registerComponent('CloseButton', CloseButton);\n\n  /**\n   * @file play-toggle.js\n   */\n\n  /**\n   * Button to toggle between play and pause.\n   *\n   * @extends Button\n   */\n  class PlayToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n\n      // show or hide replay icon\n      options.replay = options.replay === undefined || options.replay;\n      this.on(player, 'play', e => this.handlePlay(e));\n      this.on(player, 'pause', e => this.handlePause(e));\n      if (options.replay) {\n        this.on(player, 'ended', e => this.handleEnded(e));\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-play-control ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * This gets called when an `PlayToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (this.player_.paused()) {\n        silencePromise(this.player_.play());\n      } else {\n        this.player_.pause();\n      }\n    }\n\n    /**\n     * This gets called once after the video has ended and the user seeks so that\n     * we can change the replay button back to a play button.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#seeked\n     */\n    handleSeeked(event) {\n      this.removeClass('vjs-ended');\n      if (this.player_.paused()) {\n        this.handlePause(event);\n      } else {\n        this.handlePlay(event);\n      }\n    }\n\n    /**\n     * Add the vjs-playing class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#play\n     */\n    handlePlay(event) {\n      this.removeClass('vjs-ended', 'vjs-paused');\n      this.addClass('vjs-playing');\n      // change the button text to \"Pause\"\n      this.controlText('Pause');\n    }\n\n    /**\n     * Add the vjs-paused class to the element so it can change appearance.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#pause\n     */\n    handlePause(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      // change the button text to \"Play\"\n      this.controlText('Play');\n    }\n\n    /**\n     * Add the vjs-ended class to the element so it can change appearance\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ended\n     */\n    handleEnded(event) {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-ended');\n      // change the button text to \"Replay\"\n      this.controlText('Replay');\n\n      // on the next seek remove the replay button\n      this.one(this.player_, 'seeked', e => this.handleSeeked(e));\n    }\n  }\n\n  /**\n   * The text that should display over the `PlayToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  PlayToggle.prototype.controlText_ = 'Play';\n  Component$1.registerComponent('PlayToggle', PlayToggle);\n\n  /**\n   * @file time-display.js\n   */\n\n  /**\n   * Displays time information about the video\n   *\n   * @extends Component\n   */\n  class TimeDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, ['timeupdate', 'ended'], e => this.updateContent(e));\n      this.updateTextNode_();\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const className = this.buildCSSClass();\n      const el = super.createEl('div', {\n        className: `${className} vjs-time-control vjs-control`\n      });\n      const span = createEl('span', {\n        className: 'vjs-control-text',\n        textContent: `${this.localize(this.labelText_)}\\u00a0`\n      }, {\n        role: 'presentation'\n      });\n      el.appendChild(span);\n      this.contentEl_ = createEl('span', {\n        className: `${className}-display`\n      }, {\n        // tell screen readers not to automatically read the time as it changes\n        'aria-live': 'off',\n        // span elements have no implicit role, but some screen readers (notably VoiceOver)\n        // treat them as a break between items in the DOM when using arrow keys\n        // (or left-to-right swipes on iOS) to read contents of a page. Using\n        // role='presentation' causes VoiceOver to NOT treat this span as a break.\n        'role': 'presentation'\n      });\n      el.appendChild(this.contentEl_);\n      return el;\n    }\n    dispose() {\n      this.contentEl_ = null;\n      this.textNode_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Updates the time display text node with a new time\n     *\n     * @param {number} [time=0] the time to update to\n     *\n     * @private\n     */\n    updateTextNode_(time = 0) {\n      time = formatTime(time);\n      if (this.formattedTime_ === time) {\n        return;\n      }\n      this.formattedTime_ = time;\n      this.requestNamedAnimationFrame('TimeDisplay#updateTextNode_', () => {\n        if (!this.contentEl_) {\n          return;\n        }\n        let oldNode = this.textNode_;\n        if (oldNode && this.contentEl_.firstChild !== oldNode) {\n          oldNode = null;\n          log$1.warn('TimeDisplay#updateTextnode_: Prevented replacement of text node element since it was no longer a child of this node. Appending a new node instead.');\n        }\n        this.textNode_ = document.createTextNode(this.formattedTime_);\n        if (!this.textNode_) {\n          return;\n        }\n        if (oldNode) {\n          this.contentEl_.replaceChild(this.textNode_, oldNode);\n        } else {\n          this.contentEl_.appendChild(this.textNode_);\n        }\n      });\n    }\n\n    /**\n     * To be filled out in the child class, should update the displayed time\n     * in accordance with the fact that the current time has changed.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate`  event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     */\n    updateContent(event) {}\n  }\n\n  /**\n   * The text that is added to the `TimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  TimeDisplay.prototype.labelText_ = 'Time';\n\n  /**\n   * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  TimeDisplay.prototype.controlText_ = 'Time';\n  Component$1.registerComponent('TimeDisplay', TimeDisplay);\n\n  /**\n   * @file current-time-display.js\n   */\n\n  /**\n   * Displays the current time\n   *\n   * @extends Component\n   */\n  class CurrentTimeDisplay extends TimeDisplay {\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return 'vjs-current-time';\n    }\n\n    /**\n     * Update current time display\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` event that caused this function to run.\n     *\n     * @listens Player#timeupdate\n     */\n    updateContent(event) {\n      // Allows for smooth scrubbing, when player can't keep up.\n      let time;\n      if (this.player_.ended()) {\n        time = this.player_.duration();\n      } else {\n        time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      }\n      this.updateTextNode_(time);\n    }\n  }\n\n  /**\n   * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  CurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n  /**\n   * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  CurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n  Component$1.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n  /**\n   * @file duration-display.js\n   */\n\n  /**\n   * Displays the duration\n   *\n   * @extends Component\n   */\n  class DurationDisplay extends TimeDisplay {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      const updateContent = e => this.updateContent(e);\n\n      // we do not want to/need to throttle duration changes,\n      // as they should always display the changed duration as\n      // it has changed\n      this.on(player, 'durationchange', updateContent);\n\n      // Listen to loadstart because the player duration is reset when a new media element is loaded,\n      // but the durationchange on the user agent will not fire.\n      // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n      this.on(player, 'loadstart', updateContent);\n\n      // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n      // listeners could have broken dependent applications/libraries. These\n      // can likely be removed for 7.0.\n      this.on(player, 'loadedmetadata', updateContent);\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return 'vjs-duration';\n    }\n\n    /**\n     * Update duration time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n     *        this function to be called.\n     *\n     * @listens Player#durationchange\n     * @listens Player#timeupdate\n     * @listens Player#loadedmetadata\n     */\n    updateContent(event) {\n      const duration = this.player_.duration();\n      this.updateTextNode_(duration);\n    }\n  }\n\n  /**\n   * The text that is added to the `DurationDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  DurationDisplay.prototype.labelText_ = 'Duration';\n\n  /**\n   * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  DurationDisplay.prototype.controlText_ = 'Duration';\n  Component$1.registerComponent('DurationDisplay', DurationDisplay);\n\n  /**\n   * @file time-divider.js\n   */\n\n  /**\n   * The separator between the current time and duration.\n   * Can be hidden if it's not needed in the design.\n   *\n   * @extends Component\n   */\n  class TimeDivider extends Component$1 {\n    /**\n     * Create the component's DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-time-control vjs-time-divider'\n      }, {\n        // this element and its contents can be hidden from assistive techs since\n        // it is made extraneous by the announcement of the control text\n        // for the current time and duration displays\n        'aria-hidden': true\n      });\n      const div = super.createEl('div');\n      const span = super.createEl('span', {\n        textContent: '/'\n      });\n      div.appendChild(span);\n      el.appendChild(div);\n      return el;\n    }\n  }\n  Component$1.registerComponent('TimeDivider', TimeDivider);\n\n  /**\n   * @file remaining-time-display.js\n   */\n\n  /**\n   * Displays the time left in the video\n   *\n   * @extends Component\n   */\n  class RemainingTimeDisplay extends TimeDisplay {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, 'durationchange', e => this.updateContent(e));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return 'vjs-remaining-time';\n    }\n\n    /**\n     * Create the `Component`'s DOM element with the \"minus\" characted prepend to the time\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl();\n      if (this.options_.displayNegative !== false) {\n        el.insertBefore(createEl('span', {}, {\n          'aria-hidden': true\n        }, '-'), this.contentEl_);\n      }\n      return el;\n    }\n\n    /**\n     * Update remaining time display.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `durationchange` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     * @listens Player#durationchange\n     */\n    updateContent(event) {\n      if (typeof this.player_.duration() !== 'number') {\n        return;\n      }\n      let time;\n\n      // @deprecated We should only use remainingTimeDisplay\n      // as of video.js 7\n      if (this.player_.ended()) {\n        time = 0;\n      } else if (this.player_.remainingTimeDisplay) {\n        time = this.player_.remainingTimeDisplay();\n      } else {\n        time = this.player_.remainingTime();\n      }\n      this.updateTextNode_(time);\n    }\n  }\n\n  /**\n   * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n   *\n   * @type {string}\n   * @private\n   */\n  RemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n  /**\n   * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n   *\n   * @type {string}\n   * @protected\n   *\n   * @deprecated in v7; controlText_ is not used in non-active display Components\n   */\n  RemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n  Component$1.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n  /**\n   * @file live-display.js\n   */\n\n  // TODO - Future make it click to snap to live\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n  class LiveDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.updateShowing();\n      this.on(this.player(), 'durationchange', e => this.updateShowing(e));\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-live-control vjs-control'\n      });\n      this.contentEl_ = createEl('div', {\n        className: 'vjs-live-display'\n      }, {\n        'aria-live': 'off'\n      });\n      this.contentEl_.appendChild(createEl('span', {\n        className: 'vjs-control-text',\n        textContent: `${this.localize('Stream Type')}\\u00a0`\n      }));\n      this.contentEl_.appendChild(document.createTextNode(this.localize('LIVE')));\n      el.appendChild(this.contentEl_);\n      return el;\n    }\n    dispose() {\n      this.contentEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n     * it accordingly\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#durationchange} event that caused this function to run.\n     *\n     * @listens Player#durationchange\n     */\n    updateShowing(event) {\n      if (this.player().duration() === Infinity) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n  }\n  Component$1.registerComponent('LiveDisplay', LiveDisplay);\n\n  /**\n   * @file seek-to-live.js\n   */\n\n  /**\n   * Displays the live indicator when duration is Infinity.\n   *\n   * @extends Component\n   */\n  class SeekToLive extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.updateLiveEdgeStatus();\n      if (this.player_.liveTracker) {\n        this.updateLiveEdgeStatusHandler_ = e => this.updateLiveEdgeStatus(e);\n        this.on(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('button', {\n        className: 'vjs-seek-to-live-control vjs-control'\n      });\n      this.textEl_ = createEl('span', {\n        className: 'vjs-seek-to-live-text',\n        textContent: this.localize('LIVE')\n      }, {\n        'aria-hidden': 'true'\n      });\n      el.appendChild(this.textEl_);\n      return el;\n    }\n\n    /**\n     * Update the state of this button if we are at the live edge\n     * or not\n     */\n    updateLiveEdgeStatus() {\n      // default to live edge\n      if (!this.player_.liveTracker || this.player_.liveTracker.atLiveEdge()) {\n        this.setAttribute('aria-disabled', true);\n        this.addClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently playing live');\n      } else {\n        this.setAttribute('aria-disabled', false);\n        this.removeClass('vjs-at-live-edge');\n        this.controlText('Seek to live, currently behind live');\n      }\n    }\n\n    /**\n     * On click bring us as near to the live point as possible.\n     * This requires that we wait for the next `live-seekable-change`\n     * event which will happen every segment length seconds.\n     */\n    handleClick() {\n      this.player_.liveTracker.seekToLiveEdge();\n    }\n\n    /**\n     * Dispose of the element and stop tracking\n     */\n    dispose() {\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.updateLiveEdgeStatusHandler_);\n      }\n      this.textEl_ = null;\n      super.dispose();\n    }\n  }\n  /**\n   * The text that should display over the `SeekToLive`s control. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  SeekToLive.prototype.controlText_ = 'Seek to live, currently playing live';\n  Component$1.registerComponent('SeekToLive', SeekToLive);\n\n  /**\n   * @file num.js\n   * @module num\n   */\n\n  /**\n   * Keep a number between a min and a max value\n   *\n   * @param {number} number\n   *        The number to clamp\n   *\n   * @param {number} min\n   *        The minimum value\n   * @param {number} max\n   *        The maximum value\n   *\n   * @return {number}\n   *         the clamped number\n   */\n  function clamp(number, min, max) {\n    number = Number(number);\n    return Math.min(max, Math.max(min, isNaN(number) ? min : number));\n  }\n\n  var Num = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    clamp: clamp\n  });\n\n  /**\n   * @file slider.js\n   */\n\n  /**\n   * The base functionality for a slider. Can be vertical or horizontal.\n   * For instance the volume bar or the seek bar on a video is a slider.\n   *\n   * @extends Component\n   */\n  class Slider extends Component$1 {\n    /**\n    * Create an instance of this class\n    *\n    * @param {Player} player\n    *        The `Player` that this class should be attached to.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    */\n    constructor(player, options) {\n      super(player, options);\n      this.handleMouseDown_ = e => this.handleMouseDown(e);\n      this.handleMouseUp_ = e => this.handleMouseUp(e);\n      this.handleKeyDown_ = e => this.handleKeyDown(e);\n      this.handleClick_ = e => this.handleClick(e);\n      this.handleMouseMove_ = e => this.handleMouseMove(e);\n      this.update_ = e => this.update(e);\n\n      // Set property names to bar to match with the child Slider class is looking for\n      this.bar = this.getChild(this.options_.barName);\n\n      // Set a horizontal or vertical class on the slider depending on the slider type\n      this.vertical(!!this.options_.vertical);\n      this.enable();\n    }\n\n    /**\n     * Are controls are currently enabled for this slider or not.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    enabled() {\n      return this.enabled_;\n    }\n\n    /**\n     * Enable controls for this slider if they are disabled\n     */\n    enable() {\n      if (this.enabled()) {\n        return;\n      }\n      this.on('mousedown', this.handleMouseDown_);\n      this.on('touchstart', this.handleMouseDown_);\n      this.on('keydown', this.handleKeyDown_);\n      this.on('click', this.handleClick_);\n\n      // TODO: deprecated, controlsvisible does not seem to be fired\n      this.on(this.player_, 'controlsvisible', this.update);\n      if (this.playerEvent) {\n        this.on(this.player_, this.playerEvent, this.update);\n      }\n      this.removeClass('disabled');\n      this.setAttribute('tabindex', 0);\n      this.enabled_ = true;\n    }\n\n    /**\n     * Disable controls for this slider if they are enabled\n     */\n    disable() {\n      if (!this.enabled()) {\n        return;\n      }\n      const doc = this.bar.el_.ownerDocument;\n      this.off('mousedown', this.handleMouseDown_);\n      this.off('touchstart', this.handleMouseDown_);\n      this.off('keydown', this.handleKeyDown_);\n      this.off('click', this.handleClick_);\n      this.off(this.player_, 'controlsvisible', this.update_);\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.removeAttribute('tabindex');\n      this.addClass('disabled');\n      if (this.playerEvent) {\n        this.off(this.player_, this.playerEvent, this.update);\n      }\n      this.enabled_ = false;\n    }\n\n    /**\n     * Create the `Slider`s DOM element.\n     *\n     * @param {string} type\n     *        Type of element to create.\n     *\n     * @param {Object} [props={}]\n     *        List of properties in Object form.\n     *\n     * @param {Object} [attributes={}]\n     *        list of attributes in Object form.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(type, props = {}, attributes = {}) {\n      // Add the slider element class to all sub classes\n      props.className = props.className + ' vjs-slider';\n      props = Object.assign({\n        tabIndex: 0\n      }, props);\n      attributes = Object.assign({\n        'role': 'slider',\n        'aria-valuenow': 0,\n        'aria-valuemin': 0,\n        'aria-valuemax': 100\n      }, attributes);\n      return super.createEl(type, props, attributes);\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     * @fires Slider#slideractive\n     */\n    handleMouseDown(event) {\n      const doc = this.bar.el_.ownerDocument;\n      if (event.type === 'mousedown') {\n        event.preventDefault();\n      }\n      // Do not call preventDefault() on touchstart in Chrome\n      // to avoid console warnings. Use a 'touch-action: none' style\n      // instead to prevent unintented scrolling.\n      // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n      if (event.type === 'touchstart' && !IS_CHROME) {\n        event.preventDefault();\n      }\n      blockTextSelection();\n      this.addClass('vjs-sliding');\n      /**\n       * Triggered when the slider is in an active state\n       *\n       * @event Slider#slideractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('slideractive');\n      this.on(doc, 'mousemove', this.handleMouseMove_);\n      this.on(doc, 'mouseup', this.handleMouseUp_);\n      this.on(doc, 'touchmove', this.handleMouseMove_);\n      this.on(doc, 'touchend', this.handleMouseUp_);\n      this.handleMouseMove(event, true);\n    }\n\n    /**\n     * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n     * The `mousemove` and `touchmove` events will only only trigger this function during\n     * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n     * {@link Slider#handleMouseUp}.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n     *        this function\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false.\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    handleMouseMove(event) {}\n\n    /**\n     * Handle `mouseup` or `touchend` events on the `Slider`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     * @fires Slider#sliderinactive\n     */\n    handleMouseUp() {\n      const doc = this.bar.el_.ownerDocument;\n      unblockTextSelection();\n      this.removeClass('vjs-sliding');\n      /**\n       * Triggered when the slider is no longer in an active state.\n       *\n       * @event Slider#sliderinactive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('sliderinactive');\n      this.off(doc, 'mousemove', this.handleMouseMove_);\n      this.off(doc, 'mouseup', this.handleMouseUp_);\n      this.off(doc, 'touchmove', this.handleMouseMove_);\n      this.off(doc, 'touchend', this.handleMouseUp_);\n      this.update();\n    }\n\n    /**\n     * Update the progress bar of the `Slider`.\n     *\n     * @return {number}\n     *          The percentage of progress the progress bar represents as a\n     *          number from 0 to 1.\n     */\n    update() {\n      // In VolumeBar init we have a setTimeout for update that pops and update\n      // to the end of the execution stack. The player is destroyed before then\n      // update will cause an error\n      // If there's no bar...\n      if (!this.el_ || !this.bar) {\n        return;\n      }\n\n      // clamp progress between 0 and 1\n      // and only round to four decimal places, as we round to two below\n      const progress = this.getProgress();\n      if (progress === this.progress_) {\n        return progress;\n      }\n      this.progress_ = progress;\n      this.requestNamedAnimationFrame('Slider#update', () => {\n        // Set the new bar width or height\n        const sizeKey = this.vertical() ? 'height' : 'width';\n\n        // Convert to a percentage for css value\n        this.bar.el().style[sizeKey] = (progress * 100).toFixed(2) + '%';\n      });\n      return progress;\n    }\n\n    /**\n     * Get the percentage of the bar that should be filled\n     * but clamped and rounded.\n     *\n     * @return {number}\n     *         percentage filled that the slider is\n     */\n    getProgress() {\n      return Number(clamp(this.getPercent(), 0, 1).toFixed(4));\n    }\n\n    /**\n     * Calculate distance for slider\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @return {number}\n     *         The current position of the Slider.\n     *         - position.x for vertical `Slider`s\n     *         - position.y for horizontal `Slider`s\n     */\n    calculateDistance(event) {\n      const position = getPointerPosition(this.el_, event);\n      if (this.vertical()) {\n        return position.y;\n      }\n      return position.x;\n    }\n\n    /**\n     * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n     * arrow keys. This function will only be called when the slider has focus. See\n     * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n     *\n     * @param {EventTarget~Event} event\n     *        the `keydown` event that caused this function to run.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n\n        // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n      } else {\n        // Pass keydown handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n\n    /**\n     * Listener for click events on slider, used to prevent clicks\n     *   from bubbling up to parent elements like button menus.\n     *\n     * @param {Object} event\n     *        Event that caused this object to run\n     */\n    handleClick(event) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n\n    /**\n     * Get/set if slider is horizontal for vertical\n     *\n     * @param {boolean} [bool]\n     *        - true if slider is vertical,\n     *        - false is horizontal\n     *\n     * @return {boolean}\n     *         - true if slider is vertical, and getting\n     *         - false if the slider is horizontal, and getting\n     */\n    vertical(bool) {\n      if (bool === undefined) {\n        return this.vertical_ || false;\n      }\n      this.vertical_ = !!bool;\n      if (this.vertical_) {\n        this.addClass('vjs-slider-vertical');\n      } else {\n        this.addClass('vjs-slider-horizontal');\n      }\n    }\n  }\n  Component$1.registerComponent('Slider', Slider);\n\n  /**\n   * @file load-progress-bar.js\n   */\n\n  // get the percent width of a time compared to the total end\n  const percentify = (time, end) => clamp(time / end * 100, 0, 100).toFixed(2) + '%';\n\n  /**\n   * Shows loading progress\n   *\n   * @extends Component\n   */\n  class LoadProgressBar extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.partEls_ = [];\n      this.on(player, 'progress', e => this.update(e));\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-load-progress'\n      });\n      const wrapper = createEl('span', {\n        className: 'vjs-control-text'\n      });\n      const loadedText = createEl('span', {\n        textContent: this.localize('Loaded')\n      });\n      const separator = document.createTextNode(': ');\n      this.percentageEl_ = createEl('span', {\n        className: 'vjs-control-text-loaded-percentage',\n        textContent: '0%'\n      });\n      el.appendChild(wrapper);\n      wrapper.appendChild(loadedText);\n      wrapper.appendChild(separator);\n      wrapper.appendChild(this.percentageEl_);\n      return el;\n    }\n    dispose() {\n      this.partEls_ = null;\n      this.percentageEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Update progress bar\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `progress` event that caused this function to run.\n     *\n     * @listens Player#progress\n     */\n    update(event) {\n      this.requestNamedAnimationFrame('LoadProgressBar#update', () => {\n        const liveTracker = this.player_.liveTracker;\n        const buffered = this.player_.buffered();\n        const duration = liveTracker && liveTracker.isLive() ? liveTracker.seekableEnd() : this.player_.duration();\n        const bufferedEnd = this.player_.bufferedEnd();\n        const children = this.partEls_;\n        const percent = percentify(bufferedEnd, duration);\n        if (this.percent_ !== percent) {\n          // update the width of the progress bar\n          this.el_.style.width = percent;\n          // update the control-text\n          textContent(this.percentageEl_, percent);\n          this.percent_ = percent;\n        }\n\n        // add child elements to represent the individual buffered time ranges\n        for (let i = 0; i < buffered.length; i++) {\n          const start = buffered.start(i);\n          const end = buffered.end(i);\n          let part = children[i];\n          if (!part) {\n            part = this.el_.appendChild(createEl());\n            children[i] = part;\n          }\n\n          //  only update if changed\n          if (part.dataset.start === start && part.dataset.end === end) {\n            continue;\n          }\n          part.dataset.start = start;\n          part.dataset.end = end;\n\n          // set the percent based on the width of the progress bar (bufferedEnd)\n          part.style.left = percentify(start, bufferedEnd);\n          part.style.width = percentify(end - start, bufferedEnd);\n        }\n\n        // remove unused buffered range elements\n        for (let i = children.length; i > buffered.length; i--) {\n          this.el_.removeChild(children[i - 1]);\n        }\n        children.length = buffered.length;\n      });\n    }\n  }\n  Component$1.registerComponent('LoadProgressBar', LoadProgressBar);\n\n  /**\n   * @file time-tooltip.js\n   */\n\n  /**\n   * Time tooltips display a time above the progress bar.\n   *\n   * @extends Component\n   */\n  class TimeTooltip extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the time tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-time-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    update(seekBarRect, seekBarPoint, content) {\n      const tooltipRect = findPosition(this.el_);\n      const playerRect = getBoundingClientRect(this.player_.el());\n      const seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n      // do nothing if either rect isn't available\n      // for example, if the player isn't in the DOM for testing\n      if (!playerRect || !tooltipRect) {\n        return;\n      }\n\n      // This is the space left of the `seekBarPoint` available within the bounds\n      // of the player. We calculate any gap between the left edge of the player\n      // and the left edge of the `SeekBar` and add the number of pixels in the\n      // `SeekBar` before hitting the `seekBarPoint`\n      const spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n      // This is the space right of the `seekBarPoint` available within the bounds\n      // of the player. We calculate the number of pixels from the `seekBarPoint`\n      // to the right edge of the `SeekBar` and add to that any gap between the\n      // right edge of the `SeekBar` and the player.\n      const spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n      // This is the number of pixels by which the tooltip will need to be pulled\n      // further to the right to center it over the `seekBarPoint`.\n      let pullTooltipBy = tooltipRect.width / 2;\n\n      // Adjust the `pullTooltipBy` distance to the left or right depending on\n      // the results of the space calculations above.\n      if (spaceLeftOfPoint < pullTooltipBy) {\n        pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n      } else if (spaceRightOfPoint < pullTooltipBy) {\n        pullTooltipBy = spaceRightOfPoint;\n      }\n\n      // Due to the imprecision of decimal/ratio based calculations and varying\n      // rounding behaviors, there are cases where the spacing adjustment is off\n      // by a pixel or two. This adds insurance to these calculations.\n      if (pullTooltipBy < 0) {\n        pullTooltipBy = 0;\n      } else if (pullTooltipBy > tooltipRect.width) {\n        pullTooltipBy = tooltipRect.width;\n      }\n\n      // prevent small width fluctuations within 0.4px from\n      // changing the value below.\n      // This really helps for live to prevent the play\n      // progress time tooltip from jittering\n      pullTooltipBy = Math.round(pullTooltipBy);\n      this.el_.style.right = `-${pullTooltipBy}px`;\n      this.write(content);\n    }\n\n    /**\n     * Write the time to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted time for the tooltip.\n     */\n    write(content) {\n      textContent(this.el_, content);\n    }\n\n    /**\n     * Updates the position of the time tooltip relative to the `SeekBar`.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     *\n     * @param {number} time\n     *        The time to update the tooltip to, not used during live playback\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    updateTime(seekBarRect, seekBarPoint, time, cb) {\n      this.requestNamedAnimationFrame('TimeTooltip#updateTime', () => {\n        let content;\n        const duration = this.player_.duration();\n        if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n          const liveWindow = this.player_.liveTracker.liveWindow();\n          const secondsBehind = liveWindow - seekBarPoint * liveWindow;\n          content = (secondsBehind < 1 ? '' : '-') + formatTime(secondsBehind, liveWindow);\n        } else {\n          content = formatTime(time, duration);\n        }\n        this.update(seekBarRect, seekBarPoint, content);\n        if (cb) {\n          cb();\n        }\n      });\n    }\n  }\n  Component$1.registerComponent('TimeTooltip', TimeTooltip);\n\n  /**\n   * @file play-progress-bar.js\n   */\n\n  /**\n   * Used by {@link SeekBar} to display media playback progress as part of the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n  class PlayProgressBar extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-play-progress vjs-slider-bar'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    update(seekBarRect, seekBarPoint) {\n      const timeTooltip = this.getChild('timeTooltip');\n      if (!timeTooltip) {\n        return;\n      }\n      const time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n      timeTooltip.updateTime(seekBarRect, seekBarPoint, time);\n    }\n  }\n\n  /**\n   * Default options for {@link PlayProgressBar}.\n   *\n   * @type {Object}\n   * @private\n   */\n  PlayProgressBar.prototype.options_ = {\n    children: []\n  };\n\n  // Time tooltips should not be added to a player on mobile devices\n  if (!IS_IOS && !IS_ANDROID) {\n    PlayProgressBar.prototype.options_.children.push('timeTooltip');\n  }\n  Component$1.registerComponent('PlayProgressBar', PlayProgressBar);\n\n  /**\n   * @file mouse-time-display.js\n   */\n\n  /**\n   * The {@link MouseTimeDisplay} component tracks mouse movement over the\n   * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n   * indicating the time which is represented by a given point in the\n   * {@link ProgressControl}.\n   *\n   * @extends Component\n   */\n  class MouseTimeDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n\n    /**\n     * Enqueues updates to its own DOM as well as the DOM of its\n     * {@link TimeTooltip} child.\n     *\n     * @param {Object} seekBarRect\n     *        The `ClientRect` for the {@link SeekBar} element.\n     *\n     * @param {number} seekBarPoint\n     *        A number from 0 to 1, representing a horizontal reference point\n     *        from the left edge of the {@link SeekBar}\n     */\n    update(seekBarRect, seekBarPoint) {\n      const time = seekBarPoint * this.player_.duration();\n      this.getChild('timeTooltip').updateTime(seekBarRect, seekBarPoint, time, () => {\n        this.el_.style.left = `${seekBarRect.width * seekBarPoint}px`;\n      });\n    }\n  }\n\n  /**\n   * Default options for `MouseTimeDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n  MouseTimeDisplay.prototype.options_ = {\n    children: ['timeTooltip']\n  };\n  Component$1.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n  /**\n   * @file seek-bar.js\n   */\n\n  // The number of seconds the `step*` functions move the timeline.\n  const STEP_SECONDS = 5;\n\n  // The multiplier of STEP_SECONDS that PgUp/PgDown move the timeline.\n  const PAGE_KEY_MULTIPLIER = 12;\n\n  /**\n   * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n   * as its `bar`.\n   *\n   * @extends Slider\n   */\n  class SeekBar extends Slider {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.setEventHandlers_();\n    }\n\n    /**\n     * Sets the event handlers\n     *\n     * @private\n     */\n    setEventHandlers_() {\n      this.update_ = bind_(this, this.update);\n      this.update = throttle(this.update_, UPDATE_REFRESH_INTERVAL);\n      this.on(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n      if (this.player_.liveTracker) {\n        this.on(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n\n      // when playing, let's ensure we smoothly update the play progress bar\n      // via an interval\n      this.updateInterval = null;\n      this.enableIntervalHandler_ = e => this.enableInterval_(e);\n      this.disableIntervalHandler_ = e => this.disableInterval_(e);\n      this.on(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.on(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n      // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.on(document, 'visibilitychange', this.toggleVisibility_);\n      }\n    }\n    toggleVisibility_(e) {\n      if (document.visibilityState === 'hidden') {\n        this.cancelNamedAnimationFrame('SeekBar#update');\n        this.cancelNamedAnimationFrame('Slider#update');\n        this.disableInterval_(e);\n      } else {\n        if (!this.player_.ended() && !this.player_.paused()) {\n          this.enableInterval_();\n        }\n\n        // we just switched back to the page and someone may be looking, so, update ASAP\n        this.update();\n      }\n    }\n    enableInterval_() {\n      if (this.updateInterval) {\n        return;\n      }\n      this.updateInterval = this.setInterval(this.update, UPDATE_REFRESH_INTERVAL);\n    }\n    disableInterval_(e) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive() && e && e.type !== 'ended') {\n        return;\n      }\n      if (!this.updateInterval) {\n        return;\n      }\n      this.clearInterval(this.updateInterval);\n      this.updateInterval = null;\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-progress-holder'\n      }, {\n        'aria-label': this.localize('Progress Bar')\n      });\n    }\n\n    /**\n     * This function updates the play progress bar and accessibility\n     * attributes to whatever is passed in.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `timeupdate` or `ended` event that caused this to run.\n     *\n     * @listens Player#timeupdate\n     *\n     * @return {number}\n     *          The current percent at a number from 0-1\n     */\n    update(event) {\n      // ignore updates while the tab is hidden\n      if (document.visibilityState === 'hidden') {\n        return;\n      }\n      const percent = super.update();\n      this.requestNamedAnimationFrame('SeekBar#update', () => {\n        const currentTime = this.player_.ended() ? this.player_.duration() : this.getCurrentTime_();\n        const liveTracker = this.player_.liveTracker;\n        let duration = this.player_.duration();\n        if (liveTracker && liveTracker.isLive()) {\n          duration = this.player_.liveTracker.liveCurrentTime();\n        }\n        if (this.percent_ !== percent) {\n          // machine readable value of progress bar (percentage complete)\n          this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n          this.percent_ = percent;\n        }\n        if (this.currentTime_ !== currentTime || this.duration_ !== duration) {\n          // human readable value of progress bar (time complete)\n          this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n          this.currentTime_ = currentTime;\n          this.duration_ = duration;\n        }\n\n        // update the progress bar time tooltip with the current time\n        if (this.bar) {\n          this.bar.update(getBoundingClientRect(this.el()), this.getProgress());\n        }\n      });\n      return percent;\n    }\n\n    /**\n     * Prevent liveThreshold from causing seeks to seem like they\n     * are not happening from a user perspective.\n     *\n     * @param {number} ct\n     *        current time to seek to\n     */\n    userSeek_(ct) {\n      if (this.player_.liveTracker && this.player_.liveTracker.isLive()) {\n        this.player_.liveTracker.nextSeekedFromUser();\n      }\n      this.player_.currentTime(ct);\n    }\n\n    /**\n     * Get the value of current time but allows for smooth scrubbing,\n     * when player can't keep up.\n     *\n     * @return {number}\n     *         The current time value to display\n     *\n     * @private\n     */\n    getCurrentTime_() {\n      return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n    }\n\n    /**\n     * Get the percentage of media played so far.\n     *\n     * @return {number}\n     *         The percentage of media played so far (0 to 1).\n     */\n    getPercent() {\n      const currentTime = this.getCurrentTime_();\n      let percent;\n      const liveTracker = this.player_.liveTracker;\n      if (liveTracker && liveTracker.isLive()) {\n        percent = (currentTime - liveTracker.seekableStart()) / liveTracker.liveWindow();\n\n        // prevent the percent from changing at the live edge\n        if (liveTracker.atLiveEdge()) {\n          percent = 1;\n        }\n      } else {\n        percent = currentTime / this.player_.duration();\n      }\n      return percent;\n    }\n\n    /**\n     * Handle mouse down on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n\n      // Stop event propagation to prevent double fire in progress-control.js\n      event.stopPropagation();\n      this.videoWasPlaying = !this.player_.paused();\n      this.player_.pause();\n      super.handleMouseDown(event);\n    }\n\n    /**\n     * Handle mouse move on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this to run.\n     * @param {boolean} mouseDown this is a flag that should be set to true if `handleMouseMove` is called directly. It allows us to skip things that should not happen if coming from mouse down but should happen on regular mouse move handler. Defaults to false\n     *\n     * @listens mousemove\n     */\n    handleMouseMove(event, mouseDown = false) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n      if (!mouseDown && !this.player_.scrubbing()) {\n        this.player_.scrubbing(true);\n      }\n      let newTime;\n      const distance = this.calculateDistance(event);\n      const liveTracker = this.player_.liveTracker;\n      if (!liveTracker || !liveTracker.isLive()) {\n        newTime = distance * this.player_.duration();\n\n        // Don't let video end while scrubbing.\n        if (newTime === this.player_.duration()) {\n          newTime = newTime - 0.1;\n        }\n      } else {\n        if (distance >= 0.99) {\n          liveTracker.seekToLiveEdge();\n          return;\n        }\n        const seekableStart = liveTracker.seekableStart();\n        const seekableEnd = liveTracker.liveCurrentTime();\n        newTime = seekableStart + distance * liveTracker.liveWindow();\n\n        // Don't let video end while scrubbing.\n        if (newTime >= seekableEnd) {\n          newTime = seekableEnd;\n        }\n\n        // Compensate for precision differences so that currentTime is not less\n        // than seekable start\n        if (newTime <= seekableStart) {\n          newTime = seekableStart + 0.1;\n        }\n\n        // On android seekableEnd can be Infinity sometimes,\n        // this will cause newTime to be Infinity, which is\n        // not a valid currentTime.\n        if (newTime === Infinity) {\n          return;\n        }\n      }\n\n      // Set new time (tell player to seek to new time)\n      this.userSeek_(newTime);\n    }\n    enable() {\n      super.enable();\n      const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n      if (!mouseTimeDisplay) {\n        return;\n      }\n      mouseTimeDisplay.show();\n    }\n    disable() {\n      super.disable();\n      const mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n      if (!mouseTimeDisplay) {\n        return;\n      }\n      mouseTimeDisplay.hide();\n    }\n\n    /**\n     * Handle mouse up on seek bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseup` event that caused this to run.\n     *\n     * @listens mouseup\n     */\n    handleMouseUp(event) {\n      super.handleMouseUp(event);\n\n      // Stop event propagation to prevent double fire in progress-control.js\n      if (event) {\n        event.stopPropagation();\n      }\n      this.player_.scrubbing(false);\n\n      /**\n       * Trigger timeupdate because we're done seeking and the time has changed.\n       * This is particularly useful for if the player is paused to time the time displays.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.player_.trigger({\n        type: 'timeupdate',\n        target: this,\n        manuallyTriggered: true\n      });\n      if (this.videoWasPlaying) {\n        silencePromise(this.player_.play());\n      } else {\n        // We're done seeking and the time has changed.\n        // If the player is paused, make sure we display the correct time on the seek bar.\n        this.update_();\n      }\n    }\n\n    /**\n     * Move more quickly fast forward for keyboard-only users\n     */\n    stepForward() {\n      this.userSeek_(this.player_.currentTime() + STEP_SECONDS);\n    }\n\n    /**\n     * Move more quickly rewind for keyboard-only users\n     */\n    stepBack() {\n      this.userSeek_(this.player_.currentTime() - STEP_SECONDS);\n    }\n\n    /**\n     * Toggles the playback state of the player\n     * This gets called when enter or space is used on the seekbar\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called\n     *\n     */\n    handleAction(event) {\n      if (this.player_.paused()) {\n        this.player_.play();\n      } else {\n        this.player_.pause();\n      }\n    }\n\n    /**\n     * Called when this SeekBar has focus and a key gets pressed down.\n     * Supports the following keys:\n     *\n     *   Space or Enter key fire a click event\n     *   Home key moves to start of the timeline\n     *   End key moves to end of the timeline\n     *   Digit \"0\" through \"9\" keys move to 0%, 10% ... 80%, 90% of the timeline\n     *   PageDown key moves back a larger step than ArrowDown\n     *   PageUp key moves forward a large step\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      const liveTracker = this.player_.liveTracker;\n      if (keycode.isEventKey(event, 'Space') || keycode.isEventKey(event, 'Enter')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleAction(event);\n      } else if (keycode.isEventKey(event, 'Home')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(0);\n      } else if (keycode.isEventKey(event, 'End')) {\n        event.preventDefault();\n        event.stopPropagation();\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.liveCurrentTime());\n        } else {\n          this.userSeek_(this.player_.duration());\n        }\n      } else if (/^[0-9]$/.test(keycode(event))) {\n        event.preventDefault();\n        event.stopPropagation();\n        const gotoFraction = (keycode.codes[keycode(event)] - keycode.codes['0']) * 10.0 / 100.0;\n        if (liveTracker && liveTracker.isLive()) {\n          this.userSeek_(liveTracker.seekableStart() + liveTracker.liveWindow() * gotoFraction);\n        } else {\n          this.userSeek_(this.player_.duration() * gotoFraction);\n        }\n      } else if (keycode.isEventKey(event, 'PgDn')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() - STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else if (keycode.isEventKey(event, 'PgUp')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.userSeek_(this.player_.currentTime() + STEP_SECONDS * PAGE_KEY_MULTIPLIER);\n      } else {\n        // Pass keydown handling up for unsupported keys\n        super.handleKeyDown(event);\n      }\n    }\n    dispose() {\n      this.disableInterval_();\n      this.off(this.player_, ['ended', 'durationchange', 'timeupdate'], this.update);\n      if (this.player_.liveTracker) {\n        this.off(this.player_.liveTracker, 'liveedgechange', this.update);\n      }\n      this.off(this.player_, ['playing'], this.enableIntervalHandler_);\n      this.off(this.player_, ['ended', 'pause', 'waiting'], this.disableIntervalHandler_);\n\n      // we don't need to update the play progress if the document is hidden,\n      // also, this causes the CPU to spike and eventually crash the page on IE11.\n      if ('hidden' in document && 'visibilityState' in document) {\n        this.off(document, 'visibilitychange', this.toggleVisibility_);\n      }\n      super.dispose();\n    }\n  }\n\n  /**\n   * Default options for the `SeekBar`\n   *\n   * @type {Object}\n   * @private\n   */\n  SeekBar.prototype.options_ = {\n    children: ['loadProgressBar', 'playProgressBar'],\n    barName: 'playProgressBar'\n  };\n\n  // MouseTimeDisplay tooltips should not be added to a player on mobile devices\n  if (!IS_IOS && !IS_ANDROID) {\n    SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n  }\n  Component$1.registerComponent('SeekBar', SeekBar);\n\n  /**\n   * @file progress-control.js\n   */\n\n  /**\n   * The Progress Control component contains the seek bar, load progress,\n   * and play progress.\n   *\n   * @extends Component\n   */\n  class ProgressControl extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.handleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      this.throttledHandleMouseSeek = throttle(bind_(this, this.handleMouseSeek), UPDATE_REFRESH_INTERVAL);\n      this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n      this.handleMouseDownHandler_ = e => this.handleMouseDown(e);\n      this.enable();\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-progress-control vjs-control'\n      });\n    }\n\n    /**\n     * When the mouse moves over the `ProgressControl`, the pointer position\n     * gets passed down to the `MouseTimeDisplay` component.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     */\n    handleMouseMove(event) {\n      const seekBar = this.getChild('seekBar');\n      if (!seekBar) {\n        return;\n      }\n      const playProgressBar = seekBar.getChild('playProgressBar');\n      const mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      if (!playProgressBar && !mouseTimeDisplay) {\n        return;\n      }\n      const seekBarEl = seekBar.el();\n      const seekBarRect = findPosition(seekBarEl);\n      let seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      seekBarPoint = clamp(seekBarPoint, 0, 1);\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n      if (playProgressBar) {\n        playProgressBar.update(seekBarRect, seekBar.getProgress());\n      }\n    }\n\n    /**\n     * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n     *\n     * @method ProgressControl#throttledHandleMouseSeek\n     * @param {EventTarget~Event} event\n     *        The `mousemove` event that caused this function to run.\n     *\n     * @listen mousemove\n     * @listen touchmove\n     */\n\n    /**\n     * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousemove\n     * @listens touchmove\n     */\n    handleMouseSeek(event) {\n      const seekBar = this.getChild('seekBar');\n      if (seekBar) {\n        seekBar.handleMouseMove(event);\n      }\n    }\n\n    /**\n     * Are controls are currently enabled for this progress control.\n     *\n     * @return {boolean}\n     *         true if controls are enabled, false otherwise\n     */\n    enabled() {\n      return this.enabled_;\n    }\n\n    /**\n     * Disable all controls on the progress control and its children\n     */\n    disable() {\n      this.children().forEach(child => child.disable && child.disable());\n      if (!this.enabled()) {\n        return;\n      }\n      this.off(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.off(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeListenersAddedOnMousedownAndTouchstart();\n      this.addClass('disabled');\n      this.enabled_ = false;\n\n      // Restore normal playback state if controls are disabled while scrubbing\n      if (this.player_.scrubbing()) {\n        const seekBar = this.getChild('seekBar');\n        this.player_.scrubbing(false);\n        if (seekBar.videoWasPlaying) {\n          silencePromise(this.player_.play());\n        }\n      }\n    }\n\n    /**\n     * Enable all controls on the progress control and its children\n     */\n    enable() {\n      this.children().forEach(child => child.enable && child.enable());\n      if (this.enabled()) {\n        return;\n      }\n      this.on(['mousedown', 'touchstart'], this.handleMouseDownHandler_);\n      this.on(this.el_, 'mousemove', this.handleMouseMove);\n      this.removeClass('disabled');\n      this.enabled_ = true;\n    }\n\n    /**\n     * Cleanup listeners after the user finishes interacting with the progress controls\n     */\n    removeListenersAddedOnMousedownAndTouchstart() {\n      const doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    handleMouseDown(event) {\n      const doc = this.el_.ownerDocument;\n      const seekBar = this.getChild('seekBar');\n      if (seekBar) {\n        seekBar.handleMouseDown(event);\n      }\n      this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n      this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    handleMouseUp(event) {\n      const seekBar = this.getChild('seekBar');\n      if (seekBar) {\n        seekBar.handleMouseUp(event);\n      }\n      this.removeListenersAddedOnMousedownAndTouchstart();\n    }\n  }\n\n  /**\n   * Default options for `ProgressControl`\n   *\n   * @type {Object}\n   * @private\n   */\n  ProgressControl.prototype.options_ = {\n    children: ['seekBar']\n  };\n  Component$1.registerComponent('ProgressControl', ProgressControl);\n\n  /**\n   * @file picture-in-picture-toggle.js\n   */\n\n  /**\n   * Toggle Picture-in-Picture mode\n   *\n   * @extends Button\n   */\n  class PictureInPictureToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, ['enterpictureinpicture', 'leavepictureinpicture'], e => this.handlePictureInPictureChange(e));\n      this.on(player, ['disablepictureinpicturechanged', 'loadedmetadata'], e => this.handlePictureInPictureEnabledChange(e));\n      this.on(player, ['loadedmetadata', 'audioonlymodechange', 'audiopostermodechange'], () => {\n        // This audio detection will not detect HLS or DASH audio-only streams because there was no reliable way to detect them at the time\n        const isSourceAudio = player.currentType().substring(0, 5) === 'audio';\n        if (isSourceAudio || player.audioPosterMode() || player.audioOnlyMode()) {\n          if (player.isInPictureInPicture()) {\n            player.exitPictureInPicture();\n          }\n          this.hide();\n        } else {\n          this.show();\n        }\n      });\n\n      // TODO: Deactivate button on player emptied event.\n      this.disable();\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-picture-in-picture-control ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Enables or disables button based on document.pictureInPictureEnabled property value\n     * or on value returned by player.disablePictureInPicture() method.\n     */\n    handlePictureInPictureEnabledChange() {\n      if (document.pictureInPictureEnabled && this.player_.disablePictureInPicture() === false) {\n        this.enable();\n      } else {\n        this.disable();\n      }\n    }\n\n    /**\n     * Handles enterpictureinpicture and leavepictureinpicture on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#enterpictureinpicture} or {@link Player#leavepictureinpicture} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#enterpictureinpicture\n     * @listens Player#leavepictureinpicture\n     */\n    handlePictureInPictureChange(event) {\n      if (this.player_.isInPictureInPicture()) {\n        this.controlText('Exit Picture-in-Picture');\n      } else {\n        this.controlText('Picture-in-Picture');\n      }\n      this.handlePictureInPictureEnabledChange();\n    }\n\n    /**\n     * This gets called when an `PictureInPictureToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (!this.player_.isInPictureInPicture()) {\n        this.player_.requestPictureInPicture();\n      } else {\n        this.player_.exitPictureInPicture();\n      }\n    }\n  }\n\n  /**\n   * The text that should display over the `PictureInPictureToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  PictureInPictureToggle.prototype.controlText_ = 'Picture-in-Picture';\n  Component$1.registerComponent('PictureInPictureToggle', PictureInPictureToggle);\n\n  /**\n   * @file fullscreen-toggle.js\n   */\n\n  /**\n   * Toggle fullscreen video\n   *\n   * @extends Button\n   */\n  class FullscreenToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, 'fullscreenchange', e => this.handleFullscreenChange(e));\n      if (document[player.fsApi_.fullscreenEnabled] === false) {\n        this.disable();\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-fullscreen-control ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Handles fullscreenchange on the player and change control text accordingly.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#fullscreenchange} event that caused this function to be\n     *        called.\n     *\n     * @listens Player#fullscreenchange\n     */\n    handleFullscreenChange(event) {\n      if (this.player_.isFullscreen()) {\n        this.controlText('Exit Fullscreen');\n      } else {\n        this.controlText('Fullscreen');\n      }\n    }\n\n    /**\n     * This gets called when an `FullscreenToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (!this.player_.isFullscreen()) {\n        this.player_.requestFullscreen();\n      } else {\n        this.player_.exitFullscreen();\n      }\n    }\n  }\n\n  /**\n   * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  FullscreenToggle.prototype.controlText_ = 'Fullscreen';\n  Component$1.registerComponent('FullscreenToggle', FullscreenToggle);\n\n  /**\n   * Check if volume control is supported and if it isn't hide the\n   * `Component` that was passed  using the `vjs-hidden` class.\n   *\n   * @param {Component} self\n   *        The component that should be hidden if volume is unsupported\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  const checkVolumeSupport = function (self, player) {\n    // hide volume controls when they're not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    }\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresVolumeControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * @file volume-level.js\n   */\n\n  /**\n   * Shows volume level\n   *\n   * @extends Component\n   */\n  class VolumeLevel extends Component$1 {\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl('div', {\n        className: 'vjs-volume-level'\n      });\n      el.appendChild(super.createEl('span', {\n        className: 'vjs-control-text'\n      }));\n      return el;\n    }\n  }\n  Component$1.registerComponent('VolumeLevel', VolumeLevel);\n\n  /**\n   * @file volume-level-tooltip.js\n   */\n\n  /**\n   * Volume level tooltips display a volume above or side by side the volume bar.\n   *\n   * @extends Component\n   */\n  class VolumeLevelTooltip extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the volume tooltip DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-volume-tooltip'\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Updates the position of the tooltip relative to the `VolumeBar` and\n     * its content text.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    update(rangeBarRect, rangeBarPoint, vertical, content) {\n      if (!vertical) {\n        const tooltipRect = getBoundingClientRect(this.el_);\n        const playerRect = getBoundingClientRect(this.player_.el());\n        const volumeBarPointPx = rangeBarRect.width * rangeBarPoint;\n        if (!playerRect || !tooltipRect) {\n          return;\n        }\n        const spaceLeftOfPoint = rangeBarRect.left - playerRect.left + volumeBarPointPx;\n        const spaceRightOfPoint = rangeBarRect.width - volumeBarPointPx + (playerRect.right - rangeBarRect.right);\n        let pullTooltipBy = tooltipRect.width / 2;\n        if (spaceLeftOfPoint < pullTooltipBy) {\n          pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n        } else if (spaceRightOfPoint < pullTooltipBy) {\n          pullTooltipBy = spaceRightOfPoint;\n        }\n        if (pullTooltipBy < 0) {\n          pullTooltipBy = 0;\n        } else if (pullTooltipBy > tooltipRect.width) {\n          pullTooltipBy = tooltipRect.width;\n        }\n        this.el_.style.right = `-${pullTooltipBy}px`;\n      }\n      this.write(`${content}%`);\n    }\n\n    /**\n     * Write the volume to the tooltip DOM element.\n     *\n     * @param {string} content\n     *        The formatted volume for the tooltip.\n     */\n    write(content) {\n      textContent(this.el_, content);\n    }\n\n    /**\n     * Updates the position of the volume tooltip relative to the `VolumeBar`.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     * @param {number} volume\n     *        The volume level to update the tooltip to\n     *\n     * @param {Function} cb\n     *        A function that will be called during the request animation frame\n     *        for tooltips that need to do additional animations from the default\n     */\n    updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, cb) {\n      this.requestNamedAnimationFrame('VolumeLevelTooltip#updateVolume', () => {\n        this.update(rangeBarRect, rangeBarPoint, vertical, volume.toFixed(0));\n        if (cb) {\n          cb();\n        }\n      });\n    }\n  }\n  Component$1.registerComponent('VolumeLevelTooltip', VolumeLevelTooltip);\n\n  /**\n   * @file mouse-volume-level-display.js\n   */\n\n  /**\n   * The {@link MouseVolumeLevelDisplay} component tracks mouse movement over the\n   * {@link VolumeControl}. It displays an indicator and a {@link VolumeLevelTooltip}\n   * indicating the volume level which is represented by a given point in the\n   * {@link VolumeBar}.\n   *\n   * @extends Component\n   */\n  class MouseVolumeLevelDisplay extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The {@link Player} that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.update = throttle(bind_(this, this.update), UPDATE_REFRESH_INTERVAL);\n    }\n\n    /**\n     * Create the DOM element for this class.\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-mouse-display'\n      });\n    }\n\n    /**\n     * Enquires updates to its own DOM as well as the DOM of its\n     * {@link VolumeLevelTooltip} child.\n     *\n     * @param {Object} rangeBarRect\n     *        The `ClientRect` for the {@link VolumeBar} element.\n     *\n     * @param {number} rangeBarPoint\n     *        A number from 0 to 1, representing a horizontal/vertical reference point\n     *        from the left edge of the {@link VolumeBar}\n     *\n     * @param {boolean} vertical\n     *        Referees to the Volume control position\n     *        in the control bar{@link VolumeControl}\n     *\n     */\n    update(rangeBarRect, rangeBarPoint, vertical) {\n      const volume = 100 * rangeBarPoint;\n      this.getChild('volumeLevelTooltip').updateVolume(rangeBarRect, rangeBarPoint, vertical, volume, () => {\n        if (vertical) {\n          this.el_.style.bottom = `${rangeBarRect.height * rangeBarPoint}px`;\n        } else {\n          this.el_.style.left = `${rangeBarRect.width * rangeBarPoint}px`;\n        }\n      });\n    }\n  }\n\n  /**\n   * Default options for `MouseVolumeLevelDisplay`\n   *\n   * @type {Object}\n   * @private\n   */\n  MouseVolumeLevelDisplay.prototype.options_ = {\n    children: ['volumeLevelTooltip']\n  };\n  Component$1.registerComponent('MouseVolumeLevelDisplay', MouseVolumeLevelDisplay);\n\n  /**\n   * @file volume-bar.js\n   */\n\n  /**\n   * The bar that contains the volume level and can be clicked on to adjust the level\n   *\n   * @extends Slider\n   */\n  class VolumeBar extends Slider {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on('slideractive', e => this.updateLastVolume_(e));\n      this.on(player, 'volumechange', e => this.updateARIAAttributes(e));\n      player.ready(() => this.updateARIAAttributes());\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-volume-bar vjs-slider-bar'\n      }, {\n        'aria-label': this.localize('Volume Level'),\n        'aria-live': 'polite'\n      });\n    }\n\n    /**\n     * Handle mouse down on volume bar\n     *\n     * @param {EventTarget~Event} event\n     *        The `mousedown` event that caused this to run.\n     *\n     * @listens mousedown\n     */\n    handleMouseDown(event) {\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n      super.handleMouseDown(event);\n    }\n\n    /**\n     * Handle movement events on the {@link VolumeMenuButton}.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run.\n     *\n     * @listens mousemove\n     */\n    handleMouseMove(event) {\n      const mouseVolumeLevelDisplay = this.getChild('mouseVolumeLevelDisplay');\n      if (mouseVolumeLevelDisplay) {\n        const volumeBarEl = this.el();\n        const volumeBarRect = getBoundingClientRect(volumeBarEl);\n        const vertical = this.vertical();\n        let volumeBarPoint = getPointerPosition(volumeBarEl, event);\n        volumeBarPoint = vertical ? volumeBarPoint.y : volumeBarPoint.x;\n        // The default skin has a gap on either side of the `VolumeBar`. This means\n        // that it's possible to trigger this behavior outside the boundaries of\n        // the `VolumeBar`. This ensures we stay within it at all times.\n        volumeBarPoint = clamp(volumeBarPoint, 0, 1);\n        mouseVolumeLevelDisplay.update(volumeBarRect, volumeBarPoint, vertical);\n      }\n      if (!isSingleLeftClick(event)) {\n        return;\n      }\n      this.checkMuted();\n      this.player_.volume(this.calculateDistance(event));\n    }\n\n    /**\n     * If the player is muted unmute it.\n     */\n    checkMuted() {\n      if (this.player_.muted()) {\n        this.player_.muted(false);\n      }\n    }\n\n    /**\n     * Get percent of volume level\n     *\n     * @return {number}\n     *         Volume level percent as a decimal number.\n     */\n    getPercent() {\n      if (this.player_.muted()) {\n        return 0;\n      }\n      return this.player_.volume();\n    }\n\n    /**\n     * Increase volume level for keyboard users\n     */\n    stepForward() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() + 0.1);\n    }\n\n    /**\n     * Decrease volume level for keyboard users\n     */\n    stepBack() {\n      this.checkMuted();\n      this.player_.volume(this.player_.volume() - 0.1);\n    }\n\n    /**\n     * Update ARIA accessibility attributes\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `volumechange` event that caused this function to run.\n     *\n     * @listens Player#volumechange\n     */\n    updateARIAAttributes(event) {\n      const ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n      this.el_.setAttribute('aria-valuenow', ariaValue);\n      this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n    }\n\n    /**\n     * Returns the current value of the player volume as a percentage\n     *\n     * @private\n     */\n    volumeAsPercentage_() {\n      return Math.round(this.player_.volume() * 100);\n    }\n\n    /**\n     * When user starts dragging the VolumeBar, store the volume and listen for\n     * the end of the drag. When the drag ends, if the volume was set to zero,\n     * set lastVolume to the stored volume.\n     *\n     * @listens slideractive\n     * @private\n     */\n    updateLastVolume_() {\n      const volumeBeforeDrag = this.player_.volume();\n      this.one('sliderinactive', () => {\n        if (this.player_.volume() === 0) {\n          this.player_.lastVolume_(volumeBeforeDrag);\n        }\n      });\n    }\n  }\n\n  /**\n   * Default options for the `VolumeBar`\n   *\n   * @type {Object}\n   * @private\n   */\n  VolumeBar.prototype.options_ = {\n    children: ['volumeLevel'],\n    barName: 'volumeLevel'\n  };\n\n  // MouseVolumeLevelDisplay tooltip should not be added to a player on mobile devices\n  if (!IS_IOS && !IS_ANDROID) {\n    VolumeBar.prototype.options_.children.splice(0, 0, 'mouseVolumeLevelDisplay');\n  }\n\n  /**\n   * Call the update event for this Slider when this event happens on the player.\n   *\n   * @type {string}\n   */\n  VolumeBar.prototype.playerEvent = 'volumechange';\n  Component$1.registerComponent('VolumeBar', VolumeBar);\n\n  /**\n   * @file volume-control.js\n   */\n\n  /**\n   * The component for controlling the volume level\n   *\n   * @extends Component\n   */\n  class VolumeControl extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      options.vertical = options.vertical || false;\n\n      // Pass the vertical option down to the VolumeBar if\n      // the VolumeBar is turned on.\n      if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n        options.volumeBar = options.volumeBar || {};\n        options.volumeBar.vertical = options.vertical;\n      }\n      super(player, options);\n\n      // hide this control if volume support is missing\n      checkVolumeSupport(this, player);\n      this.throttledHandleMouseMove = throttle(bind_(this, this.handleMouseMove), UPDATE_REFRESH_INTERVAL);\n      this.handleMouseUpHandler_ = e => this.handleMouseUp(e);\n      this.on('mousedown', e => this.handleMouseDown(e));\n      this.on('touchstart', e => this.handleMouseDown(e));\n      this.on('mousemove', e => this.handleMouseMove(e));\n\n      // while the slider is active (the mouse has been pressed down and\n      // is dragging) or in focus we do not want to hide the VolumeBar\n      this.on(this.volumeBar, ['focus', 'slideractive'], () => {\n        this.volumeBar.addClass('vjs-slider-active');\n        this.addClass('vjs-slider-active');\n        this.trigger('slideractive');\n      });\n      this.on(this.volumeBar, ['blur', 'sliderinactive'], () => {\n        this.volumeBar.removeClass('vjs-slider-active');\n        this.removeClass('vjs-slider-active');\n        this.trigger('sliderinactive');\n      });\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      let orientationClass = 'vjs-volume-horizontal';\n      if (this.options_.vertical) {\n        orientationClass = 'vjs-volume-vertical';\n      }\n      return super.createEl('div', {\n        className: `vjs-volume-control vjs-control ${orientationClass}`\n      });\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    handleMouseDown(event) {\n      const doc = this.el_.ownerDocument;\n      this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.on(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.on(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mouseup` or `touchend` event that triggered this function.\n     *\n     * @listens touchend\n     * @listens mouseup\n     */\n    handleMouseUp(event) {\n      const doc = this.el_.ownerDocument;\n      this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n      this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n      this.off(doc, 'mouseup', this.handleMouseUpHandler_);\n      this.off(doc, 'touchend', this.handleMouseUpHandler_);\n    }\n\n    /**\n     * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        `mousedown` or `touchstart` event that triggered this function\n     *\n     * @listens mousedown\n     * @listens touchstart\n     */\n    handleMouseMove(event) {\n      this.volumeBar.handleMouseMove(event);\n    }\n  }\n\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n  VolumeControl.prototype.options_ = {\n    children: ['volumeBar']\n  };\n  Component$1.registerComponent('VolumeControl', VolumeControl);\n\n  /**\n   * Check if muting volume is supported and if it isn't hide the mute toggle\n   * button.\n   *\n   * @param {Component} self\n   *        A reference to the mute toggle button\n   *\n   * @param {Player} player\n   *        A reference to the player\n   *\n   * @private\n   */\n  const checkMuteSupport = function (self, player) {\n    // hide mute toggle button if it's not supported by the current tech\n    if (player.tech_ && !player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    }\n    self.on(player, 'loadstart', function () {\n      if (!player.tech_.featuresMuteControl) {\n        self.addClass('vjs-hidden');\n      } else {\n        self.removeClass('vjs-hidden');\n      }\n    });\n  };\n\n  /**\n   * @file mute-toggle.js\n   */\n\n  /**\n   * A button component for muting the audio.\n   *\n   * @extends Button\n   */\n  class MuteToggle extends Button {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n\n      // hide this control if volume support is missing\n      checkMuteSupport(this, player);\n      this.on(player, ['loadstart', 'volumechange'], e => this.update(e));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-mute-control ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * This gets called when an `MuteToggle` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      const vol = this.player_.volume();\n      const lastVolume = this.player_.lastVolume_();\n      if (vol === 0) {\n        const volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n        this.player_.volume(volumeToSet);\n        this.player_.muted(false);\n      } else {\n        this.player_.muted(this.player_.muted() ? false : true);\n      }\n    }\n\n    /**\n     * Update the `MuteToggle` button based on the state of `volume` and `muted`\n     * on the player.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link Player#loadstart} event if this function was called\n     *        through an event.\n     *\n     * @listens Player#loadstart\n     * @listens Player#volumechange\n     */\n    update(event) {\n      this.updateIcon_();\n      this.updateControlText_();\n    }\n\n    /**\n     * Update the appearance of the `MuteToggle` icon.\n     *\n     * Possible states (given `level` variable below):\n     * - 0: crossed out\n     * - 1: zero bars of volume\n     * - 2: one bar of volume\n     * - 3: two bars of volume\n     *\n     * @private\n     */\n    updateIcon_() {\n      const vol = this.player_.volume();\n      let level = 3;\n\n      // in iOS when a player is loaded with muted attribute\n      // and volume is changed with a native mute button\n      // we want to make sure muted state is updated\n      if (IS_IOS && this.player_.tech_ && this.player_.tech_.el_) {\n        this.player_.muted(this.player_.tech_.el_.muted);\n      }\n      if (vol === 0 || this.player_.muted()) {\n        level = 0;\n      } else if (vol < 0.33) {\n        level = 1;\n      } else if (vol < 0.67) {\n        level = 2;\n      }\n      removeClass(this.el_, [0, 1, 2, 3].reduce((str, i) => str + `${i ? ' ' : ''}vjs-vol-${i}`, ''));\n      addClass(this.el_, `vjs-vol-${level}`);\n    }\n\n    /**\n     * If `muted` has changed on the player, update the control text\n     * (`title` attribute on `vjs-mute-control` element and content of\n     * `vjs-control-text` element).\n     *\n     * @private\n     */\n    updateControlText_() {\n      const soundOff = this.player_.muted() || this.player_.volume() === 0;\n      const text = soundOff ? 'Unmute' : 'Mute';\n      if (this.controlText() !== text) {\n        this.controlText(text);\n      }\n    }\n  }\n\n  /**\n   * The text that should display over the `MuteToggle`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  MuteToggle.prototype.controlText_ = 'Mute';\n  Component$1.registerComponent('MuteToggle', MuteToggle);\n\n  /**\n   * @file volume-control.js\n   */\n\n  /**\n   * A Component to contain the MuteToggle and VolumeControl so that\n   * they can work together.\n   *\n   * @extends Component\n   */\n  class VolumePanel extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      if (typeof options.inline !== 'undefined') {\n        options.inline = options.inline;\n      } else {\n        options.inline = true;\n      }\n\n      // pass the inline option down to the VolumeControl as vertical if\n      // the VolumeControl is on.\n      if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n        options.volumeControl = options.volumeControl || {};\n        options.volumeControl.vertical = !options.inline;\n      }\n      super(player, options);\n\n      // this handler is used by mouse handler methods below\n      this.handleKeyPressHandler_ = e => this.handleKeyPress(e);\n      this.on(player, ['loadstart'], e => this.volumePanelState_(e));\n      this.on(this.muteToggle, 'keyup', e => this.handleKeyPress(e));\n      this.on(this.volumeControl, 'keyup', e => this.handleVolumeControlKeyUp(e));\n      this.on('keydown', e => this.handleKeyPress(e));\n      this.on('mouseover', e => this.handleMouseOver(e));\n      this.on('mouseout', e => this.handleMouseOut(e));\n\n      // while the slider is active (the mouse has been pressed down and\n      // is dragging) we do not want to hide the VolumeBar\n      this.on(this.volumeControl, ['slideractive'], this.sliderActive_);\n      this.on(this.volumeControl, ['sliderinactive'], this.sliderInactive_);\n    }\n\n    /**\n     * Add vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#slideractive\n     * @private\n     */\n    sliderActive_() {\n      this.addClass('vjs-slider-active');\n    }\n\n    /**\n     * Removes vjs-slider-active class to the VolumePanel\n     *\n     * @listens VolumeControl#sliderinactive\n     * @private\n     */\n    sliderInactive_() {\n      this.removeClass('vjs-slider-active');\n    }\n\n    /**\n     * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n     * depending on MuteToggle and VolumeControl state\n     *\n     * @listens Player#loadstart\n     * @private\n     */\n    volumePanelState_() {\n      // hide volume panel if neither volume control or mute toggle\n      // are displayed\n      if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-hidden');\n      }\n\n      // if only mute toggle is visible we don't want\n      // volume panel expanding when hovered or active\n      if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n        this.addClass('vjs-mute-toggle-only');\n      }\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      let orientationClass = 'vjs-volume-panel-horizontal';\n      if (!this.options_.inline) {\n        orientationClass = 'vjs-volume-panel-vertical';\n      }\n      return super.createEl('div', {\n        className: `vjs-volume-panel vjs-control ${orientationClass}`\n      });\n    }\n\n    /**\n     * Dispose of the `volume-panel` and all child components.\n     */\n    dispose() {\n      this.handleMouseOut();\n      super.dispose();\n    }\n\n    /**\n     * Handles `keyup` events on the `VolumeControl`, looking for ESC, which closes\n     * the volume panel and sets focus on `MuteToggle`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keyup` event that caused this function to be called.\n     *\n     * @listens keyup\n     */\n    handleVolumeControlKeyUp(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.muteToggle.focus();\n      }\n    }\n\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseover` event.\n     * Turns on listening for `mouseover` event. When they happen it\n     * calls `this.handleMouseOver`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseover` event that caused this function to be called.\n     *\n     * @listens mouseover\n     */\n    handleMouseOver(event) {\n      this.addClass('vjs-hover');\n      on(document, 'keyup', this.handleKeyPressHandler_);\n    }\n\n    /**\n     * This gets called when a `VolumePanel` gains hover via a `mouseout` event.\n     * Turns on listening for `mouseout` event. When they happen it\n     * calls `this.handleMouseOut`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseout` event that caused this function to be called.\n     *\n     * @listens mouseout\n     */\n    handleMouseOut(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleKeyPressHandler_);\n    }\n\n    /**\n     * Handles `keyup` event on the document or `keydown` event on the `VolumePanel`,\n     * looking for ESC, which hides the `VolumeControl`.\n     *\n     * @param {EventTarget~Event} event\n     *        The keypress that triggered this event.\n     *\n     * @listens keydown | keyup\n     */\n    handleKeyPress(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        this.handleMouseOut();\n      }\n    }\n  }\n\n  /**\n   * Default options for the `VolumeControl`\n   *\n   * @type {Object}\n   * @private\n   */\n  VolumePanel.prototype.options_ = {\n    children: ['muteToggle', 'volumeControl']\n  };\n  Component$1.registerComponent('VolumePanel', VolumePanel);\n\n  /**\n   * @file menu.js\n   */\n\n  /**\n   * The Menu component is used to build popup menus, including subtitle and\n   * captions selection menus.\n   *\n   * @extends Component\n   */\n  class Menu extends Component$1 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Player} player\n     *        the player that this component should attach to\n     *\n     * @param {Object} [options]\n     *        Object of option names and values\n     *\n     */\n    constructor(player, options) {\n      super(player, options);\n      if (options) {\n        this.menuButton_ = options.menuButton;\n      }\n      this.focusedChild_ = -1;\n      this.on('keydown', e => this.handleKeyDown(e));\n\n      // All the menu item instances share the same blur handler provided by the menu container.\n      this.boundHandleBlur_ = e => this.handleBlur(e);\n      this.boundHandleTapClick_ = e => this.handleTapClick(e);\n    }\n\n    /**\n     * Add event listeners to the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to add listeners to.\n     *\n     */\n    addEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n      this.on(component, 'blur', this.boundHandleBlur_);\n      this.on(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n\n    /**\n     * Remove event listeners from the {@link MenuItem}.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem` to remove listeners.\n     *\n     */\n    removeEventListenerForItem(component) {\n      if (!(component instanceof Component$1)) {\n        return;\n      }\n      this.off(component, 'blur', this.boundHandleBlur_);\n      this.off(component, ['tap', 'click'], this.boundHandleTapClick_);\n    }\n\n    /**\n     * This method will be called indirectly when the component has been added\n     * before the component adds to the new menu instance by `addItem`.\n     * In this case, the original menu instance will remove the component\n     * by calling `removeChild`.\n     *\n     * @param {Object} component\n     *        The instance of the `MenuItem`\n     */\n    removeChild(component) {\n      if (typeof component === 'string') {\n        component = this.getChild(component);\n      }\n      this.removeEventListenerForItem(component);\n      super.removeChild(component);\n    }\n\n    /**\n     * Add a {@link MenuItem} to the menu.\n     *\n     * @param {Object|string} component\n     *        The name or instance of the `MenuItem` to add.\n     *\n     */\n    addItem(component) {\n      const childComponent = this.addChild(component);\n      if (childComponent) {\n        this.addEventListenerForItem(childComponent);\n      }\n    }\n\n    /**\n     * Create the `Menu`s DOM element.\n     *\n     * @return {Element}\n     *         the element that was created\n     */\n    createEl() {\n      const contentElType = this.options_.contentElType || 'ul';\n      this.contentEl_ = createEl(contentElType, {\n        className: 'vjs-menu-content'\n      });\n      this.contentEl_.setAttribute('role', 'menu');\n      const el = super.createEl('div', {\n        append: this.contentEl_,\n        className: 'vjs-menu'\n      });\n      el.appendChild(this.contentEl_);\n\n      // Prevent clicks from bubbling up. Needed for Menu Buttons,\n      // where a click on the parent is significant\n      on(el, 'click', function (event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n      });\n      return el;\n    }\n    dispose() {\n      this.contentEl_ = null;\n      this.boundHandleBlur_ = null;\n      this.boundHandleTapClick_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Called when a `MenuItem` loses focus.\n     *\n     * @param {EventTarget~Event} event\n     *        The `blur` event that caused this function to be called.\n     *\n     * @listens blur\n     */\n    handleBlur(event) {\n      const relatedTarget = event.relatedTarget || document.activeElement;\n\n      // Close menu popup when a user clicks outside the menu\n      if (!this.children().some(element => {\n        return element.el() === relatedTarget;\n      })) {\n        const btn = this.menuButton_;\n        if (btn && btn.buttonPressed_ && relatedTarget !== btn.el().firstChild) {\n          btn.unpressButton();\n        }\n      }\n    }\n\n    /**\n     * Called when a `MenuItem` gets clicked or tapped.\n     *\n     * @param {EventTarget~Event} event\n     *        The `click` or `tap` event that caused this function to be called.\n     *\n     * @listens click,tap\n     */\n    handleTapClick(event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n        const childComponents = this.children();\n        if (!Array.isArray(childComponents)) {\n          return;\n        }\n        const foundComponent = childComponents.filter(component => component.el() === event.target)[0];\n        if (!foundComponent) {\n          return;\n        }\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere\n        if (foundComponent.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }\n\n    /**\n     * Handle a `keydown` event on this menu. This listener is added in the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        A `keydown` event that happened on the menu.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Left and Down Arrows\n      if (keycode.isEventKey(event, 'Left') || keycode.isEventKey(event, 'Down')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepForward();\n\n        // Up and Right Arrows\n      } else if (keycode.isEventKey(event, 'Right') || keycode.isEventKey(event, 'Up')) {\n        event.preventDefault();\n        event.stopPropagation();\n        this.stepBack();\n      }\n    }\n\n    /**\n     * Move to next (lower) menu item for keyboard users.\n     */\n    stepForward() {\n      let stepChild = 0;\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ + 1;\n      }\n      this.focus(stepChild);\n    }\n\n    /**\n     * Move to previous (higher) menu item for keyboard users.\n     */\n    stepBack() {\n      let stepChild = 0;\n      if (this.focusedChild_ !== undefined) {\n        stepChild = this.focusedChild_ - 1;\n      }\n      this.focus(stepChild);\n    }\n\n    /**\n     * Set focus on a {@link MenuItem} in the `Menu`.\n     *\n     * @param {Object|string} [item=0]\n     *        Index of child item set focus on.\n     */\n    focus(item = 0) {\n      const children = this.children().slice();\n      const haveTitle = children.length && children[0].hasClass('vjs-menu-title');\n      if (haveTitle) {\n        children.shift();\n      }\n      if (children.length > 0) {\n        if (item < 0) {\n          item = 0;\n        } else if (item >= children.length) {\n          item = children.length - 1;\n        }\n        this.focusedChild_ = item;\n        children[item].el_.focus();\n      }\n    }\n  }\n  Component$1.registerComponent('Menu', Menu);\n\n  /**\n   * @file menu-button.js\n   */\n\n  /**\n   * A `MenuButton` class for any popup {@link Menu}.\n   *\n   * @extends Component\n   */\n  class MenuButton extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      super(player, options);\n      this.menuButton_ = new Button(player, options);\n      this.menuButton_.controlText(this.controlText_);\n      this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n      // Add buildCSSClass values to the button, not the wrapper\n      const buttonClass = Button.prototype.buildCSSClass();\n      this.menuButton_.el_.className = this.buildCSSClass() + ' ' + buttonClass;\n      this.menuButton_.removeClass('vjs-control');\n      this.addChild(this.menuButton_);\n      this.update();\n      this.enabled_ = true;\n      const handleClick = e => this.handleClick(e);\n      this.handleMenuKeyUp_ = e => this.handleMenuKeyUp(e);\n      this.on(this.menuButton_, 'tap', handleClick);\n      this.on(this.menuButton_, 'click', handleClick);\n      this.on(this.menuButton_, 'keydown', e => this.handleKeyDown(e));\n      this.on(this.menuButton_, 'mouseenter', () => {\n        this.addClass('vjs-hover');\n        this.menu.show();\n        on(document, 'keyup', this.handleMenuKeyUp_);\n      });\n      this.on('mouseleave', e => this.handleMouseLeave(e));\n      this.on('keydown', e => this.handleSubmenuKeyDown(e));\n    }\n\n    /**\n     * Update the menu based on the current state of its items.\n     */\n    update() {\n      const menu = this.createMenu();\n      if (this.menu) {\n        this.menu.dispose();\n        this.removeChild(this.menu);\n      }\n      this.menu = menu;\n      this.addChild(menu);\n\n      /**\n       * Track the state of the menu button\n       *\n       * @type {Boolean}\n       * @private\n       */\n      this.buttonPressed_ = false;\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      if (this.items && this.items.length <= this.hideThreshold_) {\n        this.hide();\n        this.menu.contentEl_.removeAttribute('role');\n      } else {\n        this.show();\n        this.menu.contentEl_.setAttribute('role', 'menu');\n      }\n    }\n\n    /**\n     * Create the menu and add all items to it.\n     *\n     * @return {Menu}\n     *         The constructed menu\n     */\n    createMenu() {\n      const menu = new Menu(this.player_, {\n        menuButton: this\n      });\n\n      /**\n       * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n       * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n       * it here because every time we run `createMenu` we need to reset the value.\n       *\n       * @protected\n       * @type {Number}\n       */\n      this.hideThreshold_ = 0;\n\n      // Add a title list item to the top\n      if (this.options_.title) {\n        const titleEl = createEl('li', {\n          className: 'vjs-menu-title',\n          textContent: toTitleCase$1(this.options_.title),\n          tabIndex: -1\n        });\n        const titleComponent = new Component$1(this.player_, {\n          el: titleEl\n        });\n        menu.addItem(titleComponent);\n      }\n      this.items = this.createItems();\n      if (this.items) {\n        // Add menu items to the menu\n        for (let i = 0; i < this.items.length; i++) {\n          menu.addItem(this.items[i]);\n        }\n      }\n      return menu;\n    }\n\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     * @abstract\n     */\n    createItems() {}\n\n    /**\n     * Create the `MenuButtons`s DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: this.buildWrapperCSSClass()\n      }, {});\n    }\n\n    /**\n     * Allow sub components to stack CSS class names for the wrapper element\n     *\n     * @return {string}\n     *         The constructed wrapper DOM `className`\n     */\n    buildWrapperCSSClass() {\n      let menuButtonClass = 'vjs-menu-button';\n\n      // If the inline option is passed, we want to use different styles altogether.\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n\n      // TODO: Fix the CSS so that this isn't necessary\n      const buttonClass = Button.prototype.buildCSSClass();\n      return `vjs-menu-button ${menuButtonClass} ${buttonClass} ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      let menuButtonClass = 'vjs-menu-button';\n\n      // If the inline option is passed, we want to use different styles altogether.\n      if (this.options_.inline === true) {\n        menuButtonClass += '-inline';\n      } else {\n        menuButtonClass += '-popup';\n      }\n      return `vjs-menu-button ${menuButtonClass} ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Get or set the localized control text that will be used for accessibility.\n     *\n     * > NOTE: This will come from the internal `menuButton_` element.\n     *\n     * @param {string} [text]\n     *        Control text for element.\n     *\n     * @param {Element} [el=this.menuButton_.el()]\n     *        Element to set the title on.\n     *\n     * @return {string}\n     *         - The control text when getting\n     */\n    controlText(text, el = this.menuButton_.el()) {\n      return this.menuButton_.controlText(text, el);\n    }\n\n    /**\n     * Dispose of the `menu-button` and all child components.\n     */\n    dispose() {\n      this.handleMouseLeave();\n      super.dispose();\n    }\n\n    /**\n     * Handle a click on a `MenuButton`.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      } else {\n        this.pressButton();\n      }\n    }\n\n    /**\n     * Handle `mouseleave` for `MenuButton`.\n     *\n     * @param {EventTarget~Event} event\n     *        The `mouseleave` event that caused this function to be called.\n     *\n     * @listens mouseleave\n     */\n    handleMouseLeave(event) {\n      this.removeClass('vjs-hover');\n      off(document, 'keyup', this.handleMenuKeyUp_);\n    }\n\n    /**\n     * Set the focus to the actual button, not to this element\n     */\n    focus() {\n      this.menuButton_.focus();\n    }\n\n    /**\n     * Remove the focus from the actual button, not this element\n     */\n    blur() {\n      this.menuButton_.blur();\n    }\n\n    /**\n     * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        }\n\n        // Don't preventDefault for Tab key - we still want to lose focus\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault();\n          // Set focus back to the menu button's button\n          this.menuButton_.focus();\n        }\n        // Up Arrow or Down Arrow also 'press' the button to open the menu\n      } else if (keycode.isEventKey(event, 'Up') || keycode.isEventKey(event, 'Down')) {\n        if (!this.buttonPressed_) {\n          event.preventDefault();\n          this.pressButton();\n        }\n      }\n    }\n\n    /**\n     * Handle a `keyup` event on a `MenuButton`. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keyup\n     */\n    handleMenuKeyUp(event) {\n      // Escape hides popup menu\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        this.removeClass('vjs-hover');\n      }\n    }\n\n    /**\n     * This method name now delegates to `handleSubmenuKeyDown`. This means\n     * anyone calling `handleSubmenuKeyPress` will not see their method calls\n     * stop working.\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to be called.\n     */\n    handleSubmenuKeyPress(event) {\n      this.handleSubmenuKeyDown(event);\n    }\n\n    /**\n     * Handle a `keydown` event on a sub-menu. The listener for this is added in\n     * the constructor.\n     *\n     * @param {EventTarget~Event} event\n     *        Key press event\n     *\n     * @listens keydown\n     */\n    handleSubmenuKeyDown(event) {\n      // Escape or Tab unpress the 'button'\n      if (keycode.isEventKey(event, 'Esc') || keycode.isEventKey(event, 'Tab')) {\n        if (this.buttonPressed_) {\n          this.unpressButton();\n        }\n        // Don't preventDefault for Tab key - we still want to lose focus\n        if (!keycode.isEventKey(event, 'Tab')) {\n          event.preventDefault();\n          // Set focus back to the menu button's button\n          this.menuButton_.focus();\n        }\n      }\n    }\n\n    /**\n     * Put the current `MenuButton` into a pressed state.\n     */\n    pressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = true;\n        this.menu.show();\n        this.menu.lockShowing();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n        // set the focus into the submenu, except on iOS where it is resulting in\n        // undesired scrolling behavior when the player is in an iframe\n        if (IS_IOS && isInFrame()) {\n          // Return early so that the menu isn't focused\n          return;\n        }\n        this.menu.focus();\n      }\n    }\n\n    /**\n     * Take the current `MenuButton` out of a pressed state.\n     */\n    unpressButton() {\n      if (this.enabled_) {\n        this.buttonPressed_ = false;\n        this.menu.unlockShowing();\n        this.menu.hide();\n        this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n      }\n    }\n\n    /**\n     * Disable the `MenuButton`. Don't allow it to be clicked.\n     */\n    disable() {\n      this.unpressButton();\n      this.enabled_ = false;\n      this.addClass('vjs-disabled');\n      this.menuButton_.disable();\n    }\n\n    /**\n     * Enable the `MenuButton`. Allow it to be clicked.\n     */\n    enable() {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.menuButton_.enable();\n    }\n  }\n  Component$1.registerComponent('MenuButton', MenuButton);\n\n  /**\n   * @file track-button.js\n   */\n\n  /**\n   * The base class for buttons that toggle specific  track types (e.g. subtitles).\n   *\n   * @extends MenuButton\n   */\n  class TrackButton extends MenuButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const tracks = options.tracks;\n      super(player, options);\n      if (this.items.length <= 1) {\n        this.hide();\n      }\n      if (!tracks) {\n        return;\n      }\n      const updateHandler = bind_(this, this.update);\n      tracks.addEventListener('removetrack', updateHandler);\n      tracks.addEventListener('addtrack', updateHandler);\n      tracks.addEventListener('labelchange', updateHandler);\n      this.player_.on('ready', updateHandler);\n      this.player_.on('dispose', function () {\n        tracks.removeEventListener('removetrack', updateHandler);\n        tracks.removeEventListener('addtrack', updateHandler);\n        tracks.removeEventListener('labelchange', updateHandler);\n      });\n    }\n  }\n  Component$1.registerComponent('TrackButton', TrackButton);\n\n  /**\n   * @file menu-keys.js\n   */\n\n  /**\n    * All keys used for operation of a menu (`MenuButton`, `Menu`, and `MenuItem`)\n    * Note that 'Enter' and 'Space' are not included here (otherwise they would\n    * prevent the `MenuButton` and `MenuItem` from being keyboard-clickable)\n   *\n    * @typedef MenuKeys\n    * @array\n    */\n  const MenuKeys = ['Tab', 'Esc', 'Up', 'Down', 'Right', 'Left'];\n\n  /**\n   * @file menu-item.js\n   */\n\n  /**\n   * The component for a menu item. `<li>`\n   *\n   * @extends ClickableComponent\n   */\n  class MenuItem extends ClickableComponent {\n    /**\n     * Creates an instance of the this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     *\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.selectable = options.selectable;\n      this.isSelected_ = options.selected || false;\n      this.multiSelectable = options.multiSelectable;\n      this.selected(this.isSelected_);\n      if (this.selectable) {\n        if (this.multiSelectable) {\n          this.el_.setAttribute('role', 'menuitemcheckbox');\n        } else {\n          this.el_.setAttribute('role', 'menuitemradio');\n        }\n      } else {\n        this.el_.setAttribute('role', 'menuitem');\n      }\n    }\n\n    /**\n     * Create the `MenuItem's DOM element\n     *\n     * @param {string} [type=li]\n     *        Element's node type, not actually used, always set to `li`.\n     *\n     * @param {Object} [props={}]\n     *        An object of properties that should be set on the element\n     *\n     * @param {Object} [attrs={}]\n     *        An object of attributes that should be set on the element\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl(type, props, attrs) {\n      // The control is textual, not just an icon\n      this.nonIconControl = true;\n      const el = super.createEl('li', Object.assign({\n        className: 'vjs-menu-item',\n        tabIndex: -1\n      }, props), attrs);\n\n      // swap icon with menu item text.\n      el.replaceChild(createEl('span', {\n        className: 'vjs-menu-item-text',\n        textContent: this.localize(this.options_.label)\n      }), el.querySelector('.vjs-icon-placeholder'));\n      return el;\n    }\n\n    /**\n     * Ignore keys which are used by the menu, but pass any other ones up. See\n     * {@link ClickableComponent#handleKeyDown} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      if (!MenuKeys.some(key => keycode.isEventKey(event, key))) {\n        // Pass keydown handling up for unused keys\n        super.handleKeyDown(event);\n      }\n    }\n\n    /**\n     * Any click on a `MenuItem` puts it into the selected state.\n     * See {@link ClickableComponent#handleClick} for instances where this is called.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      this.selected(true);\n    }\n\n    /**\n     * Set the state for this menu item as selected or not.\n     *\n     * @param {boolean} selected\n     *        if the menu item is selected or not\n     */\n    selected(selected) {\n      if (this.selectable) {\n        if (selected) {\n          this.addClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'true');\n          // aria-checked isn't fully supported by browsers/screen readers,\n          // so indicate selected state to screen reader in the control text.\n          this.controlText(', selected');\n          this.isSelected_ = true;\n        } else {\n          this.removeClass('vjs-selected');\n          this.el_.setAttribute('aria-checked', 'false');\n          // Indicate un-selected state to screen reader\n          this.controlText('');\n          this.isSelected_ = false;\n        }\n      }\n    }\n  }\n  Component$1.registerComponent('MenuItem', MenuItem);\n\n  /**\n   * @file text-track-menu-item.js\n   */\n\n  /**\n   * The specific menu item type for selecting a language within a text track kind\n   *\n   * @extends MenuItem\n   */\n  class TextTrackMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const track = options.track;\n      const tracks = player.textTracks();\n\n      // Modify options for parent MenuItem class's init.\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.mode === 'showing';\n      super(player, options);\n      this.track = track;\n      // Determine the relevant kind(s) of tracks for this component and filter\n      // out empty kinds.\n      this.kinds = (options.kinds || [options.kind || this.track.kind]).filter(Boolean);\n      const changeHandler = (...args) => {\n        this.handleTracksChange.apply(this, args);\n      };\n      const selectedLanguageChangeHandler = (...args) => {\n        this.handleSelectedLanguageChange.apply(this, args);\n      };\n      player.on(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.addEventListener('change', changeHandler);\n      tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      this.on('dispose', function () {\n        player.off(['loadstart', 'texttrackchange'], changeHandler);\n        tracks.removeEventListener('change', changeHandler);\n        tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n      });\n\n      // iOS7 doesn't dispatch change events to TextTrackLists when an\n      // associated track's mode changes. Without something like\n      // Object.observe() (also not present on iOS7), it's not\n      // possible to detect changes to the mode attribute and polyfill\n      // the change event. As a poor substitute, we manually dispatch\n      // change events whenever the controls modify the mode.\n      if (tracks.onchange === undefined) {\n        let event;\n        this.on(['tap', 'click'], function () {\n          if (typeof window.Event !== 'object') {\n            // Android 2.3 throws an Illegal Constructor error for window.Event\n            try {\n              event = new window.Event('change');\n            } catch (err) {\n              // continue regardless of error\n            }\n          }\n          if (!event) {\n            event = document.createEvent('Event');\n            event.initEvent('change', true, true);\n          }\n          tracks.dispatchEvent(event);\n        });\n      }\n\n      // set the default state based on current tracks\n      this.handleTracksChange();\n    }\n\n    /**\n     * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      const referenceTrack = this.track;\n      const tracks = this.player_.textTracks();\n      super.handleClick(event);\n      if (!tracks) {\n        return;\n      }\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // If the track from the text tracks list is not of the right kind,\n        // skip it. We do not want to affect tracks of incompatible kind(s).\n        if (this.kinds.indexOf(track.kind) === -1) {\n          continue;\n        }\n\n        // If this text track is the component's track and it is not showing,\n        // set it to showing.\n        if (track === referenceTrack) {\n          if (track.mode !== 'showing') {\n            track.mode = 'showing';\n          }\n\n          // If this text track is not the component's track and it is not\n          // disabled, set it to disabled.\n        } else if (track.mode !== 'disabled') {\n          track.mode = 'disabled';\n        }\n      }\n    }\n\n    /**\n     * Handle text track list change\n     *\n     * @param {EventTarget~Event} event\n     *        The `change` event that caused this function to be called.\n     *\n     * @listens TextTrackList#change\n     */\n    handleTracksChange(event) {\n      const shouldBeSelected = this.track.mode === 'showing';\n\n      // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    }\n    handleSelectedLanguageChange(event) {\n      if (this.track.mode === 'showing') {\n        const selectedLanguage = this.player_.cache_.selectedLanguage;\n\n        // Don't replace the kind of track across the same language\n        if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n          return;\n        }\n        this.player_.cache_.selectedLanguage = {\n          enabled: true,\n          language: this.track.language,\n          kind: this.track.kind\n        };\n      }\n    }\n    dispose() {\n      // remove reference to track object on dispose\n      this.track = null;\n      super.dispose();\n    }\n  }\n  Component$1.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n  /**\n   * @file off-text-track-menu-item.js\n   */\n\n  /**\n   * A special menu item for turning of a specific type of text track\n   *\n   * @extends TextTrackMenuItem\n   */\n  class OffTextTrackMenuItem extends TextTrackMenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      // Create pseudo track info\n      // Requires options['kind']\n      options.track = {\n        player,\n        // it is no longer necessary to store `kind` or `kinds` on the track itself\n        // since they are now stored in the `kinds` property of all instances of\n        // TextTrackMenuItem, but this will remain for backwards compatibility\n        kind: options.kind,\n        kinds: options.kinds,\n        default: false,\n        mode: 'disabled'\n      };\n      if (!options.kinds) {\n        options.kinds = [options.kind];\n      }\n      if (options.label) {\n        options.track.label = options.label;\n      } else {\n        options.track.label = options.kinds.join(' and ') + ' off';\n      }\n\n      // MenuItem is selectable\n      options.selectable = true;\n      // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n      options.multiSelectable = false;\n      super(player, options);\n    }\n\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     */\n    handleTracksChange(event) {\n      const tracks = this.player().textTracks();\n      let shouldBeSelected = true;\n      for (let i = 0, l = tracks.length; i < l; i++) {\n        const track = tracks[i];\n        if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n          shouldBeSelected = false;\n          break;\n        }\n      }\n\n      // Prevent redundant selected() calls because they may cause\n      // screen readers to read the appended control text unnecessarily\n      if (shouldBeSelected !== this.isSelected_) {\n        this.selected(shouldBeSelected);\n      }\n    }\n    handleSelectedLanguageChange(event) {\n      const tracks = this.player().textTracks();\n      let allHidden = true;\n      for (let i = 0, l = tracks.length; i < l; i++) {\n        const track = tracks[i];\n        if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n          allHidden = false;\n          break;\n        }\n      }\n      if (allHidden) {\n        this.player_.cache_.selectedLanguage = {\n          enabled: false\n        };\n      }\n    }\n  }\n  Component$1.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n  /**\n   * @file text-track-button.js\n   */\n\n  /**\n   * The base class for buttons that toggle specific text track types (e.g. subtitles)\n   *\n   * @extends MenuButton\n   */\n  class TextTrackButton extends TrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      options.tracks = player.textTracks();\n      super(player, options);\n    }\n\n    /**\n     * Create a menu item for each text track\n     *\n     * @param {TextTrackMenuItem[]} [items=[]]\n     *        Existing array of items to use during creation\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items that were created\n     */\n    createItems(items = [], TrackMenuItem = TextTrackMenuItem) {\n      // Label is an override for the [track] off label\n      // USed to localise captions/subtitles\n      let label;\n      if (this.label_) {\n        label = `${this.label_} off`;\n      }\n      // Add an OFF menu item to turn all tracks off\n      items.push(new OffTextTrackMenuItem(this.player_, {\n        kinds: this.kinds_,\n        kind: this.kind_,\n        label\n      }));\n      this.hideThreshold_ += 1;\n      const tracks = this.player_.textTracks();\n      if (!Array.isArray(this.kinds_)) {\n        this.kinds_ = [this.kind_];\n      }\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n\n        // only add tracks that are of an appropriate kind and have a label\n        if (this.kinds_.indexOf(track.kind) > -1) {\n          const item = new TrackMenuItem(this.player_, {\n            track,\n            kinds: this.kinds_,\n            kind: this.kind_,\n            // MenuItem is selectable\n            selectable: true,\n            // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n            multiSelectable: false\n          });\n          item.addClass(`vjs-${track.kind}-menu-item`);\n          items.push(item);\n        }\n      }\n      return items;\n    }\n  }\n  Component$1.registerComponent('TextTrackButton', TextTrackButton);\n\n  /**\n   * @file chapters-track-menu-item.js\n   */\n\n  /**\n   * The chapter track menu item\n   *\n   * @extends MenuItem\n   */\n  class ChaptersTrackMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const track = options.track;\n      const cue = options.cue;\n      const currentTime = player.currentTime();\n\n      // Modify options for parent MenuItem class's init.\n      options.selectable = true;\n      options.multiSelectable = false;\n      options.label = cue.text;\n      options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n      super(player, options);\n      this.track = track;\n      this.cue = cue;\n    }\n\n    /**\n     * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      super.handleClick();\n      this.player_.currentTime(this.cue.startTime);\n    }\n  }\n  Component$1.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n  /**\n   * @file chapters-button.js\n   */\n\n  /**\n   * The button component for toggling and selecting chapters\n   * Chapters act much differently than other text tracks\n   * Cues are navigation vs. other tracks of alternative languages\n   *\n   * @extends TextTrackButton\n   */\n  class ChaptersButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this function is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      this.selectCurrentItem_ = () => {\n        this.items.forEach(item => {\n          item.selected(this.track_.activeCues[0] === item.cue);\n        });\n      };\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-chapters-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-chapters-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Update the menu based on the current state of its items.\n     *\n     * @param {EventTarget~Event} [event]\n     *        An event that triggered this function to run.\n     *\n     * @listens TextTrackList#addtrack\n     * @listens TextTrackList#removetrack\n     * @listens TextTrackList#change\n     */\n    update(event) {\n      if (event && event.track && event.track.kind !== 'chapters') {\n        return;\n      }\n      const track = this.findChaptersTrack();\n      if (track !== this.track_) {\n        this.setTrack(track);\n        super.update();\n      } else if (!this.items || track && track.cues && track.cues.length !== this.items.length) {\n        // Update the menu initially or if the number of cues has changed since set\n        super.update();\n      }\n    }\n\n    /**\n     * Set the currently selected track for the chapters button.\n     *\n     * @param {TextTrack} track\n     *        The new track to select. Nothing will change if this is the currently selected\n     *        track.\n     */\n    setTrack(track) {\n      if (this.track_ === track) {\n        return;\n      }\n      if (!this.updateHandler_) {\n        this.updateHandler_ = this.update.bind(this);\n      }\n\n      // here this.track_ refers to the old track instance\n      if (this.track_) {\n        const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n        }\n        this.track_.removeEventListener('cuechange', this.selectCurrentItem_);\n        this.track_ = null;\n      }\n      this.track_ = track;\n\n      // here this.track_ refers to the new track instance\n      if (this.track_) {\n        this.track_.mode = 'hidden';\n        const remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n        if (remoteTextTrackEl) {\n          remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n        }\n        this.track_.addEventListener('cuechange', this.selectCurrentItem_);\n      }\n    }\n\n    /**\n     * Find the track object that is currently in use by this ChaptersButton\n     *\n     * @return {TextTrack|undefined}\n     *         The current track or undefined if none was found.\n     */\n    findChaptersTrack() {\n      const tracks = this.player_.textTracks() || [];\n      for (let i = tracks.length - 1; i >= 0; i--) {\n        // We will always choose the last track as our chaptersTrack\n        const track = tracks[i];\n        if (track.kind === this.kind_) {\n          return track;\n        }\n      }\n    }\n\n    /**\n     * Get the caption for the ChaptersButton based on the track label. This will also\n     * use the current tracks localized kind as a fallback if a label does not exist.\n     *\n     * @return {string}\n     *         The tracks current label or the localized track kind.\n     */\n    getMenuCaption() {\n      if (this.track_ && this.track_.label) {\n        return this.track_.label;\n      }\n      return this.localize(toTitleCase$1(this.kind_));\n    }\n\n    /**\n     * Create menu from chapter track\n     *\n     * @return {Menu}\n     *         New menu for the chapter buttons\n     */\n    createMenu() {\n      this.options_.title = this.getMenuCaption();\n      return super.createMenu();\n    }\n\n    /**\n     * Create a menu item for each text track\n     *\n     * @return {TextTrackMenuItem[]}\n     *         Array of menu items\n     */\n    createItems() {\n      const items = [];\n      if (!this.track_) {\n        return items;\n      }\n      const cues = this.track_.cues;\n      if (!cues) {\n        return items;\n      }\n      for (let i = 0, l = cues.length; i < l; i++) {\n        const cue = cues[i];\n        const mi = new ChaptersTrackMenuItem(this.player_, {\n          track: this.track_,\n          cue\n        });\n        items.push(mi);\n      }\n      return items;\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  ChaptersButton.prototype.kind_ = 'chapters';\n\n  /**\n   * The text that should display over the `ChaptersButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  ChaptersButton.prototype.controlText_ = 'Chapters';\n  Component$1.registerComponent('ChaptersButton', ChaptersButton);\n\n  /**\n   * @file descriptions-button.js\n   */\n\n  /**\n   * The button component for toggling and selecting descriptions\n   *\n   * @extends TextTrackButton\n   */\n  class DescriptionsButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n      const tracks = player.textTracks();\n      const changeHandler = bind_(this, this.handleTracksChange);\n      tracks.addEventListener('change', changeHandler);\n      this.on('dispose', function () {\n        tracks.removeEventListener('change', changeHandler);\n      });\n    }\n\n    /**\n     * Handle text track change\n     *\n     * @param {EventTarget~Event} event\n     *        The event that caused this function to run\n     *\n     * @listens TextTrackList#change\n     */\n    handleTracksChange(event) {\n      const tracks = this.player().textTracks();\n      let disabled = false;\n\n      // Check whether a track of a different kind is showing\n      for (let i = 0, l = tracks.length; i < l; i++) {\n        const track = tracks[i];\n        if (track.kind !== this.kind_ && track.mode === 'showing') {\n          disabled = true;\n          break;\n        }\n      }\n\n      // If another track is showing, disable this menu button\n      if (disabled) {\n        this.disable();\n      } else {\n        this.enable();\n      }\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-descriptions-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-descriptions-button ${super.buildWrapperCSSClass()}`;\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  DescriptionsButton.prototype.kind_ = 'descriptions';\n\n  /**\n   * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  DescriptionsButton.prototype.controlText_ = 'Descriptions';\n  Component$1.registerComponent('DescriptionsButton', DescriptionsButton);\n\n  /**\n   * @file subtitles-button.js\n   */\n\n  /**\n   * The button component for toggling and selecting subtitles\n   *\n   * @extends TextTrackButton\n   */\n  class SubtitlesButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-subtitles-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-subtitles-button ${super.buildWrapperCSSClass()}`;\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  SubtitlesButton.prototype.kind_ = 'subtitles';\n\n  /**\n   * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  SubtitlesButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubtitlesButton', SubtitlesButton);\n\n  /**\n   * @file caption-settings-menu-item.js\n   */\n\n  /**\n   * The menu item for caption track settings menu\n   *\n   * @extends TextTrackMenuItem\n   */\n  class CaptionSettingsMenuItem extends TextTrackMenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      options.track = {\n        player,\n        kind: options.kind,\n        label: options.kind + ' settings',\n        selectable: false,\n        default: false,\n        mode: 'disabled'\n      };\n\n      // CaptionSettingsMenuItem has no concept of 'selected'\n      options.selectable = false;\n      options.name = 'CaptionSettingsMenuItem';\n      super(player, options);\n      this.addClass('vjs-texttrack-settings');\n      this.controlText(', opens ' + options.kind + ' settings dialog');\n    }\n\n    /**\n     * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      this.player().getChild('textTrackSettings').open();\n    }\n  }\n  Component$1.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n  /**\n   * @file captions-button.js\n   */\n\n  /**\n   * The button component for toggling and selecting captions\n   *\n   * @extends TextTrackButton\n   */\n  class CaptionsButton extends TextTrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        The function to call when this component is ready.\n     */\n    constructor(player, options, ready) {\n      super(player, options, ready);\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-captions-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-captions-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create caption menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    createItems() {\n      const items = [];\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.kind_\n        }));\n        this.hideThreshold_ += 1;\n      }\n      return super.createItems(items);\n    }\n  }\n\n  /**\n   * `kind` of TextTrack to look for to associate it with this menu.\n   *\n   * @type {string}\n   * @private\n   */\n  CaptionsButton.prototype.kind_ = 'captions';\n\n  /**\n   * The text that should display over the `CaptionsButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  CaptionsButton.prototype.controlText_ = 'Captions';\n  Component$1.registerComponent('CaptionsButton', CaptionsButton);\n\n  /**\n   * @file subs-caps-menu-item.js\n   */\n\n  /**\n   * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n   * in the SubsCapsMenu.\n   *\n   * @extends TextTrackMenuItem\n   */\n  class SubsCapsMenuItem extends TextTrackMenuItem {\n    createEl(type, props, attrs) {\n      const el = super.createEl(type, props, attrs);\n      const parentSpan = el.querySelector('.vjs-menu-item-text');\n      if (this.options_.track.kind === 'captions') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          // space added as the text will visually flow with the\n          // label\n          textContent: ` ${this.localize('Captions')}`\n        }));\n      }\n      return el;\n    }\n  }\n  Component$1.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n  /**\n   * @file sub-caps-button.js\n   */\n  /**\n   * The button component for toggling and selecting captions and/or subtitles\n   *\n   * @extends TextTrackButton\n   */\n  class SubsCapsButton extends TextTrackButton {\n    constructor(player, options = {}) {\n      super(player, options);\n\n      // Although North America uses \"captions\" in most cases for\n      // \"captions and subtitles\" other locales use \"subtitles\"\n      this.label_ = 'subtitles';\n      if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(this.player_.language_) > -1) {\n        this.label_ = 'captions';\n      }\n      this.menuButton_.controlText(toTitleCase$1(this.label_));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-subs-caps-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-subs-caps-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create caption/subtitles menu items\n     *\n     * @return {CaptionSettingsMenuItem[]}\n     *         The array of current menu items.\n     */\n    createItems() {\n      let items = [];\n      if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n        items.push(new CaptionSettingsMenuItem(this.player_, {\n          kind: this.label_\n        }));\n        this.hideThreshold_ += 1;\n      }\n      items = super.createItems(items, SubsCapsMenuItem);\n      return items;\n    }\n  }\n\n  /**\n   * `kind`s of TextTrack to look for to associate it with this menu.\n   *\n   * @type {array}\n   * @private\n   */\n  SubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n  /**\n   * The text that should display over the `SubsCapsButton`s controls.\n   *\n   *\n   * @type {string}\n   * @protected\n   */\n  SubsCapsButton.prototype.controlText_ = 'Subtitles';\n  Component$1.registerComponent('SubsCapsButton', SubsCapsButton);\n\n  /**\n   * @file audio-track-menu-item.js\n   */\n\n  /**\n   * An {@link AudioTrack} {@link MenuItem}\n   *\n   * @extends MenuItem\n   */\n  class AudioTrackMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const track = options.track;\n      const tracks = player.audioTracks();\n\n      // Modify options for parent MenuItem class's init.\n      options.label = track.label || track.language || 'Unknown';\n      options.selected = track.enabled;\n      super(player, options);\n      this.track = track;\n      this.addClass(`vjs-${track.kind}-menu-item`);\n      const changeHandler = (...args) => {\n        this.handleTracksChange.apply(this, args);\n      };\n      tracks.addEventListener('change', changeHandler);\n      this.on('dispose', () => {\n        tracks.removeEventListener('change', changeHandler);\n      });\n    }\n    createEl(type, props, attrs) {\n      const el = super.createEl(type, props, attrs);\n      const parentSpan = el.querySelector('.vjs-menu-item-text');\n      if (this.options_.track.kind === 'main-desc') {\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-icon-placeholder'\n        }, {\n          'aria-hidden': true\n        }));\n        parentSpan.appendChild(createEl('span', {\n          className: 'vjs-control-text',\n          textContent: ' ' + this.localize('Descriptions')\n        }));\n      }\n      return el;\n    }\n\n    /**\n     * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n     * for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      super.handleClick(event);\n\n      // the audio track list will automatically toggle other tracks\n      // off for us.\n      this.track.enabled = true;\n\n      // when native audio tracks are used, we want to make sure that other tracks are turned off\n      if (this.player_.tech_.featuresNativeAudioTracks) {\n        const tracks = this.player_.audioTracks();\n        for (let i = 0; i < tracks.length; i++) {\n          const track = tracks[i];\n\n          // skip the current track since we enabled it above\n          if (track === this.track) {\n            continue;\n          }\n          track.enabled = track === this.track;\n        }\n      }\n    }\n\n    /**\n     * Handle any {@link AudioTrack} change.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The {@link AudioTrackList#change} event that caused this to run.\n     *\n     * @listens AudioTrackList#change\n     */\n    handleTracksChange(event) {\n      this.selected(this.track.enabled);\n    }\n  }\n  Component$1.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n  /**\n   * @file audio-track-button.js\n   */\n\n  /**\n   * The base class for buttons that toggle specific {@link AudioTrack} types.\n   *\n   * @extends TrackButton\n   */\n  class AudioTrackButton extends TrackButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options={}]\n     *        The key/value store of player options.\n     */\n    constructor(player, options = {}) {\n      options.tracks = player.audioTracks();\n      super(player, options);\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-audio-button ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-audio-button ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create a menu item for each audio track\n     *\n     * @param {AudioTrackMenuItem[]} [items=[]]\n     *        An array of existing menu items to use.\n     *\n     * @return {AudioTrackMenuItem[]}\n     *         An array of menu items\n     */\n    createItems(items = []) {\n      // if there's only one audio track, there no point in showing it\n      this.hideThreshold_ = 1;\n      const tracks = this.player_.audioTracks();\n      for (let i = 0; i < tracks.length; i++) {\n        const track = tracks[i];\n        items.push(new AudioTrackMenuItem(this.player_, {\n          track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        }));\n      }\n      return items;\n    }\n  }\n\n  /**\n   * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  AudioTrackButton.prototype.controlText_ = 'Audio Track';\n  Component$1.registerComponent('AudioTrackButton', AudioTrackButton);\n\n  /**\n   * @file playback-rate-menu-item.js\n   */\n\n  /**\n   * The specific menu item type for selecting a playback rate.\n   *\n   * @extends MenuItem\n   */\n  class PlaybackRateMenuItem extends MenuItem {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      const label = options.rate;\n      const rate = parseFloat(label, 10);\n\n      // Modify options for parent MenuItem class's init.\n      options.label = label;\n      options.selected = rate === player.playbackRate();\n      options.selectable = true;\n      options.multiSelectable = false;\n      super(player, options);\n      this.label = label;\n      this.rate = rate;\n      this.on(player, 'ratechange', e => this.update(e));\n    }\n\n    /**\n     * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n     * {@link ClickableComponent} for more detailed information on what a click can be.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `keydown`, `tap`, or `click` event that caused this function to be\n     *        called.\n     *\n     * @listens tap\n     * @listens click\n     */\n    handleClick(event) {\n      super.handleClick();\n      this.player().playbackRate(this.rate);\n    }\n\n    /**\n     * Update the PlaybackRateMenuItem when the playbackrate changes.\n     *\n     * @param {EventTarget~Event} [event]\n     *        The `ratechange` event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    update(event) {\n      this.selected(this.player().playbackRate() === this.rate);\n    }\n  }\n\n  /**\n   * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n   *\n   * @type {string}\n   * @private\n   */\n  PlaybackRateMenuItem.prototype.contentElType = 'button';\n  Component$1.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n  /**\n   * @file playback-rate-menu-button.js\n   */\n\n  /**\n   * The component for controlling the playback rate.\n   *\n   * @extends MenuButton\n   */\n  class PlaybackRateMenuButton extends MenuButton {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.menuButton_.el_.setAttribute('aria-describedby', this.labelElId_);\n      this.updateVisibility();\n      this.updateLabel();\n      this.on(player, 'loadstart', e => this.updateVisibility(e));\n      this.on(player, 'ratechange', e => this.updateLabel(e));\n      this.on(player, 'playbackrateschange', e => this.handlePlaybackRateschange(e));\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      const el = super.createEl();\n      this.labelElId_ = 'vjs-playback-rate-value-label-' + this.id_;\n      this.labelEl_ = createEl('div', {\n        className: 'vjs-playback-rate-value',\n        id: this.labelElId_,\n        textContent: '1x'\n      });\n      el.appendChild(this.labelEl_);\n      return el;\n    }\n    dispose() {\n      this.labelEl_ = null;\n      super.dispose();\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-playback-rate ${super.buildCSSClass()}`;\n    }\n    buildWrapperCSSClass() {\n      return `vjs-playback-rate ${super.buildWrapperCSSClass()}`;\n    }\n\n    /**\n     * Create the list of menu items. Specific to each subclass.\n     *\n     */\n    createItems() {\n      const rates = this.playbackRates();\n      const items = [];\n      for (let i = rates.length - 1; i >= 0; i--) {\n        items.push(new PlaybackRateMenuItem(this.player(), {\n          rate: rates[i] + 'x'\n        }));\n      }\n      return items;\n    }\n\n    /**\n     * On playbackrateschange, update the menu to account for the new items.\n     *\n     * @listens Player#playbackrateschange\n     */\n    handlePlaybackRateschange(event) {\n      this.update();\n    }\n\n    /**\n     * Get possible playback rates\n     *\n     * @return {Array}\n     *         All possible playback rates\n     */\n    playbackRates() {\n      const player = this.player();\n      return player.playbackRates && player.playbackRates() || [];\n    }\n\n    /**\n     * Get whether playback rates is supported by the tech\n     * and an array of playback rates exists\n     *\n     * @return {boolean}\n     *         Whether changing playback rate is supported\n     */\n    playbackRateSupported() {\n      return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n    }\n\n    /**\n     * Hide playback rate controls when they're no playback rate options to select\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#loadstart\n     */\n    updateVisibility(event) {\n      if (this.playbackRateSupported()) {\n        this.removeClass('vjs-hidden');\n      } else {\n        this.addClass('vjs-hidden');\n      }\n    }\n\n    /**\n     * Update button label when rate changed\n     *\n     * @param {EventTarget~Event} [event]\n     *        The event that caused this function to run.\n     *\n     * @listens Player#ratechange\n     */\n    updateLabel(event) {\n      if (this.playbackRateSupported()) {\n        this.labelEl_.textContent = this.player().playbackRate() + 'x';\n      }\n    }\n  }\n\n  /**\n   * The text that should display over the `PlaybackRateMenuButton`s controls.\n   *\n   * Added for localization.\n   *\n   * @type {string}\n   * @protected\n   */\n  PlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n  Component$1.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n  /**\n   * @file spacer.js\n   */\n\n  /**\n   * Just an empty spacer element that can be used as an append point for plugins, etc.\n   * Also can be used to create space between elements when necessary.\n   *\n   * @extends Component\n   */\n  class Spacer extends Component$1 {\n    /**\n    * Builds the default DOM `className`.\n    *\n    * @return {string}\n    *         The DOM `className` for this object.\n    */\n    buildCSSClass() {\n      return `vjs-spacer ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl(tag = 'div', props = {}, attributes = {}) {\n      if (!props.className) {\n        props.className = this.buildCSSClass();\n      }\n      return super.createEl(tag, props, attributes);\n    }\n  }\n  Component$1.registerComponent('Spacer', Spacer);\n\n  /**\n   * @file custom-control-spacer.js\n   */\n\n  /**\n   * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n   *\n   * @extends Spacer\n   */\n  class CustomControlSpacer extends Spacer {\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     */\n    buildCSSClass() {\n      return `vjs-custom-control-spacer ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: this.buildCSSClass(),\n        // No-flex/table-cell mode requires there be some content\n        // in the cell to fill the remaining space of the table.\n        textContent: '\\u00a0'\n      });\n    }\n  }\n  Component$1.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n  /**\n   * @file control-bar.js\n   */\n\n  /**\n   * Container of main controls.\n   *\n   * @extends Component\n   */\n  class ControlBar extends Component$1 {\n    /**\n     * Create the `Component`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      return super.createEl('div', {\n        className: 'vjs-control-bar',\n        dir: 'ltr'\n      });\n    }\n  }\n\n  /**\n   * Default options for `ControlBar`\n   *\n   * @type {Object}\n   * @private\n   */\n  ControlBar.prototype.options_ = {\n    children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'seekToLive', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n  };\n  if ('exitPictureInPicture' in document) {\n    ControlBar.prototype.options_.children.splice(ControlBar.prototype.options_.children.length - 1, 0, 'pictureInPictureToggle');\n  }\n  Component$1.registerComponent('ControlBar', ControlBar);\n\n  /**\n   * @file error-display.js\n   */\n\n  /**\n   * A display that indicates an error has occurred. This means that the video\n   * is unplayable.\n   *\n   * @extends ModalDialog\n   */\n  class ErrorDisplay extends ModalDialog {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param  {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param  {Object} [options]\n     *         The key/value store of player options.\n     */\n    constructor(player, options) {\n      super(player, options);\n      this.on(player, 'error', e => this.open(e));\n    }\n\n    /**\n     * Builds the default DOM `className`.\n     *\n     * @return {string}\n     *         The DOM `className` for this object.\n     *\n     * @deprecated Since version 5.\n     */\n    buildCSSClass() {\n      return `vjs-error-display ${super.buildCSSClass()}`;\n    }\n\n    /**\n     * Gets the localized error message based on the `Player`s error.\n     *\n     * @return {string}\n     *         The `Player`s error message localized or an empty string.\n     */\n    content() {\n      const error = this.player().error();\n      return error ? this.localize(error.message) : '';\n    }\n  }\n\n  /**\n   * The default options for an `ErrorDisplay`.\n   *\n   * @private\n   */\n  ErrorDisplay.prototype.options_ = Object.assign({}, ModalDialog.prototype.options_, {\n    pauseOnOpen: false,\n    fillAlways: true,\n    temporary: false,\n    uncloseable: true\n  });\n  Component$1.registerComponent('ErrorDisplay', ErrorDisplay);\n\n  /**\n   * @file text-track-settings.js\n   */\n  const LOCAL_STORAGE_KEY$1 = 'vjs-text-track-settings';\n  const COLOR_BLACK = ['#000', 'Black'];\n  const COLOR_BLUE = ['#00F', 'Blue'];\n  const COLOR_CYAN = ['#0FF', 'Cyan'];\n  const COLOR_GREEN = ['#0F0', 'Green'];\n  const COLOR_MAGENTA = ['#F0F', 'Magenta'];\n  const COLOR_RED = ['#F00', 'Red'];\n  const COLOR_WHITE = ['#FFF', 'White'];\n  const COLOR_YELLOW = ['#FF0', 'Yellow'];\n  const OPACITY_OPAQUE = ['1', 'Opaque'];\n  const OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\n  const OPACITY_TRANS = ['0', 'Transparent'];\n\n  // Configuration for the various <select> elements in the DOM of this component.\n  //\n  // Possible keys include:\n  //\n  // `default`:\n  //   The default option index. Only needs to be provided if not zero.\n  // `parser`:\n  //   A function which is used to parse the value from the selected option in\n  //   a customized way.\n  // `selector`:\n  //   The selector used to find the associated <select> element.\n  const selectConfigs = {\n    backgroundColor: {\n      selector: '.vjs-bg-color > select',\n      id: 'captions-background-color-%s',\n      label: 'Color',\n      options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    backgroundOpacity: {\n      selector: '.vjs-bg-opacity > select',\n      id: 'captions-background-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n    },\n    color: {\n      selector: '.vjs-fg-color > select',\n      id: 'captions-foreground-color-%s',\n      label: 'Color',\n      options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n    },\n    edgeStyle: {\n      selector: '.vjs-edge-style > select',\n      id: '%s',\n      label: 'Text Edge Style',\n      options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n    },\n    fontFamily: {\n      selector: '.vjs-font-family > select',\n      id: 'captions-font-family-%s',\n      label: 'Font Family',\n      options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n    },\n    fontPercent: {\n      selector: '.vjs-font-percent > select',\n      id: 'captions-font-size-%s',\n      label: 'Font Size',\n      options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n      default: 2,\n      parser: v => v === '1.00' ? null : Number(v)\n    },\n    textOpacity: {\n      selector: '.vjs-text-opacity > select',\n      id: 'captions-foreground-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_OPAQUE, OPACITY_SEMI]\n    },\n    // Options for this object are defined below.\n    windowColor: {\n      selector: '.vjs-window-color > select',\n      id: 'captions-window-color-%s',\n      label: 'Color'\n    },\n    // Options for this object are defined below.\n    windowOpacity: {\n      selector: '.vjs-window-opacity > select',\n      id: 'captions-window-opacity-%s',\n      label: 'Transparency',\n      options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n    }\n  };\n  selectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n  /**\n   * Get the actual value of an option.\n   *\n   * @param  {string} value\n   *         The value to get\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n  function parseOptionValue(value, parser) {\n    if (parser) {\n      value = parser(value);\n    }\n    if (value && value !== 'none') {\n      return value;\n    }\n  }\n\n  /**\n   * Gets the value of the selected <option> element within a <select> element.\n   *\n   * @param  {Element} el\n   *         the element to look in\n   *\n   * @param  {Function} [parser]\n   *         Optional function to adjust the value.\n   *\n   * @return {Mixed}\n   *         - Will be `undefined` if no value exists\n   *         - Will be `undefined` if the given value is \"none\".\n   *         - Will be the actual value otherwise.\n   *\n   * @private\n   */\n  function getSelectedOptionValue(el, parser) {\n    const value = el.options[el.options.selectedIndex].value;\n    return parseOptionValue(value, parser);\n  }\n\n  /**\n   * Sets the selected <option> element within a <select> element based on a\n   * given value.\n   *\n   * @param {Element} el\n   *        The element to look in.\n   *\n   * @param {string} value\n   *        the property to look on.\n   *\n   * @param {Function} [parser]\n   *        Optional function to adjust the value before comparing.\n   *\n   * @private\n   */\n  function setSelectedOption(el, value, parser) {\n    if (!value) {\n      return;\n    }\n    for (let i = 0; i < el.options.length; i++) {\n      if (parseOptionValue(el.options[i].value, parser) === value) {\n        el.selectedIndex = i;\n        break;\n      }\n    }\n  }\n\n  /**\n   * Manipulate Text Tracks settings.\n   *\n   * @extends ModalDialog\n   */\n  class TextTrackSettings extends ModalDialog {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *         The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *         The key/value store of player options.\n     */\n    constructor(player, options) {\n      options.temporary = false;\n      super(player, options);\n      this.updateDisplay = this.updateDisplay.bind(this);\n\n      // fill the modal and pretend we have opened it\n      this.fill();\n      this.hasBeenOpened_ = this.hasBeenFilled_ = true;\n      this.endDialog = createEl('p', {\n        className: 'vjs-control-text',\n        textContent: this.localize('End of dialog window.')\n      });\n      this.el().appendChild(this.endDialog);\n      this.setDefaults();\n\n      // Grab `persistTextTrackSettings` from the player options if not passed in child options\n      if (options.persistTextTrackSettings === undefined) {\n        this.options_.persistTextTrackSettings = this.options_.playerOptions.persistTextTrackSettings;\n      }\n      this.on(this.$('.vjs-done-button'), 'click', () => {\n        this.saveSettings();\n        this.close();\n      });\n      this.on(this.$('.vjs-default-button'), 'click', () => {\n        this.setDefaults();\n        this.updateDisplay();\n      });\n      each(selectConfigs, config => {\n        this.on(this.$(config.selector), 'change', this.updateDisplay);\n      });\n      if (this.options_.persistTextTrackSettings) {\n        this.restoreSettings();\n      }\n    }\n    dispose() {\n      this.endDialog = null;\n      super.dispose();\n    }\n\n    /**\n     * Create a <select> element with configured options.\n     *\n     * @param {string} key\n     *        Configuration key to use during creation.\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    createElSelect_(key, legendId = '', type = 'label') {\n      const config = selectConfigs[key];\n      const id = config.id.replace('%s', this.id_);\n      const selectLabelledbyIds = [legendId, id].join(' ').trim();\n      return [`<${type} id=\"${id}\" class=\"${type === 'label' ? 'vjs-label' : ''}\">`, this.localize(config.label), `</${type}>`, `<select aria-labelledby=\"${selectLabelledbyIds}\">`].concat(config.options.map(o => {\n        const optionId = id + '-' + o[1].replace(/\\W+/g, '');\n        return [`<option id=\"${optionId}\" value=\"${o[0]}\" `, `aria-labelledby=\"${selectLabelledbyIds} ${optionId}\">`, this.localize(o[1]), '</option>'].join('');\n      })).concat('</select>').join('');\n    }\n\n    /**\n     * Create foreground color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    createElFgColor_() {\n      const legendId = `captions-text-legend-${this.id_}`;\n      return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n\n    /**\n     * Create background color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    createElBgColor_() {\n      const legendId = `captions-background-${this.id_}`;\n      return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n\n    /**\n     * Create window color element for the component\n     *\n     * @return {string}\n     *         An HTML string.\n     *\n     * @private\n     */\n    createElWinColor_() {\n      const legendId = `captions-window-${this.id_}`;\n      return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', `<legend id=\"${legendId}\">`, this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n    }\n\n    /**\n     * Create color elements for the component\n     *\n     * @return {Element}\n     *         The element that was created\n     *\n     * @private\n     */\n    createElColors_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-colors',\n        innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n      });\n    }\n\n    /**\n     * Create font elements for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    createElFont_() {\n      return createEl('div', {\n        className: 'vjs-track-settings-font',\n        innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n      });\n    }\n\n    /**\n     * Create controls for the component\n     *\n     * @return {Element}\n     *         The element that was created.\n     *\n     * @private\n     */\n    createElControls_() {\n      const defaultsDescription = this.localize('restore all settings to the default values');\n      return createEl('div', {\n        className: 'vjs-track-settings-controls',\n        innerHTML: [`<button type=\"button\" class=\"vjs-default-button\" title=\"${defaultsDescription}\">`, this.localize('Reset'), `<span class=\"vjs-control-text\"> ${defaultsDescription}</span>`, '</button>', `<button type=\"button\" class=\"vjs-done-button\">${this.localize('Done')}</button>`].join('')\n      });\n    }\n    content() {\n      return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n    }\n    label() {\n      return this.localize('Caption Settings Dialog');\n    }\n    description() {\n      return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n    }\n    buildCSSClass() {\n      return super.buildCSSClass() + ' vjs-text-track-settings';\n    }\n\n    /**\n     * Gets an object of text track settings (or null).\n     *\n     * @return {Object}\n     *         An object with config values parsed from the DOM or localStorage.\n     */\n    getValues() {\n      return reduce(selectConfigs, (accum, config, key) => {\n        const value = getSelectedOptionValue(this.$(config.selector), config.parser);\n        if (value !== undefined) {\n          accum[key] = value;\n        }\n        return accum;\n      }, {});\n    }\n\n    /**\n     * Sets text track settings from an object of values.\n     *\n     * @param {Object} values\n     *        An object with config values parsed from the DOM or localStorage.\n     */\n    setValues(values) {\n      each(selectConfigs, (config, key) => {\n        setSelectedOption(this.$(config.selector), values[key], config.parser);\n      });\n    }\n\n    /**\n     * Sets all `<select>` elements to their default values.\n     */\n    setDefaults() {\n      each(selectConfigs, config => {\n        const index = config.hasOwnProperty('default') ? config.default : 0;\n        this.$(config.selector).selectedIndex = index;\n      });\n    }\n\n    /**\n     * Restore texttrack settings from localStorage\n     */\n    restoreSettings() {\n      let values;\n      try {\n        values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY$1));\n      } catch (err) {\n        log$1.warn(err);\n      }\n      if (values) {\n        this.setValues(values);\n      }\n    }\n\n    /**\n     * Save text track settings to localStorage\n     */\n    saveSettings() {\n      if (!this.options_.persistTextTrackSettings) {\n        return;\n      }\n      const values = this.getValues();\n      try {\n        if (Object.keys(values).length) {\n          window.localStorage.setItem(LOCAL_STORAGE_KEY$1, JSON.stringify(values));\n        } else {\n          window.localStorage.removeItem(LOCAL_STORAGE_KEY$1);\n        }\n      } catch (err) {\n        log$1.warn(err);\n      }\n    }\n\n    /**\n     * Update display of text track settings\n     */\n    updateDisplay() {\n      const ttDisplay = this.player_.getChild('textTrackDisplay');\n      if (ttDisplay) {\n        ttDisplay.updateDisplay();\n      }\n    }\n\n    /**\n     * conditionally blur the element and refocus the captions button\n     *\n     * @private\n     */\n    conditionalBlur_() {\n      this.previouslyActiveEl_ = null;\n      const cb = this.player_.controlBar;\n      const subsCapsBtn = cb && cb.subsCapsButton;\n      const ccBtn = cb && cb.captionsButton;\n      if (subsCapsBtn) {\n        subsCapsBtn.focus();\n      } else if (ccBtn) {\n        ccBtn.focus();\n      }\n    }\n  }\n  Component$1.registerComponent('TextTrackSettings', TextTrackSettings);\n\n  /**\n   * @file resize-manager.js\n   */\n\n  /**\n   * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n   *\n   * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n   *\n   * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n   * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n   *\n   * @example <caption>How to disable the resize manager</caption>\n   * const player = videojs('#vid', {\n   *   resizeManager: false\n   * });\n   *\n   * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n   *\n   * @extends Component\n   */\n  class ResizeManager extends Component$1 {\n    /**\n     * Create the ResizeManager.\n     *\n     * @param {Object} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of ResizeManager options.\n     *\n     * @param {Object} [options.ResizeObserver]\n     *        A polyfill for ResizeObserver can be passed in here.\n     *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n     */\n    constructor(player, options) {\n      let RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n      // if `null` was passed, we want to disable the ResizeObserver\n      if (options.ResizeObserver === null) {\n        RESIZE_OBSERVER_AVAILABLE = false;\n      }\n\n      // Only create an element when ResizeObserver isn't available\n      const options_ = merge$2({\n        createEl: !RESIZE_OBSERVER_AVAILABLE,\n        reportTouchActivity: false\n      }, options);\n      super(player, options_);\n      this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n      this.loadListener_ = null;\n      this.resizeObserver_ = null;\n      this.debouncedHandler_ = debounce(() => {\n        this.resizeHandler();\n      }, 100, false, this);\n      if (RESIZE_OBSERVER_AVAILABLE) {\n        this.resizeObserver_ = new this.ResizeObserver(this.debouncedHandler_);\n        this.resizeObserver_.observe(player.el());\n      } else {\n        this.loadListener_ = () => {\n          if (!this.el_ || !this.el_.contentWindow) {\n            return;\n          }\n          const debouncedHandler_ = this.debouncedHandler_;\n          let unloadListener_ = this.unloadListener_ = function () {\n            off(this, 'resize', debouncedHandler_);\n            off(this, 'unload', unloadListener_);\n            unloadListener_ = null;\n          };\n\n          // safari and edge can unload the iframe before resizemanager dispose\n          // we have to dispose of event handlers correctly before that happens\n          on(this.el_.contentWindow, 'unload', unloadListener_);\n          on(this.el_.contentWindow, 'resize', debouncedHandler_);\n        };\n        this.one('load', this.loadListener_);\n      }\n    }\n    createEl() {\n      return super.createEl('iframe', {\n        className: 'vjs-resize-manager',\n        tabIndex: -1,\n        title: this.localize('No content')\n      }, {\n        'aria-hidden': 'true'\n      });\n    }\n\n    /**\n     * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n     *\n     * @fires Player#playerresize\n     */\n    resizeHandler() {\n      /**\n       * Called when the player size has changed\n       *\n       * @event Player#playerresize\n       * @type {EventTarget~Event}\n       */\n      // make sure player is still around to trigger\n      // prevents this from causing an error after dispose\n      if (!this.player_ || !this.player_.trigger) {\n        return;\n      }\n      this.player_.trigger('playerresize');\n    }\n    dispose() {\n      if (this.debouncedHandler_) {\n        this.debouncedHandler_.cancel();\n      }\n      if (this.resizeObserver_) {\n        if (this.player_.el()) {\n          this.resizeObserver_.unobserve(this.player_.el());\n        }\n        this.resizeObserver_.disconnect();\n      }\n      if (this.loadListener_) {\n        this.off('load', this.loadListener_);\n      }\n      if (this.el_ && this.el_.contentWindow && this.unloadListener_) {\n        this.unloadListener_.call(this.el_.contentWindow);\n      }\n      this.ResizeObserver = null;\n      this.resizeObserver = null;\n      this.debouncedHandler_ = null;\n      this.loadListener_ = null;\n      super.dispose();\n    }\n  }\n  Component$1.registerComponent('ResizeManager', ResizeManager);\n\n  const defaults = {\n    trackingThreshold: 20,\n    liveTolerance: 15\n  };\n\n  /*\n    track when we are at the live edge, and other helpers for live playback */\n\n  /**\n   * A class for checking live current time and determining when the player\n   * is at or behind the live edge.\n   */\n  class LiveTracker extends Component$1 {\n    /**\n     * Creates an instance of this class.\n     *\n     * @param {Player} player\n     *        The `Player` that this class should be attached to.\n     *\n     * @param {Object} [options]\n     *        The key/value store of player options.\n     *\n     * @param {number} [options.trackingThreshold=20]\n     *        Number of seconds of live window (seekableEnd - seekableStart) that\n     *        media needs to have before the liveui will be shown.\n     *\n     * @param {number} [options.liveTolerance=15]\n     *        Number of seconds behind live that we have to be\n     *        before we will be considered non-live. Note that this will only\n     *        be used when playing at the live edge. This allows large seekable end\n     *        changes to not effect wether we are live or not.\n     */\n    constructor(player, options) {\n      // LiveTracker does not need an element\n      const options_ = merge$2(defaults, options, {\n        createEl: false\n      });\n      super(player, options_);\n      this.trackLiveHandler_ = () => this.trackLive_();\n      this.handlePlay_ = e => this.handlePlay(e);\n      this.handleFirstTimeupdate_ = e => this.handleFirstTimeupdate(e);\n      this.handleSeeked_ = e => this.handleSeeked(e);\n      this.seekToLiveEdge_ = e => this.seekToLiveEdge(e);\n      this.reset_();\n      this.on(this.player_, 'durationchange', e => this.handleDurationchange(e));\n      // we should try to toggle tracking on canplay as native playback engines, like Safari\n      // may not have the proper values for things like seekableEnd until then\n      this.on(this.player_, 'canplay', () => this.toggleTracking());\n    }\n\n    /**\n     * all the functionality for tracking when seek end changes\n     * and for tracking how far past seek end we should be\n     */\n    trackLive_() {\n      const seekable = this.player_.seekable();\n\n      // skip undefined seekable\n      if (!seekable || !seekable.length) {\n        return;\n      }\n      const newTime = Number(window.performance.now().toFixed(4));\n      const deltaTime = this.lastTime_ === -1 ? 0 : (newTime - this.lastTime_) / 1000;\n      this.lastTime_ = newTime;\n      this.pastSeekEnd_ = this.pastSeekEnd() + deltaTime;\n      const liveCurrentTime = this.liveCurrentTime();\n      const currentTime = this.player_.currentTime();\n\n      // we are behind live if any are true\n      // 1. the player is paused\n      // 2. the user seeked to a location 2 seconds away from live\n      // 3. the difference between live and current time is greater\n      //    liveTolerance which defaults to 15s\n      let isBehind = this.player_.paused() || this.seekedBehindLive_ || Math.abs(liveCurrentTime - currentTime) > this.options_.liveTolerance;\n\n      // we cannot be behind if\n      // 1. until we have not seen a timeupdate yet\n      // 2. liveCurrentTime is Infinity, which happens on Android and Native Safari\n      if (!this.timeupdateSeen_ || liveCurrentTime === Infinity) {\n        isBehind = false;\n      }\n      if (isBehind !== this.behindLiveEdge_) {\n        this.behindLiveEdge_ = isBehind;\n        this.trigger('liveedgechange');\n      }\n    }\n\n    /**\n     * handle a durationchange event on the player\n     * and start/stop tracking accordingly.\n     */\n    handleDurationchange() {\n      this.toggleTracking();\n    }\n\n    /**\n     * start/stop tracking\n     */\n    toggleTracking() {\n      if (this.player_.duration() === Infinity && this.liveWindow() >= this.options_.trackingThreshold) {\n        if (this.player_.options_.liveui) {\n          this.player_.addClass('vjs-liveui');\n        }\n        this.startTracking();\n      } else {\n        this.player_.removeClass('vjs-liveui');\n        this.stopTracking();\n      }\n    }\n\n    /**\n     * start tracking live playback\n     */\n    startTracking() {\n      if (this.isTracking()) {\n        return;\n      }\n\n      // If we haven't seen a timeupdate, we need to check whether playback\n      // began before this component started tracking. This can happen commonly\n      // when using autoplay.\n      if (!this.timeupdateSeen_) {\n        this.timeupdateSeen_ = this.player_.hasStarted();\n      }\n      this.trackingInterval_ = this.setInterval(this.trackLiveHandler_, UPDATE_REFRESH_INTERVAL);\n      this.trackLive_();\n      this.on(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      if (!this.timeupdateSeen_) {\n        this.one(this.player_, 'play', this.handlePlay_);\n        this.one(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      } else {\n        this.on(this.player_, 'seeked', this.handleSeeked_);\n      }\n    }\n\n    /**\n     * handle the first timeupdate on the player if it wasn't already playing\n     * when live tracker started tracking.\n     */\n    handleFirstTimeupdate() {\n      this.timeupdateSeen_ = true;\n      this.on(this.player_, 'seeked', this.handleSeeked_);\n    }\n\n    /**\n     * Keep track of what time a seek starts, and listen for seeked\n     * to find where a seek ends.\n     */\n    handleSeeked() {\n      const timeDiff = Math.abs(this.liveCurrentTime() - this.player_.currentTime());\n      this.seekedBehindLive_ = this.nextSeekedFromUser_ && timeDiff > 2;\n      this.nextSeekedFromUser_ = false;\n      this.trackLive_();\n    }\n\n    /**\n     * handle the first play on the player, and make sure that we seek\n     * right to the live edge.\n     */\n    handlePlay() {\n      this.one(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n\n    /**\n     * Stop tracking, and set all internal variables to\n     * their initial value.\n     */\n    reset_() {\n      this.lastTime_ = -1;\n      this.pastSeekEnd_ = 0;\n      this.lastSeekEnd_ = -1;\n      this.behindLiveEdge_ = true;\n      this.timeupdateSeen_ = false;\n      this.seekedBehindLive_ = false;\n      this.nextSeekedFromUser_ = false;\n      this.clearInterval(this.trackingInterval_);\n      this.trackingInterval_ = null;\n      this.off(this.player_, ['play', 'pause'], this.trackLiveHandler_);\n      this.off(this.player_, 'seeked', this.handleSeeked_);\n      this.off(this.player_, 'play', this.handlePlay_);\n      this.off(this.player_, 'timeupdate', this.handleFirstTimeupdate_);\n      this.off(this.player_, 'timeupdate', this.seekToLiveEdge_);\n    }\n\n    /**\n     * The next seeked event is from the user. Meaning that any seek\n     * > 2s behind live will be considered behind live for real and\n     * liveTolerance will be ignored.\n     */\n    nextSeekedFromUser() {\n      this.nextSeekedFromUser_ = true;\n    }\n\n    /**\n     * stop tracking live playback\n     */\n    stopTracking() {\n      if (!this.isTracking()) {\n        return;\n      }\n      this.reset_();\n      this.trigger('liveedgechange');\n    }\n\n    /**\n     * A helper to get the player seekable end\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The furthest seekable end or Infinity.\n     */\n    seekableEnd() {\n      const seekable = this.player_.seekable();\n      const seekableEnds = [];\n      let i = seekable ? seekable.length : 0;\n      while (i--) {\n        seekableEnds.push(seekable.end(i));\n      }\n\n      // grab the furthest seekable end after sorting, or if there are none\n      // default to Infinity\n      return seekableEnds.length ? seekableEnds.sort()[seekableEnds.length - 1] : Infinity;\n    }\n\n    /**\n     * A helper to get the player seekable start\n     * so that we don't have to null check everywhere\n     *\n     * @return {number}\n     *         The earliest seekable start or 0.\n     */\n    seekableStart() {\n      const seekable = this.player_.seekable();\n      const seekableStarts = [];\n      let i = seekable ? seekable.length : 0;\n      while (i--) {\n        seekableStarts.push(seekable.start(i));\n      }\n\n      // grab the first seekable start after sorting, or if there are none\n      // default to 0\n      return seekableStarts.length ? seekableStarts.sort()[0] : 0;\n    }\n\n    /**\n     * Get the live time window aka\n     * the amount of time between seekable start and\n     * live current time.\n     *\n     * @return {number}\n     *         The amount of seconds that are seekable in\n     *         the live video.\n     */\n    liveWindow() {\n      const liveCurrentTime = this.liveCurrentTime();\n\n      // if liveCurrenTime is Infinity then we don't have a liveWindow at all\n      if (liveCurrentTime === Infinity) {\n        return 0;\n      }\n      return liveCurrentTime - this.seekableStart();\n    }\n\n    /**\n     * Determines if the player is live, only checks if this component\n     * is tracking live playback or not\n     *\n     * @return {boolean}\n     *         Wether liveTracker is tracking\n     */\n    isLive() {\n      return this.isTracking();\n    }\n\n    /**\n     * Determines if currentTime is at the live edge and won't fall behind\n     * on each seekableendchange\n     *\n     * @return {boolean}\n     *         Wether playback is at the live edge\n     */\n    atLiveEdge() {\n      return !this.behindLiveEdge();\n    }\n\n    /**\n     * get what we expect the live current time to be\n     *\n     * @return {number}\n     *         The expected live current time\n     */\n    liveCurrentTime() {\n      return this.pastSeekEnd() + this.seekableEnd();\n    }\n\n    /**\n     * The number of seconds that have occured after seekable end\n     * changed. This will be reset to 0 once seekable end changes.\n     *\n     * @return {number}\n     *         Seconds past the current seekable end\n     */\n    pastSeekEnd() {\n      const seekableEnd = this.seekableEnd();\n      if (this.lastSeekEnd_ !== -1 && seekableEnd !== this.lastSeekEnd_) {\n        this.pastSeekEnd_ = 0;\n      }\n      this.lastSeekEnd_ = seekableEnd;\n      return this.pastSeekEnd_;\n    }\n\n    /**\n     * If we are currently behind the live edge, aka currentTime will be\n     * behind on a seekableendchange\n     *\n     * @return {boolean}\n     *         If we are behind the live edge\n     */\n    behindLiveEdge() {\n      return this.behindLiveEdge_;\n    }\n\n    /**\n     * Wether live tracker is currently tracking or not.\n     */\n    isTracking() {\n      return typeof this.trackingInterval_ === 'number';\n    }\n\n    /**\n     * Seek to the live edge if we are behind the live edge\n     */\n    seekToLiveEdge() {\n      this.seekedBehindLive_ = false;\n      if (this.atLiveEdge()) {\n        return;\n      }\n      this.nextSeekedFromUser_ = false;\n      this.player_.currentTime(this.liveCurrentTime());\n    }\n\n    /**\n     * Dispose of liveTracker\n     */\n    dispose() {\n      this.stopTracking();\n      super.dispose();\n    }\n  }\n  Component$1.registerComponent('LiveTracker', LiveTracker);\n\n  /**\n   * Displays an element over the player which contains an optional title and\n   * description for the current content.\n   *\n   * Much of the code for this component originated in the now obsolete\n   * videojs-dock plugin: https://github.com/brightcove/videojs-dock/\n   *\n   * @extends Component\n   */\n  class TitleBar extends Component$1 {\n    constructor(player, options) {\n      super(player, options);\n      this.on('statechanged', e => this.updateDom_());\n      this.updateDom_();\n    }\n\n    /**\n     * Create the `TitleBar`'s DOM element\n     *\n     * @return {Element}\n     *         The element that was created.\n     */\n    createEl() {\n      this.els = {\n        title: createEl('div', {\n          className: 'vjs-title-bar-title',\n          id: `vjs-title-bar-title-${newGUID()}`\n        }),\n        description: createEl('div', {\n          className: 'vjs-title-bar-description',\n          id: `vjs-title-bar-description-${newGUID()}`\n        })\n      };\n      return createEl('div', {\n        className: 'vjs-title-bar'\n      }, {}, Object.values(this.els));\n    }\n\n    /**\n     * Updates the DOM based on the component's state object.\n     */\n    updateDom_() {\n      const tech = this.player_.tech_;\n      const techEl = tech && tech.el_;\n      const techAriaAttrs = {\n        title: 'aria-labelledby',\n        description: 'aria-describedby'\n      };\n      ['title', 'description'].forEach(k => {\n        const value = this.state[k];\n        const el = this.els[k];\n        const techAriaAttr = techAriaAttrs[k];\n        emptyEl(el);\n        if (value) {\n          textContent(el, value);\n        }\n\n        // If there is a tech element available, update its ARIA attributes\n        // according to whether a title and/or description have been provided.\n        if (techEl) {\n          techEl.removeAttribute(techAriaAttr);\n          if (value) {\n            techEl.setAttribute(techAriaAttr, el.id);\n          }\n        }\n      });\n      if (this.state.title || this.state.description) {\n        this.show();\n      } else {\n        this.hide();\n      }\n    }\n\n    /**\n     * Update the contents of the title bar component with new title and\n     * description text.\n     *\n     * If both title and description are missing, the title bar will be hidden.\n     *\n     * If either title or description are present, the title bar will be visible.\n     *\n     * NOTE: Any previously set value will be preserved. To unset a previously\n     * set value, you must pass an empty string or null.\n     *\n     * For example:\n     *\n     * ```\n     * update({title: 'foo', description: 'bar'}) // title: 'foo', description: 'bar'\n     * update({description: 'bar2'}) // title: 'foo', description: 'bar2'\n     * update({title: ''}) // title: '', description: 'bar2'\n     * update({title: 'foo', description: null}) // title: 'foo', description: null\n     * ```\n     *\n     * @param  {Object} [options={}]\n     *         An options object. When empty, the title bar will be hidden.\n     *\n     * @param  {string} [options.title]\n     *         A title to display in the title bar.\n     *\n     * @param  {string} [options.description]\n     *         A description to display in the title bar.\n     */\n    update(options) {\n      this.setState(options);\n    }\n\n    /**\n     * Dispose the component.\n     */\n    dispose() {\n      const tech = this.player_.tech_;\n      const techEl = tech && tech.el_;\n      if (techEl) {\n        techEl.removeAttribute('aria-labelledby');\n        techEl.removeAttribute('aria-describedby');\n      }\n      super.dispose();\n      this.els = null;\n    }\n  }\n  Component$1.registerComponent('TitleBar', TitleBar);\n\n  /**\n   * This function is used to fire a sourceset when there is something\n   * similar to `mediaEl.load()` being called. It will try to find the source via\n   * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n   * with the source that was found or empty string if we cannot know. If it cannot\n   * find a source then `sourceset` will not be fired.\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset was setup on\n   *\n   * @return {boolean}\n   *         returns false if the sourceset was not fired and true otherwise.\n   */\n  const sourcesetLoad = tech => {\n    const el = tech.el();\n\n    // if `el.src` is set, that source will be loaded.\n    if (el.hasAttribute('src')) {\n      tech.triggerSourceset(el.src);\n      return true;\n    }\n\n    /**\n     * Since there isn't a src property on the media element, source elements will be used for\n     * implementing the source selection algorithm. This happens asynchronously and\n     * for most cases were there is more than one source we cannot tell what source will\n     * be loaded, without re-implementing the source selection algorithm. At this time we are not\n     * going to do that. There are three special cases that we do handle here though:\n     *\n     * 1. If there are no sources, do not fire `sourceset`.\n     * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n     * 3. If there is more than one `<source>` but all of them have the same `src` url.\n     *    That will be our src.\n     */\n    const sources = tech.$$('source');\n    const srcUrls = [];\n    let src = '';\n\n    // if there are no sources, do not fire sourceset\n    if (!sources.length) {\n      return false;\n    }\n\n    // only count valid/non-duplicate source elements\n    for (let i = 0; i < sources.length; i++) {\n      const url = sources[i].src;\n      if (url && srcUrls.indexOf(url) === -1) {\n        srcUrls.push(url);\n      }\n    }\n\n    // there were no valid sources\n    if (!srcUrls.length) {\n      return false;\n    }\n\n    // there is only one valid source element url\n    // use that\n    if (srcUrls.length === 1) {\n      src = srcUrls[0];\n    }\n    tech.triggerSourceset(src);\n    return true;\n  };\n\n  /**\n   * our implementation of an `innerHTML` descriptor for browsers\n   * that do not have one.\n   */\n  const innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set(v) {\n      // make a dummy node to use innerHTML on\n      const dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      const docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n\n  /**\n   * Get a property descriptor given a list of priorities and the\n   * property to get.\n   */\n  const getDescriptor = (priority, prop) => {\n    let descriptor = {};\n    for (let i = 0; i < priority.length; i++) {\n      descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n      if (descriptor && descriptor.set && descriptor.get) {\n        break;\n      }\n    }\n    descriptor.enumerable = true;\n    descriptor.configurable = true;\n    return descriptor;\n  };\n  const getInnerHTMLDescriptor = tech => getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n\n  /**\n   * Patches browser internal functions so that we can tell synchronously\n   * if a `<source>` was appended to the media element. For some reason this\n   * causes a `sourceset` if the the media element is ready and has no source.\n   * This happens when:\n   * - The page has just loaded and the media element does not have a source.\n   * - The media element was emptied of all sources, then `load()` was called.\n   *\n   * It does this by patching the following functions/properties when they are supported:\n   *\n   * - `append()` - can be used to add a `<source>` element to the media element\n   * - `appendChild()` - can be used to add a `<source>` element to the media element\n   * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n   * - `innerHTML` -  can be used to add a `<source>` element to the media element\n   *\n   * @param {Html5} tech\n   *        The tech object that sourceset is being setup on.\n   */\n  const firstSourceWatch = function (tech) {\n    const el = tech.el();\n\n    // make sure firstSourceWatch isn't setup twice.\n    if (el.resetSourceWatch_) {\n      return;\n    }\n    const old = {};\n    const innerDescriptor = getInnerHTMLDescriptor(tech);\n    const appendWrapper = appendFn => (...args) => {\n      const retval = appendFn.apply(el, args);\n      sourcesetLoad(tech);\n      return retval;\n    };\n    ['append', 'appendChild', 'insertAdjacentHTML'].forEach(k => {\n      if (!el[k]) {\n        return;\n      }\n\n      // store the old function\n      old[k] = el[k];\n\n      // call the old function with a sourceset if a source\n      // was loaded\n      el[k] = appendWrapper(old[k]);\n    });\n    Object.defineProperty(el, 'innerHTML', merge$2(innerDescriptor, {\n      set: appendWrapper(innerDescriptor.set)\n    }));\n    el.resetSourceWatch_ = () => {\n      el.resetSourceWatch_ = null;\n      Object.keys(old).forEach(k => {\n        el[k] = old[k];\n      });\n      Object.defineProperty(el, 'innerHTML', innerDescriptor);\n    };\n\n    // on the first sourceset, we need to revert our changes\n    tech.one('sourceset', el.resetSourceWatch_);\n  };\n\n  /**\n   * our implementation of a `src` descriptor for browsers\n   * that do not have one\n   */\n  const srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n      return '';\n    },\n    set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n      return v;\n    }\n  });\n  const getSrcDescriptor = tech => getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n\n  /**\n   * setup `sourceset` handling on the `Html5` tech. This function\n   * patches the following element properties/functions:\n   *\n   * - `src` - to determine when `src` is set\n   * - `setAttribute()` - to determine when `src` is set\n   * - `load()` - this re-triggers the source selection algorithm, and can\n   *              cause a sourceset.\n   *\n   * If there is no source when we are adding `sourceset` support or during a `load()`\n   * we also patch the functions listed in `firstSourceWatch`.\n   *\n   * @param {Html5} tech\n   *        The tech to patch\n   */\n  const setupSourceset = function (tech) {\n    if (!tech.featuresSourceset) {\n      return;\n    }\n    const el = tech.el();\n\n    // make sure sourceset isn't setup twice.\n    if (el.resetSourceset_) {\n      return;\n    }\n    const srcDescriptor = getSrcDescriptor(tech);\n    const oldSetAttribute = el.setAttribute;\n    const oldLoad = el.load;\n    Object.defineProperty(el, 'src', merge$2(srcDescriptor, {\n      set: v => {\n        const retval = srcDescriptor.set.call(el, v);\n\n        // we use the getter here to get the actual value set on src\n        tech.triggerSourceset(el.src);\n        return retval;\n      }\n    }));\n    el.setAttribute = (n, v) => {\n      const retval = oldSetAttribute.call(el, n, v);\n      if (/src/i.test(n)) {\n        tech.triggerSourceset(el.src);\n      }\n      return retval;\n    };\n    el.load = () => {\n      const retval = oldLoad.call(el);\n\n      // if load was called, but there was no source to fire\n      // sourceset on. We have to watch for a source append\n      // as that can trigger a `sourceset` when the media element\n      // has no source\n      if (!sourcesetLoad(tech)) {\n        tech.triggerSourceset('');\n        firstSourceWatch(tech);\n      }\n      return retval;\n    };\n    if (el.currentSrc) {\n      tech.triggerSourceset(el.currentSrc);\n    } else if (!sourcesetLoad(tech)) {\n      firstSourceWatch(tech);\n    }\n    el.resetSourceset_ = () => {\n      el.resetSourceset_ = null;\n      el.load = oldLoad;\n      el.setAttribute = oldSetAttribute;\n      Object.defineProperty(el, 'src', srcDescriptor);\n      if (el.resetSourceWatch_) {\n        el.resetSourceWatch_();\n      }\n    };\n  };\n\n  /**\n   * @file html5.js\n   */\n\n  /**\n   * HTML5 Media Controller - Wrapper for HTML5 Media API\n   *\n   * @mixes Tech~SourceHandlerAdditions\n   * @extends Tech\n   */\n  class Html5 extends Tech {\n    /**\n    * Create an instance of this Tech.\n    *\n    * @param {Object} [options]\n    *        The key/value store of player options.\n    *\n    * @param {Component~ReadyCallback} [ready]\n    *        Callback function to call when the `HTML5` Tech is ready.\n    */\n    constructor(options, ready) {\n      super(options, ready);\n      const source = options.source;\n      let crossoriginTracks = false;\n      this.featuresVideoFrameCallback = this.featuresVideoFrameCallback && this.el_.tagName === 'VIDEO';\n\n      // Set the source if one is provided\n      // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n      // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n      // anyway so the error gets fired.\n      if (source && (this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n        this.setSource(source);\n      } else {\n        this.handleLateInit_(this.el_);\n      }\n\n      // setup sourceset after late sourceset/init\n      if (options.enableSourceset) {\n        this.setupSourcesetHandling_();\n      }\n      this.isScrubbing_ = false;\n      if (this.el_.hasChildNodes()) {\n        const nodes = this.el_.childNodes;\n        let nodesLength = nodes.length;\n        const removeNodes = [];\n        while (nodesLength--) {\n          const node = nodes[nodesLength];\n          const nodeName = node.nodeName.toLowerCase();\n          if (nodeName === 'track') {\n            if (!this.featuresNativeTextTracks) {\n              // Empty video tag tracks so the built-in player doesn't use them also.\n              // This may not be fast enough to stop HTML5 browsers from reading the tags\n              // so we'll need to turn off any default tracks if we're manually doing\n              // captions and subtitles. videoElement.textTracks\n              removeNodes.push(node);\n            } else {\n              // store HTMLTrackElement and TextTrack to remote list\n              this.remoteTextTrackEls().addTrackElement_(node);\n              this.remoteTextTracks().addTrack(node.track);\n              this.textTracks().addTrack(node.track);\n              if (!crossoriginTracks && !this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n                crossoriginTracks = true;\n              }\n            }\n          }\n        }\n        for (let i = 0; i < removeNodes.length; i++) {\n          this.el_.removeChild(removeNodes[i]);\n        }\n      }\n      this.proxyNativeTracks_();\n      if (this.featuresNativeTextTracks && crossoriginTracks) {\n        log$1.warn('Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n' + 'This may prevent text tracks from loading.');\n      }\n\n      // prevent iOS Safari from disabling metadata text tracks during native playback\n      this.restoreMetadataTracksInIOSNativePlayer_();\n\n      // Determine if native controls should be used\n      // Our goal should be to get the custom controls on mobile solid everywhere\n      // so we can remove this all together. Right now this will block custom\n      // controls on touch enabled laptops like the Chrome Pixel\n      if ((TOUCH_ENABLED || IS_IPHONE) && options.nativeControlsForTouch === true) {\n        this.setControls(true);\n      }\n\n      // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n      // into a `fullscreenchange` event\n      this.proxyWebkitFullscreen_();\n      this.triggerReady();\n    }\n\n    /**\n     * Dispose of `HTML5` media element and remove all tracks.\n     */\n    dispose() {\n      if (this.el_ && this.el_.resetSourceset_) {\n        this.el_.resetSourceset_();\n      }\n      Html5.disposeMediaElement(this.el_);\n      this.options_ = null;\n\n      // tech will handle clearing of the emulated track list\n      super.dispose();\n    }\n\n    /**\n     * Modify the media element so that we can detect when\n     * the source is changed. Fires `sourceset` just after the source has changed\n     */\n    setupSourcesetHandling_() {\n      setupSourceset(this);\n    }\n\n    /**\n     * When a captions track is enabled in the iOS Safari native player, all other\n     * tracks are disabled (including metadata tracks), which nulls all of their\n     * associated cue points. This will restore metadata tracks to their pre-fullscreen\n     * state in those cases so that cue points are not needlessly lost.\n     *\n     * @private\n     */\n    restoreMetadataTracksInIOSNativePlayer_() {\n      const textTracks = this.textTracks();\n      let metadataTracksPreFullscreenState;\n\n      // captures a snapshot of every metadata track's current state\n      const takeMetadataTrackSnapshot = () => {\n        metadataTracksPreFullscreenState = [];\n        for (let i = 0; i < textTracks.length; i++) {\n          const track = textTracks[i];\n          if (track.kind === 'metadata') {\n            metadataTracksPreFullscreenState.push({\n              track,\n              storedMode: track.mode\n            });\n          }\n        }\n      };\n\n      // snapshot each metadata track's initial state, and update the snapshot\n      // each time there is a track 'change' event\n      takeMetadataTrackSnapshot();\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n      this.on('dispose', () => textTracks.removeEventListener('change', takeMetadataTrackSnapshot));\n      const restoreTrackMode = () => {\n        for (let i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n          const storedTrack = metadataTracksPreFullscreenState[i];\n          if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n            storedTrack.track.mode = storedTrack.storedMode;\n          }\n        }\n        // we only want this handler to be executed on the first 'change' event\n        textTracks.removeEventListener('change', restoreTrackMode);\n      };\n\n      // when we enter fullscreen playback, stop updating the snapshot and\n      // restore all track modes to their pre-fullscreen state\n      this.on('webkitbeginfullscreen', () => {\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', restoreTrackMode);\n        textTracks.addEventListener('change', restoreTrackMode);\n      });\n\n      // start updating the snapshot again after leaving fullscreen\n      this.on('webkitendfullscreen', () => {\n        // remove the listener before adding it just in case it wasn't previously removed\n        textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n        textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n        // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n        textTracks.removeEventListener('change', restoreTrackMode);\n      });\n    }\n\n    /**\n     * Attempt to force override of tracks for the given type\n     *\n     * @param {string} type - Track type to override, possible values include 'Audio',\n     * 'Video', and 'Text'.\n     * @param {boolean} override - If set to true native audio/video will be overridden,\n     * otherwise native audio/video will potentially be used.\n     * @private\n     */\n    overrideNative_(type, override) {\n      // If there is no behavioral change don't add/remove listeners\n      if (override !== this[`featuresNative${type}Tracks`]) {\n        return;\n      }\n      const lowerCaseType = type.toLowerCase();\n      if (this[`${lowerCaseType}TracksListeners_`]) {\n        Object.keys(this[`${lowerCaseType}TracksListeners_`]).forEach(eventName => {\n          const elTracks = this.el()[`${lowerCaseType}Tracks`];\n          elTracks.removeEventListener(eventName, this[`${lowerCaseType}TracksListeners_`][eventName]);\n        });\n      }\n      this[`featuresNative${type}Tracks`] = !override;\n      this[`${lowerCaseType}TracksListeners_`] = null;\n      this.proxyNativeTracksForType_(lowerCaseType);\n    }\n\n    /**\n     * Attempt to force override of native audio tracks.\n     *\n     * @param {boolean} override - If set to true native audio will be overridden,\n     * otherwise native audio will potentially be used.\n     */\n    overrideNativeAudioTracks(override) {\n      this.overrideNative_('Audio', override);\n    }\n\n    /**\n     * Attempt to force override of native video tracks.\n     *\n     * @param {boolean} override - If set to true native video will be overridden,\n     * otherwise native video will potentially be used.\n     */\n    overrideNativeVideoTracks(override) {\n      this.overrideNative_('Video', override);\n    }\n\n    /**\n     * Proxy native track list events for the given type to our track\n     * lists if the browser we are playing in supports that type of track list.\n     *\n     * @param {string} name - Track type; values include 'audio', 'video', and 'text'\n     * @private\n     */\n    proxyNativeTracksForType_(name) {\n      const props = NORMAL[name];\n      const elTracks = this.el()[props.getterName];\n      const techTracks = this[props.getterName]();\n      if (!this[`featuresNative${props.capitalName}Tracks`] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      const listeners = {\n        change: e => {\n          const event = {\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          };\n          techTracks.trigger(event);\n\n          // if we are a text track change event, we should also notify the\n          // remote text track list. This can potentially cause a false positive\n          // if we were to get a change event on a non-remote track and\n          // we triggered the event on the remote text track list which doesn't\n          // contain that track. However, best practices mean looping through the\n          // list of tracks and searching for the appropriate mode value, so,\n          // this shouldn't pose an issue\n          if (name === 'text') {\n            this[REMOTE.remoteText.getterName]().trigger(event);\n          }\n        },\n        addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      const removeOldTracks = function () {\n        const removeTracks = [];\n        for (let i = 0; i < techTracks.length; i++) {\n          let found = false;\n          for (let j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n      this[props.getterName + 'Listeners_'] = listeners;\n      Object.keys(listeners).forEach(eventName => {\n        const listener = listeners[eventName];\n        elTracks.addEventListener(eventName, listener);\n        this.on('dispose', e => elTracks.removeEventListener(eventName, listener));\n      });\n\n      // Remove (native) tracks that are not used anymore\n      this.on('loadstart', removeOldTracks);\n      this.on('dispose', e => this.off('loadstart', removeOldTracks));\n    }\n\n    /**\n     * Proxy all native track list events to our track lists if the browser we are playing\n     * in supports that type of track list.\n     *\n     * @private\n     */\n    proxyNativeTracks_() {\n      NORMAL.names.forEach(name => {\n        this.proxyNativeTracksForType_(name);\n      });\n    }\n\n    /**\n     * Create the `Html5` Tech's DOM element.\n     *\n     * @return {Element}\n     *         The element that gets created.\n     */\n    createEl() {\n      let el = this.options_.tag;\n\n      // Check if this browser supports moving the element into the box.\n      // On the iPhone video will break if you move the element,\n      // So we have to create a brand new element.\n      // If we ingested the player div, we do not need to move the media element.\n      if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n        // If the original tag is still there, clone and remove it.\n        if (el) {\n          const clone = el.cloneNode(true);\n          if (el.parentNode) {\n            el.parentNode.insertBefore(clone, el);\n          }\n          Html5.disposeMediaElement(el);\n          el = clone;\n        } else {\n          el = document.createElement('video');\n\n          // determine if native controls should be used\n          const tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n          const attributes = merge$2({}, tagAttributes);\n          if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n            delete attributes.controls;\n          }\n          setAttributes(el, Object.assign(attributes, {\n            id: this.options_.techId,\n            class: 'vjs-tech'\n          }));\n        }\n        el.playerId = this.options_.playerId;\n      }\n      if (typeof this.options_.preload !== 'undefined') {\n        setAttribute(el, 'preload', this.options_.preload);\n      }\n      if (this.options_.disablePictureInPicture !== undefined) {\n        el.disablePictureInPicture = this.options_.disablePictureInPicture;\n      }\n\n      // Update specific tag settings, in case they were overridden\n      // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n      // when iOS/Safari or other browsers attempt to autoplay.\n      const settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n      for (let i = 0; i < settingsAttrs.length; i++) {\n        const attr = settingsAttrs[i];\n        const value = this.options_[attr];\n        if (typeof value !== 'undefined') {\n          if (value) {\n            setAttribute(el, attr, attr);\n          } else {\n            removeAttribute(el, attr);\n          }\n          el[attr] = value;\n        }\n      }\n      return el;\n    }\n\n    /**\n     * This will be triggered if the loadstart event has already fired, before videojs was\n     * ready. Two known examples of when this can happen are:\n     * 1. If we're loading the playback object after it has started loading\n     * 2. The media is already playing the (often with autoplay on) then\n     *\n     * This function will fire another loadstart so that videojs can catchup.\n     *\n     * @fires Tech#loadstart\n     *\n     * @return {undefined}\n     *         returns nothing.\n     */\n    handleLateInit_(el) {\n      if (el.networkState === 0 || el.networkState === 3) {\n        // The video element hasn't started loading the source yet\n        // or didn't find a source\n        return;\n      }\n      if (el.readyState === 0) {\n        // NetworkState is set synchronously BUT loadstart is fired at the\n        // end of the current stack, usually before setInterval(fn, 0).\n        // So at this point we know loadstart may have already fired or is\n        // about to fire, and either way the player hasn't seen it yet.\n        // We don't want to fire loadstart prematurely here and cause a\n        // double loadstart so we'll wait and see if it happens between now\n        // and the next loop, and fire it if not.\n        // HOWEVER, we also want to make sure it fires before loadedmetadata\n        // which could also happen between now and the next loop, so we'll\n        // watch for that also.\n        let loadstartFired = false;\n        const setLoadstartFired = function () {\n          loadstartFired = true;\n        };\n        this.on('loadstart', setLoadstartFired);\n        const triggerLoadstart = function () {\n          // We did miss the original loadstart. Make sure the player\n          // sees loadstart before loadedmetadata\n          if (!loadstartFired) {\n            this.trigger('loadstart');\n          }\n        };\n        this.on('loadedmetadata', triggerLoadstart);\n        this.ready(function () {\n          this.off('loadstart', setLoadstartFired);\n          this.off('loadedmetadata', triggerLoadstart);\n          if (!loadstartFired) {\n            // We did miss the original native loadstart. Fire it now.\n            this.trigger('loadstart');\n          }\n        });\n        return;\n      }\n\n      // From here on we know that loadstart already fired and we missed it.\n      // The other readyState events aren't as much of a problem if we double\n      // them, so not going to go to as much trouble as loadstart to prevent\n      // that unless we find reason to.\n      const eventsToTrigger = ['loadstart'];\n\n      // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n      eventsToTrigger.push('loadedmetadata');\n\n      // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n      if (el.readyState >= 2) {\n        eventsToTrigger.push('loadeddata');\n      }\n\n      // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n      if (el.readyState >= 3) {\n        eventsToTrigger.push('canplay');\n      }\n\n      // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n      if (el.readyState >= 4) {\n        eventsToTrigger.push('canplaythrough');\n      }\n\n      // We still need to give the player time to add event listeners\n      this.ready(function () {\n        eventsToTrigger.forEach(function (type) {\n          this.trigger(type);\n        }, this);\n      });\n    }\n\n    /**\n     * Set whether we are scrubbing or not.\n     * This is used to decide whether we should use `fastSeek` or not.\n     * `fastSeek` is used to provide trick play on Safari browsers.\n     *\n     * @param {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    setScrubbing(isScrubbing) {\n      this.isScrubbing_ = isScrubbing;\n    }\n\n    /**\n     * Get whether we are scrubbing or not.\n     *\n     * @return {boolean} isScrubbing\n     *                  - true for we are currently scrubbing\n     *                  - false for we are no longer scrubbing\n     */\n    scrubbing() {\n      return this.isScrubbing_;\n    }\n\n    /**\n     * Set current time for the `HTML5` tech.\n     *\n     * @param {number} seconds\n     *        Set the current time of the media to this.\n     */\n    setCurrentTime(seconds) {\n      try {\n        if (this.isScrubbing_ && this.el_.fastSeek && IS_ANY_SAFARI) {\n          this.el_.fastSeek(seconds);\n        } else {\n          this.el_.currentTime = seconds;\n        }\n      } catch (e) {\n        log$1(e, 'Video is not ready. (Video.js)');\n        // this.warning(VideoJS.warnings.videoNotReady);\n      }\n    }\n\n    /**\n     * Get the current duration of the HTML5 media element.\n     *\n     * @return {number}\n     *         The duration of the media or 0 if there is no duration.\n     */\n    duration() {\n      // Android Chrome will report duration as Infinity for VOD HLS until after\n      // playback has started, which triggers the live display erroneously.\n      // Return NaN if playback has not started and trigger a durationupdate once\n      // the duration can be reliably known.\n      if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n        // Wait for the first `timeupdate` with currentTime > 0 - there may be\n        // several with 0\n        const checkProgress = () => {\n          if (this.el_.currentTime > 0) {\n            // Trigger durationchange for genuinely live video\n            if (this.el_.duration === Infinity) {\n              this.trigger('durationchange');\n            }\n            this.off('timeupdate', checkProgress);\n          }\n        };\n        this.on('timeupdate', checkProgress);\n        return NaN;\n      }\n      return this.el_.duration || NaN;\n    }\n\n    /**\n     * Get the current width of the HTML5 media element.\n     *\n     * @return {number}\n     *         The width of the HTML5 media element.\n     */\n    width() {\n      return this.el_.offsetWidth;\n    }\n\n    /**\n     * Get the current height of the HTML5 media element.\n     *\n     * @return {number}\n     *         The height of the HTML5 media element.\n     */\n    height() {\n      return this.el_.offsetHeight;\n    }\n\n    /**\n     * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n     * `fullscreenchange` event.\n     *\n     * @private\n     * @fires fullscreenchange\n     * @listens webkitendfullscreen\n     * @listens webkitbeginfullscreen\n     * @listens webkitbeginfullscreen\n     */\n    proxyWebkitFullscreen_() {\n      if (!('webkitDisplayingFullscreen' in this.el_)) {\n        return;\n      }\n      const endFn = function () {\n        this.trigger('fullscreenchange', {\n          isFullscreen: false\n        });\n        // Safari will sometimes set contols on the videoelement when existing fullscreen.\n        if (this.el_.controls && !this.options_.nativeControlsForTouch && this.controls()) {\n          this.el_.controls = false;\n        }\n      };\n      const beginFn = function () {\n        if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n          this.one('webkitendfullscreen', endFn);\n          this.trigger('fullscreenchange', {\n            isFullscreen: true,\n            // set a flag in case another tech triggers fullscreenchange\n            nativeIOSFullscreen: true\n          });\n        }\n      };\n      this.on('webkitbeginfullscreen', beginFn);\n      this.on('dispose', () => {\n        this.off('webkitbeginfullscreen', beginFn);\n        this.off('webkitendfullscreen', endFn);\n      });\n    }\n\n    /**\n     * Check if fullscreen is supported on the video el.\n     *\n     * @return {boolean}\n     *         - True if fullscreen is supported.\n     *         - False if fullscreen is not supported.\n     */\n    supportsFullScreen() {\n      return typeof this.el_.webkitEnterFullScreen === 'function';\n    }\n\n    /**\n     * Request that the `HTML5` Tech enter fullscreen.\n     */\n    enterFullScreen() {\n      const video = this.el_;\n      if (video.paused && video.networkState <= video.HAVE_METADATA) {\n        // attempt to prime the video element for programmatic access\n        // this isn't necessary on the desktop but shouldn't hurt\n        silencePromise(this.el_.play());\n\n        // playing and pausing synchronously during the transition to fullscreen\n        // can get iOS ~6.1 devices into a play/pause loop\n        this.setTimeout(function () {\n          video.pause();\n          try {\n            video.webkitEnterFullScreen();\n          } catch (e) {\n            this.trigger('fullscreenerror', e);\n          }\n        }, 0);\n      } else {\n        try {\n          video.webkitEnterFullScreen();\n        } catch (e) {\n          this.trigger('fullscreenerror', e);\n        }\n      }\n    }\n\n    /**\n     * Request that the `HTML5` Tech exit fullscreen.\n     */\n    exitFullScreen() {\n      if (!this.el_.webkitDisplayingFullscreen) {\n        this.trigger('fullscreenerror', new Error('The video is not fullscreen'));\n        return;\n      }\n      this.el_.webkitExitFullScreen();\n    }\n\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    requestPictureInPicture() {\n      return this.el_.requestPictureInPicture();\n    }\n\n    /**\n     * Native requestVideoFrameCallback if supported by browser/tech, or fallback\n     * Don't use rVCF on Safari when DRM is playing, as it doesn't fire\n     * Needs to be checked later than the constructor\n     * This will be a false positive for clear sources loaded after a Fairplay source\n     *\n     * @param {function} cb function to call\n     * @return {number} id of request\n     */\n    requestVideoFrameCallback(cb) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        return this.el_.requestVideoFrameCallback(cb);\n      }\n      return super.requestVideoFrameCallback(cb);\n    }\n\n    /**\n     * Native or fallback requestVideoFrameCallback\n     *\n     * @param {number} id request id to cancel\n     */\n    cancelVideoFrameCallback(id) {\n      if (this.featuresVideoFrameCallback && !this.el_.webkitKeys) {\n        this.el_.cancelVideoFrameCallback(id);\n      } else {\n        super.cancelVideoFrameCallback(id);\n      }\n    }\n\n    /**\n     * A getter/setter for the `Html5` Tech's source object.\n     * > Note: Please use {@link Html5#setSource}\n     *\n     * @param {Tech~SourceObject} [src]\n     *        The source object you want to set on the `HTML5` techs element.\n     *\n     * @return {Tech~SourceObject|undefined}\n     *         - The current source object when a source is not passed in.\n     *         - undefined when setting\n     *\n     * @deprecated Since version 5.\n     */\n    src(src) {\n      if (src === undefined) {\n        return this.el_.src;\n      }\n\n      // Setting src through `src` instead of `setSrc` will be deprecated\n      this.setSrc(src);\n    }\n\n    /**\n     * Reset the tech by removing all sources and then calling\n     * {@link Html5.resetMediaElement}.\n     */\n    reset() {\n      Html5.resetMediaElement(this.el_);\n    }\n\n    /**\n     * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n     * the HTML5 media element.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object from the HTML5 tech. With a fallback to the\n     *         elements source.\n     */\n    currentSrc() {\n      if (this.currentSource_) {\n        return this.currentSource_.src;\n      }\n      return this.el_.currentSrc;\n    }\n\n    /**\n     * Set controls attribute for the HTML5 media Element.\n     *\n     * @param {string} val\n     *        Value to set the controls attribute to\n     */\n    setControls(val) {\n      this.el_.controls = !!val;\n    }\n\n    /**\n     * Create and returns a remote {@link TextTrack} object.\n     *\n     * @param {string} kind\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n     *\n     * @param {string} [label]\n     *        Label to identify the text track\n     *\n     * @param {string} [language]\n     *        Two letter language abbreviation\n     *\n     * @return {TextTrack}\n     *         The TextTrack that gets created.\n     */\n    addTextTrack(kind, label, language) {\n      if (!this.featuresNativeTextTracks) {\n        return super.addTextTrack(kind, label, language);\n      }\n      return this.el_.addTextTrack(kind, label, language);\n    }\n\n    /**\n     * Creates either native TextTrack or an emulated TextTrack depending\n     * on the value of `featuresNativeTextTracks`\n     *\n     * @param {Object} options\n     *        The object should contain the options to initialize the TextTrack with.\n     *\n     * @param {string} [options.kind]\n     *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n     *\n     * @param {string} [options.label]\n     *        Label to identify the text track\n     *\n     * @param {string} [options.language]\n     *        Two letter language abbreviation.\n     *\n     * @param {boolean} [options.default]\n     *        Default this track to on.\n     *\n     * @param {string} [options.id]\n     *        The internal id to assign this track.\n     *\n     * @param {string} [options.src]\n     *        A source url for the track.\n     *\n     * @return {HTMLTrackElement}\n     *         The track element that gets created.\n     */\n    createRemoteTextTrack(options) {\n      if (!this.featuresNativeTextTracks) {\n        return super.createRemoteTextTrack(options);\n      }\n      const htmlTrackElement = document.createElement('track');\n      if (options.kind) {\n        htmlTrackElement.kind = options.kind;\n      }\n      if (options.label) {\n        htmlTrackElement.label = options.label;\n      }\n      if (options.language || options.srclang) {\n        htmlTrackElement.srclang = options.language || options.srclang;\n      }\n      if (options.default) {\n        htmlTrackElement.default = options.default;\n      }\n      if (options.id) {\n        htmlTrackElement.id = options.id;\n      }\n      if (options.src) {\n        htmlTrackElement.src = options.src;\n      }\n      return htmlTrackElement;\n    }\n\n    /**\n     * Creates a remote text track object and returns an html track element.\n     *\n     * @param {Object} options The object should contain values for\n     * kind, language, label, and src (location of the WebVTT file)\n     * @param {boolean} [manualCleanup=false] if set to true, the TextTrack\n     * will not be removed from the TextTrackList and HtmlTrackElementList\n     * after a source change\n     * @return {HTMLTrackElement} An Html Track Element.\n     * This can be an emulated {@link HTMLTrackElement} or a native one.\n     *\n     */\n    addRemoteTextTrack(options, manualCleanup) {\n      const htmlTrackElement = super.addRemoteTextTrack(options, manualCleanup);\n      if (this.featuresNativeTextTracks) {\n        this.el().appendChild(htmlTrackElement);\n      }\n      return htmlTrackElement;\n    }\n\n    /**\n     * Remove remote `TextTrack` from `TextTrackList` object\n     *\n     * @param {TextTrack} track\n     *        `TextTrack` object to remove\n     */\n    removeRemoteTextTrack(track) {\n      super.removeRemoteTextTrack(track);\n      if (this.featuresNativeTextTracks) {\n        const tracks = this.$$('track');\n        let i = tracks.length;\n        while (i--) {\n          if (track === tracks[i] || track === tracks[i].track) {\n            this.el().removeChild(tracks[i]);\n          }\n        }\n      }\n    }\n\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object}\n     *         An object with supported media playback quality metrics\n     */\n    getVideoPlaybackQuality() {\n      if (typeof this.el().getVideoPlaybackQuality === 'function') {\n        return this.el().getVideoPlaybackQuality();\n      }\n      const videoPlaybackQuality = {};\n      if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n        videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n        videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n      }\n      if (window.performance) {\n        videoPlaybackQuality.creationTime = window.performance.now();\n      }\n      return videoPlaybackQuality;\n    }\n  }\n\n  /* HTML5 Support Testing ---------------------------------------------------- */\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  defineLazyProperty(Html5, 'TEST_VID', function () {\n    if (!isReal()) {\n      return;\n    }\n    const video = document.createElement('video');\n    const track = document.createElement('track');\n    track.kind = 'captions';\n    track.srclang = 'en';\n    track.label = 'English';\n    video.appendChild(track);\n    return video;\n  });\n\n  /**\n   * Check if HTML5 media is supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if HTML5 media is supported.\n   *         - False if HTML5 media is not supported.\n   */\n  Html5.isSupported = function () {\n    // IE with no Media Player is a LIAR! (#984)\n    try {\n      Html5.TEST_VID.volume = 0.5;\n    } catch (e) {\n      return false;\n    }\n    return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n  };\n\n  /**\n   * Check if the tech can support the given type\n   *\n   * @param {string} type\n   *        The mimetype to check\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  Html5.canPlayType = function (type) {\n    return Html5.TEST_VID.canPlayType(type);\n  };\n\n  /**\n   * Check if the tech can support the given source\n   *\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n  Html5.canPlaySource = function (srcObj, options) {\n    return Html5.canPlayType(srcObj.type);\n  };\n\n  /**\n   * Check if the volume can be changed in this browser/device.\n   * Volume cannot be changed in a lot of mobile devices.\n   * Specifically, it can't be changed from 1 on iOS.\n   *\n   * @return {boolean}\n   *         - True if volume can be controlled\n   *         - False otherwise\n   */\n  Html5.canControlVolume = function () {\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      const volume = Html5.TEST_VID.volume;\n      Html5.TEST_VID.volume = volume / 2 + 0.1;\n      const canControl = volume !== Html5.TEST_VID.volume;\n\n      // With the introduction of iOS 15, there are cases where the volume is read as\n      // changed but reverts back to its original state at the start of the next tick.\n      // To determine whether volume can be controlled on iOS,\n      // a timeout is set and the volume is checked asynchronously.\n      // Since `features` doesn't currently work asynchronously, the value is manually set.\n      if (canControl && IS_IOS) {\n        window.setTimeout(() => {\n          if (Html5 && Html5.prototype) {\n            Html5.prototype.featuresVolumeControl = volume !== Html5.TEST_VID.volume;\n          }\n        });\n\n        // default iOS to false, which will be updated in the timeout above.\n        return false;\n      }\n      return canControl;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * Check if the volume can be muted in this browser/device.\n   * Some devices, e.g. iOS, don't allow changing volume\n   * but permits muting/unmuting.\n   *\n   * @return {bolean}\n   *      - True if volume can be muted\n   *      - False otherwise\n   */\n  Html5.canMuteVolume = function () {\n    try {\n      const muted = Html5.TEST_VID.muted;\n\n      // in some versions of iOS muted property doesn't always\n      // work, so we want to set both property and attribute\n      Html5.TEST_VID.muted = !muted;\n      if (Html5.TEST_VID.muted) {\n        setAttribute(Html5.TEST_VID, 'muted', 'muted');\n      } else {\n        removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n      }\n      return muted !== Html5.TEST_VID.muted;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * Check if the playback rate can be changed in this browser/device.\n   *\n   * @return {boolean}\n   *         - True if playback rate can be controlled\n   *         - False otherwise\n   */\n  Html5.canControlPlaybackRate = function () {\n    // Playback rate API is implemented in Android Chrome, but doesn't do anything\n    // https://github.com/videojs/video.js/issues/3180\n    if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n      return false;\n    }\n    // IE will error if Windows Media Player not installed #3315\n    try {\n      const playbackRate = Html5.TEST_VID.playbackRate;\n      Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n      return playbackRate !== Html5.TEST_VID.playbackRate;\n    } catch (e) {\n      return false;\n    }\n  };\n\n  /**\n   * Check if we can override a video/audio elements attributes, with\n   * Object.defineProperty.\n   *\n   * @return {boolean}\n   *         - True if builtin attributes can be overridden\n   *         - False otherwise\n   */\n  Html5.canOverrideAttributes = function () {\n    // if we cannot overwrite the src/innerHTML property, there is no support\n    // iOS 7 safari for instance cannot do this.\n    try {\n      const noop = () => {};\n      Object.defineProperty(document.createElement('video'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'src', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('video'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n      Object.defineProperty(document.createElement('audio'), 'innerHTML', {\n        get: noop,\n        set: noop\n      });\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n\n  /**\n   * Check to see if native `TextTrack`s are supported by this browser/device.\n   *\n   * @return {boolean}\n   *         - True if native `TextTrack`s are supported.\n   *         - False otherwise\n   */\n  Html5.supportsNativeTextTracks = function () {\n    return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n  };\n\n  /**\n   * Check to see if native `VideoTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `VideoTrack`s are supported.\n   *        - False otherwise\n   */\n  Html5.supportsNativeVideoTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n  };\n\n  /**\n   * Check to see if native `AudioTrack`s are supported by this browser/device\n   *\n   * @return {boolean}\n   *        - True if native `AudioTrack`s are supported.\n   *        - False otherwise\n   */\n  Html5.supportsNativeAudioTracks = function () {\n    return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n  };\n\n  /**\n   * An array of events available on the Html5 tech.\n   *\n   * @private\n   * @type {Array}\n   */\n  Html5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n  /**\n   * Boolean indicating whether the `Tech` supports volume control.\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlVolume}\n   */\n  /**\n   * Boolean indicating whether the `Tech` supports muting volume.\n   *\n   * @type {bolean}\n   * @default {@link Html5.canMuteVolume}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports changing the speed at which the media\n   * plays. Examples:\n   *   - Set player to play 2x (twice) as fast\n   *   - Set player to play 0.5x (half) as fast\n   *\n   * @type {boolean}\n   * @default {@link Html5.canControlPlaybackRate}\n   */\n\n  /**\n   * Boolean indicating whether the `Tech` supports the `sourceset` event.\n   *\n   * @type {boolean}\n   * @default\n   */\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeTextTracks}\n   */\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeVideoTracks}\n   */\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n   *\n   * @type {boolean}\n   * @default {@link Html5.supportsNativeAudioTracks}\n   */\n  [['featuresMuteControl', 'canMuteVolume'], ['featuresPlaybackRate', 'canControlPlaybackRate'], ['featuresSourceset', 'canOverrideAttributes'], ['featuresNativeTextTracks', 'supportsNativeTextTracks'], ['featuresNativeVideoTracks', 'supportsNativeVideoTracks'], ['featuresNativeAudioTracks', 'supportsNativeAudioTracks']].forEach(function ([key, fn]) {\n    defineLazyProperty(Html5.prototype, key, () => Html5[fn](), true);\n  });\n  Html5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the media element\n   * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n   * false there. Everywhere else this should be true.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Html5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n  // TODO: Previous comment: No longer appears to be used. Can probably be removed.\n  //       Is this true?\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n   * when going into fullscreen.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Html5.prototype.featuresFullscreenResize = true;\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n   * If this is false, manual `progress` events will be triggered instead.\n   *\n   * @type {boolean}\n   * @default\n   */\n  Html5.prototype.featuresProgressEvents = true;\n\n  /**\n   * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n   * If this is false, manual `timeupdate` events will be triggered instead.\n   *\n   * @default\n   */\n  Html5.prototype.featuresTimeupdateEvents = true;\n\n  /**\n   * Whether the HTML5 el supports `requestVideoFrameCallback`\n   *\n   * @type {boolean}\n   */\n  Html5.prototype.featuresVideoFrameCallback = !!(Html5.TEST_VID && Html5.TEST_VID.requestVideoFrameCallback);\n  Html5.disposeMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n    if (el.parentNode) {\n      el.parentNode.removeChild(el);\n    }\n\n    // remove any child track or source nodes to prevent their loading\n    while (el.hasChildNodes()) {\n      el.removeChild(el.firstChild);\n    }\n\n    // remove any src reference. not setting `src=''` because that causes a warning\n    // in firefox\n    el.removeAttribute('src');\n\n    // force the media element to update its loading state by calling load()\n    // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {\n          // not supported\n        }\n      })();\n    }\n  };\n  Html5.resetMediaElement = function (el) {\n    if (!el) {\n      return;\n    }\n    const sources = el.querySelectorAll('source');\n    let i = sources.length;\n    while (i--) {\n      el.removeChild(sources[i]);\n    }\n\n    // remove any src reference.\n    // not setting `src=''` because that throws an error\n    el.removeAttribute('src');\n    if (typeof el.load === 'function') {\n      // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n      (function () {\n        try {\n          el.load();\n        } catch (e) {\n          // satisfy linter\n        }\n      })();\n    }\n  };\n\n  /* Native HTML5 element property wrapping ----------------------------------- */\n  // Wrap native boolean attributes with getters that check both property and attribute\n  // The list is as followed:\n  // muted, defaultMuted, autoplay, controls, loop, playsinline\n  [\n  /**\n   * Get the value of `muted` from the media element. `muted` indicates\n   * that the volume for the media should be set to silent. This does not actually change\n   * the `volume` attribute.\n   *\n   * @method Html5#muted\n   * @return {boolean}\n   *         - True if the value of `volume` should be ignored and the audio set to silent.\n   *         - False if the value of `volume` should be used.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n   * whether the media should start muted or not. Only changes the default state of the\n   * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n   * current state.\n   *\n   * @method Html5#defaultMuted\n   * @return {boolean}\n   *         - The value of `defaultMuted` from the media element.\n   *         - True indicates that the media should start muted.\n   *         - False indicates that the media should not start muted\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Get the value of `autoplay` from the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#autoplay\n   * @return {boolean}\n   *         - The value of `autoplay` from the media element.\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Get the value of `controls` from the media element. `controls` indicates\n   * whether the native media controls should be shown or hidden.\n   *\n   * @method Html5#controls\n   * @return {boolean}\n   *         - The value of `controls` from the media element.\n   *         - True indicates that native controls should be showing.\n   *         - False indicates that native controls should be hidden.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n   */\n  'controls',\n  /**\n   * Get the value of `loop` from the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#loop\n   * @return {boolean}\n   *         - The value of `loop` from the media element.\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Get the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#playsinline\n   * @return {boolean}\n   *         - The value of `playsinline` from the media element.\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop] || this.el_.hasAttribute(prop);\n    };\n  });\n\n  // Wrap native boolean attributes with setters that set both property and attribute\n  // The list is as followed:\n  // setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n  // setControls is special-cased above\n  [\n  /**\n   * Set the value of `muted` on the media element. `muted` indicates that the current\n   * audio level should be silent.\n   *\n   * @method Html5#setMuted\n   * @param {boolean} muted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n   */\n  'muted',\n  /**\n   * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n   * audio level should be silent, but will only effect the muted level on initial playback..\n   *\n   * @method Html5.prototype.setDefaultMuted\n   * @param {boolean} defaultMuted\n   *        - True if the audio should be set to silent\n   *        - False otherwise\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n   */\n  'defaultMuted',\n  /**\n   * Set the value of `autoplay` on the media element. `autoplay` indicates\n   * that the media should start to play as soon as the page is ready.\n   *\n   * @method Html5#setAutoplay\n   * @param {boolean} autoplay\n   *         - True indicates that the media should start as soon as the page loads.\n   *         - False indicates that the media should not start as soon as the page loads.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n   */\n  'autoplay',\n  /**\n   * Set the value of `loop` on the media element. `loop` indicates\n   * that the media should return to the start of the media and continue playing once\n   * it reaches the end.\n   *\n   * @method Html5#setLoop\n   * @param {boolean} loop\n   *         - True indicates that playback should seek back to start once\n   *           the end of a media is reached.\n   *         - False indicates that playback should not loop back to the start when the\n   *           end of the media is reached.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n   */\n  'loop',\n  /**\n   * Set the value of `playsinline` from the media element. `playsinline` indicates\n   * to the browser that non-fullscreen playback is preferred when fullscreen\n   * playback is the native default, such as in iOS Safari.\n   *\n   * @method Html5#setPlaysinline\n   * @param {boolean} playsinline\n   *         - True indicates that the media should play inline.\n   *         - False indicates that the media should not play inline.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n  'playsinline'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n      if (v) {\n        this.el_.setAttribute(prop, prop);\n      } else {\n        this.el_.removeAttribute(prop);\n      }\n    };\n  });\n\n  // Wrap native properties with a getter\n  // The list is as followed\n  // paused, currentTime, buffered, volume, poster, preload, error, seeking\n  // seekable, ended, playbackRate, defaultPlaybackRate, disablePictureInPicture\n  // played, networkState, readyState, videoWidth, videoHeight, crossOrigin\n  [\n  /**\n   * Get the value of `paused` from the media element. `paused` indicates whether the media element\n   * is currently paused or not.\n   *\n   * @method Html5#paused\n   * @return {boolean}\n   *         The value of `paused` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n   */\n  'paused',\n  /**\n   * Get the value of `currentTime` from the media element. `currentTime` indicates\n   * the current second that the media is at in playback.\n   *\n   * @method Html5#currentTime\n   * @return {number}\n   *         The value of `currentTime` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n   */\n  'currentTime',\n  /**\n   * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n   * object that represents the parts of the media that are already downloaded and\n   * available for playback.\n   *\n   * @method Html5#buffered\n   * @return {TimeRange}\n   *         The value of `buffered` from the media element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n   */\n  'buffered',\n  /**\n   * Get the value of `volume` from the media element. `volume` indicates\n   * the current playback volume of audio for a media. `volume` will be a value from 0\n   * (silent) to 1 (loudest and default).\n   *\n   * @method Html5#volume\n   * @return {number}\n   *         The value of `volume` from the media element. Value will be between 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Get the value of `poster` from the media element. `poster` indicates\n   * that the url of an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#poster\n   * @return {string}\n   *         The value of `poster` from the media element. Value will be a url to an\n   *         image.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n   */\n  'poster',\n  /**\n   * Get the value of `preload` from the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#preload\n   * @return {string}\n   *         The value of `preload` from the media element. Will be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Get the value of the `error` from the media element. `error` indicates any\n   * MediaError that may have occurred during playback. If error returns null there is no\n   * current error.\n   *\n   * @method Html5#error\n   * @return {MediaError|null}\n   *         The value of `error` from the media element. Will be `MediaError` if there\n   *         is a current error and null otherwise.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n   */\n  'error',\n  /**\n   * Get the value of `seeking` from the media element. `seeking` indicates whether the\n   * media is currently seeking to a new position or not.\n   *\n   * @method Html5#seeking\n   * @return {boolean}\n   *         - The value of `seeking` from the media element.\n   *         - True indicates that the media is currently seeking to a new position.\n   *         - False indicates that the media is not seeking to a new position at this time.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n   */\n  'seeking',\n  /**\n   * Get the value of `seekable` from the media element. `seekable` returns a\n   * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n   *\n   * @method Html5#seekable\n   * @return {TimeRange}\n   *         The value of `seekable` from the media element. A `TimeRange` object\n   *         indicating the current ranges of time that can be seeked to.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n   */\n  'seekable',\n  /**\n   * Get the value of `ended` from the media element. `ended` indicates whether\n   * the media has reached the end or not.\n   *\n   * @method Html5#ended\n   * @return {boolean}\n   *         - The value of `ended` from the media element.\n   *         - True indicates that the media has ended.\n   *         - False indicates that the media has not ended.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n   */\n  'ended',\n  /**\n   * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n   * the rate at which the media is currently playing back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#playbackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media is currently playing back. This value will not indicate the current\n   * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n   *\n   * Examples:\n   *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n   *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.defaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Get the value of 'disablePictureInPicture' from the video element.\n   *\n   * @method Html5#disablePictureInPicture\n   * @return {boolean} value\n   *         - The value of `disablePictureInPicture` from the video element.\n   *         - True indicates that the video can't be played in Picture-In-Picture mode\n   *         - False indicates that the video can be played in Picture-In-Picture mode\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Get the value of `played` from the media element. `played` returns a `TimeRange`\n   * object representing points in the media timeline that have been played.\n   *\n   * @method Html5#played\n   * @return {TimeRange}\n   *         The value of `played` from the media element. A `TimeRange` object indicating\n   *         the ranges of time that have been played.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n   */\n  'played',\n  /**\n   * Get the value of `networkState` from the media element. `networkState` indicates\n   * the current network state. It returns an enumeration from the following list:\n   * - 0: NETWORK_EMPTY\n   * - 1: NETWORK_IDLE\n   * - 2: NETWORK_LOADING\n   * - 3: NETWORK_NO_SOURCE\n   *\n   * @method Html5#networkState\n   * @return {number}\n   *         The value of `networkState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n   */\n  'networkState',\n  /**\n   * Get the value of `readyState` from the media element. `readyState` indicates\n   * the current state of the media element. It returns an enumeration from the\n   * following list:\n   * - 0: HAVE_NOTHING\n   * - 1: HAVE_METADATA\n   * - 2: HAVE_CURRENT_DATA\n   * - 3: HAVE_FUTURE_DATA\n   * - 4: HAVE_ENOUGH_DATA\n   *\n   * @method Html5#readyState\n   * @return {number}\n   *         The value of `readyState` from the media element. This will be a number\n   *         from the list in the description.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n   */\n  'readyState',\n  /**\n   * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n   * the current width of the video in css pixels.\n   *\n   * @method Html5#videoWidth\n   * @return {number}\n   *         The value of `videoWidth` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoWidth',\n  /**\n   * Get the value of `videoHeight` from the video element. `videoHeight` indicates\n   * the current height of the video in css pixels.\n   *\n   * @method Html5#videoHeight\n   * @return {number}\n   *         The value of `videoHeight` from the video element. This will be a number\n   *         in css pixels.\n   *\n   * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n   */\n  'videoHeight',\n  /**\n   * Get the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#crossOrigin\n   * @return {string}\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop];\n    };\n  });\n\n  // Wrap native properties with a setter in this format:\n  // set + toTitleCase(name)\n  // The list is as follows:\n  // setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate,\n  // setDisablePictureInPicture, setCrossOrigin\n  [\n  /**\n   * Set the value of `volume` on the media element. `volume` indicates the current\n   * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n   * so on.\n   *\n   * @method Html5#setVolume\n   * @param {number} percentAsDecimal\n   *        The volume percent as a decimal. Valid range is from 0-1.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n   */\n  'volume',\n  /**\n   * Set the value of `src` on the media element. `src` indicates the current\n   * {@link Tech~SourceObject} for the media.\n   *\n   * @method Html5#setSrc\n   * @param {Tech~SourceObject} src\n   *        The source object to set as the current source.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n   */\n  'src',\n  /**\n   * Set the value of `poster` on the media element. `poster` is the url to\n   * an image file that can/will be shown when no media data is available.\n   *\n   * @method Html5#setPoster\n   * @param {string} poster\n   *        The url to an image that should be used as the `poster` for the media\n   *        element.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n   */\n  'poster',\n  /**\n   * Set the value of `preload` on the media element. `preload` indicates\n   * what should download before the media is interacted with. It can have the following\n   * values:\n   * - none: nothing should be downloaded\n   * - metadata: poster and the first few frames of the media may be downloaded to get\n   *   media dimensions and other metadata\n   * - auto: allow the media and metadata for the media to be downloaded before\n   *    interaction\n   *\n   * @method Html5#setPreload\n   * @param {string} preload\n   *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n   *         or 'auto'.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n   */\n  'preload',\n  /**\n   * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n   * the rate at which the media should play back. Examples:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5#setPlaybackRate\n   * @return {number}\n   *         The value of `playbackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n   */\n  'playbackRate',\n  /**\n   * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n   * the rate at which the media should play back upon initial startup. Changing this value\n   * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n   *\n   * Example Values:\n   *   - if playbackRate is set to 2, media will play twice as fast.\n   *   - if playbackRate is set to 0.5, media will play half as fast.\n   *\n   * @method Html5.prototype.setDefaultPlaybackRate\n   * @return {number}\n   *         The value of `defaultPlaybackRate` from the media element. A number indicating\n   *         the current playback speed of the media, where 1 is normal speed.\n   *\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n   */\n  'defaultPlaybackRate',\n  /**\n   * Prevents the browser from suggesting a Picture-in-Picture context menu\n   * or to request Picture-in-Picture automatically in some cases.\n   *\n   * @method Html5#setDisablePictureInPicture\n   * @param {boolean} value\n   *         The true value will disable Picture-in-Picture mode.\n   *\n   * @see [Spec]{@link https://w3c.github.io/picture-in-picture/#disable-pip}\n   */\n  'disablePictureInPicture',\n  /**\n   * Set the value of `crossOrigin` from the media element. `crossOrigin` indicates\n   * to the browser that should sent the cookies along with the requests for the\n   * different assets/playlists\n   *\n   * @method Html5#setCrossOrigin\n   * @param {string} crossOrigin\n   *         - anonymous indicates that the media should not sent cookies.\n   *         - use-credentials indicates that the media should sent cookies along the requests.\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-media-crossorigin}\n   */\n  'crossOrigin'].forEach(function (prop) {\n    Html5.prototype['set' + toTitleCase$1(prop)] = function (v) {\n      this.el_[prop] = v;\n    };\n  });\n\n  // wrap native functions with a function\n  // The list is as follows:\n  // pause, load, play\n  [\n  /**\n   * A wrapper around the media elements `pause` function. This will call the `HTML5`\n   * media elements `pause` function.\n   *\n   * @method Html5#pause\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n   */\n  'pause',\n  /**\n   * A wrapper around the media elements `load` function. This will call the `HTML5`s\n   * media element `load` function.\n   *\n   * @method Html5#load\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n   */\n  'load',\n  /**\n   * A wrapper around the media elements `play` function. This will call the `HTML5`s\n   * media element `play` function.\n   *\n   * @method Html5#play\n   * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n   */\n  'play'].forEach(function (prop) {\n    Html5.prototype[prop] = function () {\n      return this.el_[prop]();\n    };\n  });\n  Tech.withSourceHandlers(Html5);\n\n  /**\n   * Native source handler for Html5, simply passes the source to the media element.\n   *\n   * @property {Tech~SourceObject} source\n   *        The source object\n   *\n   * @property {Html5} tech\n   *        The instance of the HTML5 tech.\n   */\n  Html5.nativeSourceHandler = {};\n\n  /**\n   * Check if the media element can play the given mime type.\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  Html5.nativeSourceHandler.canPlayType = function (type) {\n    // IE without MediaPlayer throws an error (#519)\n    try {\n      return Html5.TEST_VID.canPlayType(type);\n    } catch (e) {\n      return '';\n    }\n  };\n\n  /**\n   * Check if the media element can handle a source natively.\n   *\n   * @param {Tech~SourceObject} source\n   *         The source object\n   *\n   * @param {Object} [options]\n   *         Options to be passed to the tech.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string).\n   */\n  Html5.nativeSourceHandler.canHandleSource = function (source, options) {\n    // If a type was provided we should rely on that\n    if (source.type) {\n      return Html5.nativeSourceHandler.canPlayType(source.type);\n\n      // If no type, fall back to checking 'video/[EXTENSION]'\n    } else if (source.src) {\n      const ext = getFileExtension(source.src);\n      return Html5.nativeSourceHandler.canPlayType(`video/${ext}`);\n    }\n    return '';\n  };\n\n  /**\n   * Pass the source to the native media element.\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Html5} tech\n   *        The instance of the Html5 tech\n   *\n   * @param {Object} [options]\n   *        The options to pass to the source\n   */\n  Html5.nativeSourceHandler.handleSource = function (source, tech, options) {\n    tech.setSrc(source.src);\n  };\n\n  /**\n   * A noop for the native dispose function, as cleanup is not needed.\n   */\n  Html5.nativeSourceHandler.dispose = function () {};\n\n  // Register the native source handler\n  Html5.registerSourceHandler(Html5.nativeSourceHandler);\n  Tech.registerTech('Html5', Html5);\n\n  /**\n   * @file player.js\n   */\n\n  // The following tech events are simply re-triggered\n  // on the player when they happen\n  const TECH_EVENTS_RETRIGGER = [\n  /**\n   * Fired while the user agent is downloading media data.\n   *\n   * @event Player#progress\n   * @type {EventTarget~Event}\n   */\n  /**\n   * Retrigger the `progress` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechProgress_\n   * @fires Player#progress\n   * @listens Tech#progress\n   */\n  'progress',\n  /**\n   * Fires when the loading of an audio/video is aborted.\n   *\n   * @event Player#abort\n   * @type {EventTarget~Event}\n   */\n  /**\n   * Retrigger the `abort` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechAbort_\n   * @fires Player#abort\n   * @listens Tech#abort\n   */\n  'abort',\n  /**\n   * Fires when the browser is intentionally not getting media data.\n   *\n   * @event Player#suspend\n   * @type {EventTarget~Event}\n   */\n  /**\n   * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechSuspend_\n   * @fires Player#suspend\n   * @listens Tech#suspend\n   */\n  'suspend',\n  /**\n   * Fires when the current playlist is empty.\n   *\n   * @event Player#emptied\n   * @type {EventTarget~Event}\n   */\n  /**\n   * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechEmptied_\n   * @fires Player#emptied\n   * @listens Tech#emptied\n   */\n  'emptied',\n  /**\n   * Fires when the browser is trying to get media data, but data is not available.\n   *\n   * @event Player#stalled\n   * @type {EventTarget~Event}\n   */\n  /**\n   * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechStalled_\n   * @fires Player#stalled\n   * @listens Tech#stalled\n   */\n  'stalled',\n  /**\n   * Fires when the browser has loaded meta data for the audio/video.\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n  /**\n   * Retrigger the `loadedmetadata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoadedmetadata_\n   * @fires Player#loadedmetadata\n   * @listens Tech#loadedmetadata\n   */\n  'loadedmetadata',\n  /**\n   * Fires when the browser has loaded the current frame of the audio/video.\n   *\n   * @event Player#loadeddata\n   * @type {event}\n   */\n  /**\n   * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechLoaddeddata_\n   * @fires Player#loadeddata\n   * @listens Tech#loadeddata\n   */\n  'loadeddata',\n  /**\n   * Fires when the current playback position has changed.\n   *\n   * @event Player#timeupdate\n   * @type {event}\n   */\n  /**\n   * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTimeUpdate_\n   * @fires Player#timeupdate\n   * @listens Tech#timeupdate\n   */\n  'timeupdate',\n  /**\n   * Fires when the video's intrinsic dimensions change\n   *\n   * @event Player#resize\n   * @type {event}\n   */\n  /**\n   * Retrigger the `resize` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechResize_\n   * @fires Player#resize\n   * @listens Tech#resize\n   */\n  'resize',\n  /**\n   * Fires when the volume has been changed\n   *\n   * @event Player#volumechange\n   * @type {event}\n   */\n  /**\n   * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechVolumechange_\n   * @fires Player#volumechange\n   * @listens Tech#volumechange\n   */\n  'volumechange',\n  /**\n   * Fires when the text track has been changed\n   *\n   * @event Player#texttrackchange\n   * @type {event}\n   */\n  /**\n   * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n   *\n   * @private\n   * @method Player#handleTechTexttrackchange_\n   * @fires Player#texttrackchange\n   * @listens Tech#texttrackchange\n   */\n  'texttrackchange'];\n\n  // events to queue when playback rate is zero\n  // this is a hash for the sole purpose of mapping non-camel-cased event names\n  // to camel-cased function names\n  const TECH_EVENTS_QUEUE = {\n    canplay: 'CanPlay',\n    canplaythrough: 'CanPlayThrough',\n    playing: 'Playing',\n    seeked: 'Seeked'\n  };\n  const BREAKPOINT_ORDER = ['tiny', 'xsmall', 'small', 'medium', 'large', 'xlarge', 'huge'];\n  const BREAKPOINT_CLASSES = {};\n\n  // grep: vjs-layout-tiny\n  // grep: vjs-layout-x-small\n  // grep: vjs-layout-small\n  // grep: vjs-layout-medium\n  // grep: vjs-layout-large\n  // grep: vjs-layout-x-large\n  // grep: vjs-layout-huge\n  BREAKPOINT_ORDER.forEach(k => {\n    const v = k.charAt(0) === 'x' ? `x-${k.substring(1)}` : k;\n    BREAKPOINT_CLASSES[k] = `vjs-layout-${v}`;\n  });\n  const DEFAULT_BREAKPOINTS = {\n    tiny: 210,\n    xsmall: 320,\n    small: 425,\n    medium: 768,\n    large: 1440,\n    xlarge: 2560,\n    huge: Infinity\n  };\n\n  /**\n   * An instance of the `Player` class is created when any of the Video.js setup methods\n   * are used to initialize a video.\n   *\n   * After an instance has been created it can be accessed globally in two ways:\n   * 1. By calling `videojs('example_video_1');`\n   * 2. By using it directly via  `videojs.players.example_video_1;`\n   *\n   * @extends Component\n   */\n  class Player extends Component$1 {\n    /**\n     * Create an instance of this class.\n     *\n     * @param {Element} tag\n     *        The original video DOM element used for configuring options.\n     *\n     * @param {Object} [options]\n     *        Object of option names and values.\n     *\n     * @param {Component~ReadyCallback} [ready]\n     *        Ready callback function.\n     */\n    constructor(tag, options, ready) {\n      // Make sure tag ID exists\n      tag.id = tag.id || options.id || `vjs_video_${newGUID()}`;\n\n      // Set Options\n      // The options argument overrides options set in the video tag\n      // which overrides globally set options.\n      // This latter part coincides with the load order\n      // (tag must exist before Player)\n      options = Object.assign(Player.getTagSettings(tag), options);\n\n      // Delay the initialization of children because we need to set up\n      // player properties first, and can't use `this` before `super()`\n      options.initChildren = false;\n\n      // Same with creating the element\n      options.createEl = false;\n\n      // don't auto mixin the evented mixin\n      options.evented = false;\n\n      // we don't want the player to report touch activity on itself\n      // see enableTouchActivity in Component\n      options.reportTouchActivity = false;\n\n      // If language is not set, get the closest lang attribute\n      if (!options.language) {\n        const closest = tag.closest('[lang]');\n        if (closest) {\n          options.language = closest.getAttribute('lang');\n        }\n      }\n\n      // Run base component initializing with new options\n      super(null, options, ready);\n\n      // Create bound methods for document listeners.\n      this.boundDocumentFullscreenChange_ = e => this.documentFullscreenChange_(e);\n      this.boundFullWindowOnEscKey_ = e => this.fullWindowOnEscKey(e);\n      this.boundUpdateStyleEl_ = e => this.updateStyleEl_(e);\n      this.boundApplyInitTime_ = e => this.applyInitTime_(e);\n      this.boundUpdateCurrentBreakpoint_ = e => this.updateCurrentBreakpoint_(e);\n      this.boundHandleTechClick_ = e => this.handleTechClick_(e);\n      this.boundHandleTechDoubleClick_ = e => this.handleTechDoubleClick_(e);\n      this.boundHandleTechTouchStart_ = e => this.handleTechTouchStart_(e);\n      this.boundHandleTechTouchMove_ = e => this.handleTechTouchMove_(e);\n      this.boundHandleTechTouchEnd_ = e => this.handleTechTouchEnd_(e);\n      this.boundHandleTechTap_ = e => this.handleTechTap_(e);\n\n      // default isFullscreen_ to false\n      this.isFullscreen_ = false;\n\n      // create logger\n      this.log = createLogger(this.id_);\n\n      // Hold our own reference to fullscreen api so it can be mocked in tests\n      this.fsApi_ = FullscreenApi;\n\n      // Tracks when a tech changes the poster\n      this.isPosterFromTech_ = false;\n\n      // Holds callback info that gets queued when playback rate is zero\n      // and a seek is happening\n      this.queuedCallbacks_ = [];\n\n      // Turn off API access because we're loading a new tech that might load asynchronously\n      this.isReady_ = false;\n\n      // Init state hasStarted_\n      this.hasStarted_ = false;\n\n      // Init state userActive_\n      this.userActive_ = false;\n\n      // Init debugEnabled_\n      this.debugEnabled_ = false;\n\n      // Init state audioOnlyMode_\n      this.audioOnlyMode_ = false;\n\n      // Init state audioPosterMode_\n      this.audioPosterMode_ = false;\n\n      // Init state audioOnlyCache_\n      this.audioOnlyCache_ = {\n        playerHeight: null,\n        hiddenChildren: []\n      };\n\n      // if the global option object was accidentally blown away by\n      // someone, bail early with an informative error\n      if (!this.options_ || !this.options_.techOrder || !this.options_.techOrder.length) {\n        throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n      }\n\n      // Store the original tag used to set options\n      this.tag = tag;\n\n      // Store the tag attributes used to restore html5 element\n      this.tagAttributes = tag && getAttributes(tag);\n\n      // Update current language\n      this.language(this.options_.language);\n\n      // Update Supported Languages\n      if (options.languages) {\n        // Normalise player option languages to lowercase\n        const languagesToLower = {};\n        Object.getOwnPropertyNames(options.languages).forEach(function (name) {\n          languagesToLower[name.toLowerCase()] = options.languages[name];\n        });\n        this.languages_ = languagesToLower;\n      } else {\n        this.languages_ = Player.prototype.options_.languages;\n      }\n      this.resetCache_();\n\n      // Set poster\n      this.poster_ = options.poster || '';\n\n      // Set controls\n      this.controls_ = !!options.controls;\n\n      // Original tag settings stored in options\n      // now remove immediately so native controls don't flash.\n      // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n      tag.controls = false;\n      tag.removeAttribute('controls');\n      this.changingSrc_ = false;\n      this.playCallbacks_ = [];\n      this.playTerminatedQueue_ = [];\n\n      // the attribute overrides the option\n      if (tag.hasAttribute('autoplay')) {\n        this.autoplay(true);\n      } else {\n        // otherwise use the setter to validate and\n        // set the correct value.\n        this.autoplay(this.options_.autoplay);\n      }\n\n      // check plugins\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(name => {\n          if (typeof this[name] !== 'function') {\n            throw new Error(`plugin \"${name}\" does not exist`);\n          }\n        });\n      }\n\n      /*\n       * Store the internal state of scrubbing\n       *\n       * @private\n       * @return {Boolean} True if the user is scrubbing\n       */\n      this.scrubbing_ = false;\n      this.el_ = this.createEl();\n\n      // Make this an evented object and use `el_` as its event bus.\n      evented(this, {\n        eventBusKey: 'el_'\n      });\n\n      // listen to document and player fullscreenchange handlers so we receive those events\n      // before a user can receive them so we can update isFullscreen appropriately.\n      // make sure that we listen to fullscreenchange events before everything else to make sure that\n      // our isFullscreen method is updated properly for internal components as well as external.\n      if (this.fsApi_.requestFullscreen) {\n        on(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n        this.on(this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      }\n      if (this.fluid_) {\n        this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n      // We also want to pass the original player options to each component and plugin\n      // as well so they don't need to reach back into the player for options later.\n      // We also need to do another copy of this.options_ so we don't end up with\n      // an infinite loop.\n      const playerOptionsCopy = merge$2(this.options_);\n\n      // Load plugins\n      if (options.plugins) {\n        Object.keys(options.plugins).forEach(name => {\n          this[name](options.plugins[name]);\n        });\n      }\n\n      // Enable debug mode to fire debugon event for all plugins.\n      if (options.debug) {\n        this.debug(true);\n      }\n      this.options_.playerOptions = playerOptionsCopy;\n      this.middleware_ = [];\n      this.playbackRates(options.playbackRates);\n      this.initChildren();\n\n      // Set isAudio based on whether or not an audio tag was used\n      this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n      // Update controls className. Can't do this when the controls are initially\n      // set because the element doesn't exist yet.\n      if (this.controls()) {\n        this.addClass('vjs-controls-enabled');\n      } else {\n        this.addClass('vjs-controls-disabled');\n      }\n\n      // Set ARIA label and region role depending on player type\n      this.el_.setAttribute('role', 'region');\n      if (this.isAudio()) {\n        this.el_.setAttribute('aria-label', this.localize('Audio Player'));\n      } else {\n        this.el_.setAttribute('aria-label', this.localize('Video Player'));\n      }\n      if (this.isAudio()) {\n        this.addClass('vjs-audio');\n      }\n\n      // TODO: Make this smarter. Toggle user state between touching/mousing\n      // using events, since devices can have both touch and mouse events.\n      // TODO: Make this check be performed again when the window switches between monitors\n      // (See https://github.com/videojs/video.js/issues/5683)\n      if (TOUCH_ENABLED) {\n        this.addClass('vjs-touch-enabled');\n      }\n\n      // iOS Safari has broken hover handling\n      if (!IS_IOS) {\n        this.addClass('vjs-workinghover');\n      }\n\n      // Make player easily findable by ID\n      Player.players[this.id_] = this;\n\n      // Add a major version class to aid css in plugins\n      const majorVersion = version$5.split('.')[0];\n      this.addClass(`vjs-v${majorVersion}`);\n\n      // When the player is first initialized, trigger activity so components\n      // like the control bar show themselves if needed\n      this.userActive(true);\n      this.reportUserActivity();\n      this.one('play', e => this.listenForUserActivity_(e));\n      this.on('keydown', e => this.handleKeyDown(e));\n      this.on('languagechange', e => this.handleLanguagechange(e));\n      this.breakpoints(this.options_.breakpoints);\n      this.responsive(this.options_.responsive);\n\n      // Calling both the audio mode methods after the player is fully\n      // setup to be able to listen to the events triggered by them\n      this.on('ready', () => {\n        // Calling the audioPosterMode method first so that\n        // the audioOnlyMode can take precedence when both options are set to true\n        this.audioPosterMode(this.options_.audioPosterMode);\n        this.audioOnlyMode(this.options_.audioOnlyMode);\n      });\n    }\n\n    /**\n     * Destroys the video player and does any necessary cleanup.\n     *\n     * This is especially helpful if you are dynamically adding and removing videos\n     * to/from the DOM.\n     *\n     * @fires Player#dispose\n     */\n    dispose() {\n      /**\n       * Called when the player is being disposed of.\n       *\n       * @event Player#dispose\n       * @type {EventTarget~Event}\n       */\n      this.trigger('dispose');\n      // prevent dispose from being called twice\n      this.off('dispose');\n\n      // Make sure all player-specific document listeners are unbound. This is\n      off(document, this.fsApi_.fullscreenchange, this.boundDocumentFullscreenChange_);\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n      if (this.styleEl_ && this.styleEl_.parentNode) {\n        this.styleEl_.parentNode.removeChild(this.styleEl_);\n        this.styleEl_ = null;\n      }\n\n      // Kill reference to this player\n      Player.players[this.id_] = null;\n      if (this.tag && this.tag.player) {\n        this.tag.player = null;\n      }\n      if (this.el_ && this.el_.player) {\n        this.el_.player = null;\n      }\n      if (this.tech_) {\n        this.tech_.dispose();\n        this.isPosterFromTech_ = false;\n        this.poster_ = '';\n      }\n      if (this.playerElIngest_) {\n        this.playerElIngest_ = null;\n      }\n      if (this.tag) {\n        this.tag = null;\n      }\n      clearCacheForPlayer(this);\n\n      // remove all event handlers for track lists\n      // all tracks and track listeners are removed on\n      // tech dispose\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        const list = this[props.getterName]();\n\n        // if it is not a native list\n        // we have to manually remove event listeners\n        if (list && list.off) {\n          list.off();\n        }\n      });\n\n      // the actual .el_ is removed here, or replaced if\n      super.dispose({\n        restoreEl: this.options_.restoreEl\n      });\n    }\n\n    /**\n     * Create the `Player`'s DOM element.\n     *\n     * @return {Element}\n     *         The DOM element that gets created.\n     */\n    createEl() {\n      let tag = this.tag;\n      let el;\n      let playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n      const divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n      if (playerElIngest) {\n        el = this.el_ = tag.parentNode;\n      } else if (!divEmbed) {\n        el = this.el_ = super.createEl('div');\n      }\n\n      // Copy over all the attributes from the tag, including ID and class\n      // ID will now reference player box, not the video tag\n      const attrs = getAttributes(tag);\n      if (divEmbed) {\n        el = this.el_ = tag;\n        tag = this.tag = document.createElement('video');\n        while (el.children.length) {\n          tag.appendChild(el.firstChild);\n        }\n        if (!hasClass(el, 'video-js')) {\n          addClass(el, 'video-js');\n        }\n        el.appendChild(tag);\n        playerElIngest = this.playerElIngest_ = el;\n        // move properties over from our custom `video-js` element\n        // to our new `video` element. This will move things like\n        // `src` or `controls` that were set via js before the player\n        // was initialized.\n        Object.keys(el).forEach(k => {\n          try {\n            tag[k] = el[k];\n          } catch (e) {\n            // we got a a property like outerHTML which we can't actually copy, ignore it\n          }\n        });\n      }\n\n      // set tabindex to -1 to remove the video element from the focus order\n      tag.setAttribute('tabindex', '-1');\n      attrs.tabindex = '-1';\n\n      // Workaround for #4583 on Chrome (on Windows) with JAWS.\n      // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n      // Note that we can't detect if JAWS is being used, but this ARIA attribute\n      // doesn't change behavior of Chrome if JAWS is not being used\n      if (IS_CHROME && IS_WINDOWS) {\n        tag.setAttribute('role', 'application');\n        attrs.role = 'application';\n      }\n\n      // Remove width/height attrs from tag so CSS can make it 100% width/height\n      tag.removeAttribute('width');\n      tag.removeAttribute('height');\n      if ('width' in attrs) {\n        delete attrs.width;\n      }\n      if ('height' in attrs) {\n        delete attrs.height;\n      }\n      Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n        // don't copy over the class attribute to the player element when we're in a div embed\n        // the class is already set up properly in the divEmbed case\n        // and we want to make sure that the `video-js` class doesn't get lost\n        if (!(divEmbed && attr === 'class')) {\n          el.setAttribute(attr, attrs[attr]);\n        }\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      });\n\n      // Update tag id/class for use as HTML5 playback tech\n      // Might think we should do this after embedding in container so .vjs-tech class\n      // doesn't flash 100% width/height, but class only applies with .video-js parent\n      tag.playerId = tag.id;\n      tag.id += '_html5_api';\n      tag.className = 'vjs-tech';\n\n      // Make player findable on elements\n      tag.player = el.player = this;\n      // Default state of video is paused\n      this.addClass('vjs-paused');\n\n      // Add a style element in the player that we'll use to set the width/height\n      // of the player in a way that's still overrideable by CSS, just like the\n      // video element\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n        this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n        const defaultsStyleEl = $('.vjs-styles-defaults');\n        const head = $('head');\n        head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n      }\n      this.fill_ = false;\n      this.fluid_ = false;\n\n      // Pass in the width/height/aspectRatio options which will update the style el\n      this.width(this.options_.width);\n      this.height(this.options_.height);\n      this.fill(this.options_.fill);\n      this.fluid(this.options_.fluid);\n      this.aspectRatio(this.options_.aspectRatio);\n      // support both crossOrigin and crossorigin to reduce confusion and issues around the name\n      this.crossOrigin(this.options_.crossOrigin || this.options_.crossorigin);\n\n      // Hide any links within the video/audio tag,\n      // because IE doesn't hide them completely from screen readers.\n      const links = tag.getElementsByTagName('a');\n      for (let i = 0; i < links.length; i++) {\n        const linkEl = links.item(i);\n        addClass(linkEl, 'vjs-hidden');\n        linkEl.setAttribute('hidden', 'hidden');\n      }\n\n      // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n      // keep track of the original for later so we can know if the source originally failed\n      tag.initNetworkState_ = tag.networkState;\n\n      // Wrap video tag in div (el/box) container\n      if (tag.parentNode && !playerElIngest) {\n        tag.parentNode.insertBefore(el, tag);\n      }\n\n      // insert the tag as the first child of the player element\n      // then manually add it to the children array so that this.addChild\n      // will work properly for other components\n      //\n      // Breaks iPhone, fixed in HTML5 setup.\n      prependTo(tag, el);\n      this.children_.unshift(tag);\n\n      // Set lang attr on player to ensure CSS :lang() in consistent with player\n      // if it's been set to something different to the doc\n      this.el_.setAttribute('lang', this.language_);\n      this.el_.setAttribute('translate', 'no');\n      this.el_ = el;\n      return el;\n    }\n\n    /**\n     * Get or set the `Player`'s crossOrigin option. For the HTML5 player, this\n     * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n     * behavior.\n     *\n     * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n     *\n     * @param {string|null} [value]\n     *        The value to set the `Player`'s crossOrigin to. If an argument is\n     *        given, must be one of `'anonymous'` or `'use-credentials'`, or 'null'.\n     *\n     * @return {string|null|undefined}\n     *         - The current crossOrigin value of the `Player` when getting.\n     *         - undefined when setting\n     */\n    crossOrigin(value) {\n      // `null` can be set to unset a value\n      if (typeof value === 'undefined') {\n        return this.techGet_('crossOrigin');\n      }\n      if (value !== null && value !== 'anonymous' && value !== 'use-credentials') {\n        log$1.warn(`crossOrigin must be null,  \"anonymous\" or \"use-credentials\", given \"${value}\"`);\n        return;\n      }\n      this.techCall_('setCrossOrigin', value);\n      if (this.posterImage) {\n        this.posterImage.crossOrigin(value);\n      }\n      return;\n    }\n\n    /**\n     * A getter/setter for the `Player`'s width. Returns the player's configured value.\n     * To get the current width use `currentWidth()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s width to.\n     *\n     * @return {number}\n     *         The current width of the `Player` when getting.\n     */\n    width(value) {\n      return this.dimension('width', value);\n    }\n\n    /**\n     * A getter/setter for the `Player`'s height. Returns the player's configured value.\n     * To get the current height use `currentheight()`.\n     *\n     * @param {number} [value]\n     *        The value to set the `Player`'s heigth to.\n     *\n     * @return {number}\n     *         The current height of the `Player` when getting.\n     */\n    height(value) {\n      return this.dimension('height', value);\n    }\n\n    /**\n     * A getter/setter for the `Player`'s width & height.\n     *\n     * @param {string} dimension\n     *        This string can be:\n     *        - 'width'\n     *        - 'height'\n     *\n     * @param {number} [value]\n     *        Value for dimension specified in the first argument.\n     *\n     * @return {number}\n     *         The dimension arguments value when getting (width/height).\n     */\n    dimension(dimension, value) {\n      const privDimension = dimension + '_';\n      if (value === undefined) {\n        return this[privDimension] || 0;\n      }\n      if (value === '' || value === 'auto') {\n        // If an empty string is given, reset the dimension to be automatic\n        this[privDimension] = undefined;\n        this.updateStyleEl_();\n        return;\n      }\n      const parsedVal = parseFloat(value);\n      if (isNaN(parsedVal)) {\n        log$1.error(`Improper value \"${value}\" supplied for for ${dimension}`);\n        return;\n      }\n      this[privDimension] = parsedVal;\n      this.updateStyleEl_();\n    }\n\n    /**\n     * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n     *\n     * Turning this on will turn off fill mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    fluid(bool) {\n      if (bool === undefined) {\n        return !!this.fluid_;\n      }\n      this.fluid_ = !!bool;\n      if (isEvented(this)) {\n        this.off(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n      }\n      if (bool) {\n        this.addClass('vjs-fluid');\n        this.fill(false);\n        addEventedCallback(this, () => {\n          this.on(['playerreset', 'resize'], this.boundUpdateStyleEl_);\n        });\n      } else {\n        this.removeClass('vjs-fluid');\n      }\n      this.updateStyleEl_();\n    }\n\n    /**\n     * A getter/setter/toggler for the vjs-fill `className` on the `Player`.\n     *\n     * Turning this on will turn off fluid mode.\n     *\n     * @param {boolean} [bool]\n     *        - A value of true adds the class.\n     *        - A value of false removes the class.\n     *        - No value will be a getter.\n     *\n     * @return {boolean|undefined}\n     *         - The value of fluid when getting.\n     *         - `undefined` when setting.\n     */\n    fill(bool) {\n      if (bool === undefined) {\n        return !!this.fill_;\n      }\n      this.fill_ = !!bool;\n      if (bool) {\n        this.addClass('vjs-fill');\n        this.fluid(false);\n      } else {\n        this.removeClass('vjs-fill');\n      }\n    }\n\n    /**\n     * Get/Set the aspect ratio\n     *\n     * @param {string} [ratio]\n     *        Aspect ratio for player\n     *\n     * @return {string|undefined}\n     *         returns the current aspect ratio when getting\n     */\n\n    /**\n     * A getter/setter for the `Player`'s aspect ratio.\n     *\n     * @param {string} [ratio]\n     *        The value to set the `Player`'s aspect ratio to.\n     *\n     * @return {string|undefined}\n     *         - The current aspect ratio of the `Player` when getting.\n     *         - undefined when setting\n     */\n    aspectRatio(ratio) {\n      if (ratio === undefined) {\n        return this.aspectRatio_;\n      }\n\n      // Check for width:height format\n      if (!/^\\d+\\:\\d+$/.test(ratio)) {\n        throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n      }\n      this.aspectRatio_ = ratio;\n\n      // We're assuming if you set an aspect ratio you want fluid mode,\n      // because in fixed mode you could calculate width and height yourself.\n      this.fluid(true);\n      this.updateStyleEl_();\n    }\n\n    /**\n     * Update styles of the `Player` element (height, width and aspect ratio).\n     *\n     * @private\n     * @listens Tech#loadedmetadata\n     */\n    updateStyleEl_() {\n      if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n        const width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n        const height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n        const techEl = this.tech_ && this.tech_.el();\n        if (techEl) {\n          if (width >= 0) {\n            techEl.width = width;\n          }\n          if (height >= 0) {\n            techEl.height = height;\n          }\n        }\n        return;\n      }\n      let width;\n      let height;\n      let aspectRatio;\n      let idClass;\n\n      // The aspect ratio is either used directly or to calculate width and height.\n      if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n        // Use any aspectRatio that's been specifically set\n        aspectRatio = this.aspectRatio_;\n      } else if (this.videoWidth() > 0) {\n        // Otherwise try to get the aspect ratio from the video metadata\n        aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n      } else {\n        // Or use a default. The video element's is 2:1, but 16:9 is more common.\n        aspectRatio = '16:9';\n      }\n\n      // Get the ratio as a decimal we can use to calculate dimensions\n      const ratioParts = aspectRatio.split(':');\n      const ratioMultiplier = ratioParts[1] / ratioParts[0];\n      if (this.width_ !== undefined) {\n        // Use any width that's been specifically set\n        width = this.width_;\n      } else if (this.height_ !== undefined) {\n        // Or calulate the width from the aspect ratio if a height has been set\n        width = this.height_ / ratioMultiplier;\n      } else {\n        // Or use the video's metadata, or use the video el's default of 300\n        width = this.videoWidth() || 300;\n      }\n      if (this.height_ !== undefined) {\n        // Use any height that's been specifically set\n        height = this.height_;\n      } else {\n        // Otherwise calculate the height from the ratio and the width\n        height = width * ratioMultiplier;\n      }\n\n      // Ensure the CSS class is valid by starting with an alpha character\n      if (/^[^a-zA-Z]/.test(this.id())) {\n        idClass = 'dimensions-' + this.id();\n      } else {\n        idClass = this.id() + '-dimensions';\n      }\n\n      // Ensure the right class is still on the player for the style element\n      this.addClass(idClass);\n      setTextContent(this.styleEl_, `\n      .${idClass} {\n        width: ${width}px;\n        height: ${height}px;\n      }\n\n      .${idClass}.vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: ${ratioMultiplier * 100}%;\n      }\n    `);\n    }\n\n    /**\n     * Load/Create an instance of playback {@link Tech} including element\n     * and API methods. Then append the `Tech` element in `Player` as a child.\n     *\n     * @param {string} techName\n     *        name of the playback technology\n     *\n     * @param {string} source\n     *        video source\n     *\n     * @private\n     */\n    loadTech_(techName, source) {\n      // Pause and remove current playback technology\n      if (this.tech_) {\n        this.unloadTech_();\n      }\n      const titleTechName = toTitleCase$1(techName);\n      const camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n      // get rid of the HTML5 video tag as soon as we are using another tech\n      if (titleTechName !== 'Html5' && this.tag) {\n        Tech.getTech('Html5').disposeMediaElement(this.tag);\n        this.tag.player = null;\n        this.tag = null;\n      }\n      this.techName_ = titleTechName;\n\n      // Turn off API access because we're loading a new tech that might load asynchronously\n      this.isReady_ = false;\n      let autoplay = this.autoplay();\n\n      // if autoplay is a string (or `true` with normalizeAutoplay: true) we pass false to the tech\n      // because the player is going to handle autoplay on `loadstart`\n      if (typeof this.autoplay() === 'string' || this.autoplay() === true && this.options_.normalizeAutoplay) {\n        autoplay = false;\n      }\n\n      // Grab tech-specific options from player options and add source and parent element to use.\n      const techOptions = {\n        source,\n        autoplay,\n        'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n        'playerId': this.id(),\n        'techId': `${this.id()}_${camelTechName}_api`,\n        'playsinline': this.options_.playsinline,\n        'preload': this.options_.preload,\n        'loop': this.options_.loop,\n        'disablePictureInPicture': this.options_.disablePictureInPicture,\n        'muted': this.options_.muted,\n        'poster': this.poster(),\n        'language': this.language(),\n        'playerElIngest': this.playerElIngest_ || false,\n        'vtt.js': this.options_['vtt.js'],\n        'canOverridePoster': !!this.options_.techCanOverridePoster,\n        'enableSourceset': this.options_.enableSourceset\n      };\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        techOptions[props.getterName] = this[props.privateName];\n      });\n      Object.assign(techOptions, this.options_[titleTechName]);\n      Object.assign(techOptions, this.options_[camelTechName]);\n      Object.assign(techOptions, this.options_[techName.toLowerCase()]);\n      if (this.tag) {\n        techOptions.tag = this.tag;\n      }\n      if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n        techOptions.startTime = this.cache_.currentTime;\n      }\n\n      // Initialize tech instance\n      const TechClass = Tech.getTech(techName);\n      if (!TechClass) {\n        throw new Error(`No Tech named '${titleTechName}' exists! '${titleTechName}' should be registered using videojs.registerTech()'`);\n      }\n      this.tech_ = new TechClass(techOptions);\n\n      // player.triggerReady is always async, so don't need this to be async\n      this.tech_.ready(bind_(this, this.handleTechReady_), true);\n      textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n      // Listen to all HTML5-defined events and trigger them on the player\n      TECH_EVENTS_RETRIGGER.forEach(event => {\n        this.on(this.tech_, event, e => this[`handleTech${toTitleCase$1(event)}_`](e));\n      });\n      Object.keys(TECH_EVENTS_QUEUE).forEach(event => {\n        this.on(this.tech_, event, eventObj => {\n          if (this.tech_.playbackRate() === 0 && this.tech_.seeking()) {\n            this.queuedCallbacks_.push({\n              callback: this[`handleTech${TECH_EVENTS_QUEUE[event]}_`].bind(this),\n              event: eventObj\n            });\n            return;\n          }\n          this[`handleTech${TECH_EVENTS_QUEUE[event]}_`](eventObj);\n        });\n      });\n      this.on(this.tech_, 'loadstart', e => this.handleTechLoadStart_(e));\n      this.on(this.tech_, 'sourceset', e => this.handleTechSourceset_(e));\n      this.on(this.tech_, 'waiting', e => this.handleTechWaiting_(e));\n      this.on(this.tech_, 'ended', e => this.handleTechEnded_(e));\n      this.on(this.tech_, 'seeking', e => this.handleTechSeeking_(e));\n      this.on(this.tech_, 'play', e => this.handleTechPlay_(e));\n      this.on(this.tech_, 'pause', e => this.handleTechPause_(e));\n      this.on(this.tech_, 'durationchange', e => this.handleTechDurationChange_(e));\n      this.on(this.tech_, 'fullscreenchange', (e, data) => this.handleTechFullscreenChange_(e, data));\n      this.on(this.tech_, 'fullscreenerror', (e, err) => this.handleTechFullscreenError_(e, err));\n      this.on(this.tech_, 'enterpictureinpicture', e => this.handleTechEnterPictureInPicture_(e));\n      this.on(this.tech_, 'leavepictureinpicture', e => this.handleTechLeavePictureInPicture_(e));\n      this.on(this.tech_, 'error', e => this.handleTechError_(e));\n      this.on(this.tech_, 'posterchange', e => this.handleTechPosterChange_(e));\n      this.on(this.tech_, 'textdata', e => this.handleTechTextData_(e));\n      this.on(this.tech_, 'ratechange', e => this.handleTechRateChange_(e));\n      this.on(this.tech_, 'loadedmetadata', this.boundUpdateStyleEl_);\n      this.usingNativeControls(this.techGet_('controls'));\n      if (this.controls() && !this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n\n      // Add the tech element in the DOM if it was not already there\n      // Make sure to not insert the original video element if using Html5\n      if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n        prependTo(this.tech_.el(), this.el());\n      }\n\n      // Get rid of the original video tag reference after the first tech is loaded\n      if (this.tag) {\n        this.tag.player = null;\n        this.tag = null;\n      }\n    }\n\n    /**\n     * Unload and dispose of the current playback {@link Tech}.\n     *\n     * @private\n     */\n    unloadTech_() {\n      // Save the current text tracks so that we can reuse the same text tracks with the next tech\n      ALL.names.forEach(name => {\n        const props = ALL[name];\n        this[props.privateName] = this[props.getterName]();\n      });\n      this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n      this.isReady_ = false;\n      this.tech_.dispose();\n      this.tech_ = false;\n      if (this.isPosterFromTech_) {\n        this.poster_ = '';\n        this.trigger('posterchange');\n      }\n      this.isPosterFromTech_ = false;\n    }\n\n    /**\n     * Return a reference to the current {@link Tech}.\n     * It will print a warning by default about the danger of using the tech directly\n     * but any argument that is passed in will silence the warning.\n     *\n     * @param {*} [safety]\n     *        Anything passed in to silence the warning\n     *\n     * @return {Tech}\n     *         The Tech\n     */\n    tech(safety) {\n      if (safety === undefined) {\n        log$1.warn('Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n' + 'See https://github.com/videojs/video.js/issues/2617 for more info.\\n');\n      }\n      return this.tech_;\n    }\n\n    /**\n     * Set up click and touch listeners for the playback element\n     *\n     * - On desktops: a click on the video itself will toggle playback\n     * - On mobile devices: a click on the video toggles controls\n     *   which is done by toggling the user state between active and\n     *   inactive\n     * - A tap can signal that a user has become active or has become inactive\n     *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n     *   quick tap should hide them again (signaling the user is in an inactive\n     *   viewing state)\n     * - In addition to this, we still want the user to be considered inactive after\n     *   a few seconds of inactivity.\n     *\n     * > Note: the only part of iOS interaction we can't mimic with this setup\n     * is a touch and hold on the video element counting as activity in order to\n     * keep the controls showing, but that shouldn't be an issue. A touch and hold\n     * on any controls will still keep the user active\n     *\n     * @private\n     */\n    addTechControlsListeners_() {\n      // Make sure to remove all the previous listeners in case we are called multiple times.\n      this.removeTechControlsListeners_();\n      this.on(this.tech_, 'click', this.boundHandleTechClick_);\n      this.on(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n\n      // If the controls were hidden we don't want that to change without a tap event\n      // so we'll check if the controls were already showing before reporting user\n      // activity\n      this.on(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.on(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.on(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n\n      // The tap listener needs to come after the touchend listener because the tap\n      // listener cancels out any reportedUserActivity when setting userActive(false)\n      this.on(this.tech_, 'tap', this.boundHandleTechTap_);\n    }\n\n    /**\n     * Remove the listeners used for click and tap controls. This is needed for\n     * toggling to controls disabled, where a tap/touch should do nothing.\n     *\n     * @private\n     */\n    removeTechControlsListeners_() {\n      // We don't want to just use `this.off()` because there might be other needed\n      // listeners added by techs that extend this.\n      this.off(this.tech_, 'tap', this.boundHandleTechTap_);\n      this.off(this.tech_, 'touchstart', this.boundHandleTechTouchStart_);\n      this.off(this.tech_, 'touchmove', this.boundHandleTechTouchMove_);\n      this.off(this.tech_, 'touchend', this.boundHandleTechTouchEnd_);\n      this.off(this.tech_, 'click', this.boundHandleTechClick_);\n      this.off(this.tech_, 'dblclick', this.boundHandleTechDoubleClick_);\n    }\n\n    /**\n     * Player waits for the tech to be ready\n     *\n     * @private\n     */\n    handleTechReady_() {\n      this.triggerReady();\n\n      // Keep the same volume as before\n      if (this.cache_.volume) {\n        this.techCall_('setVolume', this.cache_.volume);\n      }\n\n      // Look if the tech found a higher resolution poster while loading\n      this.handleTechPosterChange_();\n\n      // Update the duration if available\n      this.handleTechDurationChange_();\n    }\n\n    /**\n     * Retrigger the `loadstart` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#loadstart\n     * @listens Tech#loadstart\n     * @private\n     */\n    handleTechLoadStart_() {\n      // TODO: Update to use `emptied` event instead. See #1277.\n\n      this.removeClass('vjs-ended', 'vjs-seeking');\n\n      // reset the error state\n      this.error(null);\n\n      // Update the duration\n      this.handleTechDurationChange_();\n      if (!this.paused()) {\n        /**\n         * Fired when the user agent begins looking for media data\n         *\n         * @event Player#loadstart\n         * @type {EventTarget~Event}\n         */\n        this.trigger('loadstart');\n      } else {\n        // reset the hasStarted state\n        this.hasStarted(false);\n        this.trigger('loadstart');\n      }\n\n      // autoplay happens after loadstart for the browser,\n      // so we mimic that behavior\n      this.manualAutoplay_(this.autoplay() === true && this.options_.normalizeAutoplay ? 'play' : this.autoplay());\n    }\n\n    /**\n     * Handle autoplay string values, rather than the typical boolean\n     * values that should be handled by the tech. Note that this is not\n     * part of any specification. Valid values and what they do can be\n     * found on the autoplay getter at Player#autoplay()\n     */\n    manualAutoplay_(type) {\n      if (!this.tech_ || typeof type !== 'string') {\n        return;\n      }\n\n      // Save original muted() value, set muted to true, and attempt to play().\n      // On promise rejection, restore muted from saved value\n      const resolveMuted = () => {\n        const previouslyMuted = this.muted();\n        this.muted(true);\n        const restoreMuted = () => {\n          this.muted(previouslyMuted);\n        };\n\n        // restore muted on play terminatation\n        this.playTerminatedQueue_.push(restoreMuted);\n        const mutedPromise = this.play();\n        if (!isPromise(mutedPromise)) {\n          return;\n        }\n        return mutedPromise.catch(err => {\n          restoreMuted();\n          throw new Error(`Rejection at manualAutoplay. Restoring muted value. ${err ? err : ''}`);\n        });\n      };\n      let promise;\n\n      // if muted defaults to true\n      // the only thing we can do is call play\n      if (type === 'any' && !this.muted()) {\n        promise = this.play();\n        if (isPromise(promise)) {\n          promise = promise.catch(resolveMuted);\n        }\n      } else if (type === 'muted' && !this.muted()) {\n        promise = resolveMuted();\n      } else {\n        promise = this.play();\n      }\n      if (!isPromise(promise)) {\n        return;\n      }\n      return promise.then(() => {\n        this.trigger({\n          type: 'autoplay-success',\n          autoplay: type\n        });\n      }).catch(() => {\n        this.trigger({\n          type: 'autoplay-failure',\n          autoplay: type\n        });\n      });\n    }\n\n    /**\n     * Update the internal source caches so that we return the correct source from\n     * `src()`, `currentSource()`, and `currentSources()`.\n     *\n     * > Note: `currentSources` will not be updated if the source that is passed in exists\n     *         in the current `currentSources` cache.\n     *\n     *\n     * @param {Tech~SourceObject} srcObj\n     *        A string or object source to update our caches to.\n     */\n    updateSourceCaches_(srcObj = '') {\n      let src = srcObj;\n      let type = '';\n      if (typeof src !== 'string') {\n        src = srcObj.src;\n        type = srcObj.type;\n      }\n\n      // make sure all the caches are set to default values\n      // to prevent null checking\n      this.cache_.source = this.cache_.source || {};\n      this.cache_.sources = this.cache_.sources || [];\n\n      // try to get the type of the src that was passed in\n      if (src && !type) {\n        type = findMimetype(this, src);\n      }\n\n      // update `currentSource` cache always\n      this.cache_.source = merge$2({}, srcObj, {\n        src,\n        type\n      });\n      const matchingSources = this.cache_.sources.filter(s => s.src && s.src === src);\n      const sourceElSources = [];\n      const sourceEls = this.$$('source');\n      const matchingSourceEls = [];\n      for (let i = 0; i < sourceEls.length; i++) {\n        const sourceObj = getAttributes(sourceEls[i]);\n        sourceElSources.push(sourceObj);\n        if (sourceObj.src && sourceObj.src === src) {\n          matchingSourceEls.push(sourceObj.src);\n        }\n      }\n\n      // if we have matching source els but not matching sources\n      // the current source cache is not up to date\n      if (matchingSourceEls.length && !matchingSources.length) {\n        this.cache_.sources = sourceElSources;\n        // if we don't have matching source or source els set the\n        // sources cache to the `currentSource` cache\n      } else if (!matchingSources.length) {\n        this.cache_.sources = [this.cache_.source];\n      }\n\n      // update the tech `src` cache\n      this.cache_.src = src;\n    }\n\n    /**\n     * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n     * causing the media element to reload.\n     *\n     * It will fire for the initial source and each subsequent source.\n     * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n     *\n     * The event object for this event contains a `src` property that will contain the source\n     * that was available when the event was triggered. This is generally only necessary if Video.js\n     * is switching techs while the source was being changed.\n     *\n     * It is also fired when `load` is called on the player (or media element)\n     * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n     * says that the resource selection algorithm needs to be aborted and restarted.\n     * In this case, it is very likely that the `src` property will be set to the\n     * empty string `\"\"` to indicate we do not know what the source will be but\n     * that it is changing.\n     *\n     * *This event is currently still experimental and may change in minor releases.*\n     * __To use this, pass `enableSourceset` option to the player.__\n     *\n     * @event Player#sourceset\n     * @type {EventTarget~Event}\n     * @prop {string} src\n     *                The source url available when the `sourceset` was triggered.\n     *                It will be an empty string if we cannot know what the source is\n     *                but know that the source will change.\n     */\n    /**\n     * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#sourceset\n     * @listens Tech#sourceset\n     * @private\n     */\n    handleTechSourceset_(event) {\n      // only update the source cache when the source\n      // was not updated using the player api\n      if (!this.changingSrc_) {\n        let updateSourceCaches = src => this.updateSourceCaches_(src);\n        const playerSrc = this.currentSource().src;\n        const eventSrc = event.src;\n\n        // if we have a playerSrc that is not a blob, and a tech src that is a blob\n        if (playerSrc && !/^blob:/.test(playerSrc) && /^blob:/.test(eventSrc)) {\n          // if both the tech source and the player source were updated we assume\n          // something like @videojs/http-streaming did the sourceset and skip updating the source cache.\n          if (!this.lastSource_ || this.lastSource_.tech !== eventSrc && this.lastSource_.player !== playerSrc) {\n            updateSourceCaches = () => {};\n          }\n        }\n\n        // update the source to the initial source right away\n        // in some cases this will be empty string\n        updateSourceCaches(eventSrc);\n\n        // if the `sourceset` `src` was an empty string\n        // wait for a `loadstart` to update the cache to `currentSrc`.\n        // If a sourceset happens before a `loadstart`, we reset the state\n        if (!event.src) {\n          this.tech_.any(['sourceset', 'loadstart'], e => {\n            // if a sourceset happens before a `loadstart` there\n            // is nothing to do as this `handleTechSourceset_`\n            // will be called again and this will be handled there.\n            if (e.type === 'sourceset') {\n              return;\n            }\n            const techSrc = this.techGet('currentSrc');\n            this.lastSource_.tech = techSrc;\n            this.updateSourceCaches_(techSrc);\n          });\n        }\n      }\n      this.lastSource_ = {\n        player: this.currentSource().src,\n        tech: event.src\n      };\n      this.trigger({\n        src: event.src,\n        type: 'sourceset'\n      });\n    }\n\n    /**\n     * Add/remove the vjs-has-started class\n     *\n     *\n     * @param {boolean} request\n     *        - true: adds the class\n     *        - false: remove the class\n     *\n     * @return {boolean}\n     *         the boolean value of hasStarted_\n     */\n    hasStarted(request) {\n      if (request === undefined) {\n        // act as getter, if we have no request to change\n        return this.hasStarted_;\n      }\n      if (request === this.hasStarted_) {\n        return;\n      }\n      this.hasStarted_ = request;\n      if (this.hasStarted_) {\n        this.addClass('vjs-has-started');\n      } else {\n        this.removeClass('vjs-has-started');\n      }\n    }\n\n    /**\n     * Fired whenever the media begins or resumes playback\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n     * @fires Player#play\n     * @listens Tech#play\n     * @private\n     */\n    handleTechPlay_() {\n      this.removeClass('vjs-ended', 'vjs-paused');\n      this.addClass('vjs-playing');\n\n      // hide the poster when the user hits play\n      this.hasStarted(true);\n      /**\n       * Triggered whenever an {@link Tech#play} event happens. Indicates that\n       * playback has started or resumed.\n       *\n       * @event Player#play\n       * @type {EventTarget~Event}\n       */\n      this.trigger('play');\n    }\n\n    /**\n     * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n     *\n     * If there were any events queued while the playback rate was zero, fire\n     * those events now.\n     *\n     * @private\n     * @method Player#handleTechRateChange_\n     * @fires Player#ratechange\n     * @listens Tech#ratechange\n     */\n    handleTechRateChange_() {\n      if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n        this.queuedCallbacks_.forEach(queued => queued.callback(queued.event));\n        this.queuedCallbacks_ = [];\n      }\n      this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n      /**\n       * Fires when the playing speed of the audio/video is changed\n       *\n       * @event Player#ratechange\n       * @type {event}\n       */\n      this.trigger('ratechange');\n    }\n\n    /**\n     * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#waiting\n     * @listens Tech#waiting\n     * @private\n     */\n    handleTechWaiting_() {\n      this.addClass('vjs-waiting');\n      /**\n       * A readyState change on the DOM element has caused playback to stop.\n       *\n       * @event Player#waiting\n       * @type {EventTarget~Event}\n       */\n      this.trigger('waiting');\n\n      // Browsers may emit a timeupdate event after a waiting event. In order to prevent\n      // premature removal of the waiting class, wait for the time to change.\n      const timeWhenWaiting = this.currentTime();\n      const timeUpdateListener = () => {\n        if (timeWhenWaiting !== this.currentTime()) {\n          this.removeClass('vjs-waiting');\n          this.off('timeupdate', timeUpdateListener);\n        }\n      };\n      this.on('timeupdate', timeUpdateListener);\n    }\n\n    /**\n     * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n     * > Note: This is not consistent between browsers. See #1351\n     *\n     * @fires Player#canplay\n     * @listens Tech#canplay\n     * @private\n     */\n    handleTechCanPlay_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_FUTURE_DATA or greater.\n       *\n       * @event Player#canplay\n       * @type {EventTarget~Event}\n       */\n      this.trigger('canplay');\n    }\n\n    /**\n     * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#canplaythrough\n     * @listens Tech#canplaythrough\n     * @private\n     */\n    handleTechCanPlayThrough_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n       * entire media file can be played without buffering.\n       *\n       * @event Player#canplaythrough\n       * @type {EventTarget~Event}\n       */\n      this.trigger('canplaythrough');\n    }\n\n    /**\n     * Retrigger the `playing` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#playing\n     * @listens Tech#playing\n     * @private\n     */\n    handleTechPlaying_() {\n      this.removeClass('vjs-waiting');\n      /**\n       * The media is no longer blocked from playback, and has started playing.\n       *\n       * @event Player#playing\n       * @type {EventTarget~Event}\n       */\n      this.trigger('playing');\n    }\n\n    /**\n     * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeking\n     * @listens Tech#seeking\n     * @private\n     */\n    handleTechSeeking_() {\n      this.addClass('vjs-seeking');\n      /**\n       * Fired whenever the player is jumping to a new time\n       *\n       * @event Player#seeking\n       * @type {EventTarget~Event}\n       */\n      this.trigger('seeking');\n    }\n\n    /**\n     * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#seeked\n     * @listens Tech#seeked\n     * @private\n     */\n    handleTechSeeked_() {\n      this.removeClass('vjs-seeking', 'vjs-ended');\n      /**\n       * Fired when the player has finished jumping to a new time\n       *\n       * @event Player#seeked\n       * @type {EventTarget~Event}\n       */\n      this.trigger('seeked');\n    }\n\n    /**\n     * Retrigger the `pause` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#pause\n     * @listens Tech#pause\n     * @private\n     */\n    handleTechPause_() {\n      this.removeClass('vjs-playing');\n      this.addClass('vjs-paused');\n      /**\n       * Fired whenever the media has been paused\n       *\n       * @event Player#pause\n       * @type {EventTarget~Event}\n       */\n      this.trigger('pause');\n    }\n\n    /**\n     * Retrigger the `ended` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#ended\n     * @listens Tech#ended\n     * @private\n     */\n    handleTechEnded_() {\n      this.addClass('vjs-ended');\n      this.removeClass('vjs-waiting');\n      if (this.options_.loop) {\n        this.currentTime(0);\n        this.play();\n      } else if (!this.paused()) {\n        this.pause();\n      }\n\n      /**\n       * Fired when the end of the media resource is reached (currentTime == duration)\n       *\n       * @event Player#ended\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ended');\n    }\n\n    /**\n     * Fired when the duration of the media resource is first known or changed\n     *\n     * @listens Tech#durationchange\n     * @private\n     */\n    handleTechDurationChange_() {\n      this.duration(this.techGet_('duration'));\n    }\n\n    /**\n     * Handle a click on the media element to play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#click\n     * @private\n     */\n    handleTechClick_(event) {\n      // When controls are disabled a click should not toggle playback because\n      // the click is considered a control\n      if (!this.controls_) {\n        return;\n      }\n      if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.click === undefined || this.options_.userActions.click !== false) {\n        if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.click === 'function') {\n          this.options_.userActions.click.call(this, event);\n        } else if (this.paused()) {\n          silencePromise(this.play());\n        } else {\n          this.pause();\n        }\n      }\n    }\n\n    /**\n     * Handle a double-click on the media element to enter/exit fullscreen\n     *\n     * @param {EventTarget~Event} event\n     *        the event that caused this function to trigger\n     *\n     * @listens Tech#dblclick\n     * @private\n     */\n    handleTechDoubleClick_(event) {\n      if (!this.controls_) {\n        return;\n      }\n\n      // we do not want to toggle fullscreen state\n      // when double-clicking inside a control bar or a modal\n      const inAllowedEls = Array.prototype.some.call(this.$$('.vjs-control-bar, .vjs-modal-dialog'), el => el.contains(event.target));\n      if (!inAllowedEls) {\n        /*\n         * options.userActions.doubleClick\n         *\n         * If `undefined` or `true`, double-click toggles fullscreen if controls are present\n         * Set to `false` to disable double-click handling\n         * Set to a function to substitute an external double-click handler\n         */\n        if (this.options_ === undefined || this.options_.userActions === undefined || this.options_.userActions.doubleClick === undefined || this.options_.userActions.doubleClick !== false) {\n          if (this.options_ !== undefined && this.options_.userActions !== undefined && typeof this.options_.userActions.doubleClick === 'function') {\n            this.options_.userActions.doubleClick.call(this, event);\n          } else if (this.isFullscreen()) {\n            this.exitFullscreen();\n          } else {\n            this.requestFullscreen();\n          }\n        }\n      }\n    }\n\n    /**\n     * Handle a tap on the media element. It will toggle the user\n     * activity state, which hides and shows the controls.\n     *\n     * @listens Tech#tap\n     * @private\n     */\n    handleTechTap_() {\n      this.userActive(!this.userActive());\n    }\n\n    /**\n     * Handle touch to start\n     *\n     * @listens Tech#touchstart\n     * @private\n     */\n    handleTechTouchStart_() {\n      this.userWasActive = this.userActive();\n    }\n\n    /**\n     * Handle touch to move\n     *\n     * @listens Tech#touchmove\n     * @private\n     */\n    handleTechTouchMove_() {\n      if (this.userWasActive) {\n        this.reportUserActivity();\n      }\n    }\n\n    /**\n     * Handle touch to end\n     *\n     * @param {EventTarget~Event} event\n     *        the touchend event that triggered\n     *        this function\n     *\n     * @listens Tech#touchend\n     * @private\n     */\n    handleTechTouchEnd_(event) {\n      // Stop the mouse events from also happening\n      if (event.cancelable) {\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * @private\n     */\n    toggleFullscreenClass_() {\n      if (this.isFullscreen()) {\n        this.addClass('vjs-fullscreen');\n      } else {\n        this.removeClass('vjs-fullscreen');\n      }\n    }\n\n    /**\n     * when the document fschange event triggers it calls this\n     */\n    documentFullscreenChange_(e) {\n      const targetPlayer = e.target.player;\n\n      // if another player was fullscreen\n      // do a null check for targetPlayer because older firefox's would put document as e.target\n      if (targetPlayer && targetPlayer !== this) {\n        return;\n      }\n      const el = this.el();\n      let isFs = document[this.fsApi_.fullscreenElement] === el;\n      if (!isFs && el.matches) {\n        isFs = el.matches(':' + this.fsApi_.fullscreen);\n      } else if (!isFs && el.msMatchesSelector) {\n        isFs = el.msMatchesSelector(':' + this.fsApi_.fullscreen);\n      }\n      this.isFullscreen(isFs);\n    }\n\n    /**\n     * Handle Tech Fullscreen Change\n     *\n     * @param {EventTarget~Event} event\n     *        the fullscreenchange event that triggered this function\n     *\n     * @param {Object} data\n     *        the data that was sent with the event\n     *\n     * @private\n     * @listens Tech#fullscreenchange\n     * @fires Player#fullscreenchange\n     */\n    handleTechFullscreenChange_(event, data) {\n      if (data) {\n        if (data.nativeIOSFullscreen) {\n          this.addClass('vjs-ios-native-fs');\n          this.tech_.one('webkitendfullscreen', () => {\n            this.removeClass('vjs-ios-native-fs');\n          });\n        }\n        this.isFullscreen(data.isFullscreen);\n      }\n    }\n    handleTechFullscreenError_(event, err) {\n      this.trigger('fullscreenerror', err);\n    }\n\n    /**\n     * @private\n     */\n    togglePictureInPictureClass_() {\n      if (this.isInPictureInPicture()) {\n        this.addClass('vjs-picture-in-picture');\n      } else {\n        this.removeClass('vjs-picture-in-picture');\n      }\n    }\n\n    /**\n     * Handle Tech Enter Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the enterpictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#enterpictureinpicture\n     */\n    handleTechEnterPictureInPicture_(event) {\n      this.isInPictureInPicture(true);\n    }\n\n    /**\n     * Handle Tech Leave Picture-in-Picture.\n     *\n     * @param {EventTarget~Event} event\n     *        the leavepictureinpicture event that triggered this function\n     *\n     * @private\n     * @listens Tech#leavepictureinpicture\n     */\n    handleTechLeavePictureInPicture_(event) {\n      this.isInPictureInPicture(false);\n    }\n\n    /**\n     * Fires when an error occurred during the loading of an audio/video.\n     *\n     * @private\n     * @listens Tech#error\n     */\n    handleTechError_() {\n      const error = this.tech_.error();\n      this.error(error);\n    }\n\n    /**\n     * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n     *\n     * @fires Player#textdata\n     * @listens Tech#textdata\n     * @private\n     */\n    handleTechTextData_() {\n      let data = null;\n      if (arguments.length > 1) {\n        data = arguments[1];\n      }\n\n      /**\n       * Fires when we get a textdata event from tech\n       *\n       * @event Player#textdata\n       * @type {EventTarget~Event}\n       */\n      this.trigger('textdata', data);\n    }\n\n    /**\n     * Get object for cached values.\n     *\n     * @return {Object}\n     *         get the current object cache\n     */\n    getCache() {\n      return this.cache_;\n    }\n\n    /**\n     * Resets the internal cache object.\n     *\n     * Using this function outside the player constructor or reset method may\n     * have unintended side-effects.\n     *\n     * @private\n     */\n    resetCache_() {\n      this.cache_ = {\n        // Right now, the currentTime is not _really_ cached because it is always\n        // retrieved from the tech (see: currentTime). However, for completeness,\n        // we set it to zero here to ensure that if we do start actually caching\n        // it, we reset it along with everything else.\n        currentTime: 0,\n        initTime: 0,\n        inactivityTimeout: this.options_.inactivityTimeout,\n        duration: NaN,\n        lastVolume: 1,\n        lastPlaybackRate: this.defaultPlaybackRate(),\n        media: null,\n        src: '',\n        source: {},\n        sources: [],\n        playbackRates: [],\n        volume: 1\n      };\n    }\n\n    /**\n     * Pass values to the playback tech\n     *\n     * @param {string} [method]\n     *        the method to call\n     *\n     * @param {Object} arg\n     *        the argument to pass\n     *\n     * @private\n     */\n    techCall_(method, arg) {\n      // If it's not ready yet, call method when it is\n\n      this.ready(function () {\n        if (method in allowedSetters) {\n          return set(this.middleware_, this.tech_, method, arg);\n        } else if (method in allowedMediators) {\n          return mediate(this.middleware_, this.tech_, method, arg);\n        }\n        try {\n          if (this.tech_) {\n            this.tech_[method](arg);\n          }\n        } catch (e) {\n          log$1(e);\n          throw e;\n        }\n      }, true);\n    }\n\n    /**\n     * Mediate attempt to call playback tech method\n     * and return the value of the method called.\n     *\n     * @param {string} method\n     *        Tech method\n     *\n     * @return {*}\n     *         Value returned by the tech method called, undefined if tech\n     *         is not ready or tech method is not present\n     *\n     * @private\n     */\n    techGet_(method) {\n      if (!this.tech_ || !this.tech_.isReady_) {\n        return;\n      }\n      if (method in allowedGetters) {\n        return get(this.middleware_, this.tech_, method);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method);\n      }\n\n      // Log error when playback tech object is present but method\n      // is undefined or unavailable\n      try {\n        return this.tech_[method]();\n      } catch (e) {\n        // When building additional tech libs, an expected method may not be defined yet\n        if (this.tech_[method] === undefined) {\n          log$1(`Video.js: ${method} method not defined for ${this.techName_} playback technology.`, e);\n          throw e;\n        }\n\n        // When a method isn't available on the object it throws a TypeError\n        if (e.name === 'TypeError') {\n          log$1(`Video.js: ${method} unavailable on ${this.techName_} playback technology element.`, e);\n          this.tech_.isReady_ = false;\n          throw e;\n        }\n\n        // If error unknown, just log and throw\n        log$1(e);\n        throw e;\n      }\n    }\n\n    /**\n     * Attempt to begin playback at the first opportunity.\n     *\n     * @return {Promise|undefined}\n     *         Returns a promise if the browser supports Promises (or one\n     *         was passed in as an option). This promise will be resolved on\n     *         the return value of play. If this is undefined it will fulfill the\n     *         promise chain otherwise the promise chain will be fulfilled when\n     *         the promise from play is fulfilled.\n     */\n    play() {\n      return new Promise(resolve => {\n        this.play_(resolve);\n      });\n    }\n\n    /**\n     * The actual logic for play, takes a callback that will be resolved on the\n     * return value of play. This allows us to resolve to the play promise if there\n     * is one on modern browsers.\n     *\n     * @private\n     * @param {Function} [callback]\n     *        The callback that should be called when the techs play is actually called\n     */\n    play_(callback = silencePromise) {\n      this.playCallbacks_.push(callback);\n      const isSrcReady = Boolean(!this.changingSrc_ && (this.src() || this.currentSrc()));\n\n      // treat calls to play_ somewhat like the `one` event function\n      if (this.waitToPlay_) {\n        this.off(['ready', 'loadstart'], this.waitToPlay_);\n        this.waitToPlay_ = null;\n      }\n\n      // if the player/tech is not ready or the src itself is not ready\n      // queue up a call to play on `ready` or `loadstart`\n      if (!this.isReady_ || !isSrcReady) {\n        this.waitToPlay_ = e => {\n          this.play_();\n        };\n        this.one(['ready', 'loadstart'], this.waitToPlay_);\n\n        // if we are in Safari, there is a high chance that loadstart will trigger after the gesture timeperiod\n        // in that case, we need to prime the video element by calling load so it'll be ready in time\n        if (!isSrcReady && (IS_ANY_SAFARI || IS_IOS)) {\n          this.load();\n        }\n        return;\n      }\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n      const val = this.techGet_('play');\n\n      // play was terminated if the returned value is null\n      if (val === null) {\n        this.runPlayTerminatedQueue_();\n      } else {\n        this.runPlayCallbacks_(val);\n      }\n    }\n\n    /**\n     * These functions will be run when if play is terminated. If play\n     * runPlayCallbacks_ is run these function will not be run. This allows us\n     * to differenciate between a terminated play and an actual call to play.\n     */\n    runPlayTerminatedQueue_() {\n      const queue = this.playTerminatedQueue_.slice(0);\n      this.playTerminatedQueue_ = [];\n      queue.forEach(function (q) {\n        q();\n      });\n    }\n\n    /**\n     * When a callback to play is delayed we have to run these\n     * callbacks when play is actually called on the tech. This function\n     * runs the callbacks that were delayed and accepts the return value\n     * from the tech.\n     *\n     * @param {undefined|Promise} val\n     *        The return value from the tech.\n     */\n    runPlayCallbacks_(val) {\n      const callbacks = this.playCallbacks_.slice(0);\n      this.playCallbacks_ = [];\n      // clear play terminatedQueue since we finished a real play\n      this.playTerminatedQueue_ = [];\n      callbacks.forEach(function (cb) {\n        cb(val);\n      });\n    }\n\n    /**\n     * Pause the video playback\n     *\n     * @return {Player}\n     *         A reference to the player object this function was called on\n     */\n    pause() {\n      this.techCall_('pause');\n    }\n\n    /**\n     * Check if the player is paused or has yet to play\n     *\n     * @return {boolean}\n     *         - false: if the media is currently playing\n     *         - true: if media is not currently playing\n     */\n    paused() {\n      // The initial state of paused should be true (in Safari it's actually false)\n      return this.techGet_('paused') === false ? false : true;\n    }\n\n    /**\n     * Get a TimeRange object representing the current ranges of time that the user\n     * has played.\n     *\n     * @return {TimeRange}\n     *         A time range object that represents all the increments of time that have\n     *         been played.\n     */\n    played() {\n      return this.techGet_('played') || createTimeRanges$1(0, 0);\n    }\n\n    /**\n     * Returns whether or not the user is \"scrubbing\". Scrubbing is\n     * when the user has clicked the progress bar handle and is\n     * dragging it along the progress bar.\n     *\n     * @param {boolean} [isScrubbing]\n     *        whether the user is or is not scrubbing\n     *\n     * @return {boolean}\n     *         The value of scrubbing when getting\n     */\n    scrubbing(isScrubbing) {\n      if (typeof isScrubbing === 'undefined') {\n        return this.scrubbing_;\n      }\n      this.scrubbing_ = !!isScrubbing;\n      this.techCall_('setScrubbing', this.scrubbing_);\n      if (isScrubbing) {\n        this.addClass('vjs-scrubbing');\n      } else {\n        this.removeClass('vjs-scrubbing');\n      }\n    }\n\n    /**\n     * Get or set the current time (in seconds)\n     *\n     * @param {number|string} [seconds]\n     *        The time to seek to in seconds\n     *\n     * @return {number}\n     *         - the current time in seconds when getting\n     */\n    currentTime(seconds) {\n      if (typeof seconds !== 'undefined') {\n        if (seconds < 0) {\n          seconds = 0;\n        }\n        if (!this.isReady_ || this.changingSrc_ || !this.tech_ || !this.tech_.isReady_) {\n          this.cache_.initTime = seconds;\n          this.off('canplay', this.boundApplyInitTime_);\n          this.one('canplay', this.boundApplyInitTime_);\n          return;\n        }\n        this.techCall_('setCurrentTime', seconds);\n        this.cache_.initTime = 0;\n        return;\n      }\n\n      // cache last currentTime and return. default to 0 seconds\n      //\n      // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n      // currentTime when scrubbing, but may not provide much performance benefit afterall.\n      // Should be tested. Also something has to read the actual current time or the cache will\n      // never get updated.\n      this.cache_.currentTime = this.techGet_('currentTime') || 0;\n      return this.cache_.currentTime;\n    }\n\n    /**\n     * Apply the value of initTime stored in cache as currentTime.\n     *\n     * @private\n     */\n    applyInitTime_() {\n      this.currentTime(this.cache_.initTime);\n    }\n\n    /**\n     * Normally gets the length in time of the video in seconds;\n     * in all but the rarest use cases an argument will NOT be passed to the method\n     *\n     * > **NOTE**: The video must have started loading before the duration can be\n     * known, and depending on preload behaviour may not be known until the video starts\n     * playing.\n     *\n     * @fires Player#durationchange\n     *\n     * @param {number} [seconds]\n     *        The duration of the video to set in seconds\n     *\n     * @return {number}\n     *         - The duration of the video in seconds when getting\n     */\n    duration(seconds) {\n      if (seconds === undefined) {\n        // return NaN if the duration is not known\n        return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n      }\n      seconds = parseFloat(seconds);\n\n      // Standardize on Infinity for signaling video is live\n      if (seconds < 0) {\n        seconds = Infinity;\n      }\n      if (seconds !== this.cache_.duration) {\n        // Cache the last set value for optimized scrubbing\n        this.cache_.duration = seconds;\n        if (seconds === Infinity) {\n          this.addClass('vjs-live');\n        } else {\n          this.removeClass('vjs-live');\n        }\n        if (!isNaN(seconds)) {\n          // Do not fire durationchange unless the duration value is known.\n          // @see [Spec]{@link https://www.w3.org/TR/2011/WD-html5-20110113/video.html#media-element-load-algorithm}\n\n          /**\n           * @event Player#durationchange\n           * @type {EventTarget~Event}\n           */\n          this.trigger('durationchange');\n        }\n      }\n    }\n\n    /**\n     * Calculates how much time is left in the video. Not part\n     * of the native video API.\n     *\n     * @return {number}\n     *         The time remaining in seconds\n     */\n    remainingTime() {\n      return this.duration() - this.currentTime();\n    }\n\n    /**\n     * A remaining time function that is intented to be used when\n     * the time is to be displayed directly to the user.\n     *\n     * @return {number}\n     *         The rounded time remaining in seconds\n     */\n    remainingTimeDisplay() {\n      return Math.floor(this.duration()) - Math.floor(this.currentTime());\n    }\n\n    //\n    // Kind of like an array of portions of the video that have been downloaded.\n\n    /**\n     * Get a TimeRange object with an array of the times of the video\n     * that have been downloaded. If you just want the percent of the\n     * video that's been downloaded, use bufferedPercent.\n     *\n     * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n     *\n     * @return {TimeRange}\n     *         A mock TimeRange object (following HTML spec)\n     */\n    buffered() {\n      let buffered = this.techGet_('buffered');\n      if (!buffered || !buffered.length) {\n        buffered = createTimeRanges$1(0, 0);\n      }\n      return buffered;\n    }\n\n    /**\n     * Get the percent (as a decimal) of the video that's been downloaded.\n     * This method is not a part of the native HTML video API.\n     *\n     * @return {number}\n     *         A decimal between 0 and 1 representing the percent\n     *         that is buffered 0 being 0% and 1 being 100%\n     */\n    bufferedPercent() {\n      return bufferedPercent(this.buffered(), this.duration());\n    }\n\n    /**\n     * Get the ending time of the last buffered time range\n     * This is used in the progress bar to encapsulate all time ranges.\n     *\n     * @return {number}\n     *         The end of the last buffered time range\n     */\n    bufferedEnd() {\n      const buffered = this.buffered();\n      const duration = this.duration();\n      let end = buffered.end(buffered.length - 1);\n      if (end > duration) {\n        end = duration;\n      }\n      return end;\n    }\n\n    /**\n     * Get or set the current volume of the media\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         The current volume as a percent when getting\n     */\n    volume(percentAsDecimal) {\n      let vol;\n      if (percentAsDecimal !== undefined) {\n        // Force value to between 0 and 1\n        vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n        this.cache_.volume = vol;\n        this.techCall_('setVolume', vol);\n        if (vol > 0) {\n          this.lastVolume_(vol);\n        }\n        return;\n      }\n\n      // Default to 1 when returning current volume.\n      vol = parseFloat(this.techGet_('volume'));\n      return isNaN(vol) ? 1 : vol;\n    }\n\n    /**\n     * Get the current muted state, or turn mute on or off\n     *\n     * @param {boolean} [muted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean}\n     *         - true if mute is on and getting\n     *         - false if mute is off and getting\n     */\n    muted(muted) {\n      if (muted !== undefined) {\n        this.techCall_('setMuted', muted);\n        return;\n      }\n      return this.techGet_('muted') || false;\n    }\n\n    /**\n     * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n     * indicates the state of muted on initial playback.\n     *\n     * ```js\n     *   var myPlayer = videojs('some-player-id');\n     *\n     *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n     *\n     *   // get, should be false\n     *   console.log(myPlayer.defaultMuted());\n     *   // set to true\n     *   myPlayer.defaultMuted(true);\n     *   // get should be true\n     *   console.log(myPlayer.defaultMuted());\n     * ```\n     *\n     * @param {boolean} [defaultMuted]\n     *        - true to mute\n     *        - false to unmute\n     *\n     * @return {boolean|Player}\n     *         - true if defaultMuted is on and getting\n     *         - false if defaultMuted is off and getting\n     *         - A reference to the current player when setting\n     */\n    defaultMuted(defaultMuted) {\n      if (defaultMuted !== undefined) {\n        return this.techCall_('setDefaultMuted', defaultMuted);\n      }\n      return this.techGet_('defaultMuted') || false;\n    }\n\n    /**\n     * Get the last volume, or set it\n     *\n     * @param  {number} [percentAsDecimal]\n     *         The new last volume as a decimal percent:\n     *         - 0 is muted/0%/off\n     *         - 1.0 is 100%/full\n     *         - 0.5 is half volume or 50%\n     *\n     * @return {number}\n     *         the current value of lastVolume as a percent when getting\n     *\n     * @private\n     */\n    lastVolume_(percentAsDecimal) {\n      if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n        this.cache_.lastVolume = percentAsDecimal;\n        return;\n      }\n      return this.cache_.lastVolume;\n    }\n\n    /**\n     * Check if current tech can support native fullscreen\n     * (e.g. with built in controls like iOS)\n     *\n     * @return {boolean}\n     *         if native fullscreen is supported\n     */\n    supportsFullScreen() {\n      return this.techGet_('supportsFullScreen') || false;\n    }\n\n    /**\n     * Check if the player is in fullscreen mode or tell the player that it\n     * is or is not in fullscreen mode.\n     *\n     * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n     * property and instead document.fullscreenElement is used. But isFullscreen is\n     * still a valuable property for internal player workings.\n     *\n     * @param  {boolean} [isFS]\n     *         Set the players current fullscreen state\n     *\n     * @return {boolean}\n     *         - true if fullscreen is on and getting\n     *         - false if fullscreen is off and getting\n     */\n    isFullscreen(isFS) {\n      if (isFS !== undefined) {\n        const oldValue = this.isFullscreen_;\n        this.isFullscreen_ = Boolean(isFS);\n\n        // if we changed fullscreen state and we're in prefixed mode, trigger fullscreenchange\n        // this is the only place where we trigger fullscreenchange events for older browsers\n        // fullWindow mode is treated as a prefixed event and will get a fullscreenchange event as well\n        if (this.isFullscreen_ !== oldValue && this.fsApi_.prefixed) {\n          /**\n             * @event Player#fullscreenchange\n             * @type {EventTarget~Event}\n             */\n          this.trigger('fullscreenchange');\n        }\n        this.toggleFullscreenClass_();\n        return;\n      }\n      return this.isFullscreen_;\n    }\n\n    /**\n     * Increase the size of the video to full screen\n     * In some browsers, full screen is not supported natively, so it enters\n     * \"full window mode\", where the video fills the browser window.\n     * In browsers and devices that support native full screen, sometimes the\n     * browser's default controls will be shown, and not the Video.js custom skin.\n     * This includes most mobile devices (iOS, Android) and older versions of\n     * Safari.\n     *\n     * @param  {Object} [fullscreenOptions]\n     *         Override the player fullscreen options\n     *\n     * @fires Player#fullscreenchange\n     */\n    requestFullscreen(fullscreenOptions) {\n      if (this.isInPictureInPicture()) {\n        this.exitPictureInPicture();\n      }\n      const self = this;\n      return new Promise((resolve, reject) => {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        const promise = self.requestFullscreenHelper_(fullscreenOptions);\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          promise.then(resolve, reject);\n        }\n      });\n    }\n    requestFullscreenHelper_(fullscreenOptions) {\n      let fsOptions;\n\n      // Only pass fullscreen options to requestFullscreen in spec-compliant browsers.\n      // Use defaults or player configured option unless passed directly to this method.\n      if (!this.fsApi_.prefixed) {\n        fsOptions = this.options_.fullscreen && this.options_.fullscreen.options || {};\n        if (fullscreenOptions !== undefined) {\n          fsOptions = fullscreenOptions;\n        }\n      }\n\n      // This method works as follows:\n      // 1. if a fullscreen api is available, use it\n      //   1. call requestFullscreen with potential options\n      //   2. if we got a promise from above, use it to update isFullscreen()\n      // 2. otherwise, if the tech supports fullscreen, call `enterFullScreen` on it.\n      //   This is particularly used for iPhone, older iPads, and non-safari browser on iOS.\n      // 3. otherwise, use \"fullWindow\" mode\n      if (this.fsApi_.requestFullscreen) {\n        const promise = this.el_[this.fsApi_.requestFullscreen](fsOptions);\n\n        // Even on browsers with promise support this may not return a promise\n        if (promise) {\n          promise.then(() => this.isFullscreen(true), () => this.isFullscreen(false));\n        }\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        // we can't take the video.js controls fullscreen but we can go fullscreen\n        // with native controls\n        this.techCall_('enterFullScreen');\n      } else {\n        // fullscreen isn't supported so we'll just stretch the video element to\n        // fill the viewport\n        this.enterFullWindow();\n      }\n    }\n\n    /**\n     * Return the video to its normal size after having been in full screen mode\n     *\n     * @fires Player#fullscreenchange\n     */\n    exitFullscreen() {\n      const self = this;\n      return new Promise((resolve, reject) => {\n        function offHandler() {\n          self.off('fullscreenerror', errorHandler);\n          self.off('fullscreenchange', changeHandler);\n        }\n        function changeHandler() {\n          offHandler();\n          resolve();\n        }\n        function errorHandler(e, err) {\n          offHandler();\n          reject(err);\n        }\n        self.one('fullscreenchange', changeHandler);\n        self.one('fullscreenerror', errorHandler);\n        const promise = self.exitFullscreenHelper_();\n        if (promise) {\n          promise.then(offHandler, offHandler);\n          // map the promise to our resolve/reject methods\n          promise.then(resolve, reject);\n        }\n      });\n    }\n    exitFullscreenHelper_() {\n      if (this.fsApi_.requestFullscreen) {\n        const promise = document[this.fsApi_.exitFullscreen]();\n\n        // Even on browsers with promise support this may not return a promise\n        if (promise) {\n          // we're splitting the promise here, so, we want to catch the\n          // potential error so that this chain doesn't have unhandled errors\n          silencePromise(promise.then(() => this.isFullscreen(false)));\n        }\n        return promise;\n      } else if (this.tech_.supportsFullScreen() && !this.options_.preferFullWindow === true) {\n        this.techCall_('exitFullScreen');\n      } else {\n        this.exitFullWindow();\n      }\n    }\n\n    /**\n     * When fullscreen isn't supported we can stretch the\n     * video container to as wide as the browser will let us.\n     *\n     * @fires Player#enterFullWindow\n     */\n    enterFullWindow() {\n      this.isFullscreen(true);\n      this.isFullWindow = true;\n\n      // Storing original doc overflow value to return to when fullscreen is off\n      this.docOrigOverflow = document.documentElement.style.overflow;\n\n      // Add listener for esc key to exit fullscreen\n      on(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      // Hide any scroll bars\n      document.documentElement.style.overflow = 'hidden';\n\n      // Apply fullscreen styles\n      addClass(document.body, 'vjs-full-window');\n\n      /**\n       * @event Player#enterFullWindow\n       * @type {EventTarget~Event}\n       */\n      this.trigger('enterFullWindow');\n    }\n\n    /**\n     * Check for call to either exit full window or\n     * full screen on ESC key\n     *\n     * @param {string} event\n     *        Event to check for key press\n     */\n    fullWindowOnEscKey(event) {\n      if (keycode.isEventKey(event, 'Esc')) {\n        if (this.isFullscreen() === true) {\n          if (!this.isFullWindow) {\n            this.exitFullscreen();\n          } else {\n            this.exitFullWindow();\n          }\n        }\n      }\n    }\n\n    /**\n     * Exit full window\n     *\n     * @fires Player#exitFullWindow\n     */\n    exitFullWindow() {\n      this.isFullscreen(false);\n      this.isFullWindow = false;\n      off(document, 'keydown', this.boundFullWindowOnEscKey_);\n\n      // Unhide scroll bars.\n      document.documentElement.style.overflow = this.docOrigOverflow;\n\n      // Remove fullscreen styles\n      removeClass(document.body, 'vjs-full-window');\n\n      // Resize the box, controller, and poster to original sizes\n      // this.positionAll();\n      /**\n       * @event Player#exitFullWindow\n       * @type {EventTarget~Event}\n       */\n      this.trigger('exitFullWindow');\n    }\n\n    /**\n     * Disable Picture-in-Picture mode.\n     *\n     * @param {boolean} value\n     *                  - true will disable Picture-in-Picture mode\n     *                  - false will enable Picture-in-Picture mode\n     */\n    disablePictureInPicture(value) {\n      if (value === undefined) {\n        return this.techGet_('disablePictureInPicture');\n      }\n      this.techCall_('setDisablePictureInPicture', value);\n      this.options_.disablePictureInPicture = value;\n      this.trigger('disablepictureinpicturechanged');\n    }\n\n    /**\n     * Check if the player is in Picture-in-Picture mode or tell the player that it\n     * is or is not in Picture-in-Picture mode.\n     *\n     * @param  {boolean} [isPiP]\n     *         Set the players current Picture-in-Picture state\n     *\n     * @return {boolean}\n     *         - true if Picture-in-Picture is on and getting\n     *         - false if Picture-in-Picture is off and getting\n     */\n    isInPictureInPicture(isPiP) {\n      if (isPiP !== undefined) {\n        this.isInPictureInPicture_ = !!isPiP;\n        this.togglePictureInPictureClass_();\n        return;\n      }\n      return !!this.isInPictureInPicture_;\n    }\n\n    /**\n     * Create a floating video window always on top of other windows so that users may\n     * continue consuming media while they interact with other content sites, or\n     * applications on their device.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#enterpictureinpicture\n     *\n     * @return {Promise}\n     *         A promise with a Picture-in-Picture window.\n     */\n    requestPictureInPicture() {\n      if ('pictureInPictureEnabled' in document && this.disablePictureInPicture() === false) {\n        /**\n         * This event fires when the player enters picture in picture mode\n         *\n         * @event Player#enterpictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return this.techGet_('requestPictureInPicture');\n      }\n    }\n\n    /**\n     * Exit Picture-in-Picture mode.\n     *\n     * @see [Spec]{@link https://wicg.github.io/picture-in-picture}\n     *\n     * @fires Player#leavepictureinpicture\n     *\n     * @return {Promise}\n     *         A promise.\n     */\n    exitPictureInPicture() {\n      if ('pictureInPictureEnabled' in document) {\n        /**\n         * This event fires when the player leaves picture in picture mode\n         *\n         * @event Player#leavepictureinpicture\n         * @type {EventTarget~Event}\n         */\n        return document.exitPictureInPicture();\n      }\n    }\n\n    /**\n     * Called when this Player has focus and a key gets pressed down, or when\n     * any Component of this player receives a key press that it doesn't handle.\n     * This allows player-wide hotkeys (either as defined below, or optionally\n     * by an external function).\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     *\n     * @listens keydown\n     */\n    handleKeyDown(event) {\n      const {\n        userActions\n      } = this.options_;\n\n      // Bail out if hotkeys are not configured.\n      if (!userActions || !userActions.hotkeys) {\n        return;\n      }\n\n      // Function that determines whether or not to exclude an element from\n      // hotkeys handling.\n      const excludeElement = el => {\n        const tagName = el.tagName.toLowerCase();\n\n        // The first and easiest test is for `contenteditable` elements.\n        if (el.isContentEditable) {\n          return true;\n        }\n\n        // Inputs matching these types will still trigger hotkey handling as\n        // they are not text inputs.\n        const allowedInputTypes = ['button', 'checkbox', 'hidden', 'radio', 'reset', 'submit'];\n        if (tagName === 'input') {\n          return allowedInputTypes.indexOf(el.type) === -1;\n        }\n\n        // The final test is by tag name. These tags will be excluded entirely.\n        const excludedTags = ['textarea'];\n        return excludedTags.indexOf(tagName) !== -1;\n      };\n\n      // Bail out if the user is focused on an interactive form element.\n      if (excludeElement(this.el_.ownerDocument.activeElement)) {\n        return;\n      }\n      if (typeof userActions.hotkeys === 'function') {\n        userActions.hotkeys.call(this, event);\n      } else {\n        this.handleHotkeys(event);\n      }\n    }\n\n    /**\n     * Called when this Player receives a hotkey keydown event.\n     * Supported player-wide hotkeys are:\n     *\n     *   f          - toggle fullscreen\n     *   m          - toggle mute\n     *   k or Space - toggle play/pause\n     *\n     * @param {EventTarget~Event} event\n     *        The `keydown` event that caused this function to be called.\n     */\n    handleHotkeys(event) {\n      const hotkeys = this.options_.userActions ? this.options_.userActions.hotkeys : {};\n\n      // set fullscreenKey, muteKey, playPauseKey from `hotkeys`, use defaults if not set\n      const {\n        fullscreenKey = keydownEvent => keycode.isEventKey(keydownEvent, 'f'),\n        muteKey = keydownEvent => keycode.isEventKey(keydownEvent, 'm'),\n        playPauseKey = keydownEvent => keycode.isEventKey(keydownEvent, 'k') || keycode.isEventKey(keydownEvent, 'Space')\n      } = hotkeys;\n      if (fullscreenKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        const FSToggle = Component$1.getComponent('FullscreenToggle');\n        if (document[this.fsApi_.fullscreenEnabled] !== false) {\n          FSToggle.prototype.handleClick.call(this, event);\n        }\n      } else if (muteKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        const MuteToggle = Component$1.getComponent('MuteToggle');\n        MuteToggle.prototype.handleClick.call(this, event);\n      } else if (playPauseKey.call(this, event)) {\n        event.preventDefault();\n        event.stopPropagation();\n        const PlayToggle = Component$1.getComponent('PlayToggle');\n        PlayToggle.prototype.handleClick.call(this, event);\n      }\n    }\n\n    /**\n     * Check whether the player can play a given mimetype\n     *\n     * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n     *\n     * @param {string} type\n     *        The mimetype to check\n     *\n     * @return {string}\n     *         'probably', 'maybe', or '' (empty string)\n     */\n    canPlayType(type) {\n      let can;\n\n      // Loop through each playback technology in the options order\n      for (let i = 0, j = this.options_.techOrder; i < j.length; i++) {\n        const techName = j[i];\n        let tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!tech) {\n          tech = Component$1.getComponent(techName);\n        }\n\n        // Check if the current tech is defined before continuing\n        if (!tech) {\n          log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n          continue;\n        }\n\n        // Check if the browser supports this technology\n        if (tech.isSupported()) {\n          can = tech.canPlayType(type);\n          if (can) {\n            return can;\n          }\n        }\n      }\n      return '';\n    }\n\n    /**\n     * Select source based on tech-order or source-order\n     * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n     * defaults to tech-order selection\n     *\n     * @param {Array} sources\n     *        The sources for a media asset\n     *\n     * @return {Object|boolean}\n     *         Object of source and tech order or false\n     */\n    selectSource(sources) {\n      // Get only the techs specified in `techOrder` that exist and are supported by the\n      // current platform\n      const techs = this.options_.techOrder.map(techName => {\n        return [techName, Tech.getTech(techName)];\n      }).filter(([techName, tech]) => {\n        // Check if the current tech is defined before continuing\n        if (tech) {\n          // Check if the browser supports this technology\n          return tech.isSupported();\n        }\n        log$1.error(`The \"${techName}\" tech is undefined. Skipped browser support check for that tech.`);\n        return false;\n      });\n\n      // Iterate over each `innerArray` element once per `outerArray` element and execute\n      // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n      // that value.\n      const findFirstPassingTechSourcePair = function (outerArray, innerArray, tester) {\n        let found;\n        outerArray.some(outerChoice => {\n          return innerArray.some(innerChoice => {\n            found = tester(outerChoice, innerChoice);\n            if (found) {\n              return true;\n            }\n          });\n        });\n        return found;\n      };\n      let foundSourceAndTech;\n      const flip = fn => (a, b) => fn(b, a);\n      const finder = ([techName, tech], source) => {\n        if (tech.canPlaySource(source, this.options_[techName.toLowerCase()])) {\n          return {\n            source,\n            tech: techName\n          };\n        }\n      };\n\n      // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n      // to select from them based on their priority.\n      if (this.options_.sourceOrder) {\n        // Source-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n      } else {\n        // Tech-first ordering\n        foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n      }\n      return foundSourceAndTech || false;\n    }\n\n    /**\n     * Executes source setting and getting logic\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     * @param {boolean} isRetry\n     *        Indicates whether this is being called internally as a result of a retry\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    handleSrc_(source, isRetry) {\n      // getter usage\n      if (typeof source === 'undefined') {\n        return this.cache_.src || '';\n      }\n\n      // Reset retry behavior for new source\n      if (this.resetRetryOnError_) {\n        this.resetRetryOnError_();\n      }\n\n      // filter out invalid sources and turn our source into\n      // an array of source objects\n      const sources = filterSource(source);\n\n      // if a source was passed in then it is invalid because\n      // it was filtered to a zero length Array. So we have to\n      // show an error\n      if (!sources.length) {\n        this.setTimeout(function () {\n          this.error({\n            code: 4,\n            message: this.options_.notSupportedMessage\n          });\n        }, 0);\n        return;\n      }\n\n      // initial sources\n      this.changingSrc_ = true;\n\n      // Only update the cached source list if we are not retrying a new source after error,\n      // since in that case we want to include the failed source(s) in the cache\n      if (!isRetry) {\n        this.cache_.sources = sources;\n      }\n      this.updateSourceCaches_(sources[0]);\n\n      // middlewareSource is the source after it has been changed by middleware\n      setSource(this, sources[0], (middlewareSource, mws) => {\n        this.middleware_ = mws;\n\n        // since sourceSet is async we have to update the cache again after we select a source since\n        // the source that is selected could be out of order from the cache update above this callback.\n        if (!isRetry) {\n          this.cache_.sources = sources;\n        }\n        this.updateSourceCaches_(middlewareSource);\n        const err = this.src_(middlewareSource);\n        if (err) {\n          if (sources.length > 1) {\n            return this.handleSrc_(sources.slice(1));\n          }\n          this.changingSrc_ = false;\n\n          // We need to wrap this in a timeout to give folks a chance to add error event handlers\n          this.setTimeout(function () {\n            this.error({\n              code: 4,\n              message: this.options_.notSupportedMessage\n            });\n          }, 0);\n\n          // we could not find an appropriate tech, but let's still notify the delegate that this is it\n          // this needs a better comment about why this is needed\n          this.triggerReady();\n          return;\n        }\n        setTech(mws, this.tech_);\n      });\n\n      // Try another available source if this one fails before playback.\n      if (sources.length > 1) {\n        const retry = () => {\n          // Remove the error modal\n          this.error(null);\n          this.handleSrc_(sources.slice(1), true);\n        };\n        const stopListeningForErrors = () => {\n          this.off('error', retry);\n        };\n        this.one('error', retry);\n        this.one('playing', stopListeningForErrors);\n        this.resetRetryOnError_ = () => {\n          this.off('error', retry);\n          this.off('playing', stopListeningForErrors);\n        };\n      }\n    }\n\n    /**\n     * Get or set the video source.\n     *\n     * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n     *        A SourceObject, an array of SourceObjects, or a string referencing\n     *        a URL to a media source. It is _highly recommended_ that an object\n     *        or array of objects is used here, so that source selection\n     *        algorithms can take the `type` into account.\n     *\n     *        If not provided, this method acts as a getter.\n     *\n     * @return {string|undefined}\n     *         If the `source` argument is missing, returns the current source\n     *         URL. Otherwise, returns nothing/undefined.\n     */\n    src(source) {\n      return this.handleSrc_(source, false);\n    }\n\n    /**\n     * Set the source object on the tech, returns a boolean that indicates whether\n     * there is a tech that can play the source or not\n     *\n     * @param {Tech~SourceObject} source\n     *        The source object to set on the Tech\n     *\n     * @return {boolean}\n     *         - True if there is no Tech to playback this source\n     *         - False otherwise\n     *\n     * @private\n     */\n    src_(source) {\n      const sourceTech = this.selectSource([source]);\n      if (!sourceTech) {\n        return true;\n      }\n      if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n        this.changingSrc_ = true;\n        // load this technology with the chosen source\n        this.loadTech_(sourceTech.tech, sourceTech.source);\n        this.tech_.ready(() => {\n          this.changingSrc_ = false;\n        });\n        return false;\n      }\n\n      // wait until the tech is ready to set the source\n      // and set it synchronously if possible (#2326)\n      this.ready(function () {\n        // The setSource tech method was added with source handlers\n        // so older techs won't support it\n        // We need to check the direct prototype for the case where subclasses\n        // of the tech do not support source handlers\n        if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n          this.techCall_('setSource', source);\n        } else {\n          this.techCall_('src', source.src);\n        }\n        this.changingSrc_ = false;\n      }, true);\n      return false;\n    }\n\n    /**\n     * Begin loading the src data.\n     */\n    load() {\n      this.techCall_('load');\n    }\n\n    /**\n     * Reset the player. Loads the first tech in the techOrder,\n     * removes all the text tracks in the existing `tech`,\n     * and calls `reset` on the `tech`.\n     */\n    reset() {\n      if (this.paused()) {\n        this.doReset_();\n      } else {\n        const playPromise = this.play();\n        silencePromise(playPromise.then(() => this.doReset_()));\n      }\n    }\n    doReset_() {\n      if (this.tech_) {\n        this.tech_.clearTracks('text');\n      }\n      this.resetCache_();\n      this.poster('');\n      this.loadTech_(this.options_.techOrder[0], null);\n      this.techCall_('reset');\n      this.resetControlBarUI_();\n      if (isEvented(this)) {\n        this.trigger('playerreset');\n      }\n    }\n\n    /**\n     * Reset Control Bar's UI by calling sub-methods that reset\n     * all of Control Bar's components\n     */\n    resetControlBarUI_() {\n      this.resetProgressBar_();\n      this.resetPlaybackRate_();\n      this.resetVolumeBar_();\n    }\n\n    /**\n     * Reset tech's progress so progress bar is reset in the UI\n     */\n    resetProgressBar_() {\n      this.currentTime(0);\n      const {\n        durationDisplay,\n        remainingTimeDisplay\n      } = this.controlBar || {};\n      if (durationDisplay) {\n        durationDisplay.updateContent();\n      }\n      if (remainingTimeDisplay) {\n        remainingTimeDisplay.updateContent();\n      }\n    }\n\n    /**\n     * Reset Playback ratio\n     */\n    resetPlaybackRate_() {\n      this.playbackRate(this.defaultPlaybackRate());\n      this.handleTechRateChange_();\n    }\n\n    /**\n     * Reset Volume bar\n     */\n    resetVolumeBar_() {\n      this.volume(1.0);\n      this.trigger('volumechange');\n    }\n\n    /**\n     * Returns all of the current source objects.\n     *\n     * @return {Tech~SourceObject[]}\n     *         The current source objects\n     */\n    currentSources() {\n      const source = this.currentSource();\n      const sources = [];\n\n      // assume `{}` or `{ src }`\n      if (Object.keys(source).length !== 0) {\n        sources.push(source);\n      }\n      return this.cache_.sources || sources;\n    }\n\n    /**\n     * Returns the current source object.\n     *\n     * @return {Tech~SourceObject}\n     *         The current source object\n     */\n    currentSource() {\n      return this.cache_.source || {};\n    }\n\n    /**\n     * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n     * Can be used in conjunction with `currentType` to assist in rebuilding the current source object.\n     *\n     * @return {string}\n     *         The current source\n     */\n    currentSrc() {\n      return this.currentSource() && this.currentSource().src || '';\n    }\n\n    /**\n     * Get the current source type e.g. video/mp4\n     * This can allow you rebuild the current source object so that you could load the same\n     * source and tech later\n     *\n     * @return {string}\n     *         The source MIME type\n     */\n    currentType() {\n      return this.currentSource() && this.currentSource().type || '';\n    }\n\n    /**\n     * Get or set the preload attribute\n     *\n     * @param {boolean} [value]\n     *        - true means that we should preload\n     *        - false means that we should not preload\n     *\n     * @return {string}\n     *         The preload attribute value when getting\n     */\n    preload(value) {\n      if (value !== undefined) {\n        this.techCall_('setPreload', value);\n        this.options_.preload = value;\n        return;\n      }\n      return this.techGet_('preload');\n    }\n\n    /**\n     * Get or set the autoplay option. When this is a boolean it will\n     * modify the attribute on the tech. When this is a string the attribute on\n     * the tech will be removed and `Player` will handle autoplay on loadstarts.\n     *\n     * @param {boolean|string} [value]\n     *        - true: autoplay using the browser behavior\n     *        - false: do not autoplay\n     *        - 'play': call play() on every loadstart\n     *        - 'muted': call muted() then play() on every loadstart\n     *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n     *        - *: values other than those listed here will be set `autoplay` to true\n     *\n     * @return {boolean|string}\n     *         The current value of autoplay when getting\n     */\n    autoplay(value) {\n      // getter usage\n      if (value === undefined) {\n        return this.options_.autoplay || false;\n      }\n      let techAutoplay;\n\n      // if the value is a valid string set it to that, or normalize `true` to 'play', if need be\n      if (typeof value === 'string' && /(any|play|muted)/.test(value) || value === true && this.options_.normalizeAutoplay) {\n        this.options_.autoplay = value;\n        this.manualAutoplay_(typeof value === 'string' ? value : 'play');\n        techAutoplay = false;\n\n        // any falsy value sets autoplay to false in the browser,\n        // lets do the same\n      } else if (!value) {\n        this.options_.autoplay = false;\n\n        // any other value (ie truthy) sets autoplay to true\n      } else {\n        this.options_.autoplay = true;\n      }\n      techAutoplay = typeof techAutoplay === 'undefined' ? this.options_.autoplay : techAutoplay;\n\n      // if we don't have a tech then we do not queue up\n      // a setAutoplay call on tech ready. We do this because the\n      // autoplay option will be passed in the constructor and we\n      // do not need to set it twice\n      if (this.tech_) {\n        this.techCall_('setAutoplay', techAutoplay);\n      }\n    }\n\n    /**\n     * Set or unset the playsinline attribute.\n     * Playsinline tells the browser that non-fullscreen playback is preferred.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should try to play inline by default\n     *        - false means that we should use the browser's default playback mode,\n     *          which in most cases is inline. iOS Safari is a notable exception\n     *          and plays fullscreen by default.\n     *\n     * @return {string|Player}\n     *         - the current value of playsinline\n     *         - the player when setting\n     *\n     * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n     */\n    playsinline(value) {\n      if (value !== undefined) {\n        this.techCall_('setPlaysinline', value);\n        this.options_.playsinline = value;\n        return this;\n      }\n      return this.techGet_('playsinline');\n    }\n\n    /**\n     * Get or set the loop attribute on the video element.\n     *\n     * @param {boolean} [value]\n     *        - true means that we should loop the video\n     *        - false means that we should not loop the video\n     *\n     * @return {boolean}\n     *         The current value of loop when getting\n     */\n    loop(value) {\n      if (value !== undefined) {\n        this.techCall_('setLoop', value);\n        this.options_.loop = value;\n        return;\n      }\n      return this.techGet_('loop');\n    }\n\n    /**\n     * Get or set the poster image source url\n     *\n     * @fires Player#posterchange\n     *\n     * @param {string} [src]\n     *        Poster image source URL\n     *\n     * @return {string}\n     *         The current value of poster when getting\n     */\n    poster(src) {\n      if (src === undefined) {\n        return this.poster_;\n      }\n\n      // The correct way to remove a poster is to set as an empty string\n      // other falsey values will throw errors\n      if (!src) {\n        src = '';\n      }\n      if (src === this.poster_) {\n        return;\n      }\n\n      // update the internal poster variable\n      this.poster_ = src;\n\n      // update the tech's poster\n      this.techCall_('setPoster', src);\n      this.isPosterFromTech_ = false;\n\n      // alert components that the poster has been set\n      /**\n       * This event fires when the poster image is changed on the player.\n       *\n       * @event Player#posterchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('posterchange');\n    }\n\n    /**\n     * Some techs (e.g. YouTube) can provide a poster source in an\n     * asynchronous way. We want the poster component to use this\n     * poster source so that it covers up the tech's controls.\n     * (YouTube's play button). However we only want to use this\n     * source if the player user hasn't set a poster through\n     * the normal APIs.\n     *\n     * @fires Player#posterchange\n     * @listens Tech#posterchange\n     * @private\n     */\n    handleTechPosterChange_() {\n      if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n        const newPoster = this.tech_.poster() || '';\n        if (newPoster !== this.poster_) {\n          this.poster_ = newPoster;\n          this.isPosterFromTech_ = true;\n\n          // Let components know the poster has changed\n          this.trigger('posterchange');\n        }\n      }\n    }\n\n    /**\n     * Get or set whether or not the controls are showing.\n     *\n     * @fires Player#controlsenabled\n     *\n     * @param {boolean} [bool]\n     *        - true to turn controls on\n     *        - false to turn controls off\n     *\n     * @return {boolean}\n     *         The current value of controls when getting\n     */\n    controls(bool) {\n      if (bool === undefined) {\n        return !!this.controls_;\n      }\n      bool = !!bool;\n\n      // Don't trigger a change event unless it actually changed\n      if (this.controls_ === bool) {\n        return;\n      }\n      this.controls_ = bool;\n      if (this.usingNativeControls()) {\n        this.techCall_('setControls', bool);\n      }\n      if (this.controls_) {\n        this.removeClass('vjs-controls-disabled');\n        this.addClass('vjs-controls-enabled');\n        /**\n         * @event Player#controlsenabled\n         * @type {EventTarget~Event}\n         */\n        this.trigger('controlsenabled');\n        if (!this.usingNativeControls()) {\n          this.addTechControlsListeners_();\n        }\n      } else {\n        this.removeClass('vjs-controls-enabled');\n        this.addClass('vjs-controls-disabled');\n        /**\n         * @event Player#controlsdisabled\n         * @type {EventTarget~Event}\n         */\n        this.trigger('controlsdisabled');\n        if (!this.usingNativeControls()) {\n          this.removeTechControlsListeners_();\n        }\n      }\n    }\n\n    /**\n     * Toggle native controls on/off. Native controls are the controls built into\n     * devices (e.g. default iPhone controls) or other techs\n     * (e.g. Vimeo Controls)\n     * **This should only be set by the current tech, because only the tech knows\n     * if it can support native controls**\n     *\n     * @fires Player#usingnativecontrols\n     * @fires Player#usingcustomcontrols\n     *\n     * @param {boolean} [bool]\n     *        - true to turn native controls on\n     *        - false to turn native controls off\n     *\n     * @return {boolean}\n     *         The current value of native controls when getting\n     */\n    usingNativeControls(bool) {\n      if (bool === undefined) {\n        return !!this.usingNativeControls_;\n      }\n      bool = !!bool;\n\n      // Don't trigger a change event unless it actually changed\n      if (this.usingNativeControls_ === bool) {\n        return;\n      }\n      this.usingNativeControls_ = bool;\n      if (this.usingNativeControls_) {\n        this.addClass('vjs-using-native-controls');\n\n        /**\n         * player is using the native device controls\n         *\n         * @event Player#usingnativecontrols\n         * @type {EventTarget~Event}\n         */\n        this.trigger('usingnativecontrols');\n      } else {\n        this.removeClass('vjs-using-native-controls');\n\n        /**\n         * player is using the custom HTML controls\n         *\n         * @event Player#usingcustomcontrols\n         * @type {EventTarget~Event}\n         */\n        this.trigger('usingcustomcontrols');\n      }\n    }\n\n    /**\n     * Set or get the current MediaError\n     *\n     * @fires Player#error\n     *\n     * @param  {MediaError|string|number} [err]\n     *         A MediaError or a string/number to be turned\n     *         into a MediaError\n     *\n     * @return {MediaError|null}\n     *         The current MediaError when getting (or null)\n     */\n    error(err) {\n      if (err === undefined) {\n        return this.error_ || null;\n      }\n\n      // allow hooks to modify error object\n      hooks('beforeerror').forEach(hookFunction => {\n        const newErr = hookFunction(this, err);\n        if (!(isObject$1(newErr) && !Array.isArray(newErr) || typeof newErr === 'string' || typeof newErr === 'number' || newErr === null)) {\n          this.log.error('please return a value that MediaError expects in beforeerror hooks');\n          return;\n        }\n        err = newErr;\n      });\n\n      // Suppress the first error message for no compatible source until\n      // user interaction\n      if (this.options_.suppressNotSupportedError && err && err.code === 4) {\n        const triggerSuppressedError = function () {\n          this.error(err);\n        };\n        this.options_.suppressNotSupportedError = false;\n        this.any(['click', 'touchstart'], triggerSuppressedError);\n        this.one('loadstart', function () {\n          this.off(['click', 'touchstart'], triggerSuppressedError);\n        });\n        return;\n      }\n\n      // restoring to default\n      if (err === null) {\n        this.error_ = err;\n        this.removeClass('vjs-error');\n        if (this.errorDisplay) {\n          this.errorDisplay.close();\n        }\n        return;\n      }\n      this.error_ = new MediaError(err);\n\n      // add the vjs-error classname to the player\n      this.addClass('vjs-error');\n\n      // log the name of the error type and any message\n      // IE11 logs \"[object object]\" and required you to expand message to see error object\n      log$1.error(`(CODE:${this.error_.code} ${MediaError.errorTypes[this.error_.code]})`, this.error_.message, this.error_);\n\n      /**\n       * @event Player#error\n       * @type {EventTarget~Event}\n       */\n      this.trigger('error');\n\n      // notify hooks of the per player error\n      hooks('error').forEach(hookFunction => hookFunction(this, this.error_));\n      return;\n    }\n\n    /**\n     * Report user activity\n     *\n     * @param {Object} event\n     *        Event object\n     */\n    reportUserActivity(event) {\n      this.userActivity_ = true;\n    }\n\n    /**\n     * Get/set if user is active\n     *\n     * @fires Player#useractive\n     * @fires Player#userinactive\n     *\n     * @param {boolean} [bool]\n     *        - true if the user is active\n     *        - false if the user is inactive\n     *\n     * @return {boolean}\n     *         The current value of userActive when getting\n     */\n    userActive(bool) {\n      if (bool === undefined) {\n        return this.userActive_;\n      }\n      bool = !!bool;\n      if (bool === this.userActive_) {\n        return;\n      }\n      this.userActive_ = bool;\n      if (this.userActive_) {\n        this.userActivity_ = true;\n        this.removeClass('vjs-user-inactive');\n        this.addClass('vjs-user-active');\n        /**\n         * @event Player#useractive\n         * @type {EventTarget~Event}\n         */\n        this.trigger('useractive');\n        return;\n      }\n\n      // Chrome/Safari/IE have bugs where when you change the cursor it can\n      // trigger a mousemove event. This causes an issue when you're hiding\n      // the cursor when the user is inactive, and a mousemove signals user\n      // activity. Making it impossible to go into inactive mode. Specifically\n      // this happens in fullscreen when we really need to hide the cursor.\n      //\n      // When this gets resolved in ALL browsers it can be removed\n      // https://code.google.com/p/chromium/issues/detail?id=103041\n      if (this.tech_) {\n        this.tech_.one('mousemove', function (e) {\n          e.stopPropagation();\n          e.preventDefault();\n        });\n      }\n      this.userActivity_ = false;\n      this.removeClass('vjs-user-active');\n      this.addClass('vjs-user-inactive');\n      /**\n       * @event Player#userinactive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('userinactive');\n    }\n\n    /**\n     * Listen for user activity based on timeout value\n     *\n     * @private\n     */\n    listenForUserActivity_() {\n      let mouseInProgress;\n      let lastMoveX;\n      let lastMoveY;\n      const handleActivity = bind_(this, this.reportUserActivity);\n      const handleMouseMove = function (e) {\n        // #1068 - Prevent mousemove spamming\n        // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n        if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n          lastMoveX = e.screenX;\n          lastMoveY = e.screenY;\n          handleActivity();\n        }\n      };\n      const handleMouseDown = function () {\n        handleActivity();\n        // For as long as the they are touching the device or have their mouse down,\n        // we consider them active even if they're not moving their finger or mouse.\n        // So we want to continue to update that they are active\n        this.clearInterval(mouseInProgress);\n        // Setting userActivity=true now and setting the interval to the same time\n        // as the activityCheck interval (250) should ensure we never miss the\n        // next activityCheck\n        mouseInProgress = this.setInterval(handleActivity, 250);\n      };\n      const handleMouseUpAndMouseLeave = function (event) {\n        handleActivity();\n        // Stop the interval that maintains activity if the mouse/touch is down\n        this.clearInterval(mouseInProgress);\n      };\n\n      // Any mouse movement will be considered user activity\n      this.on('mousedown', handleMouseDown);\n      this.on('mousemove', handleMouseMove);\n      this.on('mouseup', handleMouseUpAndMouseLeave);\n      this.on('mouseleave', handleMouseUpAndMouseLeave);\n      const controlBar = this.getChild('controlBar');\n\n      // Fixes bug on Android & iOS where when tapping progressBar (when control bar is displayed)\n      // controlBar would no longer be hidden by default timeout.\n      if (controlBar && !IS_IOS && !IS_ANDROID) {\n        controlBar.on('mouseenter', function (event) {\n          if (this.player().options_.inactivityTimeout !== 0) {\n            this.player().cache_.inactivityTimeout = this.player().options_.inactivityTimeout;\n          }\n          this.player().options_.inactivityTimeout = 0;\n        });\n        controlBar.on('mouseleave', function (event) {\n          this.player().options_.inactivityTimeout = this.player().cache_.inactivityTimeout;\n        });\n      }\n\n      // Listen for keyboard navigation\n      // Shouldn't need to use inProgress interval because of key repeat\n      this.on('keydown', handleActivity);\n      this.on('keyup', handleActivity);\n\n      // Run an interval every 250 milliseconds instead of stuffing everything into\n      // the mousemove/touchmove function itself, to prevent performance degradation.\n      // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n      // then gets picked up by this loop\n      // http://ejohn.org/blog/learning-from-twitter/\n      let inactivityTimeout;\n      this.setInterval(function () {\n        // Check to see if mouse/touch activity has happened\n        if (!this.userActivity_) {\n          return;\n        }\n\n        // Reset the activity tracker\n        this.userActivity_ = false;\n\n        // If the user state was inactive, set the state to active\n        this.userActive(true);\n\n        // Clear any existing inactivity timeout to start the timer over\n        this.clearTimeout(inactivityTimeout);\n        const timeout = this.options_.inactivityTimeout;\n        if (timeout <= 0) {\n          return;\n        }\n\n        // In <timeout> milliseconds, if no more activity has occurred the\n        // user will be considered inactive\n        inactivityTimeout = this.setTimeout(function () {\n          // Protect against the case where the inactivityTimeout can trigger just\n          // before the next user activity is picked up by the activity check loop\n          // causing a flicker\n          if (!this.userActivity_) {\n            this.userActive(false);\n          }\n        }, timeout);\n      }, 250);\n    }\n\n    /**\n     * Gets or sets the current playback rate. A playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed\n     * playback, for instance.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n     *\n     * @param {number} [rate]\n     *       New playback rate to set.\n     *\n     * @return {number}\n     *         The current playback rate when getting or 1.0\n     */\n    playbackRate(rate) {\n      if (rate !== undefined) {\n        // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n        // that is registered above\n        this.techCall_('setPlaybackRate', rate);\n        return;\n      }\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n      }\n      return 1.0;\n    }\n\n    /**\n     * Gets or sets the current default playback rate. A default playback rate of\n     * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n     * defaultPlaybackRate will only represent what the initial playbackRate of a video was, not\n     * not the current playbackRate.\n     *\n     * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n     *\n     * @param {number} [rate]\n     *       New default playback rate to set.\n     *\n     * @return {number|Player}\n     *         - The default playback rate when getting or 1.0\n     *         - the player when setting\n     */\n    defaultPlaybackRate(rate) {\n      if (rate !== undefined) {\n        return this.techCall_('setDefaultPlaybackRate', rate);\n      }\n      if (this.tech_ && this.tech_.featuresPlaybackRate) {\n        return this.techGet_('defaultPlaybackRate');\n      }\n      return 1.0;\n    }\n\n    /**\n     * Gets or sets the audio flag\n     *\n     * @param {boolean} bool\n     *        - true signals that this is an audio player\n     *        - false signals that this is not an audio player\n     *\n     * @return {boolean}\n     *         The current value of isAudio when getting\n     */\n    isAudio(bool) {\n      if (bool !== undefined) {\n        this.isAudio_ = !!bool;\n        return;\n      }\n      return !!this.isAudio_;\n    }\n    enableAudioOnlyUI_() {\n      // Update styling immediately to show the control bar so we can get its height\n      this.addClass('vjs-audio-only-mode');\n      const playerChildren = this.children();\n      const controlBar = this.getChild('ControlBar');\n      const controlBarHeight = controlBar && controlBar.currentHeight();\n\n      // Hide all player components except the control bar. Control bar components\n      // needed only for video are hidden with CSS\n      playerChildren.forEach(child => {\n        if (child === controlBar) {\n          return;\n        }\n        if (child.el_ && !child.hasClass('vjs-hidden')) {\n          child.hide();\n          this.audioOnlyCache_.hiddenChildren.push(child);\n        }\n      });\n      this.audioOnlyCache_.playerHeight = this.currentHeight();\n\n      // Set the player height the same as the control bar\n      this.height(controlBarHeight);\n      this.trigger('audioonlymodechange');\n    }\n    disableAudioOnlyUI_() {\n      this.removeClass('vjs-audio-only-mode');\n\n      // Show player components that were previously hidden\n      this.audioOnlyCache_.hiddenChildren.forEach(child => child.show());\n\n      // Reset player height\n      this.height(this.audioOnlyCache_.playerHeight);\n      this.trigger('audioonlymodechange');\n    }\n\n    /**\n     * Get the current audioOnlyMode state or set audioOnlyMode to true or false.\n     *\n     * Setting this to `true` will hide all player components except the control bar,\n     * as well as control bar components needed only for video.\n     *\n     * @param {boolean} [value]\n     *         The value to set audioOnlyMode to.\n     *\n     * @return {Promise|boolean}\n     *        A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    audioOnlyMode(value) {\n      if (typeof value !== 'boolean' || value === this.audioOnlyMode_) {\n        return this.audioOnlyMode_;\n      }\n      this.audioOnlyMode_ = value;\n\n      // Enable Audio Only Mode\n      if (value) {\n        const exitPromises = [];\n\n        // Fullscreen and PiP are not supported in audioOnlyMode, so exit if we need to.\n        if (this.isInPictureInPicture()) {\n          exitPromises.push(this.exitPictureInPicture());\n        }\n        if (this.isFullscreen()) {\n          exitPromises.push(this.exitFullscreen());\n        }\n        if (this.audioPosterMode()) {\n          exitPromises.push(this.audioPosterMode(false));\n        }\n        return Promise.all(exitPromises).then(() => this.enableAudioOnlyUI_());\n      }\n\n      // Disable Audio Only Mode\n      return Promise.resolve().then(() => this.disableAudioOnlyUI_());\n    }\n    enablePosterModeUI_() {\n      // Hide the video element and show the poster image to enable posterModeUI\n      const tech = this.tech_ && this.tech_;\n      tech.hide();\n      this.addClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    }\n    disablePosterModeUI_() {\n      // Show the video element and hide the poster image to disable posterModeUI\n      const tech = this.tech_ && this.tech_;\n      tech.show();\n      this.removeClass('vjs-audio-poster-mode');\n      this.trigger('audiopostermodechange');\n    }\n\n    /**\n     * Get the current audioPosterMode state or set audioPosterMode to true or false\n     *\n     * @param {boolean} [value]\n     *         The value to set audioPosterMode to.\n     *\n     * @return {Promise|boolean}\n     *         A Promise is returned when setting the state, and a boolean when getting\n     *        the present state\n     */\n    audioPosterMode(value) {\n      if (typeof value !== 'boolean' || value === this.audioPosterMode_) {\n        return this.audioPosterMode_;\n      }\n      this.audioPosterMode_ = value;\n      if (value) {\n        if (this.audioOnlyMode()) {\n          const audioOnlyModePromise = this.audioOnlyMode(false);\n          return audioOnlyModePromise.then(() => {\n            // enable audio poster mode after audio only mode is disabled\n            this.enablePosterModeUI_();\n          });\n        }\n        return Promise.resolve().then(() => {\n          // enable audio poster mode\n          this.enablePosterModeUI_();\n        });\n      }\n      return Promise.resolve().then(() => {\n        // disable audio poster mode\n        this.disablePosterModeUI_();\n      });\n    }\n\n    /**\n     * A helper method for adding a {@link TextTrack} to our\n     * {@link TextTrackList}.\n     *\n     * In addition to the W3C settings we allow adding additional info through options.\n     *\n     * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n     *\n     * @param {string} [kind]\n     *        the kind of TextTrack you are adding\n     *\n     * @param {string} [label]\n     *        the label to give the TextTrack label\n     *\n     * @param {string} [language]\n     *        the language to set on the TextTrack\n     *\n     * @return {TextTrack|undefined}\n     *         the TextTrack that was added or undefined\n     *         if there is no tech\n     */\n    addTextTrack(kind, label, language) {\n      if (this.tech_) {\n        return this.tech_.addTextTrack(kind, label, language);\n      }\n    }\n\n    /**\n     * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}.\n     *\n     * @param {Object} options\n     *        Options to pass to {@link HTMLTrackElement} during creation. See\n     *        {@link HTMLTrackElement} for object properties that you should use.\n     *\n     * @param {boolean} [manualCleanup=false] if set to true, the TextTrack will not be removed\n     *                                        from the TextTrackList and HtmlTrackElementList\n     *                                        after a source change\n     *\n     * @return {HtmlTrackElement}\n     *         the HTMLTrackElement that was created and added\n     *         to the HtmlTrackElementList and the remote\n     *         TextTrackList\n     *\n     */\n    addRemoteTextTrack(options, manualCleanup) {\n      if (this.tech_) {\n        return this.tech_.addRemoteTextTrack(options, manualCleanup);\n      }\n    }\n\n    /**\n     * Remove a remote {@link TextTrack} from the respective\n     * {@link TextTrackList} and {@link HtmlTrackElementList}.\n     *\n     * @param {Object} track\n     *        Remote {@link TextTrack} to remove\n     *\n     * @return {undefined}\n     *         does not return anything\n     */\n    removeRemoteTextTrack(obj = {}) {\n      let {\n        track\n      } = obj;\n      if (!track) {\n        track = obj;\n      }\n\n      // destructure the input into an object with a track argument, defaulting to arguments[0]\n      // default the whole argument to an empty object if nothing was passed in\n\n      if (this.tech_) {\n        return this.tech_.removeRemoteTextTrack(track);\n      }\n    }\n\n    /**\n     * Gets available media playback quality metrics as specified by the W3C's Media\n     * Playback Quality API.\n     *\n     * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n     *\n     * @return {Object|undefined}\n     *         An object with supported media playback quality metrics or undefined if there\n     *         is no tech or the tech does not support it.\n     */\n    getVideoPlaybackQuality() {\n      return this.techGet_('getVideoPlaybackQuality');\n    }\n\n    /**\n     * Get video width\n     *\n     * @return {number}\n     *         current video width\n     */\n    videoWidth() {\n      return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n    }\n\n    /**\n     * Get video height\n     *\n     * @return {number}\n     *         current video height\n     */\n    videoHeight() {\n      return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n    }\n\n    /**\n     * The player's language code.\n     *\n     * Changing the language will trigger\n     * [languagechange]{@link Player#event:languagechange}\n     * which Components can use to update control text.\n     * ClickableComponent will update its control text by default on\n     * [languagechange]{@link Player#event:languagechange}.\n     *\n     * @fires Player#languagechange\n     *\n     * @param {string} [code]\n     *        the language code to set the player to\n     *\n     * @return {string}\n     *         The current language code when getting\n     */\n    language(code) {\n      if (code === undefined) {\n        return this.language_;\n      }\n      if (this.language_ !== String(code).toLowerCase()) {\n        this.language_ = String(code).toLowerCase();\n\n        // during first init, it's possible some things won't be evented\n        if (isEvented(this)) {\n          /**\n          * fires when the player language change\n          *\n          * @event Player#languagechange\n          * @type {EventTarget~Event}\n          */\n          this.trigger('languagechange');\n        }\n      }\n    }\n\n    /**\n     * Get the player's language dictionary\n     * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n     * Languages specified directly in the player options have precedence\n     *\n     * @return {Array}\n     *         An array of of supported languages\n     */\n    languages() {\n      return merge$2(Player.prototype.options_.languages, this.languages_);\n    }\n\n    /**\n     * returns a JavaScript object reperesenting the current track\n     * information. **DOES not return it as JSON**\n     *\n     * @return {Object}\n     *         Object representing the current of track info\n     */\n    toJSON() {\n      const options = merge$2(this.options_);\n      const tracks = options.tracks;\n      options.tracks = [];\n      for (let i = 0; i < tracks.length; i++) {\n        let track = tracks[i];\n\n        // deep merge tracks and null out player so no circular references\n        track = merge$2(track);\n        track.player = undefined;\n        options.tracks[i] = track;\n      }\n      return options;\n    }\n\n    /**\n     * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n     * component) that immediately overlays the player with arbitrary\n     * content and removes itself when closed.\n     *\n     * @param {string|Function|Element|Array|null} content\n     *        Same as {@link ModalDialog#content}'s param of the same name.\n     *        The most straight-forward usage is to provide a string or DOM\n     *        element.\n     *\n     * @param {Object} [options]\n     *        Extra options which will be passed on to the {@link ModalDialog}.\n     *\n     * @return {ModalDialog}\n     *         the {@link ModalDialog} that was created\n     */\n    createModal(content, options) {\n      options = options || {};\n      options.content = content || '';\n      const modal = new ModalDialog(this, options);\n      this.addChild(modal);\n      modal.on('dispose', () => {\n        this.removeChild(modal);\n      });\n      modal.open();\n      return modal;\n    }\n\n    /**\n     * Change breakpoint classes when the player resizes.\n     *\n     * @private\n     */\n    updateCurrentBreakpoint_() {\n      if (!this.responsive()) {\n        return;\n      }\n      const currentBreakpoint = this.currentBreakpoint();\n      const currentWidth = this.currentWidth();\n      for (let i = 0; i < BREAKPOINT_ORDER.length; i++) {\n        const candidateBreakpoint = BREAKPOINT_ORDER[i];\n        const maxWidth = this.breakpoints_[candidateBreakpoint];\n        if (currentWidth <= maxWidth) {\n          // The current breakpoint did not change, nothing to do.\n          if (currentBreakpoint === candidateBreakpoint) {\n            return;\n          }\n\n          // Only remove a class if there is a current breakpoint.\n          if (currentBreakpoint) {\n            this.removeClass(BREAKPOINT_CLASSES[currentBreakpoint]);\n          }\n          this.addClass(BREAKPOINT_CLASSES[candidateBreakpoint]);\n          this.breakpoint_ = candidateBreakpoint;\n          break;\n        }\n      }\n    }\n\n    /**\n     * Removes the current breakpoint.\n     *\n     * @private\n     */\n    removeCurrentBreakpoint_() {\n      const className = this.currentBreakpointClass();\n      this.breakpoint_ = '';\n      if (className) {\n        this.removeClass(className);\n      }\n    }\n\n    /**\n     * Get or set breakpoints on the player.\n     *\n     * Calling this method with an object or `true` will remove any previous\n     * custom breakpoints and start from the defaults again.\n     *\n     * @param  {Object|boolean} [breakpoints]\n     *         If an object is given, it can be used to provide custom\n     *         breakpoints. If `true` is given, will set default breakpoints.\n     *         If this argument is not given, will simply return the current\n     *         breakpoints.\n     *\n     * @param  {number} [breakpoints.tiny]\n     *         The maximum width for the \"vjs-layout-tiny\" class.\n     *\n     * @param  {number} [breakpoints.xsmall]\n     *         The maximum width for the \"vjs-layout-x-small\" class.\n     *\n     * @param  {number} [breakpoints.small]\n     *         The maximum width for the \"vjs-layout-small\" class.\n     *\n     * @param  {number} [breakpoints.medium]\n     *         The maximum width for the \"vjs-layout-medium\" class.\n     *\n     * @param  {number} [breakpoints.large]\n     *         The maximum width for the \"vjs-layout-large\" class.\n     *\n     * @param  {number} [breakpoints.xlarge]\n     *         The maximum width for the \"vjs-layout-x-large\" class.\n     *\n     * @param  {number} [breakpoints.huge]\n     *         The maximum width for the \"vjs-layout-huge\" class.\n     *\n     * @return {Object}\n     *         An object mapping breakpoint names to maximum width values.\n     */\n    breakpoints(breakpoints) {\n      // Used as a getter.\n      if (breakpoints === undefined) {\n        return Object.assign(this.breakpoints_);\n      }\n      this.breakpoint_ = '';\n      this.breakpoints_ = Object.assign({}, DEFAULT_BREAKPOINTS, breakpoints);\n\n      // When breakpoint definitions change, we need to update the currently\n      // selected breakpoint.\n      this.updateCurrentBreakpoint_();\n\n      // Clone the breakpoints before returning.\n      return Object.assign(this.breakpoints_);\n    }\n\n    /**\n     * Get or set a flag indicating whether or not this player should adjust\n     * its UI based on its dimensions.\n     *\n     * @param  {boolean} value\n     *         Should be `true` if the player should adjust its UI based on its\n     *         dimensions; otherwise, should be `false`.\n     *\n     * @return {boolean}\n     *         Will be `true` if this player should adjust its UI based on its\n     *         dimensions; otherwise, will be `false`.\n     */\n    responsive(value) {\n      // Used as a getter.\n      if (value === undefined) {\n        return this.responsive_;\n      }\n      value = Boolean(value);\n      const current = this.responsive_;\n\n      // Nothing changed.\n      if (value === current) {\n        return;\n      }\n\n      // The value actually changed, set it.\n      this.responsive_ = value;\n\n      // Start listening for breakpoints and set the initial breakpoint if the\n      // player is now responsive.\n      if (value) {\n        this.on('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.updateCurrentBreakpoint_();\n\n        // Stop listening for breakpoints if the player is no longer responsive.\n      } else {\n        this.off('playerresize', this.boundUpdateCurrentBreakpoint_);\n        this.removeCurrentBreakpoint_();\n      }\n      return value;\n    }\n\n    /**\n     * Get current breakpoint name, if any.\n     *\n     * @return {string}\n     *         If there is currently a breakpoint set, returns a the key from the\n     *         breakpoints object matching it. Otherwise, returns an empty string.\n     */\n    currentBreakpoint() {\n      return this.breakpoint_;\n    }\n\n    /**\n     * Get the current breakpoint class name.\n     *\n     * @return {string}\n     *         The matching class name (e.g. `\"vjs-layout-tiny\"` or\n     *         `\"vjs-layout-large\"`) for the current breakpoint. Empty string if\n     *         there is no current breakpoint.\n     */\n    currentBreakpointClass() {\n      return BREAKPOINT_CLASSES[this.breakpoint_] || '';\n    }\n\n    /**\n     * An object that describes a single piece of media.\n     *\n     * Properties that are not part of this type description will be retained; so,\n     * this can be viewed as a generic metadata storage mechanism as well.\n     *\n     * @see      {@link https://wicg.github.io/mediasession/#the-mediametadata-interface}\n     * @typedef  {Object} Player~MediaObject\n     *\n     * @property {string} [album]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {string} [artist]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [artwork]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API. If not specified, will be populated via the `poster`, if\n     *           available.\n     *\n     * @property {string} [poster]\n     *           URL to an image that will display before playback.\n     *\n     * @property {Tech~SourceObject|Tech~SourceObject[]|string} [src]\n     *           A single source object, an array of source objects, or a string\n     *           referencing a URL to a media source. It is _highly recommended_\n     *           that an object or array of objects is used here, so that source\n     *           selection algorithms can take the `type` into account.\n     *\n     * @property {string} [title]\n     *           Unused, except if this object is passed to the `MediaSession`\n     *           API.\n     *\n     * @property {Object[]} [textTracks]\n     *           An array of objects to be used to create text tracks, following\n     *           the {@link https://www.w3.org/TR/html50/embedded-content-0.html#the-track-element|native track element format}.\n     *           For ease of removal, these will be created as \"remote\" text\n     *           tracks and set to automatically clean up on source changes.\n     *\n     *           These objects may have properties like `src`, `kind`, `label`,\n     *           and `language`, see {@link Tech#createRemoteTextTrack}.\n     */\n\n    /**\n     * Populate the player using a {@link Player~MediaObject|MediaObject}.\n     *\n     * @param  {Player~MediaObject} media\n     *         A media object.\n     *\n     * @param  {Function} ready\n     *         A callback to be called when the player is ready.\n     */\n    loadMedia(media, ready) {\n      if (!media || typeof media !== 'object') {\n        return;\n      }\n      this.reset();\n\n      // Clone the media object so it cannot be mutated from outside.\n      this.cache_.media = merge$2(media);\n      const {\n        artist,\n        artwork,\n        description,\n        poster,\n        src,\n        textTracks,\n        title\n      } = this.cache_.media;\n\n      // If `artwork` is not given, create it using `poster`.\n      if (!artwork && poster) {\n        this.cache_.media.artwork = [{\n          src: poster,\n          type: getMimetype(poster)\n        }];\n      }\n      if (src) {\n        this.src(src);\n      }\n      if (poster) {\n        this.poster(poster);\n      }\n      if (Array.isArray(textTracks)) {\n        textTracks.forEach(tt => this.addRemoteTextTrack(tt, false));\n      }\n      if (this.titleBar) {\n        this.titleBar.update({\n          title,\n          description: description || artist || ''\n        });\n      }\n      this.ready(ready);\n    }\n\n    /**\n     * Get a clone of the current {@link Player~MediaObject} for this player.\n     *\n     * If the `loadMedia` method has not been used, will attempt to return a\n     * {@link Player~MediaObject} based on the current state of the player.\n     *\n     * @return {Player~MediaObject}\n     */\n    getMedia() {\n      if (!this.cache_.media) {\n        const poster = this.poster();\n        const src = this.currentSources();\n        const textTracks = Array.prototype.map.call(this.remoteTextTracks(), tt => ({\n          kind: tt.kind,\n          label: tt.label,\n          language: tt.language,\n          src: tt.src\n        }));\n        const media = {\n          src,\n          textTracks\n        };\n        if (poster) {\n          media.poster = poster;\n          media.artwork = [{\n            src: media.poster,\n            type: getMimetype(media.poster)\n          }];\n        }\n        return media;\n      }\n      return merge$2(this.cache_.media);\n    }\n\n    /**\n     * Gets tag settings\n     *\n     * @param {Element} tag\n     *        The player tag\n     *\n     * @return {Object}\n     *         An object containing all of the settings\n     *         for a player tag\n     */\n    static getTagSettings(tag) {\n      const baseOptions = {\n        sources: [],\n        tracks: []\n      };\n      const tagOptions = getAttributes(tag);\n      const dataSetup = tagOptions['data-setup'];\n      if (hasClass(tag, 'vjs-fill')) {\n        tagOptions.fill = true;\n      }\n      if (hasClass(tag, 'vjs-fluid')) {\n        tagOptions.fluid = true;\n      }\n\n      // Check if data-setup attr exists.\n      if (dataSetup !== null) {\n        // Parse options JSON\n        // If empty string, make it a parsable json object.\n        const [err, data] = tuple(dataSetup || '{}');\n        if (err) {\n          log$1.error(err);\n        }\n        Object.assign(tagOptions, data);\n      }\n      Object.assign(baseOptions, tagOptions);\n\n      // Get tag children settings\n      if (tag.hasChildNodes()) {\n        const children = tag.childNodes;\n        for (let i = 0, j = children.length; i < j; i++) {\n          const child = children[i];\n          // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n          const childName = child.nodeName.toLowerCase();\n          if (childName === 'source') {\n            baseOptions.sources.push(getAttributes(child));\n          } else if (childName === 'track') {\n            baseOptions.tracks.push(getAttributes(child));\n          }\n        }\n      }\n      return baseOptions;\n    }\n\n    /**\n     * Set debug mode to enable/disable logs at info level.\n     *\n     * @param {boolean} enabled\n     * @fires Player#debugon\n     * @fires Player#debugoff\n     */\n    debug(enabled) {\n      if (enabled === undefined) {\n        return this.debugEnabled_;\n      }\n      if (enabled) {\n        this.trigger('debugon');\n        this.previousLogLevel_ = this.log.level;\n        this.log.level('debug');\n        this.debugEnabled_ = true;\n      } else {\n        this.trigger('debugoff');\n        this.log.level(this.previousLogLevel_);\n        this.previousLogLevel_ = undefined;\n        this.debugEnabled_ = false;\n      }\n    }\n\n    /**\n     * Set or get current playback rates.\n     * Takes an array and updates the playback rates menu with the new items.\n     * Pass in an empty array to hide the menu.\n     * Values other than arrays are ignored.\n     *\n     * @fires Player#playbackrateschange\n     * @param {number[]} newRates\n     *                   The new rates that the playback rates menu should update to.\n     *                   An empty array will hide the menu\n     * @return {number[]} When used as a getter will return the current playback rates\n     */\n    playbackRates(newRates) {\n      if (newRates === undefined) {\n        return this.cache_.playbackRates;\n      }\n\n      // ignore any value that isn't an array\n      if (!Array.isArray(newRates)) {\n        return;\n      }\n\n      // ignore any arrays that don't only contain numbers\n      if (!newRates.every(rate => typeof rate === 'number')) {\n        return;\n      }\n      this.cache_.playbackRates = newRates;\n\n      /**\n      * fires when the playback rates in a player are changed\n      *\n      * @event Player#playbackrateschange\n      * @type {EventTarget~Event}\n      */\n      this.trigger('playbackrateschange');\n    }\n  }\n\n  /**\n   * Get the {@link VideoTrackList}\n   *\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n   *\n   * @return {VideoTrackList}\n   *         the current video track list\n   *\n   * @method Player.prototype.videoTracks\n   */\n\n  /**\n   * Get the {@link AudioTrackList}\n   *\n   * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n   *\n   * @return {AudioTrackList}\n   *         the current audio track list\n   *\n   * @method Player.prototype.audioTracks\n   */\n\n  /**\n   * Get the {@link TextTrackList}\n   *\n   * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n   *\n   * @return {TextTrackList}\n   *         the current text track list\n   *\n   * @method Player.prototype.textTracks\n   */\n\n  /**\n   * Get the remote {@link TextTrackList}\n   *\n   * @return {TextTrackList}\n   *         The current remote text track list\n   *\n   * @method Player.prototype.remoteTextTracks\n   */\n\n  /**\n   * Get the remote {@link HtmlTrackElementList} tracks.\n   *\n   * @return {HtmlTrackElementList}\n   *         The current remote text track element list\n   *\n   * @method Player.prototype.remoteTextTrackEls\n   */\n\n  ALL.names.forEach(function (name) {\n    const props = ALL[name];\n    Player.prototype[props.getterName] = function () {\n      if (this.tech_) {\n        return this.tech_[props.getterName]();\n      }\n\n      // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n      // these will be passed to the tech during loading\n      this[props.privateName] = this[props.privateName] || new props.ListClass();\n      return this[props.privateName];\n    };\n  });\n\n  /**\n   * Get or set the `Player`'s crossorigin option. For the HTML5 player, this\n   * sets the `crossOrigin` property on the `<video>` tag to control the CORS\n   * behavior.\n   *\n   * @see [Video Element Attributes]{@link https://developer.mozilla.org/en-US/docs/Web/HTML/Element/video#attr-crossorigin}\n   *\n   * @param {string} [value]\n   *        The value to set the `Player`'s crossorigin to. If an argument is\n   *        given, must be one of `anonymous` or `use-credentials`.\n   *\n   * @return {string|undefined}\n   *         - The current crossorigin value of the `Player` when getting.\n   *         - undefined when setting\n   */\n  Player.prototype.crossorigin = Player.prototype.crossOrigin;\n\n  /**\n   * Global enumeration of players.\n   *\n   * The keys are the player IDs and the values are either the {@link Player}\n   * instance or `null` for disposed players.\n   *\n   * @type {Object}\n   */\n  Player.players = {};\n  const navigator = window.navigator;\n\n  /*\n   * Player instance options, surfaced using options\n   * options = Player.prototype.options_\n   * Make changes in options, not here.\n   *\n   * @type {Object}\n   * @private\n   */\n  Player.prototype.options_ = {\n    // Default order of fallback technology\n    techOrder: Tech.defaultTechOrder_,\n    html5: {},\n    // enable sourceset by default\n    enableSourceset: true,\n    // default inactivity timeout\n    inactivityTimeout: 2000,\n    // default playback rates\n    playbackRates: [],\n    // Add playback rate selection by adding rates\n    // 'playbackRates': [0.5, 1, 1.5, 2],\n    liveui: false,\n    // Included control sets\n    children: ['mediaLoader', 'posterImage', 'titleBar', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'liveTracker', 'controlBar', 'errorDisplay', 'textTrackSettings', 'resizeManager'],\n    language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n    // locales and their language translations\n    languages: {},\n    // Default message to show when a video cannot be played.\n    notSupportedMessage: 'No compatible source was found for this media.',\n    normalizeAutoplay: false,\n    fullscreen: {\n      options: {\n        navigationUI: 'hide'\n      }\n    },\n    breakpoints: {},\n    responsive: false,\n    audioOnlyMode: false,\n    audioPosterMode: false\n  };\n  [\n  /**\n   * Returns whether or not the player is in the \"ended\" state.\n   *\n   * @return {Boolean} True if the player is in the ended state, false if not.\n   * @method Player#ended\n   */\n  'ended',\n  /**\n   * Returns whether or not the player is in the \"seeking\" state.\n   *\n   * @return {Boolean} True if the player is in the seeking state, false if not.\n   * @method Player#seeking\n   */\n  'seeking',\n  /**\n   * Returns the TimeRanges of the media that are currently available\n   * for seeking to.\n   *\n   * @return {TimeRanges} the seekable intervals of the media timeline\n   * @method Player#seekable\n   */\n  'seekable',\n  /**\n   * Returns the current state of network activity for the element, from\n   * the codes in the list below.\n   * - NETWORK_EMPTY (numeric value 0)\n   *   The element has not yet been initialised. All attributes are in\n   *   their initial states.\n   * - NETWORK_IDLE (numeric value 1)\n   *   The element's resource selection algorithm is active and has\n   *   selected a resource, but it is not actually using the network at\n   *   this time.\n   * - NETWORK_LOADING (numeric value 2)\n   *   The user agent is actively trying to download data.\n   * - NETWORK_NO_SOURCE (numeric value 3)\n   *   The element's resource selection algorithm is active, but it has\n   *   not yet found a resource to use.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n   * @return {number} the current network activity state\n   * @method Player#networkState\n   */\n  'networkState',\n  /**\n   * Returns a value that expresses the current state of the element\n   * with respect to rendering the current playback position, from the\n   * codes in the list below.\n   * - HAVE_NOTHING (numeric value 0)\n   *   No information regarding the media resource is available.\n   * - HAVE_METADATA (numeric value 1)\n   *   Enough of the resource has been obtained that the duration of the\n   *   resource is available.\n   * - HAVE_CURRENT_DATA (numeric value 2)\n   *   Data for the immediate current playback position is available.\n   * - HAVE_FUTURE_DATA (numeric value 3)\n   *   Data for the immediate current playback position is available, as\n   *   well as enough data for the user agent to advance the current\n   *   playback position in the direction of playback.\n   * - HAVE_ENOUGH_DATA (numeric value 4)\n   *   The user agent estimates that enough data is available for\n   *   playback to proceed uninterrupted.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n   * @return {number} the current playback rendering state\n   * @method Player#readyState\n   */\n  'readyState'].forEach(function (fn) {\n    Player.prototype[fn] = function () {\n      return this.techGet_(fn);\n    };\n  });\n  TECH_EVENTS_RETRIGGER.forEach(function (event) {\n    Player.prototype[`handleTech${toTitleCase$1(event)}_`] = function () {\n      return this.trigger(event);\n    };\n  });\n\n  /**\n   * Fired when the player has initial duration and dimension information\n   *\n   * @event Player#loadedmetadata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the player has downloaded data at the current playback position\n   *\n   * @event Player#loadeddata\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the current playback position has changed *\n   * During playback this is fired every 15-250 milliseconds, depending on the\n   * playback technology in use.\n   *\n   * @event Player#timeupdate\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Fired when the volume changes\n   *\n   * @event Player#volumechange\n   * @type {EventTarget~Event}\n   */\n\n  /**\n   * Reports whether or not a player has a plugin available.\n   *\n   * This does not report whether or not the plugin has ever been initialized\n   * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n   *\n   * @method Player#hasPlugin\n   * @param  {string}  name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player has the requested plugin available.\n   */\n\n  /**\n   * Reports whether or not a player is using a plugin by name.\n   *\n   * For basic plugins, this only reports whether the plugin has _ever_ been\n   * initialized on this player.\n   *\n   * @method Player#usingPlugin\n   * @param  {string} name\n   *         The name of a plugin.\n   *\n   * @return {boolean}\n   *         Whether or not this player is using the requested plugin.\n   */\n\n  Component$1.registerComponent('Player', Player);\n\n  /**\n   * @file plugin.js\n   */\n\n  /**\n   * The base plugin name.\n   *\n   * @private\n   * @constant\n   * @type {string}\n   */\n  const BASE_PLUGIN_NAME = 'plugin';\n\n  /**\n   * The key on which a player's active plugins cache is stored.\n   *\n   * @private\n   * @constant\n   * @type     {string}\n   */\n  const PLUGIN_CACHE_KEY = 'activePlugins_';\n\n  /**\n   * Stores registered plugins in a private space.\n   *\n   * @private\n   * @type    {Object}\n   */\n  const pluginStorage = {};\n\n  /**\n   * Reports whether or not a plugin has been registered.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {boolean}\n   *          Whether or not the plugin has been registered.\n   */\n  const pluginExists = name => pluginStorage.hasOwnProperty(name);\n\n  /**\n   * Get a single registered plugin by name.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @return {typeof Plugin|Function|undefined}\n   *          The plugin (or undefined).\n   */\n  const getPlugin = name => pluginExists(name) ? pluginStorage[name] : undefined;\n\n  /**\n   * Marks a plugin as \"active\" on a player.\n   *\n   * Also, ensures that the player has an object for tracking active plugins.\n   *\n   * @private\n   * @param   {Player} player\n   *          A Video.js player instance.\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   */\n  const markPluginAsActive = (player, name) => {\n    player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n    player[PLUGIN_CACHE_KEY][name] = true;\n  };\n\n  /**\n   * Triggers a pair of plugin setup events.\n   *\n   * @private\n   * @param  {Player} player\n   *         A Video.js player instance.\n   *\n   * @param  {Plugin~PluginEventHash} hash\n   *         A plugin event hash.\n   *\n   * @param  {boolean} [before]\n   *         If true, prefixes the event name with \"before\". In other words,\n   *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n   */\n  const triggerSetupEvent = (player, hash, before) => {\n    const eventName = (before ? 'before' : '') + 'pluginsetup';\n    player.trigger(eventName, hash);\n    player.trigger(eventName + ':' + hash.name, hash);\n  };\n\n  /**\n   * Takes a basic plugin function and returns a wrapper function which marks\n   * on the player that the plugin has been activated.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Function} plugin\n   *          The basic plugin.\n   *\n   * @return {Function}\n   *          A wrapper function for the given plugin.\n   */\n  const createBasicPlugin = function (name, plugin) {\n    const basicPluginWrapper = function () {\n      // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n      // regardless, but we want the hash to be consistent with the hash provided\n      // for advanced plugins.\n      //\n      // The only potentially counter-intuitive thing here is the `instance` in\n      // the \"pluginsetup\" event is the value returned by the `plugin` function.\n      triggerSetupEvent(this, {\n        name,\n        plugin,\n        instance: null\n      }, true);\n      const instance = plugin.apply(this, arguments);\n      markPluginAsActive(this, name);\n      triggerSetupEvent(this, {\n        name,\n        plugin,\n        instance\n      });\n      return instance;\n    };\n    Object.keys(plugin).forEach(function (prop) {\n      basicPluginWrapper[prop] = plugin[prop];\n    });\n    return basicPluginWrapper;\n  };\n\n  /**\n   * Takes a plugin sub-class and returns a factory function for generating\n   * instances of it.\n   *\n   * This factory function will replace itself with an instance of the requested\n   * sub-class of Plugin.\n   *\n   * @private\n   * @param   {string} name\n   *          The name of the plugin.\n   *\n   * @param   {Plugin} PluginSubClass\n   *          The advanced plugin.\n   *\n   * @return {Function}\n   */\n  const createPluginFactory = (name, PluginSubClass) => {\n    // Add a `name` property to the plugin prototype so that each plugin can\n    // refer to itself by name.\n    PluginSubClass.prototype.name = name;\n    return function (...args) {\n      triggerSetupEvent(this, {\n        name,\n        plugin: PluginSubClass,\n        instance: null\n      }, true);\n      const instance = new PluginSubClass(...[this, ...args]);\n\n      // The plugin is replaced by a function that returns the current instance.\n      this[name] = () => instance;\n      triggerSetupEvent(this, instance.getEventHash());\n      return instance;\n    };\n  };\n\n  /**\n   * Parent class for all advanced plugins.\n   *\n   * @mixes   module:evented~EventedMixin\n   * @mixes   module:stateful~StatefulMixin\n   * @fires   Player#beforepluginsetup\n   * @fires   Player#beforepluginsetup:$name\n   * @fires   Player#pluginsetup\n   * @fires   Player#pluginsetup:$name\n   * @listens Player#dispose\n   * @throws  {Error}\n   *          If attempting to instantiate the base {@link Plugin} class\n   *          directly instead of via a sub-class.\n   */\n  class Plugin {\n    /**\n     * Creates an instance of this class.\n     *\n     * Sub-classes should call `super` to ensure plugins are properly initialized.\n     *\n     * @param {Player} player\n     *        A Video.js player instance.\n     */\n    constructor(player) {\n      if (this.constructor === Plugin) {\n        throw new Error('Plugin must be sub-classed; not directly instantiated.');\n      }\n      this.player = player;\n      if (!this.log) {\n        this.log = this.player.log.createLogger(this.name);\n      }\n\n      // Make this object evented, but remove the added `trigger` method so we\n      // use the prototype version instead.\n      evented(this);\n      delete this.trigger;\n      stateful(this, this.constructor.defaultState);\n      markPluginAsActive(player, this.name);\n\n      // Auto-bind the dispose method so we can use it as a listener and unbind\n      // it later easily.\n      this.dispose = this.dispose.bind(this);\n\n      // If the player is disposed, dispose the plugin.\n      player.on('dispose', this.dispose);\n    }\n\n    /**\n     * Get the version of the plugin that was set on <pluginName>.VERSION\n     */\n    version() {\n      return this.constructor.VERSION;\n    }\n\n    /**\n     * Each event triggered by plugins includes a hash of additional data with\n     * conventional properties.\n     *\n     * This returns that object or mutates an existing hash.\n     *\n     * @param   {Object} [hash={}]\n     *          An object to be used as event an event hash.\n     *\n     * @return {Plugin~PluginEventHash}\n     *          An event hash object with provided properties mixed-in.\n     */\n    getEventHash(hash = {}) {\n      hash.name = this.name;\n      hash.plugin = this.constructor;\n      hash.instance = this;\n      return hash;\n    }\n\n    /**\n     * Triggers an event on the plugin object and overrides\n     * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n     *\n     * @param   {string|Object} event\n     *          An event type or an object with a type property.\n     *\n     * @param   {Object} [hash={}]\n     *          Additional data hash to merge with a\n     *          {@link Plugin~PluginEventHash|PluginEventHash}.\n     *\n     * @return {boolean}\n     *          Whether or not default was prevented.\n     */\n    trigger(event, hash = {}) {\n      return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n    }\n\n    /**\n     * Handles \"statechanged\" events on the plugin. No-op by default, override by\n     * subclassing.\n     *\n     * @abstract\n     * @param    {Event} e\n     *           An event object provided by a \"statechanged\" event.\n     *\n     * @param    {Object} e.changes\n     *           An object describing changes that occurred with the \"statechanged\"\n     *           event.\n     */\n    handleStateChanged(e) {}\n\n    /**\n     * Disposes a plugin.\n     *\n     * Subclasses can override this if they want, but for the sake of safety,\n     * it's probably best to subscribe the \"dispose\" event.\n     *\n     * @fires Plugin#dispose\n     */\n    dispose() {\n      const {\n        name,\n        player\n      } = this;\n\n      /**\n       * Signals that a advanced plugin is about to be disposed.\n       *\n       * @event Plugin#dispose\n       * @type  {EventTarget~Event}\n       */\n      this.trigger('dispose');\n      this.off();\n      player.off('dispose', this.dispose);\n\n      // Eliminate any possible sources of leaking memory by clearing up\n      // references between the player and the plugin instance and nulling out\n      // the plugin's state and replacing methods with a function that throws.\n      player[PLUGIN_CACHE_KEY][name] = false;\n      this.player = this.state = null;\n\n      // Finally, replace the plugin name on the player with a new factory\n      // function, so that the plugin is ready to be set up again.\n      player[name] = createPluginFactory(name, pluginStorage[name]);\n    }\n\n    /**\n     * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n     *\n     * @param   {string|Function} plugin\n     *          If a string, matches the name of a plugin. If a function, will be\n     *          tested directly.\n     *\n     * @return {boolean}\n     *          Whether or not a plugin is a basic plugin.\n     */\n    static isBasic(plugin) {\n      const p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n      return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n    }\n\n    /**\n     * Register a Video.js plugin.\n     *\n     * @param   {string} name\n     *          The name of the plugin to be registered. Must be a string and\n     *          must not match an existing plugin or a method on the `Player`\n     *          prototype.\n     *\n     * @param   {typeof Plugin|Function} plugin\n     *          A sub-class of `Plugin` or a function for basic plugins.\n     *\n     * @return {typeof Plugin|Function}\n     *          For advanced plugins, a factory function for that plugin. For\n     *          basic plugins, a wrapper function that initializes the plugin.\n     */\n    static registerPlugin(name, plugin) {\n      if (typeof name !== 'string') {\n        throw new Error(`Illegal plugin name, \"${name}\", must be a string, was ${typeof name}.`);\n      }\n      if (pluginExists(name)) {\n        log$1.warn(`A plugin named \"${name}\" already exists. You may want to avoid re-registering plugins!`);\n      } else if (Player.prototype.hasOwnProperty(name)) {\n        throw new Error(`Illegal plugin name, \"${name}\", cannot share a name with an existing player method!`);\n      }\n      if (typeof plugin !== 'function') {\n        throw new Error(`Illegal plugin for \"${name}\", must be a function, was ${typeof plugin}.`);\n      }\n      pluginStorage[name] = plugin;\n\n      // Add a player prototype method for all sub-classed plugins (but not for\n      // the base Plugin class).\n      if (name !== BASE_PLUGIN_NAME) {\n        if (Plugin.isBasic(plugin)) {\n          Player.prototype[name] = createBasicPlugin(name, plugin);\n        } else {\n          Player.prototype[name] = createPluginFactory(name, plugin);\n        }\n      }\n      return plugin;\n    }\n\n    /**\n     * De-register a Video.js plugin.\n     *\n     * @param  {string} name\n     *         The name of the plugin to be de-registered. Must be a string that\n     *         matches an existing plugin.\n     *\n     * @throws {Error}\n     *         If an attempt is made to de-register the base plugin.\n     */\n    static deregisterPlugin(name) {\n      if (name === BASE_PLUGIN_NAME) {\n        throw new Error('Cannot de-register base plugin.');\n      }\n      if (pluginExists(name)) {\n        delete pluginStorage[name];\n        delete Player.prototype[name];\n      }\n    }\n\n    /**\n     * Gets an object containing multiple Video.js plugins.\n     *\n     * @param   {Array} [names]\n     *          If provided, should be an array of plugin names. Defaults to _all_\n     *          plugin names.\n     *\n     * @return {Object|undefined}\n     *          An object containing plugin(s) associated with their name(s) or\n     *          `undefined` if no matching plugins exist).\n     */\n    static getPlugins(names = Object.keys(pluginStorage)) {\n      let result;\n      names.forEach(name => {\n        const plugin = getPlugin(name);\n        if (plugin) {\n          result = result || {};\n          result[name] = plugin;\n        }\n      });\n      return result;\n    }\n\n    /**\n     * Gets a plugin's version, if available\n     *\n     * @param   {string} name\n     *          The name of a plugin.\n     *\n     * @return {string}\n     *          The plugin's version or an empty string.\n     */\n    static getPluginVersion(name) {\n      const plugin = getPlugin(name);\n      return plugin && plugin.VERSION || '';\n    }\n  }\n\n  /**\n   * Gets a plugin by name if it exists.\n   *\n   * @static\n   * @method   getPlugin\n   * @memberOf Plugin\n   * @param    {string} name\n   *           The name of a plugin.\n   *\n   * @returns  {typeof Plugin|Function|undefined}\n   *           The plugin (or `undefined`).\n   */\n  Plugin.getPlugin = getPlugin;\n\n  /**\n   * The name of the base plugin class as it is registered.\n   *\n   * @type {string}\n   */\n  Plugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n  Plugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n  Player.prototype.usingPlugin = function (name) {\n    return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n  };\n\n  /**\n   * Documented in player.js\n   *\n   * @ignore\n   */\n  Player.prototype.hasPlugin = function (name) {\n    return !!pluginExists(name);\n  };\n\n  /**\n   * Signals that a plugin is about to be set up on a player.\n   *\n   * @event    Player#beforepluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin is about to be set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#beforepluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player.\n   *\n   * @event    Player#pluginsetup\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * Signals that a plugin has just been set up on a player - by name. The name\n   * is the name of the plugin.\n   *\n   * @event    Player#pluginsetup:$name\n   * @type     {Plugin~PluginEventHash}\n   */\n\n  /**\n   * @typedef  {Object} Plugin~PluginEventHash\n   *\n   * @property {string} instance\n   *           For basic plugins, the return value of the plugin function. For\n   *           advanced plugins, the plugin instance on which the event is fired.\n   *\n   * @property {string} name\n   *           The name of the plugin.\n   *\n   * @property {string} plugin\n   *           For basic plugins, the plugin function. For advanced plugins, the\n   *           plugin class/constructor.\n   */\n\n  /**\n   * @file deprecate.js\n   * @module deprecate\n   */\n\n  /**\n   * Decorate a function with a deprecation message the first time it is called.\n   *\n   * @param  {string}   message\n   *         A deprecation message to log the first time the returned function\n   *         is called.\n   *\n   * @param  {Function} fn\n   *         The function to be deprecated.\n   *\n   * @return {Function}\n   *         A wrapper function that will log a deprecation warning the first\n   *         time it is called. The return value will be the return value of\n   *         the wrapped function.\n   */\n  function deprecate(message, fn) {\n    let warned = false;\n    return function (...args) {\n      if (!warned) {\n        log$1.warn(message);\n      }\n      warned = true;\n      return fn.apply(this, args);\n    };\n  }\n\n  /**\n   * Internal function used to mark a function as deprecated in the next major\n   * version with consistent messaging.\n   *\n   * @param  {number}   major   The major version where it will be removed\n   * @param  {string}   oldName The old function name\n   * @param  {string}   newName The new function name\n   * @param  {Function} fn      The function to deprecate\n   * @return {Function}         The decorated function\n   */\n  function deprecateForMajor(major, oldName, newName, fn) {\n    return deprecate(`${oldName} is deprecated and will be removed in ${major}.0; please use ${newName} instead.`, fn);\n  }\n\n  /**\n   * @file video.js\n   * @module videojs\n   */\n\n  /**\n   * Normalize an `id` value by trimming off a leading `#`\n   *\n   * @private\n   * @param   {string} id\n   *          A string, maybe with a leading `#`.\n   *\n   * @return {string}\n   *          The string, without any leading `#`.\n   */\n  const normalizeId = id => id.indexOf('#') === 0 ? id.slice(1) : id;\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * parameters and any callback value will be ignored. See: {@link Component~ReadyCallback}\n   *\n   * @callback ReadyCallback\n   */\n\n  /**\n   * The `videojs()` function doubles as the main function for users to create a\n   * {@link Player} instance as well as the main library namespace.\n   *\n   * It can also be used as a getter for a pre-existing {@link Player} instance.\n   * However, we _strongly_ recommend using `videojs.getPlayer()` for this\n   * purpose because it avoids any potential for unintended initialization.\n   *\n   * Due to [limitations](https://github.com/jsdoc3/jsdoc/issues/955#issuecomment-313829149)\n   * of our JSDoc template, we cannot properly document this as both a function\n   * and a namespace, so its function signature is documented here.\n   *\n   * #### Arguments\n   * ##### id\n   * string|Element, **required**\n   *\n   * Video element or video element ID.\n   *\n   * ##### options\n   * Object, optional\n   *\n   * Options object for providing settings.\n   * See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * ##### ready\n   * {@link Component~ReadyCallback}, optional\n   *\n   * A function to be called when the {@link Player} and {@link Tech} are ready.\n   *\n   * #### Return Value\n   *\n   * The `videojs()` function returns a {@link Player} instance.\n   *\n   * @namespace\n   *\n   * @borrows AudioTrack as AudioTrack\n   * @borrows Component.getComponent as getComponent\n   * @borrows module:events.on as on\n   * @borrows module:events.one as one\n   * @borrows module:events.off as off\n   * @borrows module:events.trigger as trigger\n   * @borrows EventTarget as EventTarget\n   * @borrows module:middleware.use as use\n   * @borrows Player.players as players\n   * @borrows Plugin.registerPlugin as registerPlugin\n   * @borrows Plugin.deregisterPlugin as deregisterPlugin\n   * @borrows Plugin.getPlugins as getPlugins\n   * @borrows Plugin.getPlugin as getPlugin\n   * @borrows Plugin.getPluginVersion as getPluginVersion\n   * @borrows Tech.getTech as getTech\n   * @borrows Tech.registerTech as registerTech\n   * @borrows TextTrack as TextTrack\n   * @borrows VideoTrack as VideoTrack\n   *\n   * @param  {string|Element} id\n   *         Video element or video element ID.\n   *\n   * @param  {Object} [options]\n   *         Options object for providing settings.\n   *         See: [Options Guide](https://docs.videojs.com/tutorial-options.html).\n   *\n   * @param  {ReadyCallback} [ready]\n   *         A function to be called when the {@link Player} and {@link Tech} are\n   *         ready.\n   *\n   * @return {Player}\n   *         The `videojs()` function returns a {@link Player|Player} instance.\n   */\n  function videojs(id, options, ready) {\n    let player = videojs.getPlayer(id);\n    if (player) {\n      if (options) {\n        log$1.warn(`Player \"${id}\" is already initialised. Options will not be applied.`);\n      }\n      if (ready) {\n        player.ready(ready);\n      }\n      return player;\n    }\n    const el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n    if (!isEl(el)) {\n      throw new TypeError('The element or ID supplied is not valid. (videojs)');\n    }\n\n    // document.body.contains(el) will only check if el is contained within that one document.\n    // This causes problems for elements in iframes.\n    // Instead, use the element's ownerDocument instead of the global document.\n    // This will make sure that the element is indeed in the dom of that document.\n    // Additionally, check that the document in question has a default view.\n    // If the document is no longer attached to the dom, the defaultView of the document will be null.\n    if (!el.ownerDocument.defaultView || !el.ownerDocument.body.contains(el)) {\n      log$1.warn('The element supplied is not included in the DOM');\n    }\n    options = options || {};\n\n    // Store a copy of the el before modification, if it is to be restored in destroy()\n    // If div ingest, store the parent div\n    if (options.restoreEl === true) {\n      options.restoreEl = (el.parentNode && el.parentNode.hasAttribute('data-vjs-player') ? el.parentNode : el).cloneNode(true);\n    }\n    hooks('beforesetup').forEach(hookFunction => {\n      const opts = hookFunction(el, merge$2(options));\n      if (!isObject$1(opts) || Array.isArray(opts)) {\n        log$1.error('please return an object in beforesetup hooks');\n        return;\n      }\n      options = merge$2(options, opts);\n    });\n\n    // We get the current \"Player\" component here in case an integration has\n    // replaced it with a custom player.\n    const PlayerComponent = Component$1.getComponent('Player');\n    player = new PlayerComponent(el, options, ready);\n    hooks('setup').forEach(hookFunction => hookFunction(player));\n    return player;\n  }\n  videojs.hooks_ = hooks_;\n  videojs.hooks = hooks;\n  videojs.hook = hook;\n  videojs.hookOnce = hookOnce;\n  videojs.removeHook = removeHook;\n\n  // Add default styles\n  if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n    let style = $('.vjs-styles-defaults');\n    if (!style) {\n      style = createStyleElement('vjs-styles-defaults');\n      const head = $('head');\n      if (head) {\n        head.insertBefore(style, head.firstChild);\n      }\n      setTextContent(style, `\n      .video-js {\n        width: 300px;\n        height: 150px;\n      }\n\n      .vjs-fluid:not(.vjs-audio-only-mode) {\n        padding-top: 56.25%\n      }\n    `);\n    }\n  }\n\n  // Run Auto-load players\n  // You have to wait at least once in case this script is loaded after your\n  // video in the DOM (weird behavior only with minified version)\n  autoSetupTimeout(1, videojs);\n\n  /**\n   * Current Video.js version. Follows [semantic versioning](https://semver.org/).\n   *\n   * @type {string}\n   */\n  videojs.VERSION = version$5;\n\n  /**\n   * The global options object. These are the settings that take effect\n   * if no overrides are specified when the player is created.\n   *\n   * @type {Object}\n   */\n  videojs.options = Player.prototype.options_;\n\n  /**\n   * Get an object with the currently created players, keyed by player ID\n   *\n   * @return {Object}\n   *         The created players\n   */\n  videojs.getPlayers = () => Player.players;\n\n  /**\n   * Get a single player based on an ID or DOM element.\n   *\n   * This is useful if you want to check if an element or ID has an associated\n   * Video.js player, but not create one if it doesn't.\n   *\n   * @param   {string|Element} id\n   *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n   *          or a string matching the `id` of such an element.\n   *\n   * @return {Player|undefined}\n   *          A player instance or `undefined` if there is no player instance\n   *          matching the argument.\n   */\n  videojs.getPlayer = id => {\n    const players = Player.players;\n    let tag;\n    if (typeof id === 'string') {\n      const nId = normalizeId(id);\n      const player = players[nId];\n      if (player) {\n        return player;\n      }\n      tag = $('#' + nId);\n    } else {\n      tag = id;\n    }\n    if (isEl(tag)) {\n      const {\n        player,\n        playerId\n      } = tag;\n\n      // Element may have a `player` property referring to an already created\n      // player instance. If so, return that.\n      if (player || players[playerId]) {\n        return player || players[playerId];\n      }\n    }\n  };\n\n  /**\n   * Returns an array of all current players.\n   *\n   * @return {Array}\n   *         An array of all players. The array will be in the order that\n   *         `Object.keys` provides, which could potentially vary between\n   *         JavaScript engines.\n   *\n   */\n  videojs.getAllPlayers = () =>\n  // Disposed players leave a key with a `null` value, so we need to make sure\n  // we filter those out.\n  Object.keys(Player.players).map(k => Player.players[k]).filter(Boolean);\n  videojs.players = Player.players;\n  videojs.getComponent = Component$1.getComponent;\n\n  /**\n   * Register a component so it can referred to by name. Used when adding to other\n   * components, either through addChild `component.addChild('myComponent')` or through\n   * default children options  `{ children: ['myComponent'] }`.\n   *\n   * > NOTE: You could also just initialize the component before adding.\n   * `component.addChild(new MyComponent());`\n   *\n   * @param {string} name\n   *        The class name of the component\n   *\n   * @param {Component} comp\n   *        The component class\n   *\n   * @return {Component}\n   *         The newly registered component\n   */\n  videojs.registerComponent = (name, comp) => {\n    if (Tech.isTech(comp)) {\n      log$1.warn(`The ${name} tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)`);\n    }\n    Component$1.registerComponent.call(Component$1, name, comp);\n  };\n  videojs.getTech = Tech.getTech;\n  videojs.registerTech = Tech.registerTech;\n  videojs.use = use;\n\n  /**\n   * An object that can be returned by a middleware to signify\n   * that the middleware is being terminated.\n   *\n   * @type {object}\n   * @property {object} middleware.TERMINATOR\n   */\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n\n  /**\n   * A reference to the {@link module:browser|browser utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:browser|browser}\n   */\n  videojs.browser = browser;\n\n  /**\n   * A reference to the {@link module:obj|obj utility module} as an object.\n   *\n   * @type {Object}\n   * @see  {@link module:obj|obj}\n   */\n  videojs.obj = Obj;\n\n  /**\n   * Deprecated reference to the {@link module:obj.merge|merge function}\n   *\n   * @type {Function}\n   * @see {@link module:obj.merge|merge}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.merge instead.\n   */\n  videojs.mergeOptions = deprecateForMajor(9, 'videojs.mergeOptions', 'videojs.obj.merge', merge$2);\n\n  /**\n   * Deprecated reference to the {@link module:obj.defineLazyProperty|defineLazyProperty function}\n   *\n   * @type {Function}\n   * @see {@link module:obj.defineLazyProperty|defineLazyProperty}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.obj.defineLazyProperty instead.\n   */\n  videojs.defineLazyProperty = deprecateForMajor(9, 'videojs.defineLazyProperty', 'videojs.obj.defineLazyProperty', defineLazyProperty);\n\n  /**\n   * Deprecated reference to the {@link module:fn.bind_|fn.bind_ function}\n   *\n   * @type {Function}\n   * @see {@link module:fn.bind_|fn.bind_}\n   * @deprecated Deprecated and will be removed in 9.0. Please use native Function.prototype.bind instead.\n   */\n  videojs.bind = deprecateForMajor(9, 'videojs.bind', 'native Function.prototype.bind', bind_);\n  videojs.registerPlugin = Plugin.registerPlugin;\n  videojs.deregisterPlugin = Plugin.deregisterPlugin;\n\n  /**\n   * Deprecated method to register a plugin with Video.js\n   *\n   * @deprecated Deprecated and will be removed in 9.0. Use videojs.registerPlugin() instead.\n   *\n   * @param {string} name\n   *        The plugin name\n   *\n   * @param {Plugin|Function} plugin\n   *         The plugin sub-class or function\n   */\n  videojs.plugin = (name, plugin) => {\n    log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n    return Plugin.registerPlugin(name, plugin);\n  };\n  videojs.getPlugins = Plugin.getPlugins;\n  videojs.getPlugin = Plugin.getPlugin;\n  videojs.getPluginVersion = Plugin.getPluginVersion;\n\n  /**\n   * Adding languages so that they're available to all players.\n   * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n   *\n   * @param {string} code\n   *        The language code or dictionary property\n   *\n   * @param {Object} data\n   *        The data values to be translated\n   *\n   * @return {Object}\n   *         The resulting language dictionary object\n   */\n  videojs.addLanguage = function (code, data) {\n    code = ('' + code).toLowerCase();\n    videojs.options.languages = merge$2(videojs.options.languages, {\n      [code]: data\n    });\n    return videojs.options.languages[code];\n  };\n\n  /**\n   * A reference to the {@link module:log|log utility module} as an object.\n   *\n   * @type {Function}\n   * @see  {@link module:log|log}\n   */\n  videojs.log = log$1;\n  videojs.createLogger = createLogger;\n\n  /**\n   * A reference to the {@link module:time|time utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:time|time}\n   */\n  videojs.time = Time;\n\n  /**\n   * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n   *\n   * @type {Function}\n   * @see {@link module:time.createTimeRanges|createTimeRanges}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n   */\n  videojs.createTimeRange = deprecateForMajor(9, 'videojs.createTimeRange', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n  /**\n   * Deprecated reference to the {@link module:time.createTimeRanges|createTimeRanges function}\n   *\n   * @type {Function}\n   * @see {@link module:time.createTimeRanges|createTimeRanges}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.createTimeRanges instead.\n   */\n  videojs.createTimeRanges = deprecateForMajor(9, 'videojs.createTimeRanges', 'videojs.time.createTimeRanges', createTimeRanges$1);\n\n  /**\n   * Deprecated reference to the {@link module:time.formatTime|formatTime function}\n   *\n   * @type {Function}\n   * @see {@link module:time.formatTime|formatTime}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.format instead.\n   */\n  videojs.formatTime = deprecateForMajor(9, 'videojs.formatTime', 'videojs.time.formatTime', formatTime);\n\n  /**\n   * Deprecated reference to the {@link module:time.setFormatTime|setFormatTime function}\n   *\n   * @type {Function}\n   * @see {@link module:time.setFormatTime|setFormatTime}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.setFormat instead.\n   */\n  videojs.setFormatTime = deprecateForMajor(9, 'videojs.setFormatTime', 'videojs.time.setFormatTime', setFormatTime);\n\n  /**\n   * Deprecated reference to the {@link module:time.resetFormatTime|resetFormatTime function}\n   *\n   * @type {Function}\n   * @see {@link module:time.resetFormatTime|resetFormatTime}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.time.resetFormat instead.\n   */\n  videojs.resetFormatTime = deprecateForMajor(9, 'videojs.resetFormatTime', 'videojs.time.resetFormatTime', resetFormatTime);\n\n  /**\n   * Deprecated reference to the {@link module:url.parseUrl|Url.parseUrl function}\n   *\n   * @type {Function}\n   * @see {@link module:url.parseUrl|parseUrl}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.parseUrl instead.\n   */\n  videojs.parseUrl = deprecateForMajor(9, 'videojs.parseUrl', 'videojs.url.parseUrl', parseUrl);\n\n  /**\n   * Deprecated reference to the {@link module:url.isCrossOrigin|Url.isCrossOrigin function}\n   *\n   * @type {Function}\n   * @see {@link module:url.isCrossOrigin|isCrossOrigin}\n   * @deprecated Deprecated and will be removed in 9.0. Please use videojs.url.isCrossOrigin instead.\n   */\n  videojs.isCrossOrigin = deprecateForMajor(9, 'videojs.isCrossOrigin', 'videojs.url.isCrossOrigin', isCrossOrigin);\n  videojs.EventTarget = EventTarget$2;\n  videojs.any = any;\n  videojs.on = on;\n  videojs.one = one;\n  videojs.off = off;\n  videojs.trigger = trigger;\n\n  /**\n   * A cross-browser XMLHttpRequest wrapper.\n   *\n   * @function\n   * @param    {Object} options\n   *           Settings for the request.\n   *\n   * @return   {XMLHttpRequest|XDomainRequest}\n   *           The request object.\n   *\n   * @see      https://github.com/Raynos/xhr\n   */\n  videojs.xhr = lib;\n  videojs.TextTrack = TextTrack;\n  videojs.AudioTrack = AudioTrack;\n  videojs.VideoTrack = VideoTrack;\n  ['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(k => {\n    videojs[k] = function () {\n      log$1.warn(`videojs.${k}() is deprecated; use videojs.dom.${k}() instead`);\n      return Dom[k].apply(null, arguments);\n    };\n  });\n  videojs.computedStyle = deprecateForMajor(9, 'videojs.computedStyle', 'videojs.dom.computedStyle', computedStyle);\n\n  /**\n   * A reference to the {@link module:dom|DOM utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:dom|dom}\n   */\n  videojs.dom = Dom;\n\n  /**\n   * A reference to the {@link module:fn|fn utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:fn|fn}\n   */\n  videojs.fn = Fn;\n\n  /**\n   * A reference to the {@link module:num|num utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:num|num}\n   */\n  videojs.num = Num;\n\n  /**\n   * A reference to the {@link module:str|str utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:str|str}\n   */\n  videojs.str = Str;\n\n  /**\n   * A reference to the {@link module:url|URL utility module} as an object.\n   *\n   * @type {Object}\n   * @see {@link module:url|url}\n   */\n  videojs.url = Url;\n\n  createCommonjsModule(function (module, exports) {\n    /*! @name videojs-contrib-quality-levels @version 3.0.0 @license Apache-2.0 */\n    (function (global, factory) {\n      module.exports = factory(videojs) ;\n    })(commonjsGlobal, function (videojs) {\n\n      function _interopDefaultLegacy(e) {\n        return e && typeof e === 'object' && 'default' in e ? e : {\n          'default': e\n        };\n      }\n      var videojs__default = /*#__PURE__*/_interopDefaultLegacy(videojs);\n\n      /**\n       * A single QualityLevel.\n       *\n       * interface QualityLevel {\n       *   readonly attribute DOMString id;\n       *            attribute DOMString label;\n       *   readonly attribute long width;\n       *   readonly attribute long height;\n       *   readonly attribute long bitrate;\n       *            attribute boolean enabled;\n       * };\n       *\n       * @class QualityLevel\n       */\n      class QualityLevel {\n        /**\n         * Creates a QualityLevel\n         *\n         * @param {Representation|Object} representation The representation of the quality level\n         * @param {string}   representation.id        Unique id of the QualityLevel\n         * @param {number=}  representation.width     Resolution width of the QualityLevel\n         * @param {number=}  representation.height    Resolution height of the QualityLevel\n         * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n         * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n         * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n         */\n        constructor(representation) {\n          let level = this; // eslint-disable-line\n\n          level.id = representation.id;\n          level.label = level.id;\n          level.width = representation.width;\n          level.height = representation.height;\n          level.bitrate = representation.bandwidth;\n          level.frameRate = representation.frameRate;\n          level.enabled_ = representation.enabled;\n          Object.defineProperty(level, 'enabled', {\n            /**\n             * Get whether the QualityLevel is enabled.\n             *\n             * @return {boolean} True if the QualityLevel is enabled.\n             */\n            get() {\n              return level.enabled_();\n            },\n            /**\n             * Enable or disable the QualityLevel.\n             *\n             * @param {boolean} enable true to enable QualityLevel, false to disable.\n             */\n            set(enable) {\n              level.enabled_(enable);\n            }\n          });\n          return level;\n        }\n      }\n\n      /**\n       * A list of QualityLevels.\n       *\n       * interface QualityLevelList : EventTarget {\n       *   getter QualityLevel (unsigned long index);\n       *   readonly attribute unsigned long length;\n       *   readonly attribute long selectedIndex;\n       *\n       *   void addQualityLevel(QualityLevel qualityLevel)\n       *   void removeQualityLevel(QualityLevel remove)\n       *   QualityLevel? getQualityLevelById(DOMString id);\n       *\n       *   attribute EventHandler onchange;\n       *   attribute EventHandler onaddqualitylevel;\n       *   attribute EventHandler onremovequalitylevel;\n       * };\n       *\n       * @extends videojs.EventTarget\n       * @class QualityLevelList\n       */\n\n      class QualityLevelList extends videojs__default['default'].EventTarget {\n        constructor() {\n          super();\n          let list = this; // eslint-disable-line\n\n          list.levels_ = [];\n          list.selectedIndex_ = -1;\n          /**\n           * Get the index of the currently selected QualityLevel.\n           *\n           * @returns {number} The index of the selected QualityLevel. -1 if none selected.\n           * @readonly\n           */\n\n          Object.defineProperty(list, 'selectedIndex', {\n            get() {\n              return list.selectedIndex_;\n            }\n          });\n          /**\n           * Get the length of the list of QualityLevels.\n           *\n           * @returns {number} The length of the list.\n           * @readonly\n           */\n\n          Object.defineProperty(list, 'length', {\n            get() {\n              return list.levels_.length;\n            }\n          });\n          return list;\n        }\n        /**\n         * Adds a quality level to the list.\n         *\n         * @param {Representation|Object} representation The representation of the quality level\n         * @param {string}   representation.id        Unique id of the QualityLevel\n         * @param {number=}  representation.width     Resolution width of the QualityLevel\n         * @param {number=}  representation.height    Resolution height of the QualityLevel\n         * @param {number}   representation.bandwidth Bitrate of the QualityLevel\n         * @param {number=}  representation.frameRate Frame-rate of the QualityLevel\n         * @param {Function} representation.enabled   Callback to enable/disable QualityLevel\n         * @return {QualityLevel} the QualityLevel added to the list\n         * @method addQualityLevel\n         */\n\n        addQualityLevel(representation) {\n          let qualityLevel = this.getQualityLevelById(representation.id); // Do not add duplicate quality levels\n\n          if (qualityLevel) {\n            return qualityLevel;\n          }\n          const index = this.levels_.length;\n          qualityLevel = new QualityLevel(representation);\n          if (!('' + index in this)) {\n            Object.defineProperty(this, index, {\n              get() {\n                return this.levels_[index];\n              }\n            });\n          }\n          this.levels_.push(qualityLevel);\n          this.trigger({\n            qualityLevel,\n            type: 'addqualitylevel'\n          });\n          return qualityLevel;\n        }\n        /**\n         * Removes a quality level from the list.\n         *\n         * @param {QualityLevel} remove QualityLevel to remove to the list.\n         * @return {QualityLevel|null} the QualityLevel removed or null if nothing removed\n         * @method removeQualityLevel\n         */\n\n        removeQualityLevel(qualityLevel) {\n          let removed = null;\n          for (let i = 0, l = this.length; i < l; i++) {\n            if (this[i] === qualityLevel) {\n              removed = this.levels_.splice(i, 1)[0];\n              if (this.selectedIndex_ === i) {\n                this.selectedIndex_ = -1;\n              } else if (this.selectedIndex_ > i) {\n                this.selectedIndex_--;\n              }\n              break;\n            }\n          }\n          if (removed) {\n            this.trigger({\n              qualityLevel,\n              type: 'removequalitylevel'\n            });\n          }\n          return removed;\n        }\n        /**\n         * Searches for a QualityLevel with the given id.\n         *\n         * @param {string} id The id of the QualityLevel to find.\n         * @return {QualityLevel|null} The QualityLevel with id, or null if not found.\n         * @method getQualityLevelById\n         */\n\n        getQualityLevelById(id) {\n          for (let i = 0, l = this.length; i < l; i++) {\n            const level = this[i];\n            if (level.id === id) {\n              return level;\n            }\n          }\n          return null;\n        }\n        /**\n         * Resets the list of QualityLevels to empty\n         *\n         * @method dispose\n         */\n\n        dispose() {\n          this.selectedIndex_ = -1;\n          this.levels_.length = 0;\n        }\n      }\n      /**\n       * change - The selected QualityLevel has changed.\n       * addqualitylevel - A QualityLevel has been added to the QualityLevelList.\n       * removequalitylevel - A QualityLevel has been removed from the QualityLevelList.\n       */\n\n      QualityLevelList.prototype.allowedEvents_ = {\n        change: 'change',\n        addqualitylevel: 'addqualitylevel',\n        removequalitylevel: 'removequalitylevel'\n      }; // emulate attribute EventHandler support to allow for feature detection\n\n      for (const event in QualityLevelList.prototype.allowedEvents_) {\n        QualityLevelList.prototype['on' + event] = null;\n      }\n      var version = \"3.0.0\";\n      const registerPlugin = videojs__default['default'].registerPlugin || videojs__default['default'].plugin;\n      /**\n       * Initialization function for the qualityLevels plugin. Sets up the QualityLevelList and\n       * event handlers.\n       *\n       * @param {Player} player Player object.\n       * @param {Object} options Plugin options object.\n       * @function initPlugin\n       */\n\n      const initPlugin = function (player, options) {\n        const originalPluginFn = player.qualityLevels;\n        const qualityLevelList = new QualityLevelList();\n        const disposeHandler = function () {\n          qualityLevelList.dispose();\n          player.qualityLevels = originalPluginFn;\n          player.off('dispose', disposeHandler);\n        };\n        player.on('dispose', disposeHandler);\n        player.qualityLevels = () => qualityLevelList;\n        player.qualityLevels.VERSION = version;\n        return qualityLevelList;\n      };\n      /**\n       * A video.js plugin.\n       *\n       * In the plugin function, the value of `this` is a video.js `Player`\n       * instance. You cannot rely on the player being in a \"ready\" state here,\n       * depending on how the plugin is invoked. This may or may not be important\n       * to you; if not, remove the wait for \"ready\"!\n       *\n       * @param {Object} options Plugin options object\n       * @function qualityLevels\n       */\n\n      const qualityLevels = function (options) {\n        return initPlugin(this, videojs__default['default'].mergeOptions({}, options));\n      }; // Register the plugin with video.js.\n\n      registerPlugin('qualityLevels', qualityLevels); // Include the version number.\n\n      qualityLevels.VERSION = version;\n      return qualityLevels;\n    });\n  });\n\n  var urlToolkit = createCommonjsModule(function (module, exports) {\n    // see https://tools.ietf.org/html/rfc1808\n\n    (function (root) {\n      var URL_REGEX = /^(?=((?:[a-zA-Z0-9+\\-.]+:)?))\\1(?=((?:\\/\\/[^\\/?#]*)?))\\2(?=((?:(?:[^?#\\/]*\\/)*[^;?#\\/]*)?))\\3((?:;[^?#]*)?)(\\?[^#]*)?(#[^]*)?$/;\n      var FIRST_SEGMENT_REGEX = /^(?=([^\\/?#]*))\\1([^]*)$/;\n      var SLASH_DOT_REGEX = /(?:\\/|^)\\.(?=\\/)/g;\n      var SLASH_DOT_DOT_REGEX = /(?:\\/|^)\\.\\.\\/(?!\\.\\.\\/)[^\\/]*(?=\\/)/g;\n      var URLToolkit = {\n        // If opts.alwaysNormalize is true then the path will always be normalized even when it starts with / or //\n        // E.g\n        // With opts.alwaysNormalize = false (default, spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/f/../g\n        // With opts.alwaysNormalize = true (not spec compliant)\n        // http://a.com/b/cd + /e/f/../g => http://a.com/e/g\n        buildAbsoluteURL: function (baseURL, relativeURL, opts) {\n          opts = opts || {};\n          // remove any remaining space and CRLF\n          baseURL = baseURL.trim();\n          relativeURL = relativeURL.trim();\n          if (!relativeURL) {\n            // 2a) If the embedded URL is entirely empty, it inherits the\n            // entire base URL (i.e., is set equal to the base URL)\n            // and we are done.\n            if (!opts.alwaysNormalize) {\n              return baseURL;\n            }\n            var basePartsForNormalise = URLToolkit.parseURL(baseURL);\n            if (!basePartsForNormalise) {\n              throw new Error('Error trying to parse base URL.');\n            }\n            basePartsForNormalise.path = URLToolkit.normalizePath(basePartsForNormalise.path);\n            return URLToolkit.buildURLFromParts(basePartsForNormalise);\n          }\n          var relativeParts = URLToolkit.parseURL(relativeURL);\n          if (!relativeParts) {\n            throw new Error('Error trying to parse relative URL.');\n          }\n          if (relativeParts.scheme) {\n            // 2b) If the embedded URL starts with a scheme name, it is\n            // interpreted as an absolute URL and we are done.\n            if (!opts.alwaysNormalize) {\n              return relativeURL;\n            }\n            relativeParts.path = URLToolkit.normalizePath(relativeParts.path);\n            return URLToolkit.buildURLFromParts(relativeParts);\n          }\n          var baseParts = URLToolkit.parseURL(baseURL);\n          if (!baseParts) {\n            throw new Error('Error trying to parse base URL.');\n          }\n          if (!baseParts.netLoc && baseParts.path && baseParts.path[0] !== '/') {\n            // If netLoc missing and path doesn't start with '/', assume everthing before the first '/' is the netLoc\n            // This causes 'example.com/a' to be handled as '//example.com/a' instead of '/example.com/a'\n            var pathParts = FIRST_SEGMENT_REGEX.exec(baseParts.path);\n            baseParts.netLoc = pathParts[1];\n            baseParts.path = pathParts[2];\n          }\n          if (baseParts.netLoc && !baseParts.path) {\n            baseParts.path = '/';\n          }\n          var builtParts = {\n            // 2c) Otherwise, the embedded URL inherits the scheme of\n            // the base URL.\n            scheme: baseParts.scheme,\n            netLoc: relativeParts.netLoc,\n            path: null,\n            params: relativeParts.params,\n            query: relativeParts.query,\n            fragment: relativeParts.fragment\n          };\n          if (!relativeParts.netLoc) {\n            // 3) If the embedded URL's <net_loc> is non-empty, we skip to\n            // Step 7.  Otherwise, the embedded URL inherits the <net_loc>\n            // (if any) of the base URL.\n            builtParts.netLoc = baseParts.netLoc;\n            // 4) If the embedded URL path is preceded by a slash \"/\", the\n            // path is not relative and we skip to Step 7.\n            if (relativeParts.path[0] !== '/') {\n              if (!relativeParts.path) {\n                // 5) If the embedded URL path is empty (and not preceded by a\n                // slash), then the embedded URL inherits the base URL path\n                builtParts.path = baseParts.path;\n                // 5a) if the embedded URL's <params> is non-empty, we skip to\n                // step 7; otherwise, it inherits the <params> of the base\n                // URL (if any) and\n                if (!relativeParts.params) {\n                  builtParts.params = baseParts.params;\n                  // 5b) if the embedded URL's <query> is non-empty, we skip to\n                  // step 7; otherwise, it inherits the <query> of the base\n                  // URL (if any) and we skip to step 7.\n                  if (!relativeParts.query) {\n                    builtParts.query = baseParts.query;\n                  }\n                }\n              } else {\n                // 6) The last segment of the base URL's path (anything\n                // following the rightmost slash \"/\", or the entire path if no\n                // slash is present) is removed and the embedded URL's path is\n                // appended in its place.\n                var baseURLPath = baseParts.path;\n                var newPath = baseURLPath.substring(0, baseURLPath.lastIndexOf('/') + 1) + relativeParts.path;\n                builtParts.path = URLToolkit.normalizePath(newPath);\n              }\n            }\n          }\n          if (builtParts.path === null) {\n            builtParts.path = opts.alwaysNormalize ? URLToolkit.normalizePath(relativeParts.path) : relativeParts.path;\n          }\n          return URLToolkit.buildURLFromParts(builtParts);\n        },\n        parseURL: function (url) {\n          var parts = URL_REGEX.exec(url);\n          if (!parts) {\n            return null;\n          }\n          return {\n            scheme: parts[1] || '',\n            netLoc: parts[2] || '',\n            path: parts[3] || '',\n            params: parts[4] || '',\n            query: parts[5] || '',\n            fragment: parts[6] || ''\n          };\n        },\n        normalizePath: function (path) {\n          // The following operations are\n          // then applied, in order, to the new path:\n          // 6a) All occurrences of \"./\", where \".\" is a complete path\n          // segment, are removed.\n          // 6b) If the path ends with \".\" as a complete path segment,\n          // that \".\" is removed.\n          path = path.split('').reverse().join('').replace(SLASH_DOT_REGEX, '');\n          // 6c) All occurrences of \"<segment>/../\", where <segment> is a\n          // complete path segment not equal to \"..\", are removed.\n          // Removal of these path segments is performed iteratively,\n          // removing the leftmost matching pattern on each iteration,\n          // until no matching pattern remains.\n          // 6d) If the path ends with \"<segment>/..\", where <segment> is a\n          // complete path segment not equal to \"..\", that\n          // \"<segment>/..\" is removed.\n          while (path.length !== (path = path.replace(SLASH_DOT_DOT_REGEX, '')).length) {}\n          return path.split('').reverse().join('');\n        },\n        buildURLFromParts: function (parts) {\n          return parts.scheme + parts.netLoc + parts.path + parts.params + parts.query + parts.fragment;\n        }\n      };\n      module.exports = URLToolkit;\n    })();\n  });\n\n  var DEFAULT_LOCATION$1 = 'http://example.com';\n  var resolveUrl$2 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION$1);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION$1.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n      return newUrl.href;\n    }\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * @file stream.js\n   */\n\n  /**\n   * A lightweight readable stream implemention that handles event dispatching.\n   *\n   * @class Stream\n   */\n  var Stream = /*#__PURE__*/function () {\n    function Stream() {\n      this.listeners = {};\n    }\n    /**\n     * Add a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener the callback to be invoked when an event of\n     * the specified type occurs\n     */\n\n    var _proto = Stream.prototype;\n    _proto.on = function on(type, listener) {\n      if (!this.listeners[type]) {\n        this.listeners[type] = [];\n      }\n      this.listeners[type].push(listener);\n    }\n    /**\n     * Remove a listener for a specified event type.\n     *\n     * @param {string} type the event name\n     * @param {Function} listener  a function previously registered for this\n     * type of event through `on`\n     * @return {boolean} if we could turn it off or not\n     */;\n\n    _proto.off = function off(type, listener) {\n      if (!this.listeners[type]) {\n        return false;\n      }\n      var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n      // In Video.js we slice listener functions\n      // on trigger so that it does not mess up the order\n      // while we loop through.\n      //\n      // Here we slice on off so that the loop in trigger\n      // can continue using it's old reference to loop without\n      // messing up the order.\n\n      this.listeners[type] = this.listeners[type].slice(0);\n      this.listeners[type].splice(index, 1);\n      return index > -1;\n    }\n    /**\n     * Trigger an event of the specified type on this stream. Any additional\n     * arguments to this function are passed as parameters to event listeners.\n     *\n     * @param {string} type the event name\n     */;\n\n    _proto.trigger = function trigger(type) {\n      var callbacks = this.listeners[type];\n      if (!callbacks) {\n        return;\n      } // Slicing the arguments on every invocation of this method\n      // can add a significant amount of overhead. Avoid the\n      // intermediate object creation for the common case of a\n      // single callback argument\n\n      if (arguments.length === 2) {\n        var length = callbacks.length;\n        for (var i = 0; i < length; ++i) {\n          callbacks[i].call(this, arguments[1]);\n        }\n      } else {\n        var args = Array.prototype.slice.call(arguments, 1);\n        var _length = callbacks.length;\n        for (var _i = 0; _i < _length; ++_i) {\n          callbacks[_i].apply(this, args);\n        }\n      }\n    }\n    /**\n     * Destroys the stream and cleans up.\n     */;\n\n    _proto.dispose = function dispose() {\n      this.listeners = {};\n    }\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     *\n     * @param {Stream} destination the stream that will receive all `data` events\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */;\n\n    _proto.pipe = function pipe(destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n    };\n    return Stream;\n  }();\n\n  var atob$1 = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n  function decodeB64ToUint8Array$1(b64Text) {\n    var decodedString = atob$1(b64Text);\n    var array = new Uint8Array(decodedString.length);\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  /*! @name m3u8-parser @version 6.0.0 @license Apache-2.0 */\n\n  /**\n   * @file m3u8/line-stream.js\n   */\n  /**\n   * A stream that buffers string input and generates a `data` event for each\n   * line.\n   *\n   * @class LineStream\n   * @extends Stream\n   */\n\n  class LineStream extends Stream {\n    constructor() {\n      super();\n      this.buffer = '';\n    }\n    /**\n     * Add new data to be parsed.\n     *\n     * @param {string} data the text to process\n     */\n\n    push(data) {\n      let nextNewline;\n      this.buffer += data;\n      nextNewline = this.buffer.indexOf('\\n');\n      for (; nextNewline > -1; nextNewline = this.buffer.indexOf('\\n')) {\n        this.trigger('data', this.buffer.substring(0, nextNewline));\n        this.buffer = this.buffer.substring(nextNewline + 1);\n      }\n    }\n  }\n  const TAB = String.fromCharCode(0x09);\n  const parseByterange = function (byterangeString) {\n    // optionally match and capture 0+ digits before `@`\n    // optionally match and capture 0+ digits after `@`\n    const match = /([0-9.]*)?@?([0-9.]*)?/.exec(byterangeString || '');\n    const result = {};\n    if (match[1]) {\n      result.length = parseInt(match[1], 10);\n    }\n    if (match[2]) {\n      result.offset = parseInt(match[2], 10);\n    }\n    return result;\n  };\n  /**\n   * \"forgiving\" attribute list psuedo-grammar:\n   * attributes -> keyvalue (',' keyvalue)*\n   * keyvalue   -> key '=' value\n   * key        -> [^=]*\n   * value      -> '\"' [^\"]* '\"' | [^,]*\n   */\n\n  const attributeSeparator = function () {\n    const key = '[^=]*';\n    const value = '\"[^\"]*\"|[^,]*';\n    const keyvalue = '(?:' + key + ')=(?:' + value + ')';\n    return new RegExp('(?:^|,)(' + keyvalue + ')');\n  };\n  /**\n   * Parse attributes from a line given the separator\n   *\n   * @param {string} attributes the attribute line to parse\n   */\n\n  const parseAttributes$1 = function (attributes) {\n    const result = {};\n    if (!attributes) {\n      return result;\n    } // split the string using attributes as the separator\n\n    const attrs = attributes.split(attributeSeparator());\n    let i = attrs.length;\n    let attr;\n    while (i--) {\n      // filter out unmatched portions of the string\n      if (attrs[i] === '') {\n        continue;\n      } // split the key and value\n\n      attr = /([^=]*)=(.*)/.exec(attrs[i]).slice(1); // trim whitespace and remove optional quotes around the value\n\n      attr[0] = attr[0].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^\\s+|\\s+$/g, '');\n      attr[1] = attr[1].replace(/^['\"](.*)['\"]$/g, '$1');\n      result[attr[0]] = attr[1];\n    }\n    return result;\n  };\n  /**\n   * A line-level M3U8 parser event stream. It expects to receive input one\n   * line at a time and performs a context-free parse of its contents. A stream\n   * interpretation of a manifest can be useful if the manifest is expected to\n   * be too large to fit comfortably into memory or the entirety of the input\n   * is not immediately available. Otherwise, it's probably much easier to work\n   * with a regular `Parser` object.\n   *\n   * Produces `data` events with an object that captures the parser's\n   * interpretation of the input. That object has a property `tag` that is one\n   * of `uri`, `comment`, or `tag`. URIs only have a single additional\n   * property, `line`, which captures the entirety of the input without\n   * interpretation. Comments similarly have a single additional property\n   * `text` which is the input without the leading `#`.\n   *\n   * Tags always have a property `tagType` which is the lower-cased version of\n   * the M3U8 directive without the `#EXT` or `#EXT-X-` prefix. For instance,\n   * `#EXT-X-MEDIA-SEQUENCE` becomes `media-sequence` when parsed. Unrecognized\n   * tags are given the tag type `unknown` and a single additional property\n   * `data` with the remainder of the input.\n   *\n   * @class ParseStream\n   * @extends Stream\n   */\n\n  class ParseStream extends Stream {\n    constructor() {\n      super();\n      this.customParsers = [];\n      this.tagMappers = [];\n    }\n    /**\n     * Parses an additional line of input.\n     *\n     * @param {string} line a single line of an M3U8 file to parse\n     */\n\n    push(line) {\n      let match;\n      let event; // strip whitespace\n\n      line = line.trim();\n      if (line.length === 0) {\n        // ignore empty lines\n        return;\n      } // URIs\n\n      if (line[0] !== '#') {\n        this.trigger('data', {\n          type: 'uri',\n          uri: line\n        });\n        return;\n      } // map tags\n\n      const newLines = this.tagMappers.reduce((acc, mapper) => {\n        const mappedLine = mapper(line); // skip if unchanged\n\n        if (mappedLine === line) {\n          return acc;\n        }\n        return acc.concat([mappedLine]);\n      }, [line]);\n      newLines.forEach(newLine => {\n        for (let i = 0; i < this.customParsers.length; i++) {\n          if (this.customParsers[i].call(this, newLine)) {\n            return;\n          }\n        } // Comments\n\n        if (newLine.indexOf('#EXT') !== 0) {\n          this.trigger('data', {\n            type: 'comment',\n            text: newLine.slice(1)\n          });\n          return;\n        } // strip off any carriage returns here so the regex matching\n        // doesn't have to account for them.\n\n        newLine = newLine.replace('\\r', ''); // Tags\n\n        match = /^#EXTM3U/.exec(newLine);\n        if (match) {\n          this.trigger('data', {\n            type: 'tag',\n            tagType: 'm3u'\n          });\n          return;\n        }\n        match = /^#EXTINF:([0-9\\.]*)?,?(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'inf'\n          };\n          if (match[1]) {\n            event.duration = parseFloat(match[1]);\n          }\n          if (match[2]) {\n            event.title = match[2];\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-TARGETDURATION:([0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'targetduration'\n          };\n          if (match[1]) {\n            event.duration = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-VERSION:([0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'version'\n          };\n          if (match[1]) {\n            event.version = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MEDIA-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media-sequence'\n          };\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-DISCONTINUITY-SEQUENCE:(\\-?[0-9.]*)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'discontinuity-sequence'\n          };\n          if (match[1]) {\n            event.number = parseInt(match[1], 10);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PLAYLIST-TYPE:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'playlist-type'\n          };\n          if (match[1]) {\n            event.playlistType = match[1];\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-BYTERANGE:(.*)?$/.exec(newLine);\n        if (match) {\n          event = _extends$1(parseByterange(match[1]), {\n            type: 'tag',\n            tagType: 'byterange'\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-ALLOW-CACHE:(YES|NO)?/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'allow-cache'\n          };\n          if (match[1]) {\n            event.allowed = !/NO/.test(match[1]);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MAP:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'map'\n          };\n          if (match[1]) {\n            const attributes = parseAttributes$1(match[1]);\n            if (attributes.URI) {\n              event.uri = attributes.URI;\n            }\n            if (attributes.BYTERANGE) {\n              event.byterange = parseByterange(attributes.BYTERANGE);\n            }\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-STREAM-INF:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'stream-inf'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            if (event.attributes.RESOLUTION) {\n              const split = event.attributes.RESOLUTION.split('x');\n              const resolution = {};\n              if (split[0]) {\n                resolution.width = parseInt(split[0], 10);\n              }\n              if (split[1]) {\n                resolution.height = parseInt(split[1], 10);\n              }\n              event.attributes.RESOLUTION = resolution;\n            }\n            if (event.attributes.BANDWIDTH) {\n              event.attributes.BANDWIDTH = parseInt(event.attributes.BANDWIDTH, 10);\n            }\n            if (event.attributes['FRAME-RATE']) {\n              event.attributes['FRAME-RATE'] = parseFloat(event.attributes['FRAME-RATE']);\n            }\n            if (event.attributes['PROGRAM-ID']) {\n              event.attributes['PROGRAM-ID'] = parseInt(event.attributes['PROGRAM-ID'], 10);\n            }\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-MEDIA:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'media'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-ENDLIST/.exec(newLine);\n        if (match) {\n          this.trigger('data', {\n            type: 'tag',\n            tagType: 'endlist'\n          });\n          return;\n        }\n        match = /^#EXT-X-DISCONTINUITY/.exec(newLine);\n        if (match) {\n          this.trigger('data', {\n            type: 'tag',\n            tagType: 'discontinuity'\n          });\n          return;\n        }\n        match = /^#EXT-X-PROGRAM-DATE-TIME:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'program-date-time'\n          };\n          if (match[1]) {\n            event.dateTimeString = match[1];\n            event.dateTimeObject = new Date(match[1]);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-KEY:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'key'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]); // parse the IV string into a Uint32Array\n\n            if (event.attributes.IV) {\n              if (event.attributes.IV.substring(0, 2).toLowerCase() === '0x') {\n                event.attributes.IV = event.attributes.IV.substring(2);\n              }\n              event.attributes.IV = event.attributes.IV.match(/.{8}/g);\n              event.attributes.IV[0] = parseInt(event.attributes.IV[0], 16);\n              event.attributes.IV[1] = parseInt(event.attributes.IV[1], 16);\n              event.attributes.IV[2] = parseInt(event.attributes.IV[2], 16);\n              event.attributes.IV[3] = parseInt(event.attributes.IV[3], 16);\n              event.attributes.IV = new Uint32Array(event.attributes.IV);\n            }\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-START:(.*)$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'start'\n          };\n          if (match[1]) {\n            event.attributes = parseAttributes$1(match[1]);\n            event.attributes['TIME-OFFSET'] = parseFloat(event.attributes['TIME-OFFSET']);\n            event.attributes.PRECISE = /YES/.test(event.attributes.PRECISE);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-OUT-CONT:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out-cont'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-OUT:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-out'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-CUE-IN:(.*)?$/.exec(newLine);\n        if (match) {\n          event = {\n            type: 'tag',\n            tagType: 'cue-in'\n          };\n          if (match[1]) {\n            event.data = match[1];\n          } else {\n            event.data = '';\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-SKIP:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'skip'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          if (event.attributes.hasOwnProperty('SKIPPED-SEGMENTS')) {\n            event.attributes['SKIPPED-SEGMENTS'] = parseInt(event.attributes['SKIPPED-SEGMENTS'], 10);\n          }\n          if (event.attributes.hasOwnProperty('RECENTLY-REMOVED-DATERANGES')) {\n            event.attributes['RECENTLY-REMOVED-DATERANGES'] = event.attributes['RECENTLY-REMOVED-DATERANGES'].split(TAB);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PART:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['DURATION'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['INDEPENDENT', 'GAP'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n          if (event.attributes.hasOwnProperty('BYTERANGE')) {\n            event.attributes.byterange = parseByterange(event.attributes.BYTERANGE);\n          }\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-SERVER-CONTROL:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'server-control'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['CAN-SKIP-UNTIL', 'PART-HOLD-BACK', 'HOLD-BACK'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          ['CAN-SKIP-DATERANGES', 'CAN-BLOCK-RELOAD'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = /YES/.test(event.attributes[key]);\n            }\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PART-INF:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'part-inf'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['PART-TARGET'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseFloat(event.attributes[key]);\n            }\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-PRELOAD-HINT:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'preload-hint'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['BYTERANGE-START', 'BYTERANGE-LENGTH'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n              const subkey = key === 'BYTERANGE-LENGTH' ? 'length' : 'offset';\n              event.attributes.byterange = event.attributes.byterange || {};\n              event.attributes.byterange[subkey] = event.attributes[key]; // only keep the parsed byterange object.\n\n              delete event.attributes[key];\n            }\n          });\n          this.trigger('data', event);\n          return;\n        }\n        match = /^#EXT-X-RENDITION-REPORT:(.*)$/.exec(newLine);\n        if (match && match[1]) {\n          event = {\n            type: 'tag',\n            tagType: 'rendition-report'\n          };\n          event.attributes = parseAttributes$1(match[1]);\n          ['LAST-MSN', 'LAST-PART'].forEach(function (key) {\n            if (event.attributes.hasOwnProperty(key)) {\n              event.attributes[key] = parseInt(event.attributes[key], 10);\n            }\n          });\n          this.trigger('data', event);\n          return;\n        } // unknown tag type\n\n        this.trigger('data', {\n          type: 'tag',\n          data: newLine.slice(4)\n        });\n      });\n    }\n    /**\n     * Add a parser for custom headers\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.customType   the custom type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n\n    addParser({\n      expression,\n      customType,\n      dataParser,\n      segment\n    }) {\n      if (typeof dataParser !== 'function') {\n        dataParser = line => line;\n      }\n      this.customParsers.push(line => {\n        const match = expression.exec(line);\n        if (match) {\n          this.trigger('data', {\n            type: 'custom',\n            data: dataParser(line),\n            customType,\n            segment\n          });\n          return true;\n        }\n      });\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n\n    addTagMapper({\n      expression,\n      map\n    }) {\n      const mapFn = line => {\n        if (expression.test(line)) {\n          return map(line);\n        }\n        return line;\n      };\n      this.tagMappers.push(mapFn);\n    }\n  }\n  const camelCase = str => str.toLowerCase().replace(/-(\\w)/g, a => a[1].toUpperCase());\n  const camelCaseKeys = function (attributes) {\n    const result = {};\n    Object.keys(attributes).forEach(function (key) {\n      result[camelCase(key)] = attributes[key];\n    });\n    return result;\n  }; // set SERVER-CONTROL hold back based upon targetDuration and partTargetDuration\n  // we need this helper because defaults are based upon targetDuration and\n  // partTargetDuration being set, but they may not be if SERVER-CONTROL appears before\n  // target durations are set.\n\n  const setHoldBack = function (manifest) {\n    const {\n      serverControl,\n      targetDuration,\n      partTargetDuration\n    } = manifest;\n    if (!serverControl) {\n      return;\n    }\n    const tag = '#EXT-X-SERVER-CONTROL';\n    const hb = 'holdBack';\n    const phb = 'partHoldBack';\n    const minTargetDuration = targetDuration && targetDuration * 3;\n    const minPartDuration = partTargetDuration && partTargetDuration * 2;\n    if (targetDuration && !serverControl.hasOwnProperty(hb)) {\n      serverControl[hb] = minTargetDuration;\n      this.trigger('info', {\n        message: `${tag} defaulting HOLD-BACK to targetDuration * 3 (${minTargetDuration}).`\n      });\n    }\n    if (minTargetDuration && serverControl[hb] < minTargetDuration) {\n      this.trigger('warn', {\n        message: `${tag} clamping HOLD-BACK (${serverControl[hb]}) to targetDuration * 3 (${minTargetDuration})`\n      });\n      serverControl[hb] = minTargetDuration;\n    } // default no part hold back to part target duration * 3\n\n    if (partTargetDuration && !serverControl.hasOwnProperty(phb)) {\n      serverControl[phb] = partTargetDuration * 3;\n      this.trigger('info', {\n        message: `${tag} defaulting PART-HOLD-BACK to partTargetDuration * 3 (${serverControl[phb]}).`\n      });\n    } // if part hold back is too small default it to part target duration * 2\n\n    if (partTargetDuration && serverControl[phb] < minPartDuration) {\n      this.trigger('warn', {\n        message: `${tag} clamping PART-HOLD-BACK (${serverControl[phb]}) to partTargetDuration * 2 (${minPartDuration}).`\n      });\n      serverControl[phb] = minPartDuration;\n    }\n  };\n  /**\n   * A parser for M3U8 files. The current interpretation of the input is\n   * exposed as a property `manifest` on parser objects. It's just two lines to\n   * create and parse a manifest once you have the contents available as a string:\n   *\n   * ```js\n   * var parser = new m3u8.Parser();\n   * parser.push(xhr.responseText);\n   * ```\n   *\n   * New input can later be applied to update the manifest object by calling\n   * `push` again.\n   *\n   * The parser attempts to create a usable manifest object even if the\n   * underlying input is somewhat nonsensical. It emits `info` and `warning`\n   * events during the parse if it encounters input that seems invalid or\n   * requires some property of the manifest object to be defaulted.\n   *\n   * @class Parser\n   * @extends Stream\n   */\n\n  class Parser extends Stream {\n    constructor() {\n      super();\n      this.lineStream = new LineStream();\n      this.parseStream = new ParseStream();\n      this.lineStream.pipe(this.parseStream);\n      /* eslint-disable consistent-this */\n\n      const self = this;\n      /* eslint-enable consistent-this */\n\n      const uris = [];\n      let currentUri = {}; // if specified, the active EXT-X-MAP definition\n\n      let currentMap; // if specified, the active decryption key\n\n      let key;\n      let hasParts = false;\n      const noop = function () {};\n      const defaultMediaGroups = {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      }; // This is the Widevine UUID from DASH IF IOP. The same exact string is\n      // used in MPDs with Widevine encrypted streams.\n\n      const widevineUuid = 'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed'; // group segments into numbered timelines delineated by discontinuities\n\n      let currentTimeline = 0; // the manifest is empty until the parse stream begins delivering data\n\n      this.manifest = {\n        allowCache: true,\n        discontinuityStarts: [],\n        segments: []\n      }; // keep track of the last seen segment's byte range end, as segments are not required\n      // to provide the offset, in which case it defaults to the next byte after the\n      // previous segment\n\n      let lastByterangeEnd = 0; // keep track of the last seen part's byte range end.\n\n      let lastPartByterangeEnd = 0;\n      this.on('end', () => {\n        // only add preloadSegment if we don't yet have a uri for it.\n        // and we actually have parts/preloadHints\n        if (currentUri.uri || !currentUri.parts && !currentUri.preloadHints) {\n          return;\n        }\n        if (!currentUri.map && currentMap) {\n          currentUri.map = currentMap;\n        }\n        if (!currentUri.key && key) {\n          currentUri.key = key;\n        }\n        if (!currentUri.timeline && typeof currentTimeline === 'number') {\n          currentUri.timeline = currentTimeline;\n        }\n        this.manifest.preloadSegment = currentUri;\n      }); // update the manifest with the m3u8 entry from the parse stream\n\n      this.parseStream.on('data', function (entry) {\n        let mediaGroup;\n        let rendition;\n        ({\n          tag() {\n            // switch based on the tag type\n            (({\n              version() {\n                if (entry.version) {\n                  this.manifest.version = entry.version;\n                }\n              },\n              'allow-cache'() {\n                this.manifest.allowCache = entry.allowed;\n                if (!('allowed' in entry)) {\n                  this.trigger('info', {\n                    message: 'defaulting allowCache to YES'\n                  });\n                  this.manifest.allowCache = true;\n                }\n              },\n              byterange() {\n                const byterange = {};\n                if ('length' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.length = entry.length;\n                  if (!('offset' in entry)) {\n                    /*\n                     * From the latest spec (as of this writing):\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.2\n                     *\n                     * Same text since EXT-X-BYTERANGE's introduction in draft 7:\n                     * https://tools.ietf.org/html/draft-pantos-http-live-streaming-07#section-3.3.1)\n                     *\n                     * \"If o [offset] is not present, the sub-range begins at the next byte\n                     * following the sub-range of the previous media segment.\"\n                     */\n                    entry.offset = lastByterangeEnd;\n                  }\n                }\n                if ('offset' in entry) {\n                  currentUri.byterange = byterange;\n                  byterange.offset = entry.offset;\n                }\n                lastByterangeEnd = byterange.offset + byterange.length;\n              },\n              endlist() {\n                this.manifest.endList = true;\n              },\n              inf() {\n                if (!('mediaSequence' in this.manifest)) {\n                  this.manifest.mediaSequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting media sequence to zero'\n                  });\n                }\n                if (!('discontinuitySequence' in this.manifest)) {\n                  this.manifest.discontinuitySequence = 0;\n                  this.trigger('info', {\n                    message: 'defaulting discontinuity sequence to zero'\n                  });\n                }\n                if (entry.duration > 0) {\n                  currentUri.duration = entry.duration;\n                }\n                if (entry.duration === 0) {\n                  currentUri.duration = 0.01;\n                  this.trigger('info', {\n                    message: 'updating zero segment duration to a small value'\n                  });\n                }\n                this.manifest.segments = uris;\n              },\n              key() {\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without attribute list'\n                  });\n                  return;\n                } // clear the active encryption key\n\n                if (entry.attributes.METHOD === 'NONE') {\n                  key = null;\n                  return;\n                }\n                if (!entry.attributes.URI) {\n                  this.trigger('warn', {\n                    message: 'ignoring key declaration without URI'\n                  });\n                  return;\n                }\n                if (entry.attributes.KEYFORMAT === 'com.apple.streamingkeydelivery') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.apple.fps.1_0'] = {\n                    attributes: entry.attributes\n                  };\n                  return;\n                }\n                if (entry.attributes.KEYFORMAT === 'com.microsoft.playready') {\n                  this.manifest.contentProtection = this.manifest.contentProtection || {}; // TODO: add full support for this.\n\n                  this.manifest.contentProtection['com.microsoft.playready'] = {\n                    uri: entry.attributes.URI\n                  };\n                  return;\n                } // check if the content is encrypted for Widevine\n                // Widevine/HLS spec: https://storage.googleapis.com/wvdocs/Widevine_DRM_HLS.pdf\n\n                if (entry.attributes.KEYFORMAT === widevineUuid) {\n                  const VALID_METHODS = ['SAMPLE-AES', 'SAMPLE-AES-CTR', 'SAMPLE-AES-CENC'];\n                  if (VALID_METHODS.indexOf(entry.attributes.METHOD) === -1) {\n                    this.trigger('warn', {\n                      message: 'invalid key method provided for Widevine'\n                    });\n                    return;\n                  }\n                  if (entry.attributes.METHOD === 'SAMPLE-AES-CENC') {\n                    this.trigger('warn', {\n                      message: 'SAMPLE-AES-CENC is deprecated, please use SAMPLE-AES-CTR instead'\n                    });\n                  }\n                  if (entry.attributes.URI.substring(0, 23) !== 'data:text/plain;base64,') {\n                    this.trigger('warn', {\n                      message: 'invalid key URI provided for Widevine'\n                    });\n                    return;\n                  }\n                  if (!(entry.attributes.KEYID && entry.attributes.KEYID.substring(0, 2) === '0x')) {\n                    this.trigger('warn', {\n                      message: 'invalid key ID provided for Widevine'\n                    });\n                    return;\n                  } // if Widevine key attributes are valid, store them as `contentProtection`\n                  // on the manifest to emulate Widevine tag structure in a DASH mpd\n\n                  this.manifest.contentProtection = this.manifest.contentProtection || {};\n                  this.manifest.contentProtection['com.widevine.alpha'] = {\n                    attributes: {\n                      schemeIdUri: entry.attributes.KEYFORMAT,\n                      // remove '0x' from the key id string\n                      keyId: entry.attributes.KEYID.substring(2)\n                    },\n                    // decode the base64-encoded PSSH box\n                    pssh: decodeB64ToUint8Array$1(entry.attributes.URI.split(',')[1])\n                  };\n                  return;\n                }\n                if (!entry.attributes.METHOD) {\n                  this.trigger('warn', {\n                    message: 'defaulting key method to AES-128'\n                  });\n                } // setup an encryption key for upcoming segments\n\n                key = {\n                  method: entry.attributes.METHOD || 'AES-128',\n                  uri: entry.attributes.URI\n                };\n                if (typeof entry.attributes.IV !== 'undefined') {\n                  key.iv = entry.attributes.IV;\n                }\n              },\n              'media-sequence'() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid media sequence: ' + entry.number\n                  });\n                  return;\n                }\n                this.manifest.mediaSequence = entry.number;\n              },\n              'discontinuity-sequence'() {\n                if (!isFinite(entry.number)) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid discontinuity sequence: ' + entry.number\n                  });\n                  return;\n                }\n                this.manifest.discontinuitySequence = entry.number;\n                currentTimeline = entry.number;\n              },\n              'playlist-type'() {\n                if (!/VOD|EVENT/.test(entry.playlistType)) {\n                  this.trigger('warn', {\n                    message: 'ignoring unknown playlist type: ' + entry.playlist\n                  });\n                  return;\n                }\n                this.manifest.playlistType = entry.playlistType;\n              },\n              map() {\n                currentMap = {};\n                if (entry.uri) {\n                  currentMap.uri = entry.uri;\n                }\n                if (entry.byterange) {\n                  currentMap.byterange = entry.byterange;\n                }\n                if (key) {\n                  currentMap.key = key;\n                }\n              },\n              'stream-inf'() {\n                this.manifest.playlists = uris;\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n                if (!entry.attributes) {\n                  this.trigger('warn', {\n                    message: 'ignoring empty stream-inf attributes'\n                  });\n                  return;\n                }\n                if (!currentUri.attributes) {\n                  currentUri.attributes = {};\n                }\n                _extends$1(currentUri.attributes, entry.attributes);\n              },\n              media() {\n                this.manifest.mediaGroups = this.manifest.mediaGroups || defaultMediaGroups;\n                if (!(entry.attributes && entry.attributes.TYPE && entry.attributes['GROUP-ID'] && entry.attributes.NAME)) {\n                  this.trigger('warn', {\n                    message: 'ignoring incomplete or missing media group'\n                  });\n                  return;\n                } // find the media group, creating defaults as necessary\n\n                const mediaGroupType = this.manifest.mediaGroups[entry.attributes.TYPE];\n                mediaGroupType[entry.attributes['GROUP-ID']] = mediaGroupType[entry.attributes['GROUP-ID']] || {};\n                mediaGroup = mediaGroupType[entry.attributes['GROUP-ID']]; // collect the rendition metadata\n\n                rendition = {\n                  default: /yes/i.test(entry.attributes.DEFAULT)\n                };\n                if (rendition.default) {\n                  rendition.autoselect = true;\n                } else {\n                  rendition.autoselect = /yes/i.test(entry.attributes.AUTOSELECT);\n                }\n                if (entry.attributes.LANGUAGE) {\n                  rendition.language = entry.attributes.LANGUAGE;\n                }\n                if (entry.attributes.URI) {\n                  rendition.uri = entry.attributes.URI;\n                }\n                if (entry.attributes['INSTREAM-ID']) {\n                  rendition.instreamId = entry.attributes['INSTREAM-ID'];\n                }\n                if (entry.attributes.CHARACTERISTICS) {\n                  rendition.characteristics = entry.attributes.CHARACTERISTICS;\n                }\n                if (entry.attributes.FORCED) {\n                  rendition.forced = /yes/i.test(entry.attributes.FORCED);\n                } // insert the new rendition\n\n                mediaGroup[entry.attributes.NAME] = rendition;\n              },\n              discontinuity() {\n                currentTimeline += 1;\n                currentUri.discontinuity = true;\n                this.manifest.discontinuityStarts.push(uris.length);\n              },\n              'program-date-time'() {\n                if (typeof this.manifest.dateTimeString === 'undefined') {\n                  // PROGRAM-DATE-TIME is a media-segment tag, but for backwards\n                  // compatibility, we add the first occurence of the PROGRAM-DATE-TIME tag\n                  // to the manifest object\n                  // TODO: Consider removing this in future major version\n                  this.manifest.dateTimeString = entry.dateTimeString;\n                  this.manifest.dateTimeObject = entry.dateTimeObject;\n                }\n                currentUri.dateTimeString = entry.dateTimeString;\n                currentUri.dateTimeObject = entry.dateTimeObject;\n              },\n              targetduration() {\n                if (!isFinite(entry.duration) || entry.duration < 0) {\n                  this.trigger('warn', {\n                    message: 'ignoring invalid target duration: ' + entry.duration\n                  });\n                  return;\n                }\n                this.manifest.targetDuration = entry.duration;\n                setHoldBack.call(this, this.manifest);\n              },\n              start() {\n                if (!entry.attributes || isNaN(entry.attributes['TIME-OFFSET'])) {\n                  this.trigger('warn', {\n                    message: 'ignoring start declaration without appropriate attribute list'\n                  });\n                  return;\n                }\n                this.manifest.start = {\n                  timeOffset: entry.attributes['TIME-OFFSET'],\n                  precise: entry.attributes.PRECISE\n                };\n              },\n              'cue-out'() {\n                currentUri.cueOut = entry.data;\n              },\n              'cue-out-cont'() {\n                currentUri.cueOutCont = entry.data;\n              },\n              'cue-in'() {\n                currentUri.cueIn = entry.data;\n              },\n              'skip'() {\n                this.manifest.skip = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-SKIP', entry.attributes, ['SKIPPED-SEGMENTS']);\n              },\n              'part'() {\n                hasParts = true; // parts are always specifed before a segment\n\n                const segmentIndex = this.manifest.segments.length;\n                const part = camelCaseKeys(entry.attributes);\n                currentUri.parts = currentUri.parts || [];\n                currentUri.parts.push(part);\n                if (part.byterange) {\n                  if (!part.byterange.hasOwnProperty('offset')) {\n                    part.byterange.offset = lastPartByterangeEnd;\n                  }\n                  lastPartByterangeEnd = part.byterange.offset + part.byterange.length;\n                }\n                const partIndex = currentUri.parts.length - 1;\n                this.warnOnMissingAttributes_(`#EXT-X-PART #${partIndex} for segment #${segmentIndex}`, entry.attributes, ['URI', 'DURATION']);\n                if (this.manifest.renditionReports) {\n                  this.manifest.renditionReports.forEach((r, i) => {\n                    if (!r.hasOwnProperty('lastPart')) {\n                      this.trigger('warn', {\n                        message: `#EXT-X-RENDITION-REPORT #${i} lacks required attribute(s): LAST-PART`\n                      });\n                    }\n                  });\n                }\n              },\n              'server-control'() {\n                const attrs = this.manifest.serverControl = camelCaseKeys(entry.attributes);\n                if (!attrs.hasOwnProperty('canBlockReload')) {\n                  attrs.canBlockReload = false;\n                  this.trigger('info', {\n                    message: '#EXT-X-SERVER-CONTROL defaulting CAN-BLOCK-RELOAD to false'\n                  });\n                }\n                setHoldBack.call(this, this.manifest);\n                if (attrs.canSkipDateranges && !attrs.hasOwnProperty('canSkipUntil')) {\n                  this.trigger('warn', {\n                    message: '#EXT-X-SERVER-CONTROL lacks required attribute CAN-SKIP-UNTIL which is required when CAN-SKIP-DATERANGES is set'\n                  });\n                }\n              },\n              'preload-hint'() {\n                // parts are always specifed before a segment\n                const segmentIndex = this.manifest.segments.length;\n                const hint = camelCaseKeys(entry.attributes);\n                const isPart = hint.type && hint.type === 'PART';\n                currentUri.preloadHints = currentUri.preloadHints || [];\n                currentUri.preloadHints.push(hint);\n                if (hint.byterange) {\n                  if (!hint.byterange.hasOwnProperty('offset')) {\n                    // use last part byterange end or zero if not a part.\n                    hint.byterange.offset = isPart ? lastPartByterangeEnd : 0;\n                    if (isPart) {\n                      lastPartByterangeEnd = hint.byterange.offset + hint.byterange.length;\n                    }\n                  }\n                }\n                const index = currentUri.preloadHints.length - 1;\n                this.warnOnMissingAttributes_(`#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex}`, entry.attributes, ['TYPE', 'URI']);\n                if (!hint.type) {\n                  return;\n                } // search through all preload hints except for the current one for\n                // a duplicate type.\n\n                for (let i = 0; i < currentUri.preloadHints.length - 1; i++) {\n                  const otherHint = currentUri.preloadHints[i];\n                  if (!otherHint.type) {\n                    continue;\n                  }\n                  if (otherHint.type === hint.type) {\n                    this.trigger('warn', {\n                      message: `#EXT-X-PRELOAD-HINT #${index} for segment #${segmentIndex} has the same TYPE ${hint.type} as preload hint #${i}`\n                    });\n                  }\n                }\n              },\n              'rendition-report'() {\n                const report = camelCaseKeys(entry.attributes);\n                this.manifest.renditionReports = this.manifest.renditionReports || [];\n                this.manifest.renditionReports.push(report);\n                const index = this.manifest.renditionReports.length - 1;\n                const required = ['LAST-MSN', 'URI'];\n                if (hasParts) {\n                  required.push('LAST-PART');\n                }\n                this.warnOnMissingAttributes_(`#EXT-X-RENDITION-REPORT #${index}`, entry.attributes, required);\n              },\n              'part-inf'() {\n                this.manifest.partInf = camelCaseKeys(entry.attributes);\n                this.warnOnMissingAttributes_('#EXT-X-PART-INF', entry.attributes, ['PART-TARGET']);\n                if (this.manifest.partInf.partTarget) {\n                  this.manifest.partTargetDuration = this.manifest.partInf.partTarget;\n                }\n                setHoldBack.call(this, this.manifest);\n              }\n            })[entry.tagType] || noop).call(self);\n          },\n          uri() {\n            currentUri.uri = entry.uri;\n            uris.push(currentUri); // if no explicit duration was declared, use the target duration\n\n            if (this.manifest.targetDuration && !('duration' in currentUri)) {\n              this.trigger('warn', {\n                message: 'defaulting segment duration to the target duration'\n              });\n              currentUri.duration = this.manifest.targetDuration;\n            } // annotate with encryption information, if necessary\n\n            if (key) {\n              currentUri.key = key;\n            }\n            currentUri.timeline = currentTimeline; // annotate with initialization segment information, if necessary\n\n            if (currentMap) {\n              currentUri.map = currentMap;\n            } // reset the last byterange end as it needs to be 0 between parts\n\n            lastPartByterangeEnd = 0; // prepare for the next URI\n\n            currentUri = {};\n          },\n          comment() {// comments are not important for playback\n          },\n          custom() {\n            // if this is segment-level data attach the output to the segment\n            if (entry.segment) {\n              currentUri.custom = currentUri.custom || {};\n              currentUri.custom[entry.customType] = entry.data; // if this is manifest-level data attach to the top level manifest object\n            } else {\n              this.manifest.custom = this.manifest.custom || {};\n              this.manifest.custom[entry.customType] = entry.data;\n            }\n          }\n        })[entry.type].call(self);\n      });\n    }\n    warnOnMissingAttributes_(identifier, attributes, required) {\n      const missing = [];\n      required.forEach(function (key) {\n        if (!attributes.hasOwnProperty(key)) {\n          missing.push(key);\n        }\n      });\n      if (missing.length) {\n        this.trigger('warn', {\n          message: `${identifier} lacks required attribute(s): ${missing.join(', ')}`\n        });\n      }\n    }\n    /**\n     * Parse the input string and update the manifest object.\n     *\n     * @param {string} chunk a potentially incomplete portion of the manifest\n     */\n\n    push(chunk) {\n      this.lineStream.push(chunk);\n    }\n    /**\n     * Flush any remaining input. This can be handy if the last line of an M3U8\n     * manifest did not contain a trailing newline but the file has been\n     * completely received.\n     */\n\n    end() {\n      // flush any buffered input\n      this.lineStream.push('\\n');\n      this.trigger('end');\n    }\n    /**\n     * Add an additional parser for non-standard tags\n     *\n     * @param {Object}   options              a map of options for the added parser\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {string}   options.type         the type to register to the output\n     * @param {Function} [options.dataParser] function to parse the line into an object\n     * @param {boolean}  [options.segment]    should tag data be attached to the segment object\n     */\n\n    addParser(options) {\n      this.parseStream.addParser(options);\n    }\n    /**\n     * Add a custom header mapper\n     *\n     * @param {Object}   options\n     * @param {RegExp}   options.expression   a regular expression to match the custom header\n     * @param {Function} options.map          function to translate tag into a different tag\n     */\n\n    addTagMapper(options) {\n      this.parseStream.addTagMapper(options);\n    }\n  }\n\n  var regexs = {\n    // to determine mime types\n    mp4: /^(av0?1|avc0?[1234]|vp0?9|flac|opus|mp3|mp4a|mp4v|stpp.ttml.im1t)/,\n    webm: /^(vp0?[89]|av0?1|opus|vorbis)/,\n    ogg: /^(vp0?[89]|theora|flac|opus|vorbis)/,\n    // to determine if a codec is audio or video\n    video: /^(av0?1|avc0?[1234]|vp0?[89]|hvc1|hev1|theora|mp4v)/,\n    audio: /^(mp4a|flac|vorbis|opus|ac-[34]|ec-3|alac|mp3|speex|aac)/,\n    text: /^(stpp.ttml.im1t)/,\n    // mux.js support regex\n    muxerVideo: /^(avc0?1)/,\n    muxerAudio: /^(mp4a)/,\n    // match nothing as muxer does not support text right now.\n    // there cannot never be a character before the start of a string\n    // so this matches nothing.\n    muxerText: /a^/\n  };\n  var mediaTypes = ['video', 'audio', 'text'];\n  var upperMediaTypes = ['Video', 'Audio', 'Text'];\n  /**\n   * Replace the old apple-style `avc1.<dd>.<dd>` codec string with the standard\n   * `avc1.<hhhhhh>`\n   *\n   * @param {string} codec\n   *        Codec string to translate\n   * @return {string}\n   *         The translated codec string\n   */\n\n  var translateLegacyCodec = function translateLegacyCodec(codec) {\n    if (!codec) {\n      return codec;\n    }\n    return codec.replace(/avc1\\.(\\d+)\\.(\\d+)/i, function (orig, profile, avcLevel) {\n      var profileHex = ('00' + Number(profile).toString(16)).slice(-2);\n      var avcLevelHex = ('00' + Number(avcLevel).toString(16)).slice(-2);\n      return 'avc1.' + profileHex + '00' + avcLevelHex;\n    });\n  };\n  /**\n   * @typedef {Object} ParsedCodecInfo\n   * @property {number} codecCount\n   *           Number of codecs parsed\n   * @property {string} [videoCodec]\n   *           Parsed video codec (if found)\n   * @property {string} [videoObjectTypeIndicator]\n   *           Video object type indicator (if found)\n   * @property {string|null} audioProfile\n   *           Audio profile\n   */\n\n  /**\n   * Parses a codec string to retrieve the number of codecs specified, the video codec and\n   * object type indicator, and the audio profile.\n   *\n   * @param {string} [codecString]\n   *        The codec string to parse\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var parseCodecs = function parseCodecs(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n    var codecs = codecString.split(',');\n    var result = [];\n    codecs.forEach(function (codec) {\n      codec = codec.trim();\n      var codecType;\n      mediaTypes.forEach(function (name) {\n        var match = regexs[name].exec(codec.toLowerCase());\n        if (!match || match.length <= 1) {\n          return;\n        }\n        codecType = name; // maintain codec case\n\n        var type = codec.substring(0, match[1].length);\n        var details = codec.replace(type, '');\n        result.push({\n          type: type,\n          details: details,\n          mediaType: name\n        });\n      });\n      if (!codecType) {\n        result.push({\n          type: codec,\n          details: '',\n          mediaType: 'unknown'\n        });\n      }\n    });\n    return result;\n  };\n  /**\n   * Returns a ParsedCodecInfo object for the default alternate audio playlist if there is\n   * a default alternate audio playlist for the provided audio group.\n   *\n   * @param {Object} master\n   *        The master playlist\n   * @param {string} audioGroupId\n   *        ID of the audio group for which to find the default codec info\n   * @return {ParsedCodecInfo}\n   *         Parsed codec info\n   */\n\n  var codecsFromDefault = function codecsFromDefault(master, audioGroupId) {\n    if (!master.mediaGroups.AUDIO || !audioGroupId) {\n      return null;\n    }\n    var audioGroup = master.mediaGroups.AUDIO[audioGroupId];\n    if (!audioGroup) {\n      return null;\n    }\n    for (var name in audioGroup) {\n      var audioType = audioGroup[name];\n      if (audioType.default && audioType.playlists) {\n        // codec should be the same for all playlists within the audio type\n        return parseCodecs(audioType.playlists[0].attributes.CODECS);\n      }\n    }\n    return null;\n  };\n  var isAudioCodec = function isAudioCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n    return regexs.audio.test(codec.trim().toLowerCase());\n  };\n  var isTextCodec = function isTextCodec(codec) {\n    if (codec === void 0) {\n      codec = '';\n    }\n    return regexs.text.test(codec.trim().toLowerCase());\n  };\n  var getMimeForCodec = function getMimeForCodec(codecString) {\n    if (!codecString || typeof codecString !== 'string') {\n      return;\n    }\n    var codecs = codecString.toLowerCase().split(',').map(function (c) {\n      return translateLegacyCodec(c.trim());\n    }); // default to video type\n\n    var type = 'video'; // only change to audio type if the only codec we have is\n    // audio\n\n    if (codecs.length === 1 && isAudioCodec(codecs[0])) {\n      type = 'audio';\n    } else if (codecs.length === 1 && isTextCodec(codecs[0])) {\n      // text uses application/<container> for now\n      type = 'application';\n    } // default the container to mp4\n\n    var container = 'mp4'; // every codec must be able to go into the container\n    // for that container to be the correct one\n\n    if (codecs.every(function (c) {\n      return regexs.mp4.test(c);\n    })) {\n      container = 'mp4';\n    } else if (codecs.every(function (c) {\n      return regexs.webm.test(c);\n    })) {\n      container = 'webm';\n    } else if (codecs.every(function (c) {\n      return regexs.ogg.test(c);\n    })) {\n      container = 'ogg';\n    }\n    return type + \"/\" + container + \";codecs=\\\"\" + codecString + \"\\\"\";\n  };\n  var browserSupportsCodec = function browserSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n    return window.MediaSource && window.MediaSource.isTypeSupported && window.MediaSource.isTypeSupported(getMimeForCodec(codecString)) || false;\n  };\n  var muxerSupportsCodec = function muxerSupportsCodec(codecString) {\n    if (codecString === void 0) {\n      codecString = '';\n    }\n    return codecString.toLowerCase().split(',').every(function (codec) {\n      codec = codec.trim(); // any match is supported.\n\n      for (var i = 0; i < upperMediaTypes.length; i++) {\n        var type = upperMediaTypes[i];\n        if (regexs[\"muxer\" + type].test(codec)) {\n          return true;\n        }\n      }\n      return false;\n    });\n  };\n  var DEFAULT_AUDIO_CODEC = 'mp4a.40.2';\n  var DEFAULT_VIDEO_CODEC = 'avc1.4d400d';\n\n  var MPEGURL_REGEX = /^(audio|video|application)\\/(x-|vnd\\.apple\\.)?mpegurl/i;\n  var DASH_REGEX = /^application\\/dash\\+xml/i;\n  /**\n   * Returns a string that describes the type of source based on a video source object's\n   * media type.\n   *\n   * @see {@link https://dev.w3.org/html5/pf-summary/video.html#dom-source-type|Source Type}\n   *\n   * @param {string} type\n   *        Video source object media type\n   * @return {('hls'|'dash'|'vhs-json'|null)}\n   *         VHS source type string\n   */\n\n  var simpleTypeFromSourceType = function simpleTypeFromSourceType(type) {\n    if (MPEGURL_REGEX.test(type)) {\n      return 'hls';\n    }\n    if (DASH_REGEX.test(type)) {\n      return 'dash';\n    } // Denotes the special case of a manifest object passed to http-streaming instead of a\n    // source URL.\n    //\n    // See https://en.wikipedia.org/wiki/Media_type for details on specifying media types.\n    //\n    // In this case, vnd stands for vendor, video.js for the organization, VHS for this\n    // project, and the +json suffix identifies the structure of the media type.\n\n    if (type === 'application/vnd.videojs.vhs+json') {\n      return 'vhs-json';\n    }\n    return null;\n  };\n\n  // const log2 = Math.log2 ? Math.log2 : (x) => (Math.log(x) / Math.log(2));\n  // we used to do this with log2 but BigInt does not support builtin math\n  // Math.ceil(log2(x));\n\n  var countBits = function countBits(x) {\n    return x.toString(2).length;\n  }; // count the number of whole bytes it would take to represent a number\n\n  var countBytes = function countBytes(x) {\n    return Math.ceil(countBits(x) / 8);\n  };\n  var isArrayBufferView = function isArrayBufferView(obj) {\n    if (ArrayBuffer.isView === 'function') {\n      return ArrayBuffer.isView(obj);\n    }\n    return obj && obj.buffer instanceof ArrayBuffer;\n  };\n  var isTypedArray = function isTypedArray(obj) {\n    return isArrayBufferView(obj);\n  };\n  var toUint8 = function toUint8(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return bytes;\n    }\n    if (!Array.isArray(bytes) && !isTypedArray(bytes) && !(bytes instanceof ArrayBuffer)) {\n      // any non-number or NaN leads to empty uint8array\n      // eslint-disable-next-line\n      if (typeof bytes !== 'number' || typeof bytes === 'number' && bytes !== bytes) {\n        bytes = 0;\n      } else {\n        bytes = [bytes];\n      }\n    }\n    return new Uint8Array(bytes && bytes.buffer || bytes, bytes && bytes.byteOffset || 0, bytes && bytes.byteLength || 0);\n  };\n  var BigInt = window.BigInt || Number;\n  var BYTE_TABLE = [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n  (function () {\n    var a = new Uint16Array([0xFFCC]);\n    var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n    if (b[0] === 0xFF) {\n      return 'big';\n    }\n    if (b[0] === 0xCC) {\n      return 'little';\n    }\n    return 'unknown';\n  })();\n  var bytesToNumber = function bytesToNumber(bytes, _temp) {\n    var _ref = _temp === void 0 ? {} : _temp,\n      _ref$signed = _ref.signed,\n      signed = _ref$signed === void 0 ? false : _ref$signed,\n      _ref$le = _ref.le,\n      le = _ref$le === void 0 ? false : _ref$le;\n    bytes = toUint8(bytes);\n    var fn = le ? 'reduce' : 'reduceRight';\n    var obj = bytes[fn] ? bytes[fn] : Array.prototype[fn];\n    var number = obj.call(bytes, function (total, byte, i) {\n      var exponent = le ? i : Math.abs(i + 1 - bytes.length);\n      return total + BigInt(byte) * BYTE_TABLE[exponent];\n    }, BigInt(0));\n    if (signed) {\n      var max = BYTE_TABLE[bytes.length] / BigInt(2) - BigInt(1);\n      number = BigInt(number);\n      if (number > max) {\n        number -= max;\n        number -= max;\n        number -= BigInt(2);\n      }\n    }\n    return Number(number);\n  };\n  var numberToBytes = function numberToBytes(number, _temp2) {\n    var _ref2 = _temp2 === void 0 ? {} : _temp2,\n      _ref2$le = _ref2.le,\n      le = _ref2$le === void 0 ? false : _ref2$le;\n\n    // eslint-disable-next-line\n    if (typeof number !== 'bigint' && typeof number !== 'number' || typeof number === 'number' && number !== number) {\n      number = 0;\n    }\n    number = BigInt(number);\n    var byteCount = countBytes(number);\n    var bytes = new Uint8Array(new ArrayBuffer(byteCount));\n    for (var i = 0; i < byteCount; i++) {\n      var byteIndex = le ? i : Math.abs(i + 1 - bytes.length);\n      bytes[byteIndex] = Number(number / BYTE_TABLE[i] & BigInt(0xFF));\n      if (number < 0) {\n        bytes[byteIndex] = Math.abs(~bytes[byteIndex]);\n        bytes[byteIndex] -= i === 0 ? 1 : 2;\n      }\n    }\n    return bytes;\n  };\n  var stringToBytes = function stringToBytes(string, stringIsBytes) {\n    if (typeof string !== 'string' && string && typeof string.toString === 'function') {\n      string = string.toString();\n    }\n    if (typeof string !== 'string') {\n      return new Uint8Array();\n    } // If the string already is bytes, we don't have to do this\n    // otherwise we do this so that we split multi length characters\n    // into individual bytes\n\n    if (!stringIsBytes) {\n      string = unescape(encodeURIComponent(string));\n    }\n    var view = new Uint8Array(string.length);\n    for (var i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n    return view;\n  };\n  var concatTypedArrays = function concatTypedArrays() {\n    for (var _len = arguments.length, buffers = new Array(_len), _key = 0; _key < _len; _key++) {\n      buffers[_key] = arguments[_key];\n    }\n    buffers = buffers.filter(function (b) {\n      return b && (b.byteLength || b.length) && typeof b !== 'string';\n    });\n    if (buffers.length <= 1) {\n      // for 0 length we will return empty uint8\n      // for 1 length we return the first uint8\n      return toUint8(buffers[0]);\n    }\n    var totalLen = buffers.reduce(function (total, buf, i) {\n      return total + (buf.byteLength || buf.length);\n    }, 0);\n    var tempBuffer = new Uint8Array(totalLen);\n    var offset = 0;\n    buffers.forEach(function (buf) {\n      buf = toUint8(buf);\n      tempBuffer.set(buf, offset);\n      offset += buf.byteLength;\n    });\n    return tempBuffer;\n  };\n  /**\n   * Check if the bytes \"b\" are contained within bytes \"a\".\n   *\n   * @param {Uint8Array|Array} a\n   *        Bytes to check in\n   *\n   * @param {Uint8Array|Array} b\n   *        Bytes to check for\n   *\n   * @param {Object} options\n   *        options\n   *\n   * @param {Array|Uint8Array} [offset=0]\n   *        offset to use when looking at bytes in a\n   *\n   * @param {Array|Uint8Array} [mask=[]]\n   *        mask to use on bytes before comparison.\n   *\n   * @return {boolean}\n   *         If all bytes in b are inside of a, taking into account\n   *         bit masks.\n   */\n\n  var bytesMatch = function bytesMatch(a, b, _temp3) {\n    var _ref3 = _temp3 === void 0 ? {} : _temp3,\n      _ref3$offset = _ref3.offset,\n      offset = _ref3$offset === void 0 ? 0 : _ref3$offset,\n      _ref3$mask = _ref3.mask,\n      mask = _ref3$mask === void 0 ? [] : _ref3$mask;\n    a = toUint8(a);\n    b = toUint8(b); // ie 11 does not support uint8 every\n\n    var fn = b.every ? b.every : Array.prototype.every;\n    return b.length && a.length - offset >= b.length &&\n    // ie 11 doesn't support every on uin8\n    fn.call(b, function (bByte, i) {\n      var aByte = mask[i] ? mask[i] & a[offset + i] : a[offset + i];\n      return bByte === aByte;\n    });\n  };\n\n  var DEFAULT_LOCATION = 'http://example.com';\n  var resolveUrl$1 = function resolveUrl(baseUrl, relativeUrl) {\n    // return early if we don't need to resolve\n    if (/^[a-z]+:/i.test(relativeUrl)) {\n      return relativeUrl;\n    } // if baseUrl is a data URI, ignore it and resolve everything relative to window.location\n\n    if (/^data:/.test(baseUrl)) {\n      baseUrl = window.location && window.location.href || '';\n    } // IE11 supports URL but not the URL constructor\n    // feature detect the behavior we want\n\n    var nativeURL = typeof window.URL === 'function';\n    var protocolLess = /^\\/\\//.test(baseUrl); // remove location if window.location isn't available (i.e. we're in node)\n    // and if baseUrl isn't an absolute url\n\n    var removeLocation = !window.location && !/\\/\\//i.test(baseUrl); // if the base URL is relative then combine with the current location\n\n    if (nativeURL) {\n      baseUrl = new window.URL(baseUrl, window.location || DEFAULT_LOCATION);\n    } else if (!/\\/\\//i.test(baseUrl)) {\n      baseUrl = urlToolkit.buildAbsoluteURL(window.location && window.location.href || '', baseUrl);\n    }\n    if (nativeURL) {\n      var newUrl = new URL(relativeUrl, baseUrl); // if we're a protocol-less url, remove the protocol\n      // and if we're location-less, remove the location\n      // otherwise, return the url unmodified\n\n      if (removeLocation) {\n        return newUrl.href.slice(DEFAULT_LOCATION.length);\n      } else if (protocolLess) {\n        return newUrl.href.slice(newUrl.protocol.length);\n      }\n      return newUrl.href;\n    }\n    return urlToolkit.buildAbsoluteURL(baseUrl, relativeUrl);\n  };\n\n  /**\n   * Loops through all supported media groups in master and calls the provided\n   * callback for each group\n   *\n   * @param {Object} master\n   *        The parsed master manifest object\n   * @param {string[]} groups\n   *        The media groups to call the callback for\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n  var forEachMediaGroup$1 = function forEachMediaGroup(master, groups, callback) {\n    groups.forEach(function (mediaType) {\n      for (var groupKey in master.mediaGroups[mediaType]) {\n        for (var labelKey in master.mediaGroups[mediaType][groupKey]) {\n          var mediaProperties = master.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n\n  var atob = function atob(s) {\n    return window.atob ? window.atob(s) : Buffer.from(s, 'base64').toString('binary');\n  };\n  function decodeB64ToUint8Array(b64Text) {\n    var decodedString = atob(b64Text);\n    var array = new Uint8Array(decodedString.length);\n    for (var i = 0; i < decodedString.length; i++) {\n      array[i] = decodedString.charCodeAt(i);\n    }\n    return array;\n  }\n\n  /**\n   * Ponyfill for `Array.prototype.find` which is only available in ES6 runtimes.\n   *\n   * Works with anything that has a `length` property and index access properties, including NodeList.\n   *\n   * @template {unknown} T\n   * @param {Array<T> | ({length:number, [number]: T})} list\n   * @param {function (item: T, index: number, list:Array<T> | ({length:number, [number]: T})):boolean} predicate\n   * @param {Partial<Pick<ArrayConstructor['prototype'], 'find'>>?} ac `Array.prototype` by default,\n   * \t\t\t\tallows injecting a custom implementation in tests\n   * @returns {T | undefined}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find\n   * @see https://tc39.es/ecma262/multipage/indexed-collections.html#sec-array.prototype.find\n   */\n  function find$1(list, predicate, ac) {\n    if (ac === undefined) {\n      ac = Array.prototype;\n    }\n    if (list && typeof ac.find === 'function') {\n      return ac.find.call(list, predicate);\n    }\n    for (var i = 0; i < list.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(list, i)) {\n        var item = list[i];\n        if (predicate.call(undefined, item, i, list)) {\n          return item;\n        }\n      }\n    }\n  }\n\n  /**\n   * \"Shallow freezes\" an object to render it immutable.\n   * Uses `Object.freeze` if available,\n   * otherwise the immutability is only in the type.\n   *\n   * Is used to create \"enum like\" objects.\n   *\n   * @template T\n   * @param {T} object the object to freeze\n   * @param {Pick<ObjectConstructor, 'freeze'> = Object} oc `Object` by default,\n   * \t\t\t\tallows to inject custom object constructor for tests\n   * @returns {Readonly<T>}\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/freeze\n   */\n  function freeze(object, oc) {\n    if (oc === undefined) {\n      oc = Object;\n    }\n    return oc && typeof oc.freeze === 'function' ? oc.freeze(object) : object;\n  }\n\n  /**\n   * Since we can not rely on `Object.assign` we provide a simplified version\n   * that is sufficient for our needs.\n   *\n   * @param {Object} target\n   * @param {Object | null | undefined} source\n   *\n   * @returns {Object} target\n   * @throws TypeError if target is not an object\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n   * @see https://tc39.es/ecma262/multipage/fundamental-objects.html#sec-object.assign\n   */\n  function assign(target, source) {\n    if (target === null || typeof target !== 'object') {\n      throw new TypeError('target is not an object');\n    }\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n    return target;\n  }\n\n  /**\n   * All mime types that are allowed as input to `DOMParser.parseFromString`\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString#Argument02 MDN\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#domparsersupportedtype WHATWG HTML Spec\n   * @see DOMParser.prototype.parseFromString\n   */\n  var MIME_TYPE = freeze({\n    /**\n     * `text/html`, the only mime type that triggers treating an XML document as HTML.\n     *\n     * @see DOMParser.SupportedType.isHTML\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring WHATWG HTML Spec\n     */\n    HTML: 'text/html',\n    /**\n     * Helper method to check a mime type if it indicates an HTML document\n     *\n     * @param {string} [value]\n     * @returns {boolean}\n     *\n     * @see https://www.iana.org/assignments/media-types/text/html IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/HTML Wikipedia\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser/parseFromString MDN\n     * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-domparser-parsefromstring \t */\n    isHTML: function (value) {\n      return value === MIME_TYPE.HTML;\n    },\n    /**\n     * `application/xml`, the standard mime type for XML documents.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xml IANA MimeType registration\n     * @see https://tools.ietf.org/html/rfc7303#section-9.1 RFC 7303\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_APPLICATION: 'application/xml',\n    /**\n     * `text/html`, an alias for `application/xml`.\n     *\n     * @see https://tools.ietf.org/html/rfc7303#section-9.2 RFC 7303\n     * @see https://www.iana.org/assignments/media-types/text/xml IANA MimeType registration\n     * @see https://en.wikipedia.org/wiki/XML_and_MIME Wikipedia\n     */\n    XML_TEXT: 'text/xml',\n    /**\n     * `application/xhtml+xml`, indicates an XML document that has the default HTML namespace,\n     * but is parsed as an XML document.\n     *\n     * @see https://www.iana.org/assignments/media-types/application/xhtml+xml IANA MimeType registration\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument WHATWG DOM Spec\n     * @see https://en.wikipedia.org/wiki/XHTML Wikipedia\n     */\n    XML_XHTML_APPLICATION: 'application/xhtml+xml',\n    /**\n     * `image/svg+xml`,\n     *\n     * @see https://www.iana.org/assignments/media-types/image/svg+xml IANA MimeType registration\n     * @see https://www.w3.org/TR/SVG11/ W3C SVG 1.1\n     * @see https://en.wikipedia.org/wiki/Scalable_Vector_Graphics Wikipedia\n     */\n    XML_SVG_IMAGE: 'image/svg+xml'\n  });\n\n  /**\n   * Namespaces that are used in this code base.\n   *\n   * @see http://www.w3.org/TR/REC-xml-names\n   */\n  var NAMESPACE$3 = freeze({\n    /**\n     * The XHTML namespace.\n     *\n     * @see http://www.w3.org/1999/xhtml\n     */\n    HTML: 'http://www.w3.org/1999/xhtml',\n    /**\n     * Checks if `uri` equals `NAMESPACE.HTML`.\n     *\n     * @param {string} [uri]\n     *\n     * @see NAMESPACE.HTML\n     */\n    isHTML: function (uri) {\n      return uri === NAMESPACE$3.HTML;\n    },\n    /**\n     * The SVG namespace.\n     *\n     * @see http://www.w3.org/2000/svg\n     */\n    SVG: 'http://www.w3.org/2000/svg',\n    /**\n     * The `xml:` namespace.\n     *\n     * @see http://www.w3.org/XML/1998/namespace\n     */\n    XML: 'http://www.w3.org/XML/1998/namespace',\n    /**\n     * The `xmlns:` namespace\n     *\n     * @see https://www.w3.org/2000/xmlns/\n     */\n    XMLNS: 'http://www.w3.org/2000/xmlns/'\n  });\n  var assign_1 = assign;\n  var find_1 = find$1;\n  var freeze_1 = freeze;\n  var MIME_TYPE_1 = MIME_TYPE;\n  var NAMESPACE_1 = NAMESPACE$3;\n  var conventions = {\n    assign: assign_1,\n    find: find_1,\n    freeze: freeze_1,\n    MIME_TYPE: MIME_TYPE_1,\n    NAMESPACE: NAMESPACE_1\n  };\n\n  var find = conventions.find;\n  var NAMESPACE$2 = conventions.NAMESPACE;\n\n  /**\n   * A prerequisite for `[].filter`, to drop elements that are empty\n   * @param {string} input\n   * @returns {boolean}\n   */\n  function notEmptyString(input) {\n    return input !== '';\n  }\n  /**\n   * @see https://infra.spec.whatwg.org/#split-on-ascii-whitespace\n   * @see https://infra.spec.whatwg.org/#ascii-whitespace\n   *\n   * @param {string} input\n   * @returns {string[]} (can be empty)\n   */\n  function splitOnASCIIWhitespace(input) {\n    // U+0009 TAB, U+000A LF, U+000C FF, U+000D CR, U+0020 SPACE\n    return input ? input.split(/[\\t\\n\\f\\r ]+/).filter(notEmptyString) : [];\n  }\n\n  /**\n   * Adds element as a key to current if it is not already present.\n   *\n   * @param {Record<string, boolean | undefined>} current\n   * @param {string} element\n   * @returns {Record<string, boolean | undefined>}\n   */\n  function orderedSetReducer(current, element) {\n    if (!current.hasOwnProperty(element)) {\n      current[element] = true;\n    }\n    return current;\n  }\n\n  /**\n   * @see https://infra.spec.whatwg.org/#ordered-set\n   * @param {string} input\n   * @returns {string[]}\n   */\n  function toOrderedSet(input) {\n    if (!input) return [];\n    var list = splitOnASCIIWhitespace(input);\n    return Object.keys(list.reduce(orderedSetReducer, {}));\n  }\n\n  /**\n   * Uses `list.indexOf` to implement something like `Array.prototype.includes`,\n   * which we can not rely on being available.\n   *\n   * @param {any[]} list\n   * @returns {function(any): boolean}\n   */\n  function arrayIncludes(list) {\n    return function (element) {\n      return list && list.indexOf(element) !== -1;\n    };\n  }\n  function copy(src, dest) {\n    for (var p in src) {\n      if (Object.prototype.hasOwnProperty.call(src, p)) {\n        dest[p] = src[p];\n      }\n    }\n  }\n\n  /**\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*((?:.*\\{\\s*?[\\r\\n][\\s\\S]*?^})|\\S.*?(?=[;\\r\\n]));?\n  ^\\w+\\.prototype\\.([_\\w]+)\\s*=\\s*(\\S.*?(?=[;\\r\\n]));?\n   */\n  function _extends(Class, Super) {\n    var pt = Class.prototype;\n    if (!(pt instanceof Super)) {\n      function t() {}\n      t.prototype = Super.prototype;\n      t = new t();\n      copy(pt, t);\n      Class.prototype = pt = t;\n    }\n    if (pt.constructor != Class) {\n      if (typeof Class != 'function') {\n        console.error(\"unknown Class:\" + Class);\n      }\n      pt.constructor = Class;\n    }\n  }\n\n  // Node Types\n  var NodeType = {};\n  var ELEMENT_NODE = NodeType.ELEMENT_NODE = 1;\n  var ATTRIBUTE_NODE = NodeType.ATTRIBUTE_NODE = 2;\n  var TEXT_NODE = NodeType.TEXT_NODE = 3;\n  var CDATA_SECTION_NODE = NodeType.CDATA_SECTION_NODE = 4;\n  var ENTITY_REFERENCE_NODE = NodeType.ENTITY_REFERENCE_NODE = 5;\n  var ENTITY_NODE = NodeType.ENTITY_NODE = 6;\n  var PROCESSING_INSTRUCTION_NODE = NodeType.PROCESSING_INSTRUCTION_NODE = 7;\n  var COMMENT_NODE = NodeType.COMMENT_NODE = 8;\n  var DOCUMENT_NODE = NodeType.DOCUMENT_NODE = 9;\n  var DOCUMENT_TYPE_NODE = NodeType.DOCUMENT_TYPE_NODE = 10;\n  var DOCUMENT_FRAGMENT_NODE = NodeType.DOCUMENT_FRAGMENT_NODE = 11;\n  var NOTATION_NODE = NodeType.NOTATION_NODE = 12;\n\n  // ExceptionCode\n  var ExceptionCode = {};\n  var ExceptionMessage = {};\n  ExceptionCode.INDEX_SIZE_ERR = (ExceptionMessage[1] = \"Index size error\", 1);\n  ExceptionCode.DOMSTRING_SIZE_ERR = (ExceptionMessage[2] = \"DOMString size error\", 2);\n  var HIERARCHY_REQUEST_ERR = ExceptionCode.HIERARCHY_REQUEST_ERR = (ExceptionMessage[3] = \"Hierarchy request error\", 3);\n  ExceptionCode.WRONG_DOCUMENT_ERR = (ExceptionMessage[4] = \"Wrong document\", 4);\n  ExceptionCode.INVALID_CHARACTER_ERR = (ExceptionMessage[5] = \"Invalid character\", 5);\n  ExceptionCode.NO_DATA_ALLOWED_ERR = (ExceptionMessage[6] = \"No data allowed\", 6);\n  ExceptionCode.NO_MODIFICATION_ALLOWED_ERR = (ExceptionMessage[7] = \"No modification allowed\", 7);\n  var NOT_FOUND_ERR = ExceptionCode.NOT_FOUND_ERR = (ExceptionMessage[8] = \"Not found\", 8);\n  ExceptionCode.NOT_SUPPORTED_ERR = (ExceptionMessage[9] = \"Not supported\", 9);\n  var INUSE_ATTRIBUTE_ERR = ExceptionCode.INUSE_ATTRIBUTE_ERR = (ExceptionMessage[10] = \"Attribute in use\", 10);\n  //level2\n  ExceptionCode.INVALID_STATE_ERR = (ExceptionMessage[11] = \"Invalid state\", 11);\n  ExceptionCode.SYNTAX_ERR = (ExceptionMessage[12] = \"Syntax error\", 12);\n  ExceptionCode.INVALID_MODIFICATION_ERR = (ExceptionMessage[13] = \"Invalid modification\", 13);\n  ExceptionCode.NAMESPACE_ERR = (ExceptionMessage[14] = \"Invalid namespace\", 14);\n  ExceptionCode.INVALID_ACCESS_ERR = (ExceptionMessage[15] = \"Invalid access\", 15);\n\n  /**\n   * DOM Level 2\n   * Object DOMException\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/ecma-script-binding.html\n   * @see http://www.w3.org/TR/REC-DOM-Level-1/ecma-script-language-binding.html\n   */\n  function DOMException(code, message) {\n    if (message instanceof Error) {\n      var error = message;\n    } else {\n      error = this;\n      Error.call(this, ExceptionMessage[code]);\n      this.message = ExceptionMessage[code];\n      if (Error.captureStackTrace) Error.captureStackTrace(this, DOMException);\n    }\n    error.code = code;\n    if (message) this.message = this.message + \": \" + message;\n    return error;\n  }\n  DOMException.prototype = Error.prototype;\n  copy(ExceptionCode, DOMException);\n\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-536297177\n   * The NodeList interface provides the abstraction of an ordered collection of nodes, without defining or constraining how this collection is implemented. NodeList objects in the DOM are live.\n   * The items in the NodeList are accessible via an integral index, starting from 0.\n   */\n  function NodeList() {}\n  NodeList.prototype = {\n    /**\n     * The number of nodes in the list. The range of valid child node indices is 0 to length-1 inclusive.\n     * @standard level1\n     */\n    length: 0,\n    /**\n     * Returns the indexth item in the collection. If index is greater than or equal to the number of nodes in the list, this returns null.\n     * @standard level1\n     * @param index  unsigned long\n     *   Index into the collection.\n     * @return Node\n     * \tThe node at the indexth position in the NodeList, or null if that is not a valid index.\n     */\n    item: function (index) {\n      return this[index] || null;\n    },\n    toString: function (isHTML, nodeFilter) {\n      for (var buf = [], i = 0; i < this.length; i++) {\n        serializeToString(this[i], buf, isHTML, nodeFilter);\n      }\n      return buf.join('');\n    },\n    /**\n     * @private\n     * @param {function (Node):boolean} predicate\n     * @returns {Node[]}\n     */\n    filter: function (predicate) {\n      return Array.prototype.filter.call(this, predicate);\n    },\n    /**\n     * @private\n     * @param {Node} item\n     * @returns {number}\n     */\n    indexOf: function (item) {\n      return Array.prototype.indexOf.call(this, item);\n    }\n  };\n  function LiveNodeList(node, refresh) {\n    this._node = node;\n    this._refresh = refresh;\n    _updateLiveList(this);\n  }\n  function _updateLiveList(list) {\n    var inc = list._node._inc || list._node.ownerDocument._inc;\n    if (list._inc != inc) {\n      var ls = list._refresh(list._node);\n      //console.log(ls.length)\n      __set__(list, 'length', ls.length);\n      copy(ls, list);\n      list._inc = inc;\n    }\n  }\n  LiveNodeList.prototype.item = function (i) {\n    _updateLiveList(this);\n    return this[i];\n  };\n  _extends(LiveNodeList, NodeList);\n\n  /**\n   * Objects implementing the NamedNodeMap interface are used\n   * to represent collections of nodes that can be accessed by name.\n   * Note that NamedNodeMap does not inherit from NodeList;\n   * NamedNodeMaps are not maintained in any particular order.\n   * Objects contained in an object implementing NamedNodeMap may also be accessed by an ordinal index,\n   * but this is simply to allow convenient enumeration of the contents of a NamedNodeMap,\n   * and does not imply that the DOM specifies an order to these Nodes.\n   * NamedNodeMap objects in the DOM are live.\n   * used for attributes or DocumentType entities\n   */\n  function NamedNodeMap() {}\n  function _findNodeIndex(list, node) {\n    var i = list.length;\n    while (i--) {\n      if (list[i] === node) {\n        return i;\n      }\n    }\n  }\n  function _addNamedNode(el, list, newAttr, oldAttr) {\n    if (oldAttr) {\n      list[_findNodeIndex(list, oldAttr)] = newAttr;\n    } else {\n      list[list.length++] = newAttr;\n    }\n    if (el) {\n      newAttr.ownerElement = el;\n      var doc = el.ownerDocument;\n      if (doc) {\n        oldAttr && _onRemoveAttribute(doc, el, oldAttr);\n        _onAddAttribute(doc, el, newAttr);\n      }\n    }\n  }\n  function _removeNamedNode(el, list, attr) {\n    //console.log('remove attr:'+attr)\n    var i = _findNodeIndex(list, attr);\n    if (i >= 0) {\n      var lastIndex = list.length - 1;\n      while (i < lastIndex) {\n        list[i] = list[++i];\n      }\n      list.length = lastIndex;\n      if (el) {\n        var doc = el.ownerDocument;\n        if (doc) {\n          _onRemoveAttribute(doc, el, attr);\n          attr.ownerElement = null;\n        }\n      }\n    } else {\n      throw new DOMException(NOT_FOUND_ERR, new Error(el.tagName + '@' + attr));\n    }\n  }\n  NamedNodeMap.prototype = {\n    length: 0,\n    item: NodeList.prototype.item,\n    getNamedItem: function (key) {\n      //\t\tif(key.indexOf(':')>0 || key == 'xmlns'){\n      //\t\t\treturn null;\n      //\t\t}\n      //console.log()\n      var i = this.length;\n      while (i--) {\n        var attr = this[i];\n        //console.log(attr.nodeName,key)\n        if (attr.nodeName == key) {\n          return attr;\n        }\n      }\n    },\n    setNamedItem: function (attr) {\n      var el = attr.ownerElement;\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n      var oldAttr = this.getNamedItem(attr.nodeName);\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n      return oldAttr;\n    },\n    /* returns Node */\n    setNamedItemNS: function (attr) {\n      // raises: WRONG_DOCUMENT_ERR,NO_MODIFICATION_ALLOWED_ERR,INUSE_ATTRIBUTE_ERR\n      var el = attr.ownerElement,\n        oldAttr;\n      if (el && el != this._ownerElement) {\n        throw new DOMException(INUSE_ATTRIBUTE_ERR);\n      }\n      oldAttr = this.getNamedItemNS(attr.namespaceURI, attr.localName);\n      _addNamedNode(this._ownerElement, this, attr, oldAttr);\n      return oldAttr;\n    },\n    /* returns Node */\n    removeNamedItem: function (key) {\n      var attr = this.getNamedItem(key);\n      _removeNamedNode(this._ownerElement, this, attr);\n      return attr;\n    },\n    // raises: NOT_FOUND_ERR,NO_MODIFICATION_ALLOWED_ERR\n\n    //for level2\n    removeNamedItemNS: function (namespaceURI, localName) {\n      var attr = this.getNamedItemNS(namespaceURI, localName);\n      _removeNamedNode(this._ownerElement, this, attr);\n      return attr;\n    },\n    getNamedItemNS: function (namespaceURI, localName) {\n      var i = this.length;\n      while (i--) {\n        var node = this[i];\n        if (node.localName == localName && node.namespaceURI == namespaceURI) {\n          return node;\n        }\n      }\n      return null;\n    }\n  };\n\n  /**\n   * The DOMImplementation interface represents an object providing methods\n   * which are not dependent on any particular document.\n   * Such an object is returned by the `Document.implementation` property.\n   *\n   * __The individual methods describe the differences compared to the specs.__\n   *\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation MDN\n   * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-102161490 DOM Level 1 Core (Initial)\n   * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-102161490 DOM Level 2 Core\n   * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 DOM Level 3 Core\n   * @see https://dom.spec.whatwg.org/#domimplementation DOM Living Standard\n   */\n  function DOMImplementation$1() {}\n  DOMImplementation$1.prototype = {\n    /**\n     * The DOMImplementation.hasFeature() method returns a Boolean flag indicating if a given feature is supported.\n     * The different implementations fairly diverged in what kind of features were reported.\n     * The latest version of the spec settled to force this method to always return true, where the functionality was accurate and in use.\n     *\n     * @deprecated It is deprecated and modern browsers return true in all cases.\n     *\n     * @param {string} feature\n     * @param {string} [version]\n     * @returns {boolean} always true\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/hasFeature MDN\n     * @see https://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#ID-5CED94D7 DOM Level 1 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-hasfeature DOM Living Standard\n     */\n    hasFeature: function (feature, version) {\n      return true;\n    },\n    /**\n     * Creates an XML Document object of the specified type with its document element.\n     *\n     * __It behaves slightly different from the description in the living standard__:\n     * - There is no interface/class `XMLDocument`, it returns a `Document` instance.\n     * - `contentType`, `encoding`, `mode`, `origin`, `url` fields are currently not declared.\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string|null} namespaceURI\n     * @param {string} qualifiedName\n     * @param {DocumentType=null} doctype\n     * @returns {Document}\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocument MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocument DOM Level 2 Core (initial)\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocument  DOM Level 2 Core\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocument: function (namespaceURI, qualifiedName, doctype) {\n      var doc = new Document();\n      doc.implementation = this;\n      doc.childNodes = new NodeList();\n      doc.doctype = doctype || null;\n      if (doctype) {\n        doc.appendChild(doctype);\n      }\n      if (qualifiedName) {\n        var root = doc.createElementNS(namespaceURI, qualifiedName);\n        doc.appendChild(root);\n      }\n      return doc;\n    },\n    /**\n     * Returns a doctype, with the given `qualifiedName`, `publicId`, and `systemId`.\n     *\n     * __This behavior is slightly different from the in the specs__:\n     * - this implementation is not validating names or qualified names\n     *   (when parsing XML strings, the SAX parser takes care of that)\n     *\n     * @param {string} qualifiedName\n     * @param {string} [publicId]\n     * @param {string} [systemId]\n     * @returns {DocumentType} which can either be used with `DOMImplementation.createDocument` upon document creation\n     * \t\t\t\t  or can be put into the document via methods like `Node.insertBefore()` or `Node.replaceChild()`\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMImplementation/createDocumentType MDN\n     * @see https://www.w3.org/TR/DOM-Level-2-Core/core.html#Level-2-Core-DOM-createDocType DOM Level 2 Core\n     * @see https://dom.spec.whatwg.org/#dom-domimplementation-createdocumenttype DOM Living Standard\n     *\n     * @see https://dom.spec.whatwg.org/#validate-and-extract DOM: Validate and extract\n     * @see https://www.w3.org/TR/xml/#NT-NameStartChar XML Spec: Names\n     * @see https://www.w3.org/TR/xml-names/#ns-qualnames XML Namespaces: Qualified names\n     */\n    createDocumentType: function (qualifiedName, publicId, systemId) {\n      var node = new DocumentType();\n      node.name = qualifiedName;\n      node.nodeName = qualifiedName;\n      node.publicId = publicId || '';\n      node.systemId = systemId || '';\n      return node;\n    }\n  };\n\n  /**\n   * @see http://www.w3.org/TR/2000/REC-DOM-Level-2-Core-20001113/core.html#ID-1950641247\n   */\n\n  function Node() {}\n  Node.prototype = {\n    firstChild: null,\n    lastChild: null,\n    previousSibling: null,\n    nextSibling: null,\n    attributes: null,\n    parentNode: null,\n    childNodes: null,\n    ownerDocument: null,\n    nodeValue: null,\n    namespaceURI: null,\n    prefix: null,\n    localName: null,\n    // Modified in DOM Level 2:\n    insertBefore: function (newChild, refChild) {\n      //raises\n      return _insertBefore(this, newChild, refChild);\n    },\n    replaceChild: function (newChild, oldChild) {\n      //raises\n      _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n    },\n    removeChild: function (oldChild) {\n      return _removeChild(this, oldChild);\n    },\n    appendChild: function (newChild) {\n      return this.insertBefore(newChild, null);\n    },\n    hasChildNodes: function () {\n      return this.firstChild != null;\n    },\n    cloneNode: function (deep) {\n      return cloneNode(this.ownerDocument || this, this, deep);\n    },\n    // Modified in DOM Level 2:\n    normalize: function () {\n      var child = this.firstChild;\n      while (child) {\n        var next = child.nextSibling;\n        if (next && next.nodeType == TEXT_NODE && child.nodeType == TEXT_NODE) {\n          this.removeChild(next);\n          child.appendData(next.data);\n        } else {\n          child.normalize();\n          child = next;\n        }\n      }\n    },\n    // Introduced in DOM Level 2:\n    isSupported: function (feature, version) {\n      return this.ownerDocument.implementation.hasFeature(feature, version);\n    },\n    // Introduced in DOM Level 2:\n    hasAttributes: function () {\n      return this.attributes.length > 0;\n    },\n    /**\n     * Look up the prefix associated to the given namespace URI, starting from this node.\n     * **The default namespace declarations are ignored by this method.**\n     * See Namespace Prefix Lookup for details on the algorithm used by this method.\n     *\n     * _Note: The implementation seems to be incomplete when compared to the algorithm described in the specs._\n     *\n     * @param {string | null} namespaceURI\n     * @returns {string | null}\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix\n     * @see https://www.w3.org/TR/DOM-Level-3-Core/namespaces-algorithms.html#lookupNamespacePrefixAlgo\n     * @see https://dom.spec.whatwg.org/#dom-node-lookupprefix\n     * @see https://github.com/xmldom/xmldom/issues/322\n     */\n    lookupPrefix: function (namespaceURI) {\n      var el = this;\n      while (el) {\n        var map = el._nsMap;\n        //console.dir(map)\n        if (map) {\n          for (var n in map) {\n            if (Object.prototype.hasOwnProperty.call(map, n) && map[n] === namespaceURI) {\n              return n;\n            }\n          }\n        }\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    lookupNamespaceURI: function (prefix) {\n      var el = this;\n      while (el) {\n        var map = el._nsMap;\n        //console.dir(map)\n        if (map) {\n          if (Object.prototype.hasOwnProperty.call(map, prefix)) {\n            return map[prefix];\n          }\n        }\n        el = el.nodeType == ATTRIBUTE_NODE ? el.ownerDocument : el.parentNode;\n      }\n      return null;\n    },\n    // Introduced in DOM Level 3:\n    isDefaultNamespace: function (namespaceURI) {\n      var prefix = this.lookupPrefix(namespaceURI);\n      return prefix == null;\n    }\n  };\n  function _xmlEncoder(c) {\n    return c == '<' && '&lt;' || c == '>' && '&gt;' || c == '&' && '&amp;' || c == '\"' && '&quot;' || '&#' + c.charCodeAt() + ';';\n  }\n  copy(NodeType, Node);\n  copy(NodeType, Node.prototype);\n\n  /**\n   * @param callback return true for continue,false for break\n   * @return boolean true: break visit;\n   */\n  function _visitNode(node, callback) {\n    if (callback(node)) {\n      return true;\n    }\n    if (node = node.firstChild) {\n      do {\n        if (_visitNode(node, callback)) {\n          return true;\n        }\n      } while (node = node.nextSibling);\n    }\n  }\n  function Document() {\n    this.ownerDocument = this;\n  }\n  function _onAddAttribute(doc, el, newAttr) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      el._nsMap[newAttr.prefix ? newAttr.localName : ''] = newAttr.value;\n    }\n  }\n  function _onRemoveAttribute(doc, el, newAttr, remove) {\n    doc && doc._inc++;\n    var ns = newAttr.namespaceURI;\n    if (ns === NAMESPACE$2.XMLNS) {\n      //update namespace\n      delete el._nsMap[newAttr.prefix ? newAttr.localName : ''];\n    }\n  }\n\n  /**\n   * Updates `el.childNodes`, updating the indexed items and it's `length`.\n   * Passing `newChild` means it will be appended.\n   * Otherwise it's assumed that an item has been removed,\n   * and `el.firstNode` and it's `.nextSibling` are used\n   * to walk the current list of child nodes.\n   *\n   * @param {Document} doc\n   * @param {Node} el\n   * @param {Node} [newChild]\n   * @private\n   */\n  function _onUpdateChild(doc, el, newChild) {\n    if (doc && doc._inc) {\n      doc._inc++;\n      //update childNodes\n      var cs = el.childNodes;\n      if (newChild) {\n        cs[cs.length++] = newChild;\n      } else {\n        var child = el.firstChild;\n        var i = 0;\n        while (child) {\n          cs[i++] = child;\n          child = child.nextSibling;\n        }\n        cs.length = i;\n        delete cs[cs.length];\n      }\n    }\n  }\n\n  /**\n   * Removes the connections between `parentNode` and `child`\n   * and any existing `child.previousSibling` or `child.nextSibling`.\n   *\n   * @see https://github.com/xmldom/xmldom/issues/135\n   * @see https://github.com/xmldom/xmldom/issues/145\n   *\n   * @param {Node} parentNode\n   * @param {Node} child\n   * @returns {Node} the child that was removed.\n   * @private\n   */\n  function _removeChild(parentNode, child) {\n    var previous = child.previousSibling;\n    var next = child.nextSibling;\n    if (previous) {\n      previous.nextSibling = next;\n    } else {\n      parentNode.firstChild = next;\n    }\n    if (next) {\n      next.previousSibling = previous;\n    } else {\n      parentNode.lastChild = previous;\n    }\n    child.parentNode = null;\n    child.previousSibling = null;\n    child.nextSibling = null;\n    _onUpdateChild(parentNode.ownerDocument, parentNode);\n    return child;\n  }\n\n  /**\n   * Returns `true` if `node` can be a parent for insertion.\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function hasValidParentNodeType(node) {\n    return node && (node.nodeType === Node.DOCUMENT_NODE || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.ELEMENT_NODE);\n  }\n\n  /**\n   * Returns `true` if `node` can be inserted according to it's `nodeType`.\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function hasInsertableNodeType(node) {\n    return node && (isElementNode(node) || isTextNode(node) || isDocTypeNode(node) || node.nodeType === Node.DOCUMENT_FRAGMENT_NODE || node.nodeType === Node.COMMENT_NODE || node.nodeType === Node.PROCESSING_INSTRUCTION_NODE);\n  }\n\n  /**\n   * Returns true if `node` is a DOCTYPE node\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function isDocTypeNode(node) {\n    return node && node.nodeType === Node.DOCUMENT_TYPE_NODE;\n  }\n\n  /**\n   * Returns true if the node is an element\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function isElementNode(node) {\n    return node && node.nodeType === Node.ELEMENT_NODE;\n  }\n  /**\n   * Returns true if `node` is a text node\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function isTextNode(node) {\n    return node && node.nodeType === Node.TEXT_NODE;\n  }\n\n  /**\n   * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n   * according to the presence and position of a doctype node on the same level.\n   *\n   * @param {Document} doc The document node\n   * @param {Node} child the node that would become the nextSibling if the element would be inserted\n   * @returns {boolean} `true` if an element can be inserted before child\n   * @private\n   * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   */\n  function isElementInsertionPossible(doc, child) {\n    var parentChildNodes = doc.childNodes || [];\n    if (find(parentChildNodes, isElementNode) || isDocTypeNode(child)) {\n      return false;\n    }\n    var docTypeNode = find(parentChildNodes, isDocTypeNode);\n    return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n  }\n\n  /**\n   * Check if en element node can be inserted before `child`, or at the end if child is falsy,\n   * according to the presence and position of a doctype node on the same level.\n   *\n   * @param {Node} doc The document node\n   * @param {Node} child the node that would become the nextSibling if the element would be inserted\n   * @returns {boolean} `true` if an element can be inserted before child\n   * @private\n   * https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   */\n  function isElementReplacementPossible(doc, child) {\n    var parentChildNodes = doc.childNodes || [];\n    function hasElementChildThatIsNotChild(node) {\n      return isElementNode(node) && node !== child;\n    }\n    if (find(parentChildNodes, hasElementChildThatIsNotChild)) {\n      return false;\n    }\n    var docTypeNode = find(parentChildNodes, isDocTypeNode);\n    return !(child && docTypeNode && parentChildNodes.indexOf(docTypeNode) > parentChildNodes.indexOf(child));\n  }\n\n  /**\n   * @private\n   * Steps 1-5 of the checks before inserting and before replacing a child are the same.\n   *\n   * @param {Node} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node=} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   * @see https://dom.spec.whatwg.org/#concept-node-replace\n   */\n  function assertPreInsertionValidity1to5(parent, node, child) {\n    // 1. If `parent` is not a Document, DocumentFragment, or Element node, then throw a \"HierarchyRequestError\" DOMException.\n    if (!hasValidParentNodeType(parent)) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected parent node type ' + parent.nodeType);\n    }\n    // 2. If `node` is a host-including inclusive ancestor of `parent`, then throw a \"HierarchyRequestError\" DOMException.\n    // not implemented!\n    // 3. If `child` is non-null and its parent is not `parent`, then throw a \"NotFoundError\" DOMException.\n    if (child && child.parentNode !== parent) {\n      throw new DOMException(NOT_FOUND_ERR, 'child not in parent');\n    }\n    if (\n    // 4. If `node` is not a DocumentFragment, DocumentType, Element, or CharacterData node, then throw a \"HierarchyRequestError\" DOMException.\n    !hasInsertableNodeType(node) ||\n    // 5. If either `node` is a Text node and `parent` is a document,\n    // the sax parser currently adds top level text nodes, this will be fixed in 0.9.0\n    // || (node.nodeType === Node.TEXT_NODE && parent.nodeType === Node.DOCUMENT_NODE)\n    // or `node` is a doctype and `parent` is not a document, then throw a \"HierarchyRequestError\" DOMException.\n    isDocTypeNode(node) && parent.nodeType !== Node.DOCUMENT_NODE) {\n      throw new DOMException(HIERARCHY_REQUEST_ERR, 'Unexpected node type ' + node.nodeType + ' for parent node type ' + parent.nodeType);\n    }\n  }\n\n  /**\n   * @private\n   * Step 6 of the checks before inserting and before replacing a child are different.\n   *\n   * @param {Document} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   * @see https://dom.spec.whatwg.org/#concept-node-replace\n   */\n  function assertPreInsertionValidityInDocument(parent, node, child) {\n    var parentChildNodes = parent.childNodes || [];\n    var nodeChildNodes = node.childNodes || [];\n\n    // DocumentFragment\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      var nodeChildElements = nodeChildNodes.filter(isElementNode);\n      // If node has more than one element child or has a Text node child.\n      if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n      }\n      // Otherwise, if `node` has one element child and either `parent` has an element child,\n      // `child` is a doctype, or `child` is non-null and a doctype is following `child`.\n      if (nodeChildElements.length === 1 && !isElementInsertionPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n      }\n    }\n    // Element\n    if (isElementNode(node)) {\n      // `parent` has an element child, `child` is a doctype,\n      // or `child` is non-null and a doctype is following `child`.\n      if (!isElementInsertionPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n      }\n    }\n    // DocumentType\n    if (isDocTypeNode(node)) {\n      // `parent` has a doctype child,\n      if (find(parentChildNodes, isDocTypeNode)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n      }\n      var parentElementChild = find(parentChildNodes, isElementNode);\n      // `child` is non-null and an element is preceding `child`,\n      if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n      }\n      // or `child` is null and `parent` has an element child.\n      if (!child && parentElementChild) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can not be appended since element is present');\n      }\n    }\n  }\n\n  /**\n   * @private\n   * Step 6 of the checks before inserting and before replacing a child are different.\n   *\n   * @param {Document} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node | undefined} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   * @see https://dom.spec.whatwg.org/#concept-node-replace\n   */\n  function assertPreReplacementValidityInDocument(parent, node, child) {\n    var parentChildNodes = parent.childNodes || [];\n    var nodeChildNodes = node.childNodes || [];\n\n    // DocumentFragment\n    if (node.nodeType === Node.DOCUMENT_FRAGMENT_NODE) {\n      var nodeChildElements = nodeChildNodes.filter(isElementNode);\n      // If `node` has more than one element child or has a Text node child.\n      if (nodeChildElements.length > 1 || find(nodeChildNodes, isTextNode)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'More than one element or text in fragment');\n      }\n      // Otherwise, if `node` has one element child and either `parent` has an element child that is not `child` or a doctype is following `child`.\n      if (nodeChildElements.length === 1 && !isElementReplacementPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Element in fragment can not be inserted before doctype');\n      }\n    }\n    // Element\n    if (isElementNode(node)) {\n      // `parent` has an element child that is not `child` or a doctype is following `child`.\n      if (!isElementReplacementPossible(parent, child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one element can be added and only after doctype');\n      }\n    }\n    // DocumentType\n    if (isDocTypeNode(node)) {\n      function hasDoctypeChildThatIsNotChild(node) {\n        return isDocTypeNode(node) && node !== child;\n      }\n\n      // `parent` has a doctype child that is not `child`,\n      if (find(parentChildNodes, hasDoctypeChildThatIsNotChild)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Only one doctype is allowed');\n      }\n      var parentElementChild = find(parentChildNodes, isElementNode);\n      // or an element is preceding `child`.\n      if (child && parentChildNodes.indexOf(parentElementChild) < parentChildNodes.indexOf(child)) {\n        throw new DOMException(HIERARCHY_REQUEST_ERR, 'Doctype can only be inserted before an element');\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Node} parent the parent node to insert `node` into\n   * @param {Node} node the node to insert\n   * @param {Node=} child the node that should become the `nextSibling` of `node`\n   * @returns {Node}\n   * @throws DOMException for several node combinations that would create a DOM that is not well-formed.\n   * @throws DOMException if `child` is provided but is not a child of `parent`.\n   * @see https://dom.spec.whatwg.org/#concept-node-ensure-pre-insertion-validity\n   */\n  function _insertBefore(parent, node, child, _inDocumentAssertion) {\n    // To ensure pre-insertion validity of a node into a parent before a child, run these steps:\n    assertPreInsertionValidity1to5(parent, node, child);\n\n    // If parent is a document, and any of the statements below, switched on the interface node implements,\n    // are true, then throw a \"HierarchyRequestError\" DOMException.\n    if (parent.nodeType === Node.DOCUMENT_NODE) {\n      (_inDocumentAssertion || assertPreInsertionValidityInDocument)(parent, node, child);\n    }\n    var cp = node.parentNode;\n    if (cp) {\n      cp.removeChild(node); //remove and update\n    }\n\n    if (node.nodeType === DOCUMENT_FRAGMENT_NODE) {\n      var newFirst = node.firstChild;\n      if (newFirst == null) {\n        return node;\n      }\n      var newLast = node.lastChild;\n    } else {\n      newFirst = newLast = node;\n    }\n    var pre = child ? child.previousSibling : parent.lastChild;\n    newFirst.previousSibling = pre;\n    newLast.nextSibling = child;\n    if (pre) {\n      pre.nextSibling = newFirst;\n    } else {\n      parent.firstChild = newFirst;\n    }\n    if (child == null) {\n      parent.lastChild = newLast;\n    } else {\n      child.previousSibling = newLast;\n    }\n    do {\n      newFirst.parentNode = parent;\n    } while (newFirst !== newLast && (newFirst = newFirst.nextSibling));\n    _onUpdateChild(parent.ownerDocument || parent, parent);\n    //console.log(parent.lastChild.nextSibling == null)\n    if (node.nodeType == DOCUMENT_FRAGMENT_NODE) {\n      node.firstChild = node.lastChild = null;\n    }\n    return node;\n  }\n\n  /**\n   * Appends `newChild` to `parentNode`.\n   * If `newChild` is already connected to a `parentNode` it is first removed from it.\n   *\n   * @see https://github.com/xmldom/xmldom/issues/135\n   * @see https://github.com/xmldom/xmldom/issues/145\n   * @param {Node} parentNode\n   * @param {Node} newChild\n   * @returns {Node}\n   * @private\n   */\n  function _appendSingleChild(parentNode, newChild) {\n    if (newChild.parentNode) {\n      newChild.parentNode.removeChild(newChild);\n    }\n    newChild.parentNode = parentNode;\n    newChild.previousSibling = parentNode.lastChild;\n    newChild.nextSibling = null;\n    if (newChild.previousSibling) {\n      newChild.previousSibling.nextSibling = newChild;\n    } else {\n      parentNode.firstChild = newChild;\n    }\n    parentNode.lastChild = newChild;\n    _onUpdateChild(parentNode.ownerDocument, parentNode, newChild);\n    return newChild;\n  }\n  Document.prototype = {\n    //implementation : null,\n    nodeName: '#document',\n    nodeType: DOCUMENT_NODE,\n    /**\n     * The DocumentType node of the document.\n     *\n     * @readonly\n     * @type DocumentType\n     */\n    doctype: null,\n    documentElement: null,\n    _inc: 1,\n    insertBefore: function (newChild, refChild) {\n      //raises\n      if (newChild.nodeType == DOCUMENT_FRAGMENT_NODE) {\n        var child = newChild.firstChild;\n        while (child) {\n          var next = child.nextSibling;\n          this.insertBefore(child, refChild);\n          child = next;\n        }\n        return newChild;\n      }\n      _insertBefore(this, newChild, refChild);\n      newChild.ownerDocument = this;\n      if (this.documentElement === null && newChild.nodeType === ELEMENT_NODE) {\n        this.documentElement = newChild;\n      }\n      return newChild;\n    },\n    removeChild: function (oldChild) {\n      if (this.documentElement == oldChild) {\n        this.documentElement = null;\n      }\n      return _removeChild(this, oldChild);\n    },\n    replaceChild: function (newChild, oldChild) {\n      //raises\n      _insertBefore(this, newChild, oldChild, assertPreReplacementValidityInDocument);\n      newChild.ownerDocument = this;\n      if (oldChild) {\n        this.removeChild(oldChild);\n      }\n      if (isElementNode(newChild)) {\n        this.documentElement = newChild;\n      }\n    },\n    // Introduced in DOM Level 2:\n    importNode: function (importedNode, deep) {\n      return importNode(this, importedNode, deep);\n    },\n    // Introduced in DOM Level 2:\n    getElementById: function (id) {\n      var rtv = null;\n      _visitNode(this.documentElement, function (node) {\n        if (node.nodeType == ELEMENT_NODE) {\n          if (node.getAttribute('id') == id) {\n            rtv = node;\n            return true;\n          }\n        }\n      });\n      return rtv;\n    },\n    /**\n     * The `getElementsByClassName` method of `Document` interface returns an array-like object\n     * of all child elements which have **all** of the given class name(s).\n     *\n     * Returns an empty list if `classeNames` is an empty string or only contains HTML white space characters.\n     *\n     *\n     * Warning: This is a live LiveNodeList.\n     * Changes in the DOM will reflect in the array as the changes occur.\n     * If an element selected by this array no longer qualifies for the selector,\n     * it will automatically be removed. Be aware of this for iteration purposes.\n     *\n     * @param {string} classNames is a string representing the class name(s) to match; multiple class names are separated by (ASCII-)whitespace\n     *\n     * @see https://developer.mozilla.org/en-US/docs/Web/API/Document/getElementsByClassName\n     * @see https://dom.spec.whatwg.org/#concept-getelementsbyclassname\n     */\n    getElementsByClassName: function (classNames) {\n      var classNamesSet = toOrderedSet(classNames);\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n        if (classNamesSet.length > 0) {\n          _visitNode(base.documentElement, function (node) {\n            if (node !== base && node.nodeType === ELEMENT_NODE) {\n              var nodeClassNames = node.getAttribute('class');\n              // can be null if the attribute does not exist\n              if (nodeClassNames) {\n                // before splitting and iterating just compare them for the most common case\n                var matches = classNames === nodeClassNames;\n                if (!matches) {\n                  var nodeClassNamesSet = toOrderedSet(nodeClassNames);\n                  matches = classNamesSet.every(arrayIncludes(nodeClassNamesSet));\n                }\n                if (matches) {\n                  ls.push(node);\n                }\n              }\n            }\n          });\n        }\n        return ls;\n      });\n    },\n    //document factory method:\n    createElement: function (tagName) {\n      var node = new Element();\n      node.ownerDocument = this;\n      node.nodeName = tagName;\n      node.tagName = tagName;\n      node.localName = tagName;\n      node.childNodes = new NodeList();\n      var attrs = node.attributes = new NamedNodeMap();\n      attrs._ownerElement = node;\n      return node;\n    },\n    createDocumentFragment: function () {\n      var node = new DocumentFragment();\n      node.ownerDocument = this;\n      node.childNodes = new NodeList();\n      return node;\n    },\n    createTextNode: function (data) {\n      var node = new Text();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createComment: function (data) {\n      var node = new Comment();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createCDATASection: function (data) {\n      var node = new CDATASection();\n      node.ownerDocument = this;\n      node.appendData(data);\n      return node;\n    },\n    createProcessingInstruction: function (target, data) {\n      var node = new ProcessingInstruction();\n      node.ownerDocument = this;\n      node.tagName = node.target = target;\n      node.nodeValue = node.data = data;\n      return node;\n    },\n    createAttribute: function (name) {\n      var node = new Attr();\n      node.ownerDocument = this;\n      node.name = name;\n      node.nodeName = name;\n      node.localName = name;\n      node.specified = true;\n      return node;\n    },\n    createEntityReference: function (name) {\n      var node = new EntityReference();\n      node.ownerDocument = this;\n      node.nodeName = name;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createElementNS: function (namespaceURI, qualifiedName) {\n      var node = new Element();\n      var pl = qualifiedName.split(':');\n      var attrs = node.attributes = new NamedNodeMap();\n      node.childNodes = new NodeList();\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.tagName = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n      attrs._ownerElement = node;\n      return node;\n    },\n    // Introduced in DOM Level 2:\n    createAttributeNS: function (namespaceURI, qualifiedName) {\n      var node = new Attr();\n      var pl = qualifiedName.split(':');\n      node.ownerDocument = this;\n      node.nodeName = qualifiedName;\n      node.name = qualifiedName;\n      node.namespaceURI = namespaceURI;\n      node.specified = true;\n      if (pl.length == 2) {\n        node.prefix = pl[0];\n        node.localName = pl[1];\n      } else {\n        //el.prefix = null;\n        node.localName = qualifiedName;\n      }\n      return node;\n    }\n  };\n  _extends(Document, Node);\n  function Element() {\n    this._nsMap = {};\n  }\n  Element.prototype = {\n    nodeType: ELEMENT_NODE,\n    hasAttribute: function (name) {\n      return this.getAttributeNode(name) != null;\n    },\n    getAttribute: function (name) {\n      var attr = this.getAttributeNode(name);\n      return attr && attr.value || '';\n    },\n    getAttributeNode: function (name) {\n      return this.attributes.getNamedItem(name);\n    },\n    setAttribute: function (name, value) {\n      var attr = this.ownerDocument.createAttribute(name);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    removeAttribute: function (name) {\n      var attr = this.getAttributeNode(name);\n      attr && this.removeAttributeNode(attr);\n    },\n    //four real opeartion method\n    appendChild: function (newChild) {\n      if (newChild.nodeType === DOCUMENT_FRAGMENT_NODE) {\n        return this.insertBefore(newChild, null);\n      } else {\n        return _appendSingleChild(this, newChild);\n      }\n    },\n    setAttributeNode: function (newAttr) {\n      return this.attributes.setNamedItem(newAttr);\n    },\n    setAttributeNodeNS: function (newAttr) {\n      return this.attributes.setNamedItemNS(newAttr);\n    },\n    removeAttributeNode: function (oldAttr) {\n      //console.log(this == oldAttr.ownerElement)\n      return this.attributes.removeNamedItem(oldAttr.nodeName);\n    },\n    //get real attribute name,and remove it by removeAttributeNode\n    removeAttributeNS: function (namespaceURI, localName) {\n      var old = this.getAttributeNodeNS(namespaceURI, localName);\n      old && this.removeAttributeNode(old);\n    },\n    hasAttributeNS: function (namespaceURI, localName) {\n      return this.getAttributeNodeNS(namespaceURI, localName) != null;\n    },\n    getAttributeNS: function (namespaceURI, localName) {\n      var attr = this.getAttributeNodeNS(namespaceURI, localName);\n      return attr && attr.value || '';\n    },\n    setAttributeNS: function (namespaceURI, qualifiedName, value) {\n      var attr = this.ownerDocument.createAttributeNS(namespaceURI, qualifiedName);\n      attr.value = attr.nodeValue = \"\" + value;\n      this.setAttributeNode(attr);\n    },\n    getAttributeNodeNS: function (namespaceURI, localName) {\n      return this.attributes.getNamedItemNS(namespaceURI, localName);\n    },\n    getElementsByTagName: function (tagName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType == ELEMENT_NODE && (tagName === '*' || node.tagName == tagName)) {\n            ls.push(node);\n          }\n        });\n        return ls;\n      });\n    },\n    getElementsByTagNameNS: function (namespaceURI, localName) {\n      return new LiveNodeList(this, function (base) {\n        var ls = [];\n        _visitNode(base, function (node) {\n          if (node !== base && node.nodeType === ELEMENT_NODE && (namespaceURI === '*' || node.namespaceURI === namespaceURI) && (localName === '*' || node.localName == localName)) {\n            ls.push(node);\n          }\n        });\n        return ls;\n      });\n    }\n  };\n  Document.prototype.getElementsByTagName = Element.prototype.getElementsByTagName;\n  Document.prototype.getElementsByTagNameNS = Element.prototype.getElementsByTagNameNS;\n  _extends(Element, Node);\n  function Attr() {}\n  Attr.prototype.nodeType = ATTRIBUTE_NODE;\n  _extends(Attr, Node);\n  function CharacterData() {}\n  CharacterData.prototype = {\n    data: '',\n    substringData: function (offset, count) {\n      return this.data.substring(offset, offset + count);\n    },\n    appendData: function (text) {\n      text = this.data + text;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    },\n    insertData: function (offset, text) {\n      this.replaceData(offset, 0, text);\n    },\n    appendChild: function (newChild) {\n      throw new Error(ExceptionMessage[HIERARCHY_REQUEST_ERR]);\n    },\n    deleteData: function (offset, count) {\n      this.replaceData(offset, count, \"\");\n    },\n    replaceData: function (offset, count, text) {\n      var start = this.data.substring(0, offset);\n      var end = this.data.substring(offset + count);\n      text = start + text + end;\n      this.nodeValue = this.data = text;\n      this.length = text.length;\n    }\n  };\n  _extends(CharacterData, Node);\n  function Text() {}\n  Text.prototype = {\n    nodeName: \"#text\",\n    nodeType: TEXT_NODE,\n    splitText: function (offset) {\n      var text = this.data;\n      var newText = text.substring(offset);\n      text = text.substring(0, offset);\n      this.data = this.nodeValue = text;\n      this.length = text.length;\n      var newNode = this.ownerDocument.createTextNode(newText);\n      if (this.parentNode) {\n        this.parentNode.insertBefore(newNode, this.nextSibling);\n      }\n      return newNode;\n    }\n  };\n  _extends(Text, CharacterData);\n  function Comment() {}\n  Comment.prototype = {\n    nodeName: \"#comment\",\n    nodeType: COMMENT_NODE\n  };\n  _extends(Comment, CharacterData);\n  function CDATASection() {}\n  CDATASection.prototype = {\n    nodeName: \"#cdata-section\",\n    nodeType: CDATA_SECTION_NODE\n  };\n  _extends(CDATASection, CharacterData);\n  function DocumentType() {}\n  DocumentType.prototype.nodeType = DOCUMENT_TYPE_NODE;\n  _extends(DocumentType, Node);\n  function Notation() {}\n  Notation.prototype.nodeType = NOTATION_NODE;\n  _extends(Notation, Node);\n  function Entity() {}\n  Entity.prototype.nodeType = ENTITY_NODE;\n  _extends(Entity, Node);\n  function EntityReference() {}\n  EntityReference.prototype.nodeType = ENTITY_REFERENCE_NODE;\n  _extends(EntityReference, Node);\n  function DocumentFragment() {}\n  DocumentFragment.prototype.nodeName = \"#document-fragment\";\n  DocumentFragment.prototype.nodeType = DOCUMENT_FRAGMENT_NODE;\n  _extends(DocumentFragment, Node);\n  function ProcessingInstruction() {}\n  ProcessingInstruction.prototype.nodeType = PROCESSING_INSTRUCTION_NODE;\n  _extends(ProcessingInstruction, Node);\n  function XMLSerializer() {}\n  XMLSerializer.prototype.serializeToString = function (node, isHtml, nodeFilter) {\n    return nodeSerializeToString.call(node, isHtml, nodeFilter);\n  };\n  Node.prototype.toString = nodeSerializeToString;\n  function nodeSerializeToString(isHtml, nodeFilter) {\n    var buf = [];\n    var refNode = this.nodeType == 9 && this.documentElement || this;\n    var prefix = refNode.prefix;\n    var uri = refNode.namespaceURI;\n    if (uri && prefix == null) {\n      //console.log(prefix)\n      var prefix = refNode.lookupPrefix(uri);\n      if (prefix == null) {\n        //isHTML = true;\n        var visibleNamespaces = [{\n          namespace: uri,\n          prefix: null\n        }\n        //{namespace:uri,prefix:''}\n        ];\n      }\n    }\n\n    serializeToString(this, buf, isHtml, nodeFilter, visibleNamespaces);\n    //console.log('###',this.nodeType,uri,prefix,buf.join(''))\n    return buf.join('');\n  }\n  function needNamespaceDefine(node, isHTML, visibleNamespaces) {\n    var prefix = node.prefix || '';\n    var uri = node.namespaceURI;\n    // According to [Namespaces in XML 1.0](https://www.w3.org/TR/REC-xml-names/#ns-using) ,\n    // and more specifically https://www.w3.org/TR/REC-xml-names/#nsc-NoPrefixUndecl :\n    // > In a namespace declaration for a prefix [...], the attribute value MUST NOT be empty.\n    // in a similar manner [Namespaces in XML 1.1](https://www.w3.org/TR/xml-names11/#ns-using)\n    // and more specifically https://www.w3.org/TR/xml-names11/#nsc-NSDeclared :\n    // > [...] Furthermore, the attribute value [...] must not be an empty string.\n    // so serializing empty namespace value like xmlns:ds=\"\" would produce an invalid XML document.\n    if (!uri) {\n      return false;\n    }\n    if (prefix === \"xml\" && uri === NAMESPACE$2.XML || uri === NAMESPACE$2.XMLNS) {\n      return false;\n    }\n    var i = visibleNamespaces.length;\n    while (i--) {\n      var ns = visibleNamespaces[i];\n      // get namespace prefix\n      if (ns.prefix === prefix) {\n        return ns.namespace !== uri;\n      }\n    }\n    return true;\n  }\n  /**\n   * Well-formed constraint: No < in Attribute Values\n   * > The replacement text of any entity referred to directly or indirectly\n   * > in an attribute value must not contain a <.\n   * @see https://www.w3.org/TR/xml11/#CleanAttrVals\n   * @see https://www.w3.org/TR/xml11/#NT-AttValue\n   *\n   * Literal whitespace other than space that appear in attribute values\n   * are serialized as their entity references, so they will be preserved.\n   * (In contrast to whitespace literals in the input which are normalized to spaces)\n   * @see https://www.w3.org/TR/xml11/#AVNormalize\n   * @see https://w3c.github.io/DOM-Parsing/#serializing-an-element-s-attributes\n   */\n  function addSerializedAttribute(buf, qualifiedName, value) {\n    buf.push(' ', qualifiedName, '=\"', value.replace(/[<>&\"\\t\\n\\r]/g, _xmlEncoder), '\"');\n  }\n  function serializeToString(node, buf, isHTML, nodeFilter, visibleNamespaces) {\n    if (!visibleNamespaces) {\n      visibleNamespaces = [];\n    }\n    if (nodeFilter) {\n      node = nodeFilter(node);\n      if (node) {\n        if (typeof node == 'string') {\n          buf.push(node);\n          return;\n        }\n      } else {\n        return;\n      }\n      //buf.sort.apply(attrs, attributeSorter);\n    }\n\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var len = attrs.length;\n        var child = node.firstChild;\n        var nodeName = node.tagName;\n        isHTML = NAMESPACE$2.isHTML(node.namespaceURI) || isHTML;\n        var prefixedNodeName = nodeName;\n        if (!isHTML && !node.prefix && node.namespaceURI) {\n          var defaultNS;\n          // lookup current default ns from `xmlns` attribute\n          for (var ai = 0; ai < attrs.length; ai++) {\n            if (attrs.item(ai).name === 'xmlns') {\n              defaultNS = attrs.item(ai).value;\n              break;\n            }\n          }\n          if (!defaultNS) {\n            // lookup current default ns in visibleNamespaces\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n              if (namespace.prefix === '' && namespace.namespace === node.namespaceURI) {\n                defaultNS = namespace.namespace;\n                break;\n              }\n            }\n          }\n          if (defaultNS !== node.namespaceURI) {\n            for (var nsi = visibleNamespaces.length - 1; nsi >= 0; nsi--) {\n              var namespace = visibleNamespaces[nsi];\n              if (namespace.namespace === node.namespaceURI) {\n                if (namespace.prefix) {\n                  prefixedNodeName = namespace.prefix + ':' + nodeName;\n                }\n                break;\n              }\n            }\n          }\n        }\n        buf.push('<', prefixedNodeName);\n        for (var i = 0; i < len; i++) {\n          // add namespaces for attributes\n          var attr = attrs.item(i);\n          if (attr.prefix == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: attr.localName,\n              namespace: attr.value\n            });\n          } else if (attr.nodeName == 'xmlns') {\n            visibleNamespaces.push({\n              prefix: '',\n              namespace: attr.value\n            });\n          }\n        }\n        for (var i = 0; i < len; i++) {\n          var attr = attrs.item(i);\n          if (needNamespaceDefine(attr, isHTML, visibleNamespaces)) {\n            var prefix = attr.prefix || '';\n            var uri = attr.namespaceURI;\n            addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n            visibleNamespaces.push({\n              prefix: prefix,\n              namespace: uri\n            });\n          }\n          serializeToString(attr, buf, isHTML, nodeFilter, visibleNamespaces);\n        }\n\n        // add namespace for current node\n        if (nodeName === prefixedNodeName && needNamespaceDefine(node, isHTML, visibleNamespaces)) {\n          var prefix = node.prefix || '';\n          var uri = node.namespaceURI;\n          addSerializedAttribute(buf, prefix ? 'xmlns:' + prefix : \"xmlns\", uri);\n          visibleNamespaces.push({\n            prefix: prefix,\n            namespace: uri\n          });\n        }\n        if (child || isHTML && !/^(?:meta|link|img|br|hr|input)$/i.test(nodeName)) {\n          buf.push('>');\n          //if is cdata child node\n          if (isHTML && /^script$/i.test(nodeName)) {\n            while (child) {\n              if (child.data) {\n                buf.push(child.data);\n              } else {\n                serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              }\n              child = child.nextSibling;\n            }\n          } else {\n            while (child) {\n              serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n              child = child.nextSibling;\n            }\n          }\n          buf.push('</', prefixedNodeName, '>');\n        } else {\n          buf.push('/>');\n        }\n        // remove added visible namespaces\n        //visibleNamespaces.length = startVisibleNamespaces;\n        return;\n      case DOCUMENT_NODE:\n      case DOCUMENT_FRAGMENT_NODE:\n        var child = node.firstChild;\n        while (child) {\n          serializeToString(child, buf, isHTML, nodeFilter, visibleNamespaces.slice());\n          child = child.nextSibling;\n        }\n        return;\n      case ATTRIBUTE_NODE:\n        return addSerializedAttribute(buf, node.name, node.value);\n      case TEXT_NODE:\n        /**\n         * The ampersand character (&) and the left angle bracket (<) must not appear in their literal form,\n         * except when used as markup delimiters, or within a comment, a processing instruction, or a CDATA section.\n         * If they are needed elsewhere, they must be escaped using either numeric character references or the strings\n         * `&amp;` and `&lt;` respectively.\n         * The right angle bracket (>) may be represented using the string \" &gt; \", and must, for compatibility,\n         * be escaped using either `&gt;` or a character reference when it appears in the string `]]>` in content,\n         * when that string is not marking the end of a CDATA section.\n         *\n         * In the content of elements, character data is any string of characters\n         * which does not contain the start-delimiter of any markup\n         * and does not include the CDATA-section-close delimiter, `]]>`.\n         *\n         * @see https://www.w3.org/TR/xml/#NT-CharData\n         * @see https://w3c.github.io/DOM-Parsing/#xml-serializing-a-text-node\n         */\n        return buf.push(node.data.replace(/[<&>]/g, _xmlEncoder));\n      case CDATA_SECTION_NODE:\n        return buf.push('<![CDATA[', node.data, ']]>');\n      case COMMENT_NODE:\n        return buf.push(\"<!--\", node.data, \"-->\");\n      case DOCUMENT_TYPE_NODE:\n        var pubid = node.publicId;\n        var sysid = node.systemId;\n        buf.push('<!DOCTYPE ', node.name);\n        if (pubid) {\n          buf.push(' PUBLIC ', pubid);\n          if (sysid && sysid != '.') {\n            buf.push(' ', sysid);\n          }\n          buf.push('>');\n        } else if (sysid && sysid != '.') {\n          buf.push(' SYSTEM ', sysid, '>');\n        } else {\n          var sub = node.internalSubset;\n          if (sub) {\n            buf.push(\" [\", sub, \"]\");\n          }\n          buf.push(\">\");\n        }\n        return;\n      case PROCESSING_INSTRUCTION_NODE:\n        return buf.push(\"<?\", node.target, \" \", node.data, \"?>\");\n      case ENTITY_REFERENCE_NODE:\n        return buf.push('&', node.nodeName, ';');\n      //case ENTITY_NODE:\n      //case NOTATION_NODE:\n      default:\n        buf.push('??', node.nodeName);\n    }\n  }\n  function importNode(doc, node, deep) {\n    var node2;\n    switch (node.nodeType) {\n      case ELEMENT_NODE:\n        node2 = node.cloneNode(false);\n        node2.ownerDocument = doc;\n      //var attrs = node2.attributes;\n      //var len = attrs.length;\n      //for(var i=0;i<len;i++){\n      //node2.setAttributeNodeNS(importNode(doc,attrs.item(i),deep));\n      //}\n      case DOCUMENT_FRAGMENT_NODE:\n        break;\n      case ATTRIBUTE_NODE:\n        deep = true;\n        break;\n      //case ENTITY_REFERENCE_NODE:\n      //case PROCESSING_INSTRUCTION_NODE:\n      ////case TEXT_NODE:\n      //case CDATA_SECTION_NODE:\n      //case COMMENT_NODE:\n      //\tdeep = false;\n      //\tbreak;\n      //case DOCUMENT_NODE:\n      //case DOCUMENT_TYPE_NODE:\n      //cannot be imported.\n      //case ENTITY_NODE:\n      //case NOTATION_NODE：\n      //can not hit in level3\n      //default:throw e;\n    }\n\n    if (!node2) {\n      node2 = node.cloneNode(false); //false\n    }\n\n    node2.ownerDocument = doc;\n    node2.parentNode = null;\n    if (deep) {\n      var child = node.firstChild;\n      while (child) {\n        node2.appendChild(importNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n    return node2;\n  }\n  //\n  //var _relationMap = {firstChild:1,lastChild:1,previousSibling:1,nextSibling:1,\n  //\t\t\t\t\tattributes:1,childNodes:1,parentNode:1,documentElement:1,doctype,};\n  function cloneNode(doc, node, deep) {\n    var node2 = new node.constructor();\n    for (var n in node) {\n      if (Object.prototype.hasOwnProperty.call(node, n)) {\n        var v = node[n];\n        if (typeof v != \"object\") {\n          if (v != node2[n]) {\n            node2[n] = v;\n          }\n        }\n      }\n    }\n    if (node.childNodes) {\n      node2.childNodes = new NodeList();\n    }\n    node2.ownerDocument = doc;\n    switch (node2.nodeType) {\n      case ELEMENT_NODE:\n        var attrs = node.attributes;\n        var attrs2 = node2.attributes = new NamedNodeMap();\n        var len = attrs.length;\n        attrs2._ownerElement = node2;\n        for (var i = 0; i < len; i++) {\n          node2.setAttributeNode(cloneNode(doc, attrs.item(i), true));\n        }\n        break;\n      case ATTRIBUTE_NODE:\n        deep = true;\n    }\n    if (deep) {\n      var child = node.firstChild;\n      while (child) {\n        node2.appendChild(cloneNode(doc, child, deep));\n        child = child.nextSibling;\n      }\n    }\n    return node2;\n  }\n  function __set__(object, key, value) {\n    object[key] = value;\n  }\n  //do dynamic\n  try {\n    if (Object.defineProperty) {\n      Object.defineProperty(LiveNodeList.prototype, 'length', {\n        get: function () {\n          _updateLiveList(this);\n          return this.$$length;\n        }\n      });\n      Object.defineProperty(Node.prototype, 'textContent', {\n        get: function () {\n          return getTextContent(this);\n        },\n        set: function (data) {\n          switch (this.nodeType) {\n            case ELEMENT_NODE:\n            case DOCUMENT_FRAGMENT_NODE:\n              while (this.firstChild) {\n                this.removeChild(this.firstChild);\n              }\n              if (data || String(data)) {\n                this.appendChild(this.ownerDocument.createTextNode(data));\n              }\n              break;\n            default:\n              this.data = data;\n              this.value = data;\n              this.nodeValue = data;\n          }\n        }\n      });\n      function getTextContent(node) {\n        switch (node.nodeType) {\n          case ELEMENT_NODE:\n          case DOCUMENT_FRAGMENT_NODE:\n            var buf = [];\n            node = node.firstChild;\n            while (node) {\n              if (node.nodeType !== 7 && node.nodeType !== 8) {\n                buf.push(getTextContent(node));\n              }\n              node = node.nextSibling;\n            }\n            return buf.join('');\n          default:\n            return node.nodeValue;\n        }\n      }\n      __set__ = function (object, key, value) {\n        //console.log(value)\n        object['$$' + key] = value;\n      };\n    }\n  } catch (e) {//ie8\n  }\n\n  //if(typeof require == 'function'){\n  var DocumentType_1 = DocumentType;\n  var DOMException_1 = DOMException;\n  var DOMImplementation_1 = DOMImplementation$1;\n  var Element_1 = Element;\n  var Node_1 = Node;\n  var NodeList_1 = NodeList;\n  var XMLSerializer_1 = XMLSerializer;\n  //}\n\n  var dom = {\n    DocumentType: DocumentType_1,\n    DOMException: DOMException_1,\n    DOMImplementation: DOMImplementation_1,\n    Element: Element_1,\n    Node: Node_1,\n    NodeList: NodeList_1,\n    XMLSerializer: XMLSerializer_1\n  };\n\n  var entities = createCommonjsModule(function (module, exports) {\n    var freeze = conventions.freeze;\n\n    /**\n     * The entities that are predefined in every XML document.\n     *\n     * @see https://www.w3.org/TR/2006/REC-xml11-20060816/#sec-predefined-ent W3C XML 1.1\n     * @see https://www.w3.org/TR/2008/REC-xml-20081126/#sec-predefined-ent W3C XML 1.0\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Predefined_entities_in_XML Wikipedia\n     */\n    exports.XML_ENTITIES = freeze({\n      amp: '&',\n      apos: \"'\",\n      gt: '>',\n      lt: '<',\n      quot: '\"'\n    });\n\n    /**\n     * A map of currently 241 entities that are detected in an HTML document.\n     * They contain all entries from `XML_ENTITIES`.\n     *\n     * @see XML_ENTITIES\n     * @see DOMParser.parseFromString\n     * @see DOMImplementation.prototype.createHTMLDocument\n     * @see https://html.spec.whatwg.org/#named-character-references WHATWG HTML(5) Spec\n     * @see https://www.w3.org/TR/xml-entity-names/ W3C XML Entity Names\n     * @see https://www.w3.org/TR/html4/sgml/entities.html W3C HTML4/SGML\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Character_entity_references_in_HTML Wikipedia (HTML)\n     * @see https://en.wikipedia.org/wiki/List_of_XML_and_HTML_character_entity_references#Entities_representing_special_characters_in_XHTML Wikpedia (XHTML)\n     */\n    exports.HTML_ENTITIES = freeze({\n      lt: '<',\n      gt: '>',\n      amp: '&',\n      quot: '\"',\n      apos: \"'\",\n      Agrave: \"À\",\n      Aacute: \"Á\",\n      Acirc: \"Â\",\n      Atilde: \"Ã\",\n      Auml: \"Ä\",\n      Aring: \"Å\",\n      AElig: \"Æ\",\n      Ccedil: \"Ç\",\n      Egrave: \"È\",\n      Eacute: \"É\",\n      Ecirc: \"Ê\",\n      Euml: \"Ë\",\n      Igrave: \"Ì\",\n      Iacute: \"Í\",\n      Icirc: \"Î\",\n      Iuml: \"Ï\",\n      ETH: \"Ð\",\n      Ntilde: \"Ñ\",\n      Ograve: \"Ò\",\n      Oacute: \"Ó\",\n      Ocirc: \"Ô\",\n      Otilde: \"Õ\",\n      Ouml: \"Ö\",\n      Oslash: \"Ø\",\n      Ugrave: \"Ù\",\n      Uacute: \"Ú\",\n      Ucirc: \"Û\",\n      Uuml: \"Ü\",\n      Yacute: \"Ý\",\n      THORN: \"Þ\",\n      szlig: \"ß\",\n      agrave: \"à\",\n      aacute: \"á\",\n      acirc: \"â\",\n      atilde: \"ã\",\n      auml: \"ä\",\n      aring: \"å\",\n      aelig: \"æ\",\n      ccedil: \"ç\",\n      egrave: \"è\",\n      eacute: \"é\",\n      ecirc: \"ê\",\n      euml: \"ë\",\n      igrave: \"ì\",\n      iacute: \"í\",\n      icirc: \"î\",\n      iuml: \"ï\",\n      eth: \"ð\",\n      ntilde: \"ñ\",\n      ograve: \"ò\",\n      oacute: \"ó\",\n      ocirc: \"ô\",\n      otilde: \"õ\",\n      ouml: \"ö\",\n      oslash: \"ø\",\n      ugrave: \"ù\",\n      uacute: \"ú\",\n      ucirc: \"û\",\n      uuml: \"ü\",\n      yacute: \"ý\",\n      thorn: \"þ\",\n      yuml: \"ÿ\",\n      nbsp: \"\\u00a0\",\n      iexcl: \"¡\",\n      cent: \"¢\",\n      pound: \"£\",\n      curren: \"¤\",\n      yen: \"¥\",\n      brvbar: \"¦\",\n      sect: \"§\",\n      uml: \"¨\",\n      copy: \"©\",\n      ordf: \"ª\",\n      laquo: \"«\",\n      not: \"¬\",\n      shy: \"­­\",\n      reg: \"®\",\n      macr: \"¯\",\n      deg: \"°\",\n      plusmn: \"±\",\n      sup2: \"²\",\n      sup3: \"³\",\n      acute: \"´\",\n      micro: \"µ\",\n      para: \"¶\",\n      middot: \"·\",\n      cedil: \"¸\",\n      sup1: \"¹\",\n      ordm: \"º\",\n      raquo: \"»\",\n      frac14: \"¼\",\n      frac12: \"½\",\n      frac34: \"¾\",\n      iquest: \"¿\",\n      times: \"×\",\n      divide: \"÷\",\n      forall: \"∀\",\n      part: \"∂\",\n      exist: \"∃\",\n      empty: \"∅\",\n      nabla: \"∇\",\n      isin: \"∈\",\n      notin: \"∉\",\n      ni: \"∋\",\n      prod: \"∏\",\n      sum: \"∑\",\n      minus: \"−\",\n      lowast: \"∗\",\n      radic: \"√\",\n      prop: \"∝\",\n      infin: \"∞\",\n      ang: \"∠\",\n      and: \"∧\",\n      or: \"∨\",\n      cap: \"∩\",\n      cup: \"∪\",\n      'int': \"∫\",\n      there4: \"∴\",\n      sim: \"∼\",\n      cong: \"≅\",\n      asymp: \"≈\",\n      ne: \"≠\",\n      equiv: \"≡\",\n      le: \"≤\",\n      ge: \"≥\",\n      sub: \"⊂\",\n      sup: \"⊃\",\n      nsub: \"⊄\",\n      sube: \"⊆\",\n      supe: \"⊇\",\n      oplus: \"⊕\",\n      otimes: \"⊗\",\n      perp: \"⊥\",\n      sdot: \"⋅\",\n      Alpha: \"Α\",\n      Beta: \"Β\",\n      Gamma: \"Γ\",\n      Delta: \"Δ\",\n      Epsilon: \"Ε\",\n      Zeta: \"Ζ\",\n      Eta: \"Η\",\n      Theta: \"Θ\",\n      Iota: \"Ι\",\n      Kappa: \"Κ\",\n      Lambda: \"Λ\",\n      Mu: \"Μ\",\n      Nu: \"Ν\",\n      Xi: \"Ξ\",\n      Omicron: \"Ο\",\n      Pi: \"Π\",\n      Rho: \"Ρ\",\n      Sigma: \"Σ\",\n      Tau: \"Τ\",\n      Upsilon: \"Υ\",\n      Phi: \"Φ\",\n      Chi: \"Χ\",\n      Psi: \"Ψ\",\n      Omega: \"Ω\",\n      alpha: \"α\",\n      beta: \"β\",\n      gamma: \"γ\",\n      delta: \"δ\",\n      epsilon: \"ε\",\n      zeta: \"ζ\",\n      eta: \"η\",\n      theta: \"θ\",\n      iota: \"ι\",\n      kappa: \"κ\",\n      lambda: \"λ\",\n      mu: \"μ\",\n      nu: \"ν\",\n      xi: \"ξ\",\n      omicron: \"ο\",\n      pi: \"π\",\n      rho: \"ρ\",\n      sigmaf: \"ς\",\n      sigma: \"σ\",\n      tau: \"τ\",\n      upsilon: \"υ\",\n      phi: \"φ\",\n      chi: \"χ\",\n      psi: \"ψ\",\n      omega: \"ω\",\n      thetasym: \"ϑ\",\n      upsih: \"ϒ\",\n      piv: \"ϖ\",\n      OElig: \"Œ\",\n      oelig: \"œ\",\n      Scaron: \"Š\",\n      scaron: \"š\",\n      Yuml: \"Ÿ\",\n      fnof: \"ƒ\",\n      circ: \"ˆ\",\n      tilde: \"˜\",\n      ensp: \" \",\n      emsp: \" \",\n      thinsp: \" \",\n      zwnj: \"‌\",\n      zwj: \"‍\",\n      lrm: \"‎\",\n      rlm: \"‏\",\n      ndash: \"–\",\n      mdash: \"—\",\n      lsquo: \"‘\",\n      rsquo: \"’\",\n      sbquo: \"‚\",\n      ldquo: \"“\",\n      rdquo: \"”\",\n      bdquo: \"„\",\n      dagger: \"†\",\n      Dagger: \"‡\",\n      bull: \"•\",\n      hellip: \"…\",\n      permil: \"‰\",\n      prime: \"′\",\n      Prime: \"″\",\n      lsaquo: \"‹\",\n      rsaquo: \"›\",\n      oline: \"‾\",\n      euro: \"€\",\n      trade: \"™\",\n      larr: \"←\",\n      uarr: \"↑\",\n      rarr: \"→\",\n      darr: \"↓\",\n      harr: \"↔\",\n      crarr: \"↵\",\n      lceil: \"⌈\",\n      rceil: \"⌉\",\n      lfloor: \"⌊\",\n      rfloor: \"⌋\",\n      loz: \"◊\",\n      spades: \"♠\",\n      clubs: \"♣\",\n      hearts: \"♥\",\n      diams: \"♦\"\n    });\n\n    /**\n     * @deprecated use `HTML_ENTITIES` instead\n     * @see HTML_ENTITIES\n     */\n    exports.entityMap = exports.HTML_ENTITIES;\n  });\n  entities.XML_ENTITIES;\n  entities.HTML_ENTITIES;\n  entities.entityMap;\n\n  var NAMESPACE$1 = conventions.NAMESPACE;\n\n  //[4]   \tNameStartChar\t   ::=   \t\":\" | [A-Z] | \"_\" | [a-z] | [#xC0-#xD6] | [#xD8-#xF6] | [#xF8-#x2FF] | [#x370-#x37D] | [#x37F-#x1FFF] | [#x200C-#x200D] | [#x2070-#x218F] | [#x2C00-#x2FEF] | [#x3001-#xD7FF] | [#xF900-#xFDCF] | [#xFDF0-#xFFFD] | [#x10000-#xEFFFF]\n  //[4a]   \tNameChar\t   ::=   \tNameStartChar | \"-\" | \".\" | [0-9] | #xB7 | [#x0300-#x036F] | [#x203F-#x2040]\n  //[5]   \tName\t   ::=   \tNameStartChar (NameChar)*\n  var nameStartChar = /[A-Z_a-z\\xC0-\\xD6\\xD8-\\xF6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD]/; //\\u10000-\\uEFFFF\n  var nameChar = new RegExp(\"[\\\\-\\\\.0-9\" + nameStartChar.source.slice(1, -1) + \"\\\\u00B7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040]\");\n  var tagNamePattern = new RegExp('^' + nameStartChar.source + nameChar.source + '*(?:\\:' + nameStartChar.source + nameChar.source + '*)?$');\n  //var tagNamePattern = /^[a-zA-Z_][\\w\\-\\.]*(?:\\:[a-zA-Z_][\\w\\-\\.]*)?$/\n  //var handlers = 'resolveEntity,getExternalSubset,characters,endDocument,endElement,endPrefixMapping,ignorableWhitespace,processingInstruction,setDocumentLocator,skippedEntity,startDocument,startElement,startPrefixMapping,notationDecl,unparsedEntityDecl,error,fatalError,warning,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,comment,endCDATA,endDTD,endEntity,startCDATA,startDTD,startEntity'.split(',')\n\n  //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n  //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n  var S_TAG = 0; //tag name offerring\n  var S_ATTR = 1; //attr name offerring\n  var S_ATTR_SPACE = 2; //attr name end and space offer\n  var S_EQ = 3; //=space?\n  var S_ATTR_NOQUOT_VALUE = 4; //attr value(no quot value only)\n  var S_ATTR_END = 5; //attr value end and no space(quot end)\n  var S_TAG_SPACE = 6; //(attr value end || tag end ) && (space offer)\n  var S_TAG_CLOSE = 7; //closed el<el />\n\n  /**\n   * Creates an error that will not be caught by XMLReader aka the SAX parser.\n   *\n   * @param {string} message\n   * @param {any?} locator Optional, can provide details about the location in the source\n   * @constructor\n   */\n  function ParseError$1(message, locator) {\n    this.message = message;\n    this.locator = locator;\n    if (Error.captureStackTrace) Error.captureStackTrace(this, ParseError$1);\n  }\n  ParseError$1.prototype = new Error();\n  ParseError$1.prototype.name = ParseError$1.name;\n  function XMLReader$1() {}\n  XMLReader$1.prototype = {\n    parse: function (source, defaultNSMap, entityMap) {\n      var domBuilder = this.domBuilder;\n      domBuilder.startDocument();\n      _copy(defaultNSMap, defaultNSMap = {});\n      parse$1(source, defaultNSMap, entityMap, domBuilder, this.errorHandler);\n      domBuilder.endDocument();\n    }\n  };\n  function parse$1(source, defaultNSMapCopy, entityMap, domBuilder, errorHandler) {\n    function fixedFromCharCode(code) {\n      // String.prototype.fromCharCode does not supports\n      // > 2 bytes unicode chars directly\n      if (code > 0xffff) {\n        code -= 0x10000;\n        var surrogate1 = 0xd800 + (code >> 10),\n          surrogate2 = 0xdc00 + (code & 0x3ff);\n        return String.fromCharCode(surrogate1, surrogate2);\n      } else {\n        return String.fromCharCode(code);\n      }\n    }\n    function entityReplacer(a) {\n      var k = a.slice(1, -1);\n      if (Object.hasOwnProperty.call(entityMap, k)) {\n        return entityMap[k];\n      } else if (k.charAt(0) === '#') {\n        return fixedFromCharCode(parseInt(k.substr(1).replace('x', '0x')));\n      } else {\n        errorHandler.error('entity not found:' + a);\n        return a;\n      }\n    }\n    function appendText(end) {\n      //has some bugs\n      if (end > start) {\n        var xt = source.substring(start, end).replace(/&#?\\w+;/g, entityReplacer);\n        locator && position(start);\n        domBuilder.characters(xt, 0, end - start);\n        start = end;\n      }\n    }\n    function position(p, m) {\n      while (p >= lineEnd && (m = linePattern.exec(source))) {\n        lineStart = m.index;\n        lineEnd = lineStart + m[0].length;\n        locator.lineNumber++;\n        //console.log('line++:',locator,startPos,endPos)\n      }\n\n      locator.columnNumber = p - lineStart + 1;\n    }\n    var lineStart = 0;\n    var lineEnd = 0;\n    var linePattern = /.*(?:\\r\\n?|\\n)|.*$/g;\n    var locator = domBuilder.locator;\n    var parseStack = [{\n      currentNSMap: defaultNSMapCopy\n    }];\n    var closeMap = {};\n    var start = 0;\n    while (true) {\n      try {\n        var tagStart = source.indexOf('<', start);\n        if (tagStart < 0) {\n          if (!source.substr(start).match(/^\\s*$/)) {\n            var doc = domBuilder.doc;\n            var text = doc.createTextNode(source.substr(start));\n            doc.appendChild(text);\n            domBuilder.currentElement = text;\n          }\n          return;\n        }\n        if (tagStart > start) {\n          appendText(tagStart);\n        }\n        switch (source.charAt(tagStart + 1)) {\n          case '/':\n            var end = source.indexOf('>', tagStart + 3);\n            var tagName = source.substring(tagStart + 2, end).replace(/[ \\t\\n\\r]+$/g, '');\n            var config = parseStack.pop();\n            if (end < 0) {\n              tagName = source.substring(tagStart + 2).replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' is not complete:' + config.tagName);\n              end = tagStart + 1 + tagName.length;\n            } else if (tagName.match(/\\s</)) {\n              tagName = tagName.replace(/[\\s<].*/, '');\n              errorHandler.error(\"end tag name: \" + tagName + ' maybe not complete');\n              end = tagStart + 1 + tagName.length;\n            }\n            var localNSMap = config.localNSMap;\n            var endMatch = config.tagName == tagName;\n            var endIgnoreCaseMach = endMatch || config.tagName && config.tagName.toLowerCase() == tagName.toLowerCase();\n            if (endIgnoreCaseMach) {\n              domBuilder.endElement(config.uri, config.localName, tagName);\n              if (localNSMap) {\n                for (var prefix in localNSMap) {\n                  if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n                    domBuilder.endPrefixMapping(prefix);\n                  }\n                }\n              }\n              if (!endMatch) {\n                errorHandler.fatalError(\"end tag name: \" + tagName + ' is not match the current start tagName:' + config.tagName); // No known test case\n              }\n            } else {\n              parseStack.push(config);\n            }\n            end++;\n            break;\n          // end elment\n          case '?':\n            // <?...?>\n            locator && position(tagStart);\n            end = parseInstruction(source, tagStart, domBuilder);\n            break;\n          case '!':\n            // <!doctype,<![CDATA,<!--\n            locator && position(tagStart);\n            end = parseDCC(source, tagStart, domBuilder, errorHandler);\n            break;\n          default:\n            locator && position(tagStart);\n            var el = new ElementAttributes();\n            var currentNSMap = parseStack[parseStack.length - 1].currentNSMap;\n            //elStartEnd\n            var end = parseElementStartPart(source, tagStart, el, currentNSMap, entityReplacer, errorHandler);\n            var len = el.length;\n            if (!el.closed && fixSelfClosed(source, end, el.tagName, closeMap)) {\n              el.closed = true;\n              if (!entityMap.nbsp) {\n                errorHandler.warning('unclosed xml attribute');\n              }\n            }\n            if (locator && len) {\n              var locator2 = copyLocator(locator, {});\n              //try{//attribute position fixed\n              for (var i = 0; i < len; i++) {\n                var a = el[i];\n                position(a.offset);\n                a.locator = copyLocator(locator, {});\n              }\n              domBuilder.locator = locator2;\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n              domBuilder.locator = locator;\n            } else {\n              if (appendElement$1(el, domBuilder, currentNSMap)) {\n                parseStack.push(el);\n              }\n            }\n            if (NAMESPACE$1.isHTML(el.uri) && !el.closed) {\n              end = parseHtmlSpecialContent(source, end, el.tagName, entityReplacer, domBuilder);\n            } else {\n              end++;\n            }\n        }\n      } catch (e) {\n        if (e instanceof ParseError$1) {\n          throw e;\n        }\n        errorHandler.error('element parse error: ' + e);\n        end = -1;\n      }\n      if (end > start) {\n        start = end;\n      } else {\n        //TODO: 这里有可能sax回退，有位置错误风险\n        appendText(Math.max(tagStart, start) + 1);\n      }\n    }\n  }\n  function copyLocator(f, t) {\n    t.lineNumber = f.lineNumber;\n    t.columnNumber = f.columnNumber;\n    return t;\n  }\n\n  /**\n   * @see #appendElement(source,elStartEnd,el,selfClosed,entityReplacer,domBuilder,parseStack);\n   * @return end of the elementStartPart(end of elementEndPart for selfClosed el)\n   */\n  function parseElementStartPart(source, start, el, currentNSMap, entityReplacer, errorHandler) {\n    /**\n     * @param {string} qname\n     * @param {string} value\n     * @param {number} startIndex\n     */\n    function addAttribute(qname, value, startIndex) {\n      if (el.attributeNames.hasOwnProperty(qname)) {\n        errorHandler.fatalError('Attribute ' + qname + ' redefined');\n      }\n      el.addValue(qname,\n      // @see https://www.w3.org/TR/xml/#AVNormalize\n      // since the xmldom sax parser does not \"interpret\" DTD the following is not implemented:\n      // - recursive replacement of (DTD) entity references\n      // - trimming and collapsing multiple spaces into a single one for attributes that are not of type CDATA\n      value.replace(/[\\t\\n\\r]/g, ' ').replace(/&#?\\w+;/g, entityReplacer), startIndex);\n    }\n    var attrName;\n    var value;\n    var p = ++start;\n    var s = S_TAG; //status\n    while (true) {\n      var c = source.charAt(p);\n      switch (c) {\n        case '=':\n          if (s === S_ATTR) {\n            //attrName\n            attrName = source.slice(start, p);\n            s = S_EQ;\n          } else if (s === S_ATTR_SPACE) {\n            s = S_EQ;\n          } else {\n            //fatalError: equal must after attrName or space after attrName\n            throw new Error('attribute equal must after attrName'); // No known test case\n          }\n\n          break;\n        case '\\'':\n        case '\"':\n          if (s === S_EQ || s === S_ATTR //|| s == S_ATTR_SPACE\n          ) {\n            //equal\n            if (s === S_ATTR) {\n              errorHandler.warning('attribute value must after \"=\"');\n              attrName = source.slice(start, p);\n            }\n            start = p + 1;\n            p = source.indexOf(c, start);\n            if (p > 0) {\n              value = source.slice(start, p);\n              addAttribute(attrName, value, start - 1);\n              s = S_ATTR_END;\n            } else {\n              //fatalError: no end quot match\n              throw new Error('attribute value no end \\'' + c + '\\' match');\n            }\n          } else if (s == S_ATTR_NOQUOT_VALUE) {\n            value = source.slice(start, p);\n            addAttribute(attrName, value, start);\n            errorHandler.warning('attribute \"' + attrName + '\" missed start quot(' + c + ')!!');\n            start = p + 1;\n            s = S_ATTR_END;\n          } else {\n            //fatalError: no equal before\n            throw new Error('attribute value must after \"=\"'); // No known test case\n          }\n\n          break;\n        case '/':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              s = S_TAG_CLOSE;\n              el.closed = true;\n            case S_ATTR_NOQUOT_VALUE:\n            case S_ATTR:\n            case S_ATTR_SPACE:\n              break;\n            //case S_EQ:\n            default:\n              throw new Error(\"attribute invalid close char('/')\");\n            // No known test case\n          }\n\n          break;\n        case '':\n          //end document\n          errorHandler.error('unexpected end of input');\n          if (s == S_TAG) {\n            el.setTagName(source.slice(start, p));\n          }\n          return p;\n        case '>':\n          switch (s) {\n            case S_TAG:\n              el.setTagName(source.slice(start, p));\n            case S_ATTR_END:\n            case S_TAG_SPACE:\n            case S_TAG_CLOSE:\n              break;\n            //normal\n            case S_ATTR_NOQUOT_VALUE: //Compatible state\n            case S_ATTR:\n              value = source.slice(start, p);\n              if (value.slice(-1) === '/') {\n                el.closed = true;\n                value = value.slice(0, -1);\n              }\n            case S_ATTR_SPACE:\n              if (s === S_ATTR_SPACE) {\n                value = attrName;\n              }\n              if (s == S_ATTR_NOQUOT_VALUE) {\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!');\n                addAttribute(attrName, value, start);\n              } else {\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !value.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + value + '\" missed value!! \"' + value + '\" instead!!');\n                }\n                addAttribute(value, value, start);\n              }\n              break;\n            case S_EQ:\n              throw new Error('attribute value missed!!');\n          }\n          //\t\t\tconsole.log(tagName,tagNamePattern,tagNamePattern.test(tagName))\n          return p;\n        /*xml space '\\x20' | #x9 | #xD | #xA; */\n        case '\\u0080':\n          c = ' ';\n        default:\n          if (c <= ' ') {\n            //space\n            switch (s) {\n              case S_TAG:\n                el.setTagName(source.slice(start, p)); //tagName\n                s = S_TAG_SPACE;\n                break;\n              case S_ATTR:\n                attrName = source.slice(start, p);\n                s = S_ATTR_SPACE;\n                break;\n              case S_ATTR_NOQUOT_VALUE:\n                var value = source.slice(start, p);\n                errorHandler.warning('attribute \"' + value + '\" missed quot(\")!!');\n                addAttribute(attrName, value, start);\n              case S_ATTR_END:\n                s = S_TAG_SPACE;\n                break;\n              //case S_TAG_SPACE:\n              //case S_EQ:\n              //case S_ATTR_SPACE:\n              //\tvoid();break;\n              //case S_TAG_CLOSE:\n              //ignore warning\n            }\n          } else {\n            //not space\n            //S_TAG,\tS_ATTR,\tS_EQ,\tS_ATTR_NOQUOT_VALUE\n            //S_ATTR_SPACE,\tS_ATTR_END,\tS_TAG_SPACE, S_TAG_CLOSE\n            switch (s) {\n              //case S_TAG:void();break;\n              //case S_ATTR:void();break;\n              //case S_ATTR_NOQUOT_VALUE:void();break;\n              case S_ATTR_SPACE:\n                el.tagName;\n                if (!NAMESPACE$1.isHTML(currentNSMap['']) || !attrName.match(/^(?:disabled|checked|selected)$/i)) {\n                  errorHandler.warning('attribute \"' + attrName + '\" missed value!! \"' + attrName + '\" instead2!!');\n                }\n                addAttribute(attrName, attrName, start);\n                start = p;\n                s = S_ATTR;\n                break;\n              case S_ATTR_END:\n                errorHandler.warning('attribute space is required\"' + attrName + '\"!!');\n              case S_TAG_SPACE:\n                s = S_ATTR;\n                start = p;\n                break;\n              case S_EQ:\n                s = S_ATTR_NOQUOT_VALUE;\n                start = p;\n                break;\n              case S_TAG_CLOSE:\n                throw new Error(\"elements closed character '/' and '>' must be connected to\");\n            }\n          }\n      } //end outer switch\n      //console.log('p++',p)\n      p++;\n    }\n  }\n  /**\n   * @return true if has new namespace define\n   */\n  function appendElement$1(el, domBuilder, currentNSMap) {\n    var tagName = el.tagName;\n    var localNSMap = null;\n    //var currentNSMap = parseStack[parseStack.length-1].currentNSMap;\n    var i = el.length;\n    while (i--) {\n      var a = el[i];\n      var qName = a.qName;\n      var value = a.value;\n      var nsp = qName.indexOf(':');\n      if (nsp > 0) {\n        var prefix = a.prefix = qName.slice(0, nsp);\n        var localName = qName.slice(nsp + 1);\n        var nsPrefix = prefix === 'xmlns' && localName;\n      } else {\n        localName = qName;\n        prefix = null;\n        nsPrefix = qName === 'xmlns' && '';\n      }\n      //can not set prefix,because prefix !== ''\n      a.localName = localName;\n      //prefix == null for no ns prefix attribute\n      if (nsPrefix !== false) {\n        //hack!!\n        if (localNSMap == null) {\n          localNSMap = {};\n          //console.log(currentNSMap,0)\n          _copy(currentNSMap, currentNSMap = {});\n          //console.log(currentNSMap,1)\n        }\n\n        currentNSMap[nsPrefix] = localNSMap[nsPrefix] = value;\n        a.uri = NAMESPACE$1.XMLNS;\n        domBuilder.startPrefixMapping(nsPrefix, value);\n      }\n    }\n    var i = el.length;\n    while (i--) {\n      a = el[i];\n      var prefix = a.prefix;\n      if (prefix) {\n        //no prefix attribute has no namespace\n        if (prefix === 'xml') {\n          a.uri = NAMESPACE$1.XML;\n        }\n        if (prefix !== 'xmlns') {\n          a.uri = currentNSMap[prefix || ''];\n\n          //{console.log('###'+a.qName,domBuilder.locator.systemId+'',currentNSMap,a.uri)}\n        }\n      }\n    }\n\n    var nsp = tagName.indexOf(':');\n    if (nsp > 0) {\n      prefix = el.prefix = tagName.slice(0, nsp);\n      localName = el.localName = tagName.slice(nsp + 1);\n    } else {\n      prefix = null; //important!!\n      localName = el.localName = tagName;\n    }\n    //no prefix element has default namespace\n    var ns = el.uri = currentNSMap[prefix || ''];\n    domBuilder.startElement(ns, localName, tagName, el);\n    //endPrefixMapping and startPrefixMapping have not any help for dom builder\n    //localNSMap = null\n    if (el.closed) {\n      domBuilder.endElement(ns, localName, tagName);\n      if (localNSMap) {\n        for (prefix in localNSMap) {\n          if (Object.prototype.hasOwnProperty.call(localNSMap, prefix)) {\n            domBuilder.endPrefixMapping(prefix);\n          }\n        }\n      }\n    } else {\n      el.currentNSMap = currentNSMap;\n      el.localNSMap = localNSMap;\n      //parseStack.push(el);\n      return true;\n    }\n  }\n  function parseHtmlSpecialContent(source, elStartEnd, tagName, entityReplacer, domBuilder) {\n    if (/^(?:script|textarea)$/i.test(tagName)) {\n      var elEndStart = source.indexOf('</' + tagName + '>', elStartEnd);\n      var text = source.substring(elStartEnd + 1, elEndStart);\n      if (/[&<]/.test(text)) {\n        if (/^script$/i.test(tagName)) {\n          //if(!/\\]\\]>/.test(text)){\n          //lexHandler.startCDATA();\n          domBuilder.characters(text, 0, text.length);\n          //lexHandler.endCDATA();\n          return elEndStart;\n          //}\n        } //}else{//text area\n        text = text.replace(/&#?\\w+;/g, entityReplacer);\n        domBuilder.characters(text, 0, text.length);\n        return elEndStart;\n        //}\n      }\n    }\n\n    return elStartEnd + 1;\n  }\n  function fixSelfClosed(source, elStartEnd, tagName, closeMap) {\n    //if(tagName in closeMap){\n    var pos = closeMap[tagName];\n    if (pos == null) {\n      //console.log(tagName)\n      pos = source.lastIndexOf('</' + tagName + '>');\n      if (pos < elStartEnd) {\n        //忘记闭合\n        pos = source.lastIndexOf('</' + tagName);\n      }\n      closeMap[tagName] = pos;\n    }\n    return pos < elStartEnd;\n    //}\n  }\n\n  function _copy(source, target) {\n    for (var n in source) {\n      if (Object.prototype.hasOwnProperty.call(source, n)) {\n        target[n] = source[n];\n      }\n    }\n  }\n  function parseDCC(source, start, domBuilder, errorHandler) {\n    //sure start with '<!'\n    var next = source.charAt(start + 2);\n    switch (next) {\n      case '-':\n        if (source.charAt(start + 3) === '-') {\n          var end = source.indexOf('-->', start + 4);\n          //append comment source.substring(4,end)//<!--\n          if (end > start) {\n            domBuilder.comment(source, start + 4, end - start - 4);\n            return end + 3;\n          } else {\n            errorHandler.error(\"Unclosed comment\");\n            return -1;\n          }\n        } else {\n          //error\n          return -1;\n        }\n      default:\n        if (source.substr(start + 3, 6) == 'CDATA[') {\n          var end = source.indexOf(']]>', start + 9);\n          domBuilder.startCDATA();\n          domBuilder.characters(source, start + 9, end - start - 9);\n          domBuilder.endCDATA();\n          return end + 3;\n        }\n        //<!DOCTYPE\n        //startDTD(java.lang.String name, java.lang.String publicId, java.lang.String systemId)\n        var matchs = split(source, start);\n        var len = matchs.length;\n        if (len > 1 && /!doctype/i.test(matchs[0][0])) {\n          var name = matchs[1][0];\n          var pubid = false;\n          var sysid = false;\n          if (len > 3) {\n            if (/^public$/i.test(matchs[2][0])) {\n              pubid = matchs[3][0];\n              sysid = len > 4 && matchs[4][0];\n            } else if (/^system$/i.test(matchs[2][0])) {\n              sysid = matchs[3][0];\n            }\n          }\n          var lastMatch = matchs[len - 1];\n          domBuilder.startDTD(name, pubid, sysid);\n          domBuilder.endDTD();\n          return lastMatch.index + lastMatch[0].length;\n        }\n    }\n    return -1;\n  }\n  function parseInstruction(source, start, domBuilder) {\n    var end = source.indexOf('?>', start);\n    if (end) {\n      var match = source.substring(start, end).match(/^<\\?(\\S*)\\s*([\\s\\S]*?)\\s*$/);\n      if (match) {\n        match[0].length;\n        domBuilder.processingInstruction(match[1], match[2]);\n        return end + 2;\n      } else {\n        //error\n        return -1;\n      }\n    }\n    return -1;\n  }\n  function ElementAttributes() {\n    this.attributeNames = {};\n  }\n  ElementAttributes.prototype = {\n    setTagName: function (tagName) {\n      if (!tagNamePattern.test(tagName)) {\n        throw new Error('invalid tagName:' + tagName);\n      }\n      this.tagName = tagName;\n    },\n    addValue: function (qName, value, offset) {\n      if (!tagNamePattern.test(qName)) {\n        throw new Error('invalid attribute:' + qName);\n      }\n      this.attributeNames[qName] = this.length;\n      this[this.length++] = {\n        qName: qName,\n        value: value,\n        offset: offset\n      };\n    },\n    length: 0,\n    getLocalName: function (i) {\n      return this[i].localName;\n    },\n    getLocator: function (i) {\n      return this[i].locator;\n    },\n    getQName: function (i) {\n      return this[i].qName;\n    },\n    getURI: function (i) {\n      return this[i].uri;\n    },\n    getValue: function (i) {\n      return this[i].value;\n    }\n    //\t,getIndex:function(uri, localName)){\n    //\t\tif(localName){\n    //\n    //\t\t}else{\n    //\t\t\tvar qName = uri\n    //\t\t}\n    //\t},\n    //\tgetValue:function(){return this.getValue(this.getIndex.apply(this,arguments))},\n    //\tgetType:function(uri,localName){}\n    //\tgetType:function(i){},\n  };\n\n  function split(source, start) {\n    var match;\n    var buf = [];\n    var reg = /'[^']+'|\"[^\"]+\"|[^\\s<>\\/=]+=?|(\\/?\\s*>|<)/g;\n    reg.lastIndex = start;\n    reg.exec(source); //skip <\n    while (match = reg.exec(source)) {\n      buf.push(match);\n      if (match[1]) return buf;\n    }\n  }\n  var XMLReader_1 = XMLReader$1;\n  var ParseError_1 = ParseError$1;\n  var sax = {\n    XMLReader: XMLReader_1,\n    ParseError: ParseError_1\n  };\n\n  var DOMImplementation = dom.DOMImplementation;\n  var NAMESPACE = conventions.NAMESPACE;\n  var ParseError = sax.ParseError;\n  var XMLReader = sax.XMLReader;\n\n  /**\n   * Normalizes line ending according to https://www.w3.org/TR/xml11/#sec-line-ends:\n   *\n   * > XML parsed entities are often stored in computer files which,\n   * > for editing convenience, are organized into lines.\n   * > These lines are typically separated by some combination\n   * > of the characters CARRIAGE RETURN (#xD) and LINE FEED (#xA).\n   * >\n   * > To simplify the tasks of applications, the XML processor must behave\n   * > as if it normalized all line breaks in external parsed entities (including the document entity)\n   * > on input, before parsing, by translating all of the following to a single #xA character:\n   * >\n   * > 1. the two-character sequence #xD #xA\n   * > 2. the two-character sequence #xD #x85\n   * > 3. the single character #x85\n   * > 4. the single character #x2028\n   * > 5. any #xD character that is not immediately followed by #xA or #x85.\n   *\n   * @param {string} input\n   * @returns {string}\n   */\n  function normalizeLineEndings(input) {\n    return input.replace(/\\r[\\n\\u0085]/g, '\\n').replace(/[\\r\\u0085\\u2028]/g, '\\n');\n  }\n\n  /**\n   * @typedef Locator\n   * @property {number} [columnNumber]\n   * @property {number} [lineNumber]\n   */\n\n  /**\n   * @typedef DOMParserOptions\n   * @property {DOMHandler} [domBuilder]\n   * @property {Function} [errorHandler]\n   * @property {(string) => string} [normalizeLineEndings] used to replace line endings before parsing\n   * \t\t\t\t\t\tdefaults to `normalizeLineEndings`\n   * @property {Locator} [locator]\n   * @property {Record<string, string>} [xmlns]\n   *\n   * @see normalizeLineEndings\n   */\n\n  /**\n   * The DOMParser interface provides the ability to parse XML or HTML source code\n   * from a string into a DOM `Document`.\n   *\n   * _xmldom is different from the spec in that it allows an `options` parameter,\n   * to override the default behavior._\n   *\n   * @param {DOMParserOptions} [options]\n   * @constructor\n   *\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/DOMParser\n   * @see https://html.spec.whatwg.org/multipage/dynamic-markup-insertion.html#dom-parsing-and-serialization\n   */\n  function DOMParser$1(options) {\n    this.options = options || {\n      locator: {}\n    };\n  }\n  DOMParser$1.prototype.parseFromString = function (source, mimeType) {\n    var options = this.options;\n    var sax = new XMLReader();\n    var domBuilder = options.domBuilder || new DOMHandler(); //contentHandler and LexicalHandler\n    var errorHandler = options.errorHandler;\n    var locator = options.locator;\n    var defaultNSMap = options.xmlns || {};\n    var isHTML = /\\/x?html?$/.test(mimeType); //mimeType.toLowerCase().indexOf('html') > -1;\n    var entityMap = isHTML ? entities.HTML_ENTITIES : entities.XML_ENTITIES;\n    if (locator) {\n      domBuilder.setDocumentLocator(locator);\n    }\n    sax.errorHandler = buildErrorHandler(errorHandler, domBuilder, locator);\n    sax.domBuilder = options.domBuilder || domBuilder;\n    if (isHTML) {\n      defaultNSMap[''] = NAMESPACE.HTML;\n    }\n    defaultNSMap.xml = defaultNSMap.xml || NAMESPACE.XML;\n    var normalize = options.normalizeLineEndings || normalizeLineEndings;\n    if (source && typeof source === 'string') {\n      sax.parse(normalize(source), defaultNSMap, entityMap);\n    } else {\n      sax.errorHandler.error('invalid doc source');\n    }\n    return domBuilder.doc;\n  };\n  function buildErrorHandler(errorImpl, domBuilder, locator) {\n    if (!errorImpl) {\n      if (domBuilder instanceof DOMHandler) {\n        return domBuilder;\n      }\n      errorImpl = domBuilder;\n    }\n    var errorHandler = {};\n    var isCallback = errorImpl instanceof Function;\n    locator = locator || {};\n    function build(key) {\n      var fn = errorImpl[key];\n      if (!fn && isCallback) {\n        fn = errorImpl.length == 2 ? function (msg) {\n          errorImpl(key, msg);\n        } : errorImpl;\n      }\n      errorHandler[key] = fn && function (msg) {\n        fn('[xmldom ' + key + ']\\t' + msg + _locator(locator));\n      } || function () {};\n    }\n    build('warning');\n    build('error');\n    build('fatalError');\n    return errorHandler;\n  }\n\n  //console.log('#\\n\\n\\n\\n\\n\\n\\n####')\n  /**\n   * +ContentHandler+ErrorHandler\n   * +LexicalHandler+EntityResolver2\n   * -DeclHandler-DTDHandler\n   *\n   * DefaultHandler:EntityResolver, DTDHandler, ContentHandler, ErrorHandler\n   * DefaultHandler2:DefaultHandler,LexicalHandler, DeclHandler, EntityResolver2\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/helpers/DefaultHandler.html\n   */\n  function DOMHandler() {\n    this.cdata = false;\n  }\n  function position(locator, node) {\n    node.lineNumber = locator.lineNumber;\n    node.columnNumber = locator.columnNumber;\n  }\n  /**\n   * @see org.xml.sax.ContentHandler#startDocument\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ContentHandler.html\n   */\n  DOMHandler.prototype = {\n    startDocument: function () {\n      this.doc = new DOMImplementation().createDocument(null, null, null);\n      if (this.locator) {\n        this.doc.documentURI = this.locator.systemId;\n      }\n    },\n    startElement: function (namespaceURI, localName, qName, attrs) {\n      var doc = this.doc;\n      var el = doc.createElementNS(namespaceURI, qName || localName);\n      var len = attrs.length;\n      appendElement(this, el);\n      this.currentElement = el;\n      this.locator && position(this.locator, el);\n      for (var i = 0; i < len; i++) {\n        var namespaceURI = attrs.getURI(i);\n        var value = attrs.getValue(i);\n        var qName = attrs.getQName(i);\n        var attr = doc.createAttributeNS(namespaceURI, qName);\n        this.locator && position(attrs.getLocator(i), attr);\n        attr.value = attr.nodeValue = value;\n        el.setAttributeNode(attr);\n      }\n    },\n    endElement: function (namespaceURI, localName, qName) {\n      var current = this.currentElement;\n      current.tagName;\n      this.currentElement = current.parentNode;\n    },\n    startPrefixMapping: function (prefix, uri) {},\n    endPrefixMapping: function (prefix) {},\n    processingInstruction: function (target, data) {\n      var ins = this.doc.createProcessingInstruction(target, data);\n      this.locator && position(this.locator, ins);\n      appendElement(this, ins);\n    },\n    ignorableWhitespace: function (ch, start, length) {},\n    characters: function (chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      //console.log(chars)\n      if (chars) {\n        if (this.cdata) {\n          var charNode = this.doc.createCDATASection(chars);\n        } else {\n          var charNode = this.doc.createTextNode(chars);\n        }\n        if (this.currentElement) {\n          this.currentElement.appendChild(charNode);\n        } else if (/^\\s*$/.test(chars)) {\n          this.doc.appendChild(charNode);\n          //process xml\n        }\n\n        this.locator && position(this.locator, charNode);\n      }\n    },\n    skippedEntity: function (name) {},\n    endDocument: function () {\n      this.doc.normalize();\n    },\n    setDocumentLocator: function (locator) {\n      if (this.locator = locator) {\n        // && !('lineNumber' in locator)){\n        locator.lineNumber = 0;\n      }\n    },\n    //LexicalHandler\n    comment: function (chars, start, length) {\n      chars = _toString.apply(this, arguments);\n      var comm = this.doc.createComment(chars);\n      this.locator && position(this.locator, comm);\n      appendElement(this, comm);\n    },\n    startCDATA: function () {\n      //used in characters() methods\n      this.cdata = true;\n    },\n    endCDATA: function () {\n      this.cdata = false;\n    },\n    startDTD: function (name, publicId, systemId) {\n      var impl = this.doc.implementation;\n      if (impl && impl.createDocumentType) {\n        var dt = impl.createDocumentType(name, publicId, systemId);\n        this.locator && position(this.locator, dt);\n        appendElement(this, dt);\n        this.doc.doctype = dt;\n      }\n    },\n    /**\n     * @see org.xml.sax.ErrorHandler\n     * @link http://www.saxproject.org/apidoc/org/xml/sax/ErrorHandler.html\n     */\n    warning: function (error) {\n      console.warn('[xmldom warning]\\t' + error, _locator(this.locator));\n    },\n    error: function (error) {\n      console.error('[xmldom error]\\t' + error, _locator(this.locator));\n    },\n    fatalError: function (error) {\n      throw new ParseError(error, this.locator);\n    }\n  };\n  function _locator(l) {\n    if (l) {\n      return '\\n@' + (l.systemId || '') + '#[line:' + l.lineNumber + ',col:' + l.columnNumber + ']';\n    }\n  }\n  function _toString(chars, start, length) {\n    if (typeof chars == 'string') {\n      return chars.substr(start, length);\n    } else {\n      //java sax connect width xmldom on rhino(what about: \"? && !(chars instanceof String)\")\n      if (chars.length >= start + length || start) {\n        return new java.lang.String(chars, start, length) + '';\n      }\n      return chars;\n    }\n  }\n\n  /*\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/LexicalHandler.html\n   * used method of org.xml.sax.ext.LexicalHandler:\n   *  #comment(chars, start, length)\n   *  #startCDATA()\n   *  #endCDATA()\n   *  #startDTD(name, publicId, systemId)\n   *\n   *\n   * IGNORED method of org.xml.sax.ext.LexicalHandler:\n   *  #endDTD()\n   *  #startEntity(name)\n   *  #endEntity(name)\n   *\n   *\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/DeclHandler.html\n   * IGNORED method of org.xml.sax.ext.DeclHandler\n   * \t#attributeDecl(eName, aName, type, mode, value)\n   *  #elementDecl(name, model)\n   *  #externalEntityDecl(name, publicId, systemId)\n   *  #internalEntityDecl(name, value)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/ext/EntityResolver2.html\n   * IGNORED method of org.xml.sax.EntityResolver2\n   *  #resolveEntity(String name,String publicId,String baseURI,String systemId)\n   *  #resolveEntity(publicId, systemId)\n   *  #getExternalSubset(name, baseURI)\n   * @link http://www.saxproject.org/apidoc/org/xml/sax/DTDHandler.html\n   * IGNORED method of org.xml.sax.DTDHandler\n   *  #notationDecl(name, publicId, systemId) {};\n   *  #unparsedEntityDecl(name, publicId, systemId, notationName) {};\n   */\n  \"endDTD,startEntity,endEntity,attributeDecl,elementDecl,externalEntityDecl,internalEntityDecl,resolveEntity,getExternalSubset,notationDecl,unparsedEntityDecl\".replace(/\\w+/g, function (key) {\n    DOMHandler.prototype[key] = function () {\n      return null;\n    };\n  });\n\n  /* Private static helpers treated below as private instance methods, so don't need to add these to the public API; we might use a Relator to also get rid of non-standard public properties */\n  function appendElement(hander, node) {\n    if (!hander.currentElement) {\n      hander.doc.appendChild(node);\n    } else {\n      hander.currentElement.appendChild(node);\n    }\n  } //appendChild and setAttributeNS are preformance key\n\n  var __DOMHandler = DOMHandler;\n  var normalizeLineEndings_1 = normalizeLineEndings;\n  var DOMParser_1 = DOMParser$1;\n  var domParser = {\n    __DOMHandler: __DOMHandler,\n    normalizeLineEndings: normalizeLineEndings_1,\n    DOMParser: DOMParser_1\n  };\n\n  var DOMParser = domParser.DOMParser;\n\n  /*! @name mpd-parser @version 1.0.1 @license Apache-2.0 */\n  const isObject = obj => {\n    return !!obj && typeof obj === 'object';\n  };\n  const merge$1 = (...objects) => {\n    return objects.reduce((result, source) => {\n      if (typeof source !== 'object') {\n        return result;\n      }\n      Object.keys(source).forEach(key => {\n        if (Array.isArray(result[key]) && Array.isArray(source[key])) {\n          result[key] = result[key].concat(source[key]);\n        } else if (isObject(result[key]) && isObject(source[key])) {\n          result[key] = merge$1(result[key], source[key]);\n        } else {\n          result[key] = source[key];\n        }\n      });\n      return result;\n    }, {});\n  };\n  const values = o => Object.keys(o).map(k => o[k]);\n  const range = (start, end) => {\n    const result = [];\n    for (let i = start; i < end; i++) {\n      result.push(i);\n    }\n    return result;\n  };\n  const flatten = lists => lists.reduce((x, y) => x.concat(y), []);\n  const from = list => {\n    if (!list.length) {\n      return [];\n    }\n    const result = [];\n    for (let i = 0; i < list.length; i++) {\n      result.push(list[i]);\n    }\n    return result;\n  };\n  const findIndexes = (l, key) => l.reduce((a, e, i) => {\n    if (e[key]) {\n      a.push(i);\n    }\n    return a;\n  }, []);\n  /**\n   * Returns a union of the included lists provided each element can be identified by a key.\n   *\n   * @param {Array} list - list of lists to get the union of\n   * @param {Function} keyFunction - the function to use as a key for each element\n   *\n   * @return {Array} the union of the arrays\n   */\n\n  const union = (lists, keyFunction) => {\n    return values(lists.reduce((acc, list) => {\n      list.forEach(el => {\n        acc[keyFunction(el)] = el;\n      });\n      return acc;\n    }, {}));\n  };\n  var errors = {\n    INVALID_NUMBER_OF_PERIOD: 'INVALID_NUMBER_OF_PERIOD',\n    DASH_EMPTY_MANIFEST: 'DASH_EMPTY_MANIFEST',\n    DASH_INVALID_XML: 'DASH_INVALID_XML',\n    NO_BASE_URL: 'NO_BASE_URL',\n    MISSING_SEGMENT_INFORMATION: 'MISSING_SEGMENT_INFORMATION',\n    SEGMENT_TIME_UNSPECIFIED: 'SEGMENT_TIME_UNSPECIFIED',\n    UNSUPPORTED_UTC_TIMING_SCHEME: 'UNSUPPORTED_UTC_TIMING_SCHEME'\n  };\n\n  /**\n   * @typedef {Object} SingleUri\n   * @property {string} uri - relative location of segment\n   * @property {string} resolvedUri - resolved location of segment\n   * @property {Object} byterange - Object containing information on how to make byte range\n   *   requests following byte-range-spec per RFC2616.\n   * @property {String} byterange.length - length of range request\n   * @property {String} byterange.offset - byte offset of range request\n   *\n   * @see https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35.1\n   */\n\n  /**\n   * Converts a URLType node (5.3.9.2.3 Table 13) to a segment object\n   * that conforms to how m3u8-parser is structured\n   *\n   * @see https://github.com/videojs/m3u8-parser\n   *\n   * @param {string} baseUrl - baseUrl provided by <BaseUrl> nodes\n   * @param {string} source - source url for segment\n   * @param {string} range - optional range used for range calls,\n   *   follows  RFC 2616, Clause 14.35.1\n   * @return {SingleUri} full segment information transformed into a format similar\n   *   to m3u8-parser\n   */\n\n  const urlTypeToSegment = ({\n    baseUrl = '',\n    source = '',\n    range = '',\n    indexRange = ''\n  }) => {\n    const segment = {\n      uri: source,\n      resolvedUri: resolveUrl$1(baseUrl || '', source)\n    };\n    if (range || indexRange) {\n      const rangeStr = range ? range : indexRange;\n      const ranges = rangeStr.split('-'); // default to parsing this as a BigInt if possible\n\n      let startRange = window.BigInt ? window.BigInt(ranges[0]) : parseInt(ranges[0], 10);\n      let endRange = window.BigInt ? window.BigInt(ranges[1]) : parseInt(ranges[1], 10); // convert back to a number if less than MAX_SAFE_INTEGER\n\n      if (startRange < Number.MAX_SAFE_INTEGER && typeof startRange === 'bigint') {\n        startRange = Number(startRange);\n      }\n      if (endRange < Number.MAX_SAFE_INTEGER && typeof endRange === 'bigint') {\n        endRange = Number(endRange);\n      }\n      let length;\n      if (typeof endRange === 'bigint' || typeof startRange === 'bigint') {\n        length = window.BigInt(endRange) - window.BigInt(startRange) + window.BigInt(1);\n      } else {\n        length = endRange - startRange + 1;\n      }\n      if (typeof length === 'bigint' && length < Number.MAX_SAFE_INTEGER) {\n        length = Number(length);\n      } // byterange should be inclusive according to\n      // RFC 2616, Clause 14.35.1\n\n      segment.byterange = {\n        length,\n        offset: startRange\n      };\n    }\n    return segment;\n  };\n  const byteRangeToString = byterange => {\n    // `endRange` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    let endRange;\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      endRange = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      endRange = byterange.offset + byterange.length - 1;\n    }\n    return `${byterange.offset}-${endRange}`;\n  };\n\n  /**\n   * parse the end number attribue that can be a string\n   * number, or undefined.\n   *\n   * @param {string|number|undefined} endNumber\n   *        The end number attribute.\n   *\n   * @return {number|null}\n   *          The result of parsing the end number.\n   */\n\n  const parseEndNumber = endNumber => {\n    if (endNumber && typeof endNumber !== 'number') {\n      endNumber = parseInt(endNumber, 10);\n    }\n    if (isNaN(endNumber)) {\n      return null;\n    }\n    return endNumber;\n  };\n  /**\n   * Functions for calculating the range of available segments in static and dynamic\n   * manifests.\n   */\n\n  const segmentRange = {\n    /**\n     * Returns the entire range of available segments for a static MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    static(attributes) {\n      const {\n        duration,\n        timescale = 1,\n        sourceDuration,\n        periodDuration\n      } = attributes;\n      const endNumber = parseEndNumber(attributes.endNumber);\n      const segmentDuration = duration / timescale;\n      if (typeof endNumber === 'number') {\n        return {\n          start: 0,\n          end: endNumber\n        };\n      }\n      if (typeof periodDuration === 'number') {\n        return {\n          start: 0,\n          end: periodDuration / segmentDuration\n        };\n      }\n      return {\n        start: 0,\n        end: sourceDuration / segmentDuration\n      };\n    },\n    /**\n     * Returns the current live window range of available segments for a dynamic MPD\n     *\n     * @param {Object} attributes\n     *        Inheritied MPD attributes\n     * @return {{ start: number, end: number }}\n     *         The start and end numbers for available segments\n     */\n    dynamic(attributes) {\n      const {\n        NOW,\n        clientOffset,\n        availabilityStartTime,\n        timescale = 1,\n        duration,\n        periodStart = 0,\n        minimumUpdatePeriod = 0,\n        timeShiftBufferDepth = Infinity\n      } = attributes;\n      const endNumber = parseEndNumber(attributes.endNumber); // clientOffset is passed in at the top level of mpd-parser and is an offset calculated\n      // after retrieving UTC server time.\n\n      const now = (NOW + clientOffset) / 1000; // WC stands for Wall Clock.\n      // Convert the period start time to EPOCH.\n\n      const periodStartWC = availabilityStartTime + periodStart; // Period end in EPOCH is manifest's retrieval time + time until next update.\n\n      const periodEndWC = now + minimumUpdatePeriod;\n      const periodDuration = periodEndWC - periodStartWC;\n      const segmentCount = Math.ceil(periodDuration * timescale / duration);\n      const availableStart = Math.floor((now - periodStartWC - timeShiftBufferDepth) * timescale / duration);\n      const availableEnd = Math.floor((now - periodStartWC) * timescale / duration);\n      return {\n        start: Math.max(0, availableStart),\n        end: typeof endNumber === 'number' ? endNumber : Math.min(segmentCount, availableEnd)\n      };\n    }\n  };\n  /**\n   * Maps a range of numbers to objects with information needed to build the corresponding\n   * segment list\n   *\n   * @name toSegmentsCallback\n   * @function\n   * @param {number} number\n   *        Number of the segment\n   * @param {number} index\n   *        Index of the number in the range list\n   * @return {{ number: Number, duration: Number, timeline: Number, time: Number }}\n   *         Object with segment timing and duration info\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping a range of numbers to\n   * information needed to build the segment list.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {toSegmentsCallback}\n   *         Callback map function\n   */\n\n  const toSegments = attributes => number => {\n    const {\n      duration,\n      timescale = 1,\n      periodStart,\n      startNumber = 1\n    } = attributes;\n    return {\n      number: startNumber + number,\n      duration: duration / timescale,\n      timeline: periodStart,\n      time: number * duration\n    };\n  };\n  /**\n   * Returns a list of objects containing segment timing and duration info used for\n   * building the list of segments. This uses the @duration attribute specified\n   * in the MPD manifest to derive the range of segments.\n   *\n   * @param {Object} attributes\n   *        Inherited MPD attributes\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n  const parseByDuration = attributes => {\n    const {\n      type,\n      duration,\n      timescale = 1,\n      periodDuration,\n      sourceDuration\n    } = attributes;\n    const {\n      start,\n      end\n    } = segmentRange[type](attributes);\n    const segments = range(start, end).map(toSegments(attributes));\n    if (type === 'static') {\n      const index = segments.length - 1; // section is either a period or the full source\n\n      const sectionDuration = typeof periodDuration === 'number' ? periodDuration : sourceDuration; // final segment may be less than full segment duration\n\n      segments[index].duration = sectionDuration - duration / timescale * index;\n    }\n    return segments;\n  };\n\n  /**\n   * Translates SegmentBase into a set of segments.\n   * (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @return {Object.<Array>} list of segments\n   */\n\n  const segmentsFromBase = attributes => {\n    const {\n      baseUrl,\n      initialization = {},\n      sourceDuration,\n      indexRange = '',\n      periodStart,\n      presentationTime,\n      number = 0,\n      duration\n    } = attributes; // base url is required for SegmentBase to work, per spec (Section 5.3.9.2.1)\n\n    if (!baseUrl) {\n      throw new Error(errors.NO_BASE_URL);\n    }\n    const initSegment = urlTypeToSegment({\n      baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    const segment = urlTypeToSegment({\n      baseUrl,\n      source: baseUrl,\n      indexRange\n    });\n    segment.map = initSegment; // If there is a duration, use it, otherwise use the given duration of the source\n    // (since SegmentBase is only for one total segment)\n\n    if (duration) {\n      const segmentTimeInfo = parseByDuration(attributes);\n      if (segmentTimeInfo.length) {\n        segment.duration = segmentTimeInfo[0].duration;\n        segment.timeline = segmentTimeInfo[0].timeline;\n      }\n    } else if (sourceDuration) {\n      segment.duration = sourceDuration;\n      segment.timeline = periodStart;\n    } // If presentation time is provided, these segments are being generated by SIDX\n    // references, and should use the time provided. For the general case of SegmentBase,\n    // there should only be one segment in the period, so its presentation time is the same\n    // as its period start.\n\n    segment.presentationTime = presentationTime || periodStart;\n    segment.number = number;\n    return [segment];\n  };\n  /**\n   * Given a playlist, a sidx box, and a baseUrl, update the segment list of the playlist\n   * according to the sidx information given.\n   *\n   * playlist.sidx has metadadata about the sidx where-as the sidx param\n   * is the parsed sidx box itself.\n   *\n   * @param {Object} playlist the playlist to update the sidx information for\n   * @param {Object} sidx the parsed sidx box\n   * @return {Object} the playlist object with the updated sidx information\n   */\n\n  const addSidxSegmentsToPlaylist$1 = (playlist, sidx, baseUrl) => {\n    // Retain init segment information\n    const initSegment = playlist.sidx.map ? playlist.sidx.map : null; // Retain source duration from initial main manifest parsing\n\n    const sourceDuration = playlist.sidx.duration; // Retain source timeline\n\n    const timeline = playlist.timeline || 0;\n    const sidxByteRange = playlist.sidx.byterange;\n    const sidxEnd = sidxByteRange.offset + sidxByteRange.length; // Retain timescale of the parsed sidx\n\n    const timescale = sidx.timescale; // referenceType 1 refers to other sidx boxes\n\n    const mediaReferences = sidx.references.filter(r => r.referenceType !== 1);\n    const segments = [];\n    const type = playlist.endList ? 'static' : 'dynamic';\n    const periodStart = playlist.sidx.timeline;\n    let presentationTime = periodStart;\n    let number = playlist.mediaSequence || 0; // firstOffset is the offset from the end of the sidx box\n\n    let startIndex; // eslint-disable-next-line\n\n    if (typeof sidx.firstOffset === 'bigint') {\n      startIndex = window.BigInt(sidxEnd) + sidx.firstOffset;\n    } else {\n      startIndex = sidxEnd + sidx.firstOffset;\n    }\n    for (let i = 0; i < mediaReferences.length; i++) {\n      const reference = sidx.references[i]; // size of the referenced (sub)segment\n\n      const size = reference.referencedSize; // duration of the referenced (sub)segment, in  the  timescale\n      // this will be converted to seconds when generating segments\n\n      const duration = reference.subsegmentDuration; // should be an inclusive range\n\n      let endIndex; // eslint-disable-next-line\n\n      if (typeof startIndex === 'bigint') {\n        endIndex = startIndex + window.BigInt(size) - window.BigInt(1);\n      } else {\n        endIndex = startIndex + size - 1;\n      }\n      const indexRange = `${startIndex}-${endIndex}`;\n      const attributes = {\n        baseUrl,\n        timescale,\n        timeline,\n        periodStart,\n        presentationTime,\n        number,\n        duration,\n        sourceDuration,\n        indexRange,\n        type\n      };\n      const segment = segmentsFromBase(attributes)[0];\n      if (initSegment) {\n        segment.map = initSegment;\n      }\n      segments.push(segment);\n      if (typeof startIndex === 'bigint') {\n        startIndex += window.BigInt(size);\n      } else {\n        startIndex += size;\n      }\n      presentationTime += duration / timescale;\n      number++;\n    }\n    playlist.segments = segments;\n    return playlist;\n  };\n  const SUPPORTED_MEDIA_TYPES = ['AUDIO', 'SUBTITLES']; // allow one 60fps frame as leniency (arbitrarily chosen)\n\n  const TIME_FUDGE = 1 / 60;\n  /**\n   * Given a list of timelineStarts, combines, dedupes, and sorts them.\n   *\n   * @param {TimelineStart[]} timelineStarts - list of timeline starts\n   *\n   * @return {TimelineStart[]} the combined and deduped timeline starts\n   */\n\n  const getUniqueTimelineStarts = timelineStarts => {\n    return union(timelineStarts, ({\n      timeline\n    }) => timeline).sort((a, b) => a.timeline > b.timeline ? 1 : -1);\n  };\n  /**\n   * Finds the playlist with the matching NAME attribute.\n   *\n   * @param {Array} playlists - playlists to search through\n   * @param {string} name - the NAME attribute to search for\n   *\n   * @return {Object|null} the matching playlist object, or null\n   */\n\n  const findPlaylistWithName = (playlists, name) => {\n    for (let i = 0; i < playlists.length; i++) {\n      if (playlists[i].attributes.NAME === name) {\n        return playlists[i];\n      }\n    }\n    return null;\n  };\n  /**\n   * Gets a flattened array of media group playlists.\n   *\n   * @param {Object} manifest - the main manifest object\n   *\n   * @return {Array} the media group playlists\n   */\n\n  const getMediaGroupPlaylists = manifest => {\n    let mediaGroupPlaylists = [];\n    forEachMediaGroup$1(manifest, SUPPORTED_MEDIA_TYPES, (properties, type, group, label) => {\n      mediaGroupPlaylists = mediaGroupPlaylists.concat(properties.playlists || []);\n    });\n    return mediaGroupPlaylists;\n  };\n  /**\n   * Updates the playlist's media sequence numbers.\n   *\n   * @param {Object} config - options object\n   * @param {Object} config.playlist - the playlist to update\n   * @param {number} config.mediaSequence - the mediaSequence number to start with\n   */\n\n  const updateMediaSequenceForPlaylist = ({\n    playlist,\n    mediaSequence\n  }) => {\n    playlist.mediaSequence = mediaSequence;\n    playlist.segments.forEach((segment, index) => {\n      segment.number = playlist.mediaSequence + index;\n    });\n  };\n  /**\n   * Updates the media and discontinuity sequence numbers of newPlaylists given oldPlaylists\n   * and a complete list of timeline starts.\n   *\n   * If no matching playlist is found, only the discontinuity sequence number of the playlist\n   * will be updated.\n   *\n   * Since early available timelines are not supported, at least one segment must be present.\n   *\n   * @param {Object} config - options object\n   * @param {Object[]} oldPlaylists - the old playlists to use as a reference\n   * @param {Object[]} newPlaylists - the new playlists to update\n   * @param {Object} timelineStarts - all timelineStarts seen in the stream to this point\n   */\n\n  const updateSequenceNumbers = ({\n    oldPlaylists,\n    newPlaylists,\n    timelineStarts\n  }) => {\n    newPlaylists.forEach(playlist => {\n      playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n        timeline\n      }) {\n        return timeline === playlist.timeline;\n      }); // Playlists NAMEs come from DASH Representation IDs, which are mandatory\n      // (see ISO_23009-1-2012 5.3.5.2).\n      //\n      // If the same Representation existed in a prior Period, it will retain the same NAME.\n\n      const oldPlaylist = findPlaylistWithName(oldPlaylists, playlist.attributes.NAME);\n      if (!oldPlaylist) {\n        // Since this is a new playlist, the media sequence values can start from 0 without\n        // consequence.\n        return;\n      } // TODO better support for live SIDX\n      //\n      // As of this writing, mpd-parser does not support multiperiod SIDX (in live or VOD).\n      // This is evident by a playlist only having a single SIDX reference. In a multiperiod\n      // playlist there would need to be multiple SIDX references. In addition, live SIDX is\n      // not supported when the SIDX properties change on refreshes.\n      //\n      // In the future, if support needs to be added, the merging logic here can be called\n      // after SIDX references are resolved. For now, exit early to prevent exceptions being\n      // thrown due to undefined references.\n\n      if (playlist.sidx) {\n        return;\n      } // Since we don't yet support early available timelines, we don't need to support\n      // playlists with no segments.\n\n      const firstNewSegment = playlist.segments[0];\n      const oldMatchingSegmentIndex = oldPlaylist.segments.findIndex(function (oldSegment) {\n        return Math.abs(oldSegment.presentationTime - firstNewSegment.presentationTime) < TIME_FUDGE;\n      }); // No matching segment from the old playlist means the entire playlist was refreshed.\n      // In this case the media sequence should account for this update, and the new segments\n      // should be marked as discontinuous from the prior content, since the last prior\n      // timeline was removed.\n\n      if (oldMatchingSegmentIndex === -1) {\n        updateMediaSequenceForPlaylist({\n          playlist,\n          mediaSequence: oldPlaylist.mediaSequence + oldPlaylist.segments.length\n        });\n        playlist.segments[0].discontinuity = true;\n        playlist.discontinuityStarts.unshift(0); // No matching segment does not necessarily mean there's missing content.\n        //\n        // If the new playlist's timeline is the same as the last seen segment's timeline,\n        // then a discontinuity can be added to identify that there's potentially missing\n        // content. If there's no missing content, the discontinuity should still be rather\n        // harmless. It's possible that if segment durations are accurate enough, that the\n        // existence of a gap can be determined using the presentation times and durations,\n        // but if the segment timing info is off, it may introduce more problems than simply\n        // adding the discontinuity.\n        //\n        // If the new playlist's timeline is different from the last seen segment's timeline,\n        // then a discontinuity can be added to identify that this is the first seen segment\n        // of a new timeline. However, the logic at the start of this function that\n        // determined the disconinuity sequence by timeline index is now off by one (the\n        // discontinuity of the newest timeline hasn't yet fallen off the manifest...since\n        // we added it), so the disconinuity sequence must be decremented.\n        //\n        // A period may also have a duration of zero, so the case of no segments is handled\n        // here even though we don't yet support early available periods.\n\n        if (!oldPlaylist.segments.length && playlist.timeline > oldPlaylist.timeline || oldPlaylist.segments.length && playlist.timeline > oldPlaylist.segments[oldPlaylist.segments.length - 1].timeline) {\n          playlist.discontinuitySequence--;\n        }\n        return;\n      } // If the first segment matched with a prior segment on a discontinuity (it's matching\n      // on the first segment of a period), then the discontinuitySequence shouldn't be the\n      // timeline's matching one, but instead should be the one prior, and the first segment\n      // of the new manifest should be marked with a discontinuity.\n      //\n      // The reason for this special case is that discontinuity sequence shows how many\n      // discontinuities have fallen off of the playlist, and discontinuities are marked on\n      // the first segment of a new \"timeline.\" Because of this, while DASH will retain that\n      // Period while the \"timeline\" exists, HLS keeps track of it via the discontinuity\n      // sequence, and that first segment is an indicator, but can be removed before that\n      // timeline is gone.\n\n      const oldMatchingSegment = oldPlaylist.segments[oldMatchingSegmentIndex];\n      if (oldMatchingSegment.discontinuity && !firstNewSegment.discontinuity) {\n        firstNewSegment.discontinuity = true;\n        playlist.discontinuityStarts.unshift(0);\n        playlist.discontinuitySequence--;\n      }\n      updateMediaSequenceForPlaylist({\n        playlist,\n        mediaSequence: oldPlaylist.segments[oldMatchingSegmentIndex].number\n      });\n    });\n  };\n  /**\n   * Given an old parsed manifest object and a new parsed manifest object, updates the\n   * sequence and timing values within the new manifest to ensure that it lines up with the\n   * old.\n   *\n   * @param {Array} oldManifest - the old main manifest object\n   * @param {Array} newManifest - the new main manifest object\n   *\n   * @return {Object} the updated new manifest object\n   */\n\n  const positionManifestOnTimeline = ({\n    oldManifest,\n    newManifest\n  }) => {\n    // Starting from v4.1.2 of the IOP, section 4.4.3.3 states:\n    //\n    // \"MPD@availabilityStartTime and Period@start shall not be changed over MPD updates.\"\n    //\n    // This was added from https://github.com/Dash-Industry-Forum/DASH-IF-IOP/issues/160\n    //\n    // Because of this change, and the difficulty of supporting periods with changing start\n    // times, periods with changing start times are not supported. This makes the logic much\n    // simpler, since periods with the same start time can be considerred the same period\n    // across refreshes.\n    //\n    // To give an example as to the difficulty of handling periods where the start time may\n    // change, if a single period manifest is refreshed with another manifest with a single\n    // period, and both the start and end times are increased, then the only way to determine\n    // if it's a new period or an old one that has changed is to look through the segments of\n    // each playlist and determine the presentation time bounds to find a match. In addition,\n    // if the period start changed to exceed the old period end, then there would be no\n    // match, and it would not be possible to determine whether the refreshed period is a new\n    // one or the old one.\n    const oldPlaylists = oldManifest.playlists.concat(getMediaGroupPlaylists(oldManifest));\n    const newPlaylists = newManifest.playlists.concat(getMediaGroupPlaylists(newManifest)); // Save all seen timelineStarts to the new manifest. Although this potentially means that\n    // there's a \"memory leak\" in that it will never stop growing, in reality, only a couple\n    // of properties are saved for each seen Period. Even long running live streams won't\n    // generate too many Periods, unless the stream is watched for decades. In the future,\n    // this can be optimized by mapping to discontinuity sequence numbers for each timeline,\n    // but it may not become an issue, and the additional info can be useful for debugging.\n\n    newManifest.timelineStarts = getUniqueTimelineStarts([oldManifest.timelineStarts, newManifest.timelineStarts]);\n    updateSequenceNumbers({\n      oldPlaylists,\n      newPlaylists,\n      timelineStarts: newManifest.timelineStarts\n    });\n    return newManifest;\n  };\n  const generateSidxKey = sidx => sidx && sidx.uri + '-' + byteRangeToString(sidx.byterange);\n  const mergeDiscontiguousPlaylists = playlists => {\n    const mergedPlaylists = values(playlists.reduce((acc, playlist) => {\n      // assuming playlist IDs are the same across periods\n      // TODO: handle multiperiod where representation sets are not the same\n      // across periods\n      const name = playlist.attributes.id + (playlist.attributes.lang || '');\n      if (!acc[name]) {\n        // First Period\n        acc[name] = playlist;\n        acc[name].attributes.timelineStarts = [];\n      } else {\n        // Subsequent Periods\n        if (playlist.segments) {\n          // first segment of subsequent periods signal a discontinuity\n          if (playlist.segments[0]) {\n            playlist.segments[0].discontinuity = true;\n          }\n          acc[name].segments.push(...playlist.segments);\n        } // bubble up contentProtection, this assumes all DRM content\n        // has the same contentProtection\n\n        if (playlist.attributes.contentProtection) {\n          acc[name].attributes.contentProtection = playlist.attributes.contentProtection;\n        }\n      }\n      acc[name].attributes.timelineStarts.push({\n        // Although they represent the same number, it's important to have both to make it\n        // compatible with HLS potentially having a similar attribute.\n        start: playlist.attributes.periodStart,\n        timeline: playlist.attributes.periodStart\n      });\n      return acc;\n    }, {}));\n    return mergedPlaylists.map(playlist => {\n      playlist.discontinuityStarts = findIndexes(playlist.segments || [], 'discontinuity');\n      return playlist;\n    });\n  };\n  const addSidxSegmentsToPlaylist = (playlist, sidxMapping) => {\n    const sidxKey = generateSidxKey(playlist.sidx);\n    const sidxMatch = sidxKey && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx;\n    if (sidxMatch) {\n      addSidxSegmentsToPlaylist$1(playlist, sidxMatch, playlist.sidx.resolvedUri);\n    }\n    return playlist;\n  };\n  const addSidxSegmentsToPlaylists = (playlists, sidxMapping = {}) => {\n    if (!Object.keys(sidxMapping).length) {\n      return playlists;\n    }\n    for (const i in playlists) {\n      playlists[i] = addSidxSegmentsToPlaylist(playlists[i], sidxMapping);\n    }\n    return playlists;\n  };\n  const formatAudioPlaylist = ({\n    attributes,\n    segments,\n    sidx,\n    mediaSequence,\n    discontinuitySequence,\n    discontinuityStarts\n  }, isAudioOnly) => {\n    const playlist = {\n      attributes: {\n        NAME: attributes.id,\n        BANDWIDTH: attributes.bandwidth,\n        CODECS: attributes.codecs,\n        ['PROGRAM-ID']: 1\n      },\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      discontinuitySequence,\n      discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      mediaSequence,\n      segments\n    };\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n    if (isAudioOnly) {\n      playlist.attributes.AUDIO = 'audio';\n      playlist.attributes.SUBTITLES = 'subs';\n    }\n    return playlist;\n  };\n  const formatVttPlaylist = ({\n    attributes,\n    segments,\n    mediaSequence,\n    discontinuityStarts,\n    discontinuitySequence\n  }) => {\n    if (typeof segments === 'undefined') {\n      // vtt tracks may use single file in BaseURL\n      segments = [{\n        uri: attributes.baseUrl,\n        timeline: attributes.periodStart,\n        resolvedUri: attributes.baseUrl || '',\n        duration: attributes.sourceDuration,\n        number: 0\n      }]; // targetDuration should be the same duration as the only segment\n\n      attributes.duration = attributes.sourceDuration;\n    }\n    const m3u8Attributes = {\n      NAME: attributes.id,\n      BANDWIDTH: attributes.bandwidth,\n      ['PROGRAM-ID']: 1\n    };\n    if (attributes.codecs) {\n      m3u8Attributes.CODECS = attributes.codecs;\n    }\n    return {\n      attributes: m3u8Attributes,\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: attributes.baseUrl || '',\n      targetDuration: attributes.duration,\n      timelineStarts: attributes.timelineStarts,\n      discontinuityStarts,\n      discontinuitySequence,\n      mediaSequence,\n      segments\n    };\n  };\n  const organizeAudioPlaylists = (playlists, sidxMapping = {}, isAudioOnly = false) => {\n    let mainPlaylist;\n    const formattedPlaylists = playlists.reduce((a, playlist) => {\n      const role = playlist.attributes.role && playlist.attributes.role.value || '';\n      const language = playlist.attributes.lang || '';\n      let label = playlist.attributes.label || 'main';\n      if (language && !playlist.attributes.label) {\n        const roleLabel = role ? ` (${role})` : '';\n        label = `${playlist.attributes.lang}${roleLabel}`;\n      }\n      if (!a[label]) {\n        a[label] = {\n          language,\n          autoselect: true,\n          default: role === 'main',\n          playlists: [],\n          uri: ''\n        };\n      }\n      const formatted = addSidxSegmentsToPlaylist(formatAudioPlaylist(playlist, isAudioOnly), sidxMapping);\n      a[label].playlists.push(formatted);\n      if (typeof mainPlaylist === 'undefined' && role === 'main') {\n        mainPlaylist = playlist;\n        mainPlaylist.default = true;\n      }\n      return a;\n    }, {}); // if no playlists have role \"main\", mark the first as main\n\n    if (!mainPlaylist) {\n      const firstLabel = Object.keys(formattedPlaylists)[0];\n      formattedPlaylists[firstLabel].default = true;\n    }\n    return formattedPlaylists;\n  };\n  const organizeVttPlaylists = (playlists, sidxMapping = {}) => {\n    return playlists.reduce((a, playlist) => {\n      const label = playlist.attributes.lang || 'text';\n      if (!a[label]) {\n        a[label] = {\n          language: label,\n          default: false,\n          autoselect: false,\n          playlists: [],\n          uri: ''\n        };\n      }\n      a[label].playlists.push(addSidxSegmentsToPlaylist(formatVttPlaylist(playlist), sidxMapping));\n      return a;\n    }, {});\n  };\n  const organizeCaptionServices = captionServices => captionServices.reduce((svcObj, svc) => {\n    if (!svc) {\n      return svcObj;\n    }\n    svc.forEach(service => {\n      const {\n        channel,\n        language\n      } = service;\n      svcObj[language] = {\n        autoselect: false,\n        default: false,\n        instreamId: channel,\n        language\n      };\n      if (service.hasOwnProperty('aspectRatio')) {\n        svcObj[language].aspectRatio = service.aspectRatio;\n      }\n      if (service.hasOwnProperty('easyReader')) {\n        svcObj[language].easyReader = service.easyReader;\n      }\n      if (service.hasOwnProperty('3D')) {\n        svcObj[language]['3D'] = service['3D'];\n      }\n    });\n    return svcObj;\n  }, {});\n  const formatVideoPlaylist = ({\n    attributes,\n    segments,\n    sidx,\n    discontinuityStarts\n  }) => {\n    const playlist = {\n      attributes: {\n        NAME: attributes.id,\n        AUDIO: 'audio',\n        SUBTITLES: 'subs',\n        RESOLUTION: {\n          width: attributes.width,\n          height: attributes.height\n        },\n        CODECS: attributes.codecs,\n        BANDWIDTH: attributes.bandwidth,\n        ['PROGRAM-ID']: 1\n      },\n      uri: '',\n      endList: attributes.type === 'static',\n      timeline: attributes.periodStart,\n      resolvedUri: '',\n      targetDuration: attributes.duration,\n      discontinuityStarts,\n      timelineStarts: attributes.timelineStarts,\n      segments\n    };\n    if (attributes.frameRate) {\n      playlist.attributes['FRAME-RATE'] = attributes.frameRate;\n    }\n    if (attributes.contentProtection) {\n      playlist.contentProtection = attributes.contentProtection;\n    }\n    if (sidx) {\n      playlist.sidx = sidx;\n    }\n    return playlist;\n  };\n  const videoOnly = ({\n    attributes\n  }) => attributes.mimeType === 'video/mp4' || attributes.mimeType === 'video/webm' || attributes.contentType === 'video';\n  const audioOnly = ({\n    attributes\n  }) => attributes.mimeType === 'audio/mp4' || attributes.mimeType === 'audio/webm' || attributes.contentType === 'audio';\n  const vttOnly = ({\n    attributes\n  }) => attributes.mimeType === 'text/vtt' || attributes.contentType === 'text';\n  /**\n   * Contains start and timeline properties denoting a timeline start. For DASH, these will\n   * be the same number.\n   *\n   * @typedef {Object} TimelineStart\n   * @property {number} start - the start time of the timeline\n   * @property {number} timeline - the timeline number\n   */\n\n  /**\n   * Adds appropriate media and discontinuity sequence values to the segments and playlists.\n   *\n   * Throughout mpd-parser, the `number` attribute is used in relation to `startNumber`, a\n   * DASH specific attribute used in constructing segment URI's from templates. However, from\n   * an HLS perspective, the `number` attribute on a segment would be its `mediaSequence`\n   * value, which should start at the original media sequence value (or 0) and increment by 1\n   * for each segment thereafter. Since DASH's `startNumber` values are independent per\n   * period, it doesn't make sense to use it for `number`. Instead, assume everything starts\n   * from a 0 mediaSequence value and increment from there.\n   *\n   * Note that VHS currently doesn't use the `number` property, but it can be helpful for\n   * debugging and making sense of the manifest.\n   *\n   * For live playlists, to account for values increasing in manifests when periods are\n   * removed on refreshes, merging logic should be used to update the numbers to their\n   * appropriate values (to ensure they're sequential and increasing).\n   *\n   * @param {Object[]} playlists - the playlists to update\n   * @param {TimelineStart[]} timelineStarts - the timeline starts for the manifest\n   */\n\n  const addMediaSequenceValues = (playlists, timelineStarts) => {\n    // increment all segments sequentially\n    playlists.forEach(playlist => {\n      playlist.mediaSequence = 0;\n      playlist.discontinuitySequence = timelineStarts.findIndex(function ({\n        timeline\n      }) {\n        return timeline === playlist.timeline;\n      });\n      if (!playlist.segments) {\n        return;\n      }\n      playlist.segments.forEach((segment, index) => {\n        segment.number = index;\n      });\n    });\n  };\n  /**\n   * Given a media group object, flattens all playlists within the media group into a single\n   * array.\n   *\n   * @param {Object} mediaGroupObject - the media group object\n   *\n   * @return {Object[]}\n   *         The media group playlists\n   */\n\n  const flattenMediaGroupPlaylists = mediaGroupObject => {\n    if (!mediaGroupObject) {\n      return [];\n    }\n    return Object.keys(mediaGroupObject).reduce((acc, label) => {\n      const labelContents = mediaGroupObject[label];\n      return acc.concat(labelContents.playlists);\n    }, []);\n  };\n  const toM3u8 = ({\n    dashPlaylists,\n    locations,\n    sidxMapping = {},\n    previousManifest\n  }) => {\n    if (!dashPlaylists.length) {\n      return {};\n    } // grab all main manifest attributes\n\n    const {\n      sourceDuration: duration,\n      type,\n      suggestedPresentationDelay,\n      minimumUpdatePeriod\n    } = dashPlaylists[0].attributes;\n    const videoPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(videoOnly)).map(formatVideoPlaylist);\n    const audioPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(audioOnly));\n    const vttPlaylists = mergeDiscontiguousPlaylists(dashPlaylists.filter(vttOnly));\n    const captions = dashPlaylists.map(playlist => playlist.attributes.captionServices).filter(Boolean);\n    const manifest = {\n      allowCache: true,\n      discontinuityStarts: [],\n      segments: [],\n      endList: true,\n      mediaGroups: {\n        AUDIO: {},\n        VIDEO: {},\n        ['CLOSED-CAPTIONS']: {},\n        SUBTITLES: {}\n      },\n      uri: '',\n      duration,\n      playlists: addSidxSegmentsToPlaylists(videoPlaylists, sidxMapping)\n    };\n    if (minimumUpdatePeriod >= 0) {\n      manifest.minimumUpdatePeriod = minimumUpdatePeriod * 1000;\n    }\n    if (locations) {\n      manifest.locations = locations;\n    }\n    if (type === 'dynamic') {\n      manifest.suggestedPresentationDelay = suggestedPresentationDelay;\n    }\n    const isAudioOnly = manifest.playlists.length === 0;\n    const organizedAudioGroup = audioPlaylists.length ? organizeAudioPlaylists(audioPlaylists, sidxMapping, isAudioOnly) : null;\n    const organizedVttGroup = vttPlaylists.length ? organizeVttPlaylists(vttPlaylists, sidxMapping) : null;\n    const formattedPlaylists = videoPlaylists.concat(flattenMediaGroupPlaylists(organizedAudioGroup), flattenMediaGroupPlaylists(organizedVttGroup));\n    const playlistTimelineStarts = formattedPlaylists.map(({\n      timelineStarts\n    }) => timelineStarts);\n    manifest.timelineStarts = getUniqueTimelineStarts(playlistTimelineStarts);\n    addMediaSequenceValues(formattedPlaylists, manifest.timelineStarts);\n    if (organizedAudioGroup) {\n      manifest.mediaGroups.AUDIO.audio = organizedAudioGroup;\n    }\n    if (organizedVttGroup) {\n      manifest.mediaGroups.SUBTITLES.subs = organizedVttGroup;\n    }\n    if (captions.length) {\n      manifest.mediaGroups['CLOSED-CAPTIONS'].cc = organizeCaptionServices(captions);\n    }\n    if (previousManifest) {\n      return positionManifestOnTimeline({\n        oldManifest: previousManifest,\n        newManifest: manifest\n      });\n    }\n    return manifest;\n  };\n\n  /**\n   * Calculates the R (repetition) value for a live stream (for the final segment\n   * in a manifest where the r value is negative 1)\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {number} time\n   *        current time (typically the total time up until the final segment)\n   * @param {number} duration\n   *        duration property for the given <S />\n   *\n   * @return {number}\n   *        R value to reach the end of the given period\n   */\n  const getLiveRValue = (attributes, time, duration) => {\n    const {\n      NOW,\n      clientOffset,\n      availabilityStartTime,\n      timescale = 1,\n      periodStart = 0,\n      minimumUpdatePeriod = 0\n    } = attributes;\n    const now = (NOW + clientOffset) / 1000;\n    const periodStartWC = availabilityStartTime + periodStart;\n    const periodEndWC = now + minimumUpdatePeriod;\n    const periodDuration = periodEndWC - periodStartWC;\n    return Math.ceil((periodDuration * timescale - time) / duration);\n  };\n  /**\n   * Uses information provided by SegmentTemplate.SegmentTimeline to determine segment\n   * timing and duration\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n  const parseByTimeline = (attributes, segmentTimeline) => {\n    const {\n      type,\n      minimumUpdatePeriod = 0,\n      media = '',\n      sourceDuration,\n      timescale = 1,\n      startNumber = 1,\n      periodStart: timeline\n    } = attributes;\n    const segments = [];\n    let time = -1;\n    for (let sIndex = 0; sIndex < segmentTimeline.length; sIndex++) {\n      const S = segmentTimeline[sIndex];\n      const duration = S.d;\n      const repeat = S.r || 0;\n      const segmentTime = S.t || 0;\n      if (time < 0) {\n        // first segment\n        time = segmentTime;\n      }\n      if (segmentTime && segmentTime > time) {\n        // discontinuity\n        // TODO: How to handle this type of discontinuity\n        // timeline++ here would treat it like HLS discontuity and content would\n        // get appended without gap\n        // E.G.\n        //  <S t=\"0\" d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S d=\"1\" />\n        //  <S t=\"5\" d=\"1\" />\n        // would have $Time$ values of [0, 1, 2, 5]\n        // should this be appened at time positions [0, 1, 2, 3],(#EXT-X-DISCONTINUITY)\n        // or [0, 1, 2, gap, gap, 5]? (#EXT-X-GAP)\n        // does the value of sourceDuration consider this when calculating arbitrary\n        // negative @r repeat value?\n        // E.G. Same elements as above with this added at the end\n        //  <S d=\"1\" r=\"-1\" />\n        //  with a sourceDuration of 10\n        // Would the 2 gaps be included in the time duration calculations resulting in\n        // 8 segments with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9] or 10 segments\n        // with $Time$ values of [0, 1, 2, 5, 6, 7, 8, 9, 10, 11] ?\n        time = segmentTime;\n      }\n      let count;\n      if (repeat < 0) {\n        const nextS = sIndex + 1;\n        if (nextS === segmentTimeline.length) {\n          // last segment\n          if (type === 'dynamic' && minimumUpdatePeriod > 0 && media.indexOf('$Number$') > 0) {\n            count = getLiveRValue(attributes, time, duration);\n          } else {\n            // TODO: This may be incorrect depending on conclusion of TODO above\n            count = (sourceDuration * timescale - time) / duration;\n          }\n        } else {\n          count = (segmentTimeline[nextS].t - time) / duration;\n        }\n      } else {\n        count = repeat + 1;\n      }\n      const end = startNumber + segments.length + count;\n      let number = startNumber + segments.length;\n      while (number < end) {\n        segments.push({\n          number,\n          duration: duration / timescale,\n          time,\n          timeline\n        });\n        time += duration;\n        number++;\n      }\n    }\n    return segments;\n  };\n  const identifierPattern = /\\$([A-z]*)(?:(%0)([0-9]+)d)?\\$/g;\n  /**\n   * Replaces template identifiers with corresponding values. To be used as the callback\n   * for String.prototype.replace\n   *\n   * @name replaceCallback\n   * @function\n   * @param {string} match\n   *        Entire match of identifier\n   * @param {string} identifier\n   *        Name of matched identifier\n   * @param {string} format\n   *        Format tag string. Its presence indicates that padding is expected\n   * @param {string} width\n   *        Desired length of the replaced value. Values less than this width shall be left\n   *        zero padded\n   * @return {string}\n   *         Replacement for the matched identifier\n   */\n\n  /**\n   * Returns a function to be used as a callback for String.prototype.replace to replace\n   * template identifiers\n   *\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {replaceCallback}\n   *         Callback to be used with String.prototype.replace to replace identifiers\n   */\n\n  const identifierReplacement = values => (match, identifier, format, width) => {\n    if (match === '$$') {\n      // escape sequence\n      return '$';\n    }\n    if (typeof values[identifier] === 'undefined') {\n      return match;\n    }\n    const value = '' + values[identifier];\n    if (identifier === 'RepresentationID') {\n      // Format tag shall not be present with RepresentationID\n      return value;\n    }\n    if (!format) {\n      width = 1;\n    } else {\n      width = parseInt(width, 10);\n    }\n    if (value.length >= width) {\n      return value;\n    }\n    return `${new Array(width - value.length + 1).join('0')}${value}`;\n  };\n  /**\n   * Constructs a segment url from a template string\n   *\n   * @param {string} url\n   *        Template string to construct url from\n   * @param {Obect} values\n   *        Object containing values that shall be used to replace known identifiers\n   * @param {number} values.RepresentationID\n   *        Value of the Representation@id attribute\n   * @param {number} values.Number\n   *        Number of the corresponding segment\n   * @param {number} values.Bandwidth\n   *        Value of the Representation@bandwidth attribute.\n   * @param {number} values.Time\n   *        Timestamp value of the corresponding segment\n   * @return {string}\n   *         Segment url with identifiers replaced\n   */\n\n  const constructTemplateUrl = (url, values) => url.replace(identifierPattern, identifierReplacement(values));\n  /**\n   * Generates a list of objects containing timing and duration information about each\n   * segment needed to generate segment uris and the complete segment object\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {{number: number, duration: number, time: number, timeline: number}[]}\n   *         List of Objects with segment timing and duration info\n   */\n\n  const parseTemplateInfo = (attributes, segmentTimeline) => {\n    if (!attributes.duration && !segmentTimeline) {\n      // if neither @duration or SegmentTimeline are present, then there shall be exactly\n      // one media segment\n      return [{\n        number: attributes.startNumber || 1,\n        duration: attributes.sourceDuration,\n        time: 0,\n        timeline: attributes.periodStart\n      }];\n    }\n    if (attributes.duration) {\n      return parseByDuration(attributes);\n    }\n    return parseByTimeline(attributes, segmentTimeline);\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentTemplate element\n   *\n   * @param {Object} attributes\n   *        Object containing all inherited attributes from parent elements with attribute\n   *        names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object[]}\n   *         List of segment objects\n   */\n\n  const segmentsFromTemplate = (attributes, segmentTimeline) => {\n    const templateValues = {\n      RepresentationID: attributes.id,\n      Bandwidth: attributes.bandwidth || 0\n    };\n    const {\n      initialization = {\n        sourceURL: '',\n        range: ''\n      }\n    } = attributes;\n    const mapSegment = urlTypeToSegment({\n      baseUrl: attributes.baseUrl,\n      source: constructTemplateUrl(initialization.sourceURL, templateValues),\n      range: initialization.range\n    });\n    const segments = parseTemplateInfo(attributes, segmentTimeline);\n    return segments.map(segment => {\n      templateValues.Number = segment.number;\n      templateValues.Time = segment.time;\n      const uri = constructTemplateUrl(attributes.media || '', templateValues); // See DASH spec section 5.3.9.2.2\n      // - if timescale isn't present on any level, default to 1.\n\n      const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n      const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n      const presentationTime =\n      // Even if the @t attribute is not specified for the segment, segment.time is\n      // calculated in mpd-parser prior to this, so it's assumed to be available.\n      attributes.periodStart + (segment.time - presentationTimeOffset) / timescale;\n      const map = {\n        uri,\n        timeline: segment.timeline,\n        duration: segment.duration,\n        resolvedUri: resolveUrl$1(attributes.baseUrl || '', uri),\n        map: mapSegment,\n        number: segment.number,\n        presentationTime\n      };\n      return map;\n    });\n  };\n\n  /**\n   * Converts a <SegmentUrl> (of type URLType from the DASH spec 5.3.9.2 Table 14)\n   * to an object that matches the output of a segment in videojs/mpd-parser\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object} segmentUrl\n   *   <SegmentURL> node to translate into a segment object\n   * @return {Object} translated segment object\n   */\n\n  const SegmentURLToSegmentObject = (attributes, segmentUrl) => {\n    const {\n      baseUrl,\n      initialization = {}\n    } = attributes;\n    const initSegment = urlTypeToSegment({\n      baseUrl,\n      source: initialization.sourceURL,\n      range: initialization.range\n    });\n    const segment = urlTypeToSegment({\n      baseUrl,\n      source: segmentUrl.media,\n      range: segmentUrl.mediaRange\n    });\n    segment.map = initSegment;\n    return segment;\n  };\n  /**\n   * Generates a list of segments using information provided by the SegmentList element\n   * SegmentList (DASH SPEC Section 5.3.9.3.2) contains a set of <SegmentURL> nodes.  Each\n   * node should be translated into segment.\n   *\n   * @param {Object} attributes\n   *   Object containing all inherited attributes from parent elements with attribute\n   *   names as keys\n   * @param {Object[]|undefined} segmentTimeline\n   *        List of objects representing the attributes of each S element contained within\n   *        the SegmentTimeline element\n   * @return {Object.<Array>} list of segments\n   */\n\n  const segmentsFromList = (attributes, segmentTimeline) => {\n    const {\n      duration,\n      segmentUrls = [],\n      periodStart\n    } = attributes; // Per spec (5.3.9.2.1) no way to determine segment duration OR\n    // if both SegmentTimeline and @duration are defined, it is outside of spec.\n\n    if (!duration && !segmentTimeline || duration && segmentTimeline) {\n      throw new Error(errors.SEGMENT_TIME_UNSPECIFIED);\n    }\n    const segmentUrlMap = segmentUrls.map(segmentUrlObject => SegmentURLToSegmentObject(attributes, segmentUrlObject));\n    let segmentTimeInfo;\n    if (duration) {\n      segmentTimeInfo = parseByDuration(attributes);\n    }\n    if (segmentTimeline) {\n      segmentTimeInfo = parseByTimeline(attributes, segmentTimeline);\n    }\n    const segments = segmentTimeInfo.map((segmentTime, index) => {\n      if (segmentUrlMap[index]) {\n        const segment = segmentUrlMap[index]; // See DASH spec section 5.3.9.2.2\n        // - if timescale isn't present on any level, default to 1.\n\n        const timescale = attributes.timescale || 1; // - if presentationTimeOffset isn't present on any level, default to 0\n\n        const presentationTimeOffset = attributes.presentationTimeOffset || 0;\n        segment.timeline = segmentTime.timeline;\n        segment.duration = segmentTime.duration;\n        segment.number = segmentTime.number;\n        segment.presentationTime = periodStart + (segmentTime.time - presentationTimeOffset) / timescale;\n        return segment;\n      } // Since we're mapping we should get rid of any blank segments (in case\n      // the given SegmentTimeline is handling for more elements than we have\n      // SegmentURLs for).\n    }).filter(segment => segment);\n    return segments;\n  };\n  const generateSegments = ({\n    attributes,\n    segmentInfo\n  }) => {\n    let segmentAttributes;\n    let segmentsFn;\n    if (segmentInfo.template) {\n      segmentsFn = segmentsFromTemplate;\n      segmentAttributes = merge$1(attributes, segmentInfo.template);\n    } else if (segmentInfo.base) {\n      segmentsFn = segmentsFromBase;\n      segmentAttributes = merge$1(attributes, segmentInfo.base);\n    } else if (segmentInfo.list) {\n      segmentsFn = segmentsFromList;\n      segmentAttributes = merge$1(attributes, segmentInfo.list);\n    }\n    const segmentsInfo = {\n      attributes\n    };\n    if (!segmentsFn) {\n      return segmentsInfo;\n    }\n    const segments = segmentsFn(segmentAttributes, segmentInfo.segmentTimeline); // The @duration attribute will be used to determin the playlist's targetDuration which\n    // must be in seconds. Since we've generated the segment list, we no longer need\n    // @duration to be in @timescale units, so we can convert it here.\n\n    if (segmentAttributes.duration) {\n      const {\n        duration,\n        timescale = 1\n      } = segmentAttributes;\n      segmentAttributes.duration = duration / timescale;\n    } else if (segments.length) {\n      // if there is no @duration attribute, use the largest segment duration as\n      // as target duration\n      segmentAttributes.duration = segments.reduce((max, segment) => {\n        return Math.max(max, Math.ceil(segment.duration));\n      }, 0);\n    } else {\n      segmentAttributes.duration = 0;\n    }\n    segmentsInfo.attributes = segmentAttributes;\n    segmentsInfo.segments = segments; // This is a sidx box without actual segment information\n\n    if (segmentInfo.base && segmentAttributes.indexRange) {\n      segmentsInfo.sidx = segments[0];\n      segmentsInfo.segments = [];\n    }\n    return segmentsInfo;\n  };\n  const toPlaylists = representations => representations.map(generateSegments);\n  const findChildren = (element, name) => from(element.childNodes).filter(({\n    tagName\n  }) => tagName === name);\n  const getContent = element => element.textContent.trim();\n\n  /**\n   * Converts the provided string that may contain a division operation to a number.\n   *\n   * @param {string} value - the provided string value\n   *\n   * @return {number} the parsed string value\n   */\n  const parseDivisionValue = value => {\n    return parseFloat(value.split('/').reduce((prev, current) => prev / current));\n  };\n  const parseDuration = str => {\n    const SECONDS_IN_YEAR = 365 * 24 * 60 * 60;\n    const SECONDS_IN_MONTH = 30 * 24 * 60 * 60;\n    const SECONDS_IN_DAY = 24 * 60 * 60;\n    const SECONDS_IN_HOUR = 60 * 60;\n    const SECONDS_IN_MIN = 60; // P10Y10M10DT10H10M10.1S\n\n    const durationRegex = /P(?:(\\d*)Y)?(?:(\\d*)M)?(?:(\\d*)D)?(?:T(?:(\\d*)H)?(?:(\\d*)M)?(?:([\\d.]*)S)?)?/;\n    const match = durationRegex.exec(str);\n    if (!match) {\n      return 0;\n    }\n    const [year, month, day, hour, minute, second] = match.slice(1);\n    return parseFloat(year || 0) * SECONDS_IN_YEAR + parseFloat(month || 0) * SECONDS_IN_MONTH + parseFloat(day || 0) * SECONDS_IN_DAY + parseFloat(hour || 0) * SECONDS_IN_HOUR + parseFloat(minute || 0) * SECONDS_IN_MIN + parseFloat(second || 0);\n  };\n  const parseDate = str => {\n    // Date format without timezone according to ISO 8601\n    // YYY-MM-DDThh:mm:ss.ssssss\n    const dateRegex = /^\\d+-\\d+-\\d+T\\d+:\\d+:\\d+(\\.\\d+)?$/; // If the date string does not specifiy a timezone, we must specifiy UTC. This is\n    // expressed by ending with 'Z'\n\n    if (dateRegex.test(str)) {\n      str += 'Z';\n    }\n    return Date.parse(str);\n  };\n  const parsers = {\n    /**\n     * Specifies the duration of the entire Media Presentation. Format is a duration string\n     * as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    mediaPresentationDuration(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the Segment availability start time for all Segments referred to in this\n     * MPD. For a dynamic manifest, it specifies the anchor for the earliest availability\n     * time. Format is a date string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The date as seconds from unix epoch\n     */\n    availabilityStartTime(value) {\n      return parseDate(value) / 1000;\n    },\n    /**\n     * Specifies the smallest period between potential changes to the MPD. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    minimumUpdatePeriod(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the suggested presentation delay. Format is a\n     * duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    suggestedPresentationDelay(value) {\n      return parseDuration(value);\n    },\n    /**\n     * specifices the type of mpd. Can be either \"static\" or \"dynamic\"\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     *\n     * @return {string}\n     *         The type as a string\n     */\n    type(value) {\n      return value;\n    },\n    /**\n     * Specifies the duration of the smallest time shifting buffer for any Representation\n     * in the MPD. Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    timeShiftBufferDepth(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the PeriodStart time of the Period relative to the availabilityStarttime.\n     * Format is a duration string as specified in ISO 8601\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The duration in seconds\n     */\n    start(value) {\n      return parseDuration(value);\n    },\n    /**\n     * Specifies the width of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed width\n     */\n    width(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the height of the visual presentation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed height\n     */\n    height(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the bitrate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed bandwidth\n     */\n    bandwidth(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the frame rate of the representation\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed frame rate\n     */\n    frameRate(value) {\n      return parseDivisionValue(value);\n    },\n    /**\n     * Specifies the number of the first Media Segment in this Representation in the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    startNumber(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the timescale in units per seconds\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed timescale\n     */\n    timescale(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the presentationTimeOffset.\n     *\n     * @param {string} value\n     *        value of the attribute as a string\n     *\n     * @return {number}\n     *         The parsed presentationTimeOffset\n     */\n    presentationTimeOffset(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the constant approximate Segment duration\n     * NOTE: The <Period> element also contains an @duration attribute. This duration\n     *       specifies the duration of the Period. This attribute is currently not\n     *       supported by the rest of the parser, however we still check for it to prevent\n     *       errors.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    duration(value) {\n      const parsedValue = parseInt(value, 10);\n      if (isNaN(parsedValue)) {\n        return parseDuration(value);\n      }\n      return parsedValue;\n    },\n    /**\n     * Specifies the Segment duration, in units of the value of the @timescale.\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed duration\n     */\n    d(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the MPD start time, in @timescale units, the first Segment in the series\n     * starts relative to the beginning of the Period\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed time\n     */\n    t(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Specifies the repeat count of the number of following contiguous Segments with the\n     * same duration expressed by the value of @d\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {number}\n     *         The parsed number\n     */\n    r(value) {\n      return parseInt(value, 10);\n    },\n    /**\n     * Default parser for all other attributes. Acts as a no-op and just returns the value\n     * as a string\n     *\n     * @param {string} value\n     *        value of attribute as a string\n     * @return {string}\n     *         Unparsed value\n     */\n    DEFAULT(value) {\n      return value;\n    }\n  };\n  /**\n   * Gets all the attributes and values of the provided node, parses attributes with known\n   * types, and returns an object with attribute names mapped to values.\n   *\n   * @param {Node} el\n   *        The node to parse attributes from\n   * @return {Object}\n   *         Object with all attributes of el parsed\n   */\n\n  const parseAttributes = el => {\n    if (!(el && el.attributes)) {\n      return {};\n    }\n    return from(el.attributes).reduce((a, e) => {\n      const parseFn = parsers[e.name] || parsers.DEFAULT;\n      a[e.name] = parseFn(e.value);\n      return a;\n    }, {});\n  };\n  const keySystemsMap = {\n    'urn:uuid:1077efec-c0b2-4d02-ace3-3c1e52e2fb4b': 'org.w3.clearkey',\n    'urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed': 'com.widevine.alpha',\n    'urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95': 'com.microsoft.playready',\n    'urn:uuid:f239e769-efa3-4850-9c16-a903c6932efb': 'com.adobe.primetime'\n  };\n  /**\n   * Builds a list of urls that is the product of the reference urls and BaseURL values\n   *\n   * @param {string[]} referenceUrls\n   *        List of reference urls to resolve to\n   * @param {Node[]} baseUrlElements\n   *        List of BaseURL nodes from the mpd\n   * @return {string[]}\n   *         List of resolved urls\n   */\n\n  const buildBaseUrls = (referenceUrls, baseUrlElements) => {\n    if (!baseUrlElements.length) {\n      return referenceUrls;\n    }\n    return flatten(referenceUrls.map(function (reference) {\n      return baseUrlElements.map(function (baseUrlElement) {\n        return resolveUrl$1(reference, getContent(baseUrlElement));\n      });\n    }));\n  };\n  /**\n   * Contains all Segment information for its containing AdaptationSet\n   *\n   * @typedef {Object} SegmentInformation\n   * @property {Object|undefined} template\n   *           Contains the attributes for the SegmentTemplate node\n   * @property {Object[]|undefined} segmentTimeline\n   *           Contains a list of atrributes for each S node within the SegmentTimeline node\n   * @property {Object|undefined} list\n   *           Contains the attributes for the SegmentList node\n   * @property {Object|undefined} base\n   *           Contains the attributes for the SegmentBase node\n   */\n\n  /**\n   * Returns all available Segment information contained within the AdaptationSet node\n   *\n   * @param {Node} adaptationSet\n   *        The AdaptationSet node to get Segment information from\n   * @return {SegmentInformation}\n   *         The Segment information contained within the provided AdaptationSet\n   */\n\n  const getSegmentInformation = adaptationSet => {\n    const segmentTemplate = findChildren(adaptationSet, 'SegmentTemplate')[0];\n    const segmentList = findChildren(adaptationSet, 'SegmentList')[0];\n    const segmentUrls = segmentList && findChildren(segmentList, 'SegmentURL').map(s => merge$1({\n      tag: 'SegmentURL'\n    }, parseAttributes(s)));\n    const segmentBase = findChildren(adaptationSet, 'SegmentBase')[0];\n    const segmentTimelineParentNode = segmentList || segmentTemplate;\n    const segmentTimeline = segmentTimelineParentNode && findChildren(segmentTimelineParentNode, 'SegmentTimeline')[0];\n    const segmentInitializationParentNode = segmentList || segmentBase || segmentTemplate;\n    const segmentInitialization = segmentInitializationParentNode && findChildren(segmentInitializationParentNode, 'Initialization')[0]; // SegmentTemplate is handled slightly differently, since it can have both\n    // @initialization and an <Initialization> node.  @initialization can be templated,\n    // while the node can have a url and range specified.  If the <SegmentTemplate> has\n    // both @initialization and an <Initialization> subelement we opt to override with\n    // the node, as this interaction is not defined in the spec.\n\n    const template = segmentTemplate && parseAttributes(segmentTemplate);\n    if (template && segmentInitialization) {\n      template.initialization = segmentInitialization && parseAttributes(segmentInitialization);\n    } else if (template && template.initialization) {\n      // If it is @initialization we convert it to an object since this is the format that\n      // later functions will rely on for the initialization segment.  This is only valid\n      // for <SegmentTemplate>\n      template.initialization = {\n        sourceURL: template.initialization\n      };\n    }\n    const segmentInfo = {\n      template,\n      segmentTimeline: segmentTimeline && findChildren(segmentTimeline, 'S').map(s => parseAttributes(s)),\n      list: segmentList && merge$1(parseAttributes(segmentList), {\n        segmentUrls,\n        initialization: parseAttributes(segmentInitialization)\n      }),\n      base: segmentBase && merge$1(parseAttributes(segmentBase), {\n        initialization: parseAttributes(segmentInitialization)\n      })\n    };\n    Object.keys(segmentInfo).forEach(key => {\n      if (!segmentInfo[key]) {\n        delete segmentInfo[key];\n      }\n    });\n    return segmentInfo;\n  };\n  /**\n   * Contains Segment information and attributes needed to construct a Playlist object\n   * from a Representation\n   *\n   * @typedef {Object} RepresentationInformation\n   * @property {SegmentInformation} segmentInfo\n   *           Segment information for this Representation\n   * @property {Object} attributes\n   *           Inherited attributes for this Representation\n   */\n\n  /**\n   * Maps a Representation node to an object containing Segment information and attributes\n   *\n   * @name inheritBaseUrlsCallback\n   * @function\n   * @param {Node} representation\n   *        Representation node from the mpd\n   * @return {RepresentationInformation}\n   *         Representation information needed to construct a Playlist object\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Representation nodes to\n   * Segment information and attributes using inherited BaseURL nodes.\n   *\n   * @param {Object} adaptationSetAttributes\n   *        Contains attributes inherited by the AdaptationSet\n   * @param {string[]} adaptationSetBaseUrls\n   *        Contains list of resolved base urls inherited by the AdaptationSet\n   * @param {SegmentInformation} adaptationSetSegmentInfo\n   *        Contains Segment information for the AdaptationSet\n   * @return {inheritBaseUrlsCallback}\n   *         Callback map function\n   */\n\n  const inheritBaseUrls = (adaptationSetAttributes, adaptationSetBaseUrls, adaptationSetSegmentInfo) => representation => {\n    const repBaseUrlElements = findChildren(representation, 'BaseURL');\n    const repBaseUrls = buildBaseUrls(adaptationSetBaseUrls, repBaseUrlElements);\n    const attributes = merge$1(adaptationSetAttributes, parseAttributes(representation));\n    const representationSegmentInfo = getSegmentInformation(representation);\n    return repBaseUrls.map(baseUrl => {\n      return {\n        segmentInfo: merge$1(adaptationSetSegmentInfo, representationSegmentInfo),\n        attributes: merge$1(attributes, {\n          baseUrl\n        })\n      };\n    });\n  };\n  /**\n   * Tranforms a series of content protection nodes to\n   * an object containing pssh data by key system\n   *\n   * @param {Node[]} contentProtectionNodes\n   *        Content protection nodes\n   * @return {Object}\n   *        Object containing pssh data by key system\n   */\n\n  const generateKeySystemInformation = contentProtectionNodes => {\n    return contentProtectionNodes.reduce((acc, node) => {\n      const attributes = parseAttributes(node); // Although it could be argued that according to the UUID RFC spec the UUID string (a-f chars) should be generated\n      // as a lowercase string it also mentions it should be treated as case-insensitive on input. Since the key system\n      // UUIDs in the keySystemsMap are hardcoded as lowercase in the codebase there isn't any reason not to do\n      // .toLowerCase() on the input UUID string from the manifest (at least I could not think of one).\n\n      if (attributes.schemeIdUri) {\n        attributes.schemeIdUri = attributes.schemeIdUri.toLowerCase();\n      }\n      const keySystem = keySystemsMap[attributes.schemeIdUri];\n      if (keySystem) {\n        acc[keySystem] = {\n          attributes\n        };\n        const psshNode = findChildren(node, 'cenc:pssh')[0];\n        if (psshNode) {\n          const pssh = getContent(psshNode);\n          acc[keySystem].pssh = pssh && decodeB64ToUint8Array(pssh);\n        }\n      }\n      return acc;\n    }, {});\n  }; // defined in ANSI_SCTE 214-1 2016\n\n  const parseCaptionServiceMetadata = service => {\n    // 608 captions\n    if (service.schemeIdUri === 'urn:scte:dash:cc:cea-608:2015') {\n      const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(value => {\n        let channel;\n        let language; // default language to value\n\n        language = value;\n        if (/^CC\\d=/.test(value)) {\n          [channel, language] = value.split('=');\n        } else if (/^CC\\d$/.test(value)) {\n          channel = value;\n        }\n        return {\n          channel,\n          language\n        };\n      });\n    } else if (service.schemeIdUri === 'urn:scte:dash:cc:cea-708:2015') {\n      const values = typeof service.value !== 'string' ? [] : service.value.split(';');\n      return values.map(value => {\n        const flags = {\n          // service or channel number 1-63\n          'channel': undefined,\n          // language is a 3ALPHA per ISO 639.2/B\n          // field is required\n          'language': undefined,\n          // BIT 1/0 or ?\n          // default value is 1, meaning 16:9 aspect ratio, 0 is 4:3, ? is unknown\n          'aspectRatio': 1,\n          // BIT 1/0\n          // easy reader flag indicated the text is tailed to the needs of beginning readers\n          // default 0, or off\n          'easyReader': 0,\n          // BIT 1/0\n          // If 3d metadata is present (CEA-708.1) then 1\n          // default 0\n          '3D': 0\n        };\n        if (/=/.test(value)) {\n          const [channel, opts = ''] = value.split('=');\n          flags.channel = channel;\n          flags.language = value;\n          opts.split(',').forEach(opt => {\n            const [name, val] = opt.split(':');\n            if (name === 'lang') {\n              flags.language = val; // er for easyReadery\n            } else if (name === 'er') {\n              flags.easyReader = Number(val); // war for wide aspect ratio\n            } else if (name === 'war') {\n              flags.aspectRatio = Number(val);\n            } else if (name === '3D') {\n              flags['3D'] = Number(val);\n            }\n          });\n        } else {\n          flags.language = value;\n        }\n        if (flags.channel) {\n          flags.channel = 'SERVICE' + flags.channel;\n        }\n        return flags;\n      });\n    }\n  };\n  /**\n   * Maps an AdaptationSet node to a list of Representation information objects\n   *\n   * @name toRepresentationsCallback\n   * @function\n   * @param {Node} adaptationSet\n   *        AdaptationSet node from the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping AdaptationSet nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} periodAttributes\n   *        Contains attributes inherited by the Period\n   * @param {string[]} periodBaseUrls\n   *        Contains list of resolved base urls inherited by the Period\n   * @param {string[]} periodSegmentInfo\n   *        Contains Segment Information at the period level\n   * @return {toRepresentationsCallback}\n   *         Callback map function\n   */\n\n  const toRepresentations = (periodAttributes, periodBaseUrls, periodSegmentInfo) => adaptationSet => {\n    const adaptationSetAttributes = parseAttributes(adaptationSet);\n    const adaptationSetBaseUrls = buildBaseUrls(periodBaseUrls, findChildren(adaptationSet, 'BaseURL'));\n    const role = findChildren(adaptationSet, 'Role')[0];\n    const roleAttributes = {\n      role: parseAttributes(role)\n    };\n    let attrs = merge$1(periodAttributes, adaptationSetAttributes, roleAttributes);\n    const accessibility = findChildren(adaptationSet, 'Accessibility')[0];\n    const captionServices = parseCaptionServiceMetadata(parseAttributes(accessibility));\n    if (captionServices) {\n      attrs = merge$1(attrs, {\n        captionServices\n      });\n    }\n    const label = findChildren(adaptationSet, 'Label')[0];\n    if (label && label.childNodes.length) {\n      const labelVal = label.childNodes[0].nodeValue.trim();\n      attrs = merge$1(attrs, {\n        label: labelVal\n      });\n    }\n    const contentProtection = generateKeySystemInformation(findChildren(adaptationSet, 'ContentProtection'));\n    if (Object.keys(contentProtection).length) {\n      attrs = merge$1(attrs, {\n        contentProtection\n      });\n    }\n    const segmentInfo = getSegmentInformation(adaptationSet);\n    const representations = findChildren(adaptationSet, 'Representation');\n    const adaptationSetSegmentInfo = merge$1(periodSegmentInfo, segmentInfo);\n    return flatten(representations.map(inheritBaseUrls(attrs, adaptationSetBaseUrls, adaptationSetSegmentInfo)));\n  };\n  /**\n   * Contains all period information for mapping nodes onto adaptation sets.\n   *\n   * @typedef {Object} PeriodInformation\n   * @property {Node} period.node\n   *           Period node from the mpd\n   * @property {Object} period.attributes\n   *           Parsed period attributes from node plus any added\n   */\n\n  /**\n   * Maps a PeriodInformation object to a list of Representation information objects for all\n   * AdaptationSet nodes contained within the Period.\n   *\n   * @name toAdaptationSetsCallback\n   * @function\n   * @param {PeriodInformation} period\n   *        Period object containing necessary period information\n   * @param {number} periodStart\n   *        Start time of the Period within the mpd\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representaion information\n   */\n\n  /**\n   * Returns a callback for Array.prototype.map for mapping Period nodes to a list of\n   * Representation information objects\n   *\n   * @param {Object} mpdAttributes\n   *        Contains attributes inherited by the mpd\n   * @param {string[]} mpdBaseUrls\n   *        Contains list of resolved base urls inherited by the mpd\n   * @return {toAdaptationSetsCallback}\n   *         Callback map function\n   */\n\n  const toAdaptationSets = (mpdAttributes, mpdBaseUrls) => (period, index) => {\n    const periodBaseUrls = buildBaseUrls(mpdBaseUrls, findChildren(period.node, 'BaseURL'));\n    const periodAttributes = merge$1(mpdAttributes, {\n      periodStart: period.attributes.start\n    });\n    if (typeof period.attributes.duration === 'number') {\n      periodAttributes.periodDuration = period.attributes.duration;\n    }\n    const adaptationSets = findChildren(period.node, 'AdaptationSet');\n    const periodSegmentInfo = getSegmentInformation(period.node);\n    return flatten(adaptationSets.map(toRepresentations(periodAttributes, periodBaseUrls, periodSegmentInfo)));\n  };\n  /**\n   * Gets Period@start property for a given period.\n   *\n   * @param {Object} options\n   *        Options object\n   * @param {Object} options.attributes\n   *        Period attributes\n   * @param {Object} [options.priorPeriodAttributes]\n   *        Prior period attributes (if prior period is available)\n   * @param {string} options.mpdType\n   *        The MPD@type these periods came from\n   * @return {number|null}\n   *         The period start, or null if it's an early available period or error\n   */\n\n  const getPeriodStart = ({\n    attributes,\n    priorPeriodAttributes,\n    mpdType\n  }) => {\n    // Summary of period start time calculation from DASH spec section 5.3.2.1\n    //\n    // A period's start is the first period's start + time elapsed after playing all\n    // prior periods to this one. Periods continue one after the other in time (without\n    // gaps) until the end of the presentation.\n    //\n    // The value of Period@start should be:\n    // 1. if Period@start is present: value of Period@start\n    // 2. if previous period exists and it has @duration: previous Period@start +\n    //    previous Period@duration\n    // 3. if this is first period and MPD@type is 'static': 0\n    // 4. in all other cases, consider the period an \"early available period\" (note: not\n    //    currently supported)\n    // (1)\n    if (typeof attributes.start === 'number') {\n      return attributes.start;\n    } // (2)\n\n    if (priorPeriodAttributes && typeof priorPeriodAttributes.start === 'number' && typeof priorPeriodAttributes.duration === 'number') {\n      return priorPeriodAttributes.start + priorPeriodAttributes.duration;\n    } // (3)\n\n    if (!priorPeriodAttributes && mpdType === 'static') {\n      return 0;\n    } // (4)\n    // There is currently no logic for calculating the Period@start value if there is\n    // no Period@start or prior Period@start and Period@duration available. This is not made\n    // explicit by the DASH interop guidelines or the DASH spec, however, since there's\n    // nothing about any other resolution strategies, it's implied. Thus, this case should\n    // be considered an early available period, or error, and null should suffice for both\n    // of those cases.\n\n    return null;\n  };\n  /**\n   * Traverses the mpd xml tree to generate a list of Representation information objects\n   * that have inherited attributes from parent nodes\n   *\n   * @param {Node} mpd\n   *        The root node of the mpd\n   * @param {Object} options\n   *        Available options for inheritAttributes\n   * @param {string} options.manifestUri\n   *        The uri source of the mpd\n   * @param {number} options.NOW\n   *        Current time per DASH IOP.  Default is current time in ms since epoch\n   * @param {number} options.clientOffset\n   *        Client time difference from NOW (in milliseconds)\n   * @return {RepresentationInformation[]}\n   *         List of objects containing Representation information\n   */\n\n  const inheritAttributes = (mpd, options = {}) => {\n    const {\n      manifestUri = '',\n      NOW = Date.now(),\n      clientOffset = 0\n    } = options;\n    const periodNodes = findChildren(mpd, 'Period');\n    if (!periodNodes.length) {\n      throw new Error(errors.INVALID_NUMBER_OF_PERIOD);\n    }\n    const locations = findChildren(mpd, 'Location');\n    const mpdAttributes = parseAttributes(mpd);\n    const mpdBaseUrls = buildBaseUrls([manifestUri], findChildren(mpd, 'BaseURL')); // See DASH spec section 5.3.1.2, Semantics of MPD element. Default type to 'static'.\n\n    mpdAttributes.type = mpdAttributes.type || 'static';\n    mpdAttributes.sourceDuration = mpdAttributes.mediaPresentationDuration || 0;\n    mpdAttributes.NOW = NOW;\n    mpdAttributes.clientOffset = clientOffset;\n    if (locations.length) {\n      mpdAttributes.locations = locations.map(getContent);\n    }\n    const periods = []; // Since toAdaptationSets acts on individual periods right now, the simplest approach to\n    // adding properties that require looking at prior periods is to parse attributes and add\n    // missing ones before toAdaptationSets is called. If more such properties are added, it\n    // may be better to refactor toAdaptationSets.\n\n    periodNodes.forEach((node, index) => {\n      const attributes = parseAttributes(node); // Use the last modified prior period, as it may contain added information necessary\n      // for this period.\n\n      const priorPeriod = periods[index - 1];\n      attributes.start = getPeriodStart({\n        attributes,\n        priorPeriodAttributes: priorPeriod ? priorPeriod.attributes : null,\n        mpdType: mpdAttributes.type\n      });\n      periods.push({\n        node,\n        attributes\n      });\n    });\n    return {\n      locations: mpdAttributes.locations,\n      representationInfo: flatten(periods.map(toAdaptationSets(mpdAttributes, mpdBaseUrls)))\n    };\n  };\n  const stringToMpdXml = manifestString => {\n    if (manifestString === '') {\n      throw new Error(errors.DASH_EMPTY_MANIFEST);\n    }\n    const parser = new DOMParser();\n    let xml;\n    let mpd;\n    try {\n      xml = parser.parseFromString(manifestString, 'application/xml');\n      mpd = xml && xml.documentElement.tagName === 'MPD' ? xml.documentElement : null;\n    } catch (e) {// ie 11 throwsw on invalid xml\n    }\n    if (!mpd || mpd && mpd.getElementsByTagName('parsererror').length > 0) {\n      throw new Error(errors.DASH_INVALID_XML);\n    }\n    return mpd;\n  };\n\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} mpd\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n  const parseUTCTimingScheme = mpd => {\n    const UTCTimingNode = findChildren(mpd, 'UTCTiming')[0];\n    if (!UTCTimingNode) {\n      return null;\n    }\n    const attributes = parseAttributes(UTCTimingNode);\n    switch (attributes.schemeIdUri) {\n      case 'urn:mpeg:dash:utc:http-head:2014':\n      case 'urn:mpeg:dash:utc:http-head:2012':\n        attributes.method = 'HEAD';\n        break;\n      case 'urn:mpeg:dash:utc:http-xsdate:2014':\n      case 'urn:mpeg:dash:utc:http-iso:2014':\n      case 'urn:mpeg:dash:utc:http-xsdate:2012':\n      case 'urn:mpeg:dash:utc:http-iso:2012':\n        attributes.method = 'GET';\n        break;\n      case 'urn:mpeg:dash:utc:direct:2014':\n      case 'urn:mpeg:dash:utc:direct:2012':\n        attributes.method = 'DIRECT';\n        attributes.value = Date.parse(attributes.value);\n        break;\n      case 'urn:mpeg:dash:utc:http-ntp:2014':\n      case 'urn:mpeg:dash:utc:ntp:2014':\n      case 'urn:mpeg:dash:utc:sntp:2014':\n      default:\n        throw new Error(errors.UNSUPPORTED_UTC_TIMING_SCHEME);\n    }\n    return attributes;\n  };\n  /*\n   * Given a DASH manifest string and options, parses the DASH manifest into an object in the\n   * form outputed by m3u8-parser and accepted by videojs/http-streaming.\n   *\n   * For live DASH manifests, if `previousManifest` is provided in options, then the newly\n   * parsed DASH manifest will have its media sequence and discontinuity sequence values\n   * updated to reflect its position relative to the prior manifest.\n   *\n   * @param {string} manifestString - the DASH manifest as a string\n   * @param {options} [options] - any options\n   *\n   * @return {Object} the manifest object\n   */\n\n  const parse = (manifestString, options = {}) => {\n    const parsedManifestInfo = inheritAttributes(stringToMpdXml(manifestString), options);\n    const playlists = toPlaylists(parsedManifestInfo.representationInfo);\n    return toM3u8({\n      dashPlaylists: playlists,\n      locations: parsedManifestInfo.locations,\n      sidxMapping: options.sidxMapping,\n      previousManifest: options.previousManifest\n    });\n  };\n  /**\n   * Parses the manifest for a UTCTiming node, returning the nodes attributes if found\n   *\n   * @param {string} manifestString\n   *        XML string of the MPD manifest\n   * @return {Object|null}\n   *         Attributes of UTCTiming node specified in the manifest. Null if none found\n   */\n\n  const parseUTCTiming = manifestString => parseUTCTimingScheme(stringToMpdXml(manifestString));\n\n  var MAX_UINT32 = Math.pow(2, 32);\n  var getUint64$1 = function (uint8) {\n    var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n    var value;\n    if (dv.getBigUint64) {\n      value = dv.getBigUint64(0);\n      if (value < Number.MAX_SAFE_INTEGER) {\n        return Number(value);\n      }\n      return value;\n    }\n    return dv.getUint32(0) * MAX_UINT32 + dv.getUint32(4);\n  };\n  var numbers = {\n    getUint64: getUint64$1,\n    MAX_UINT32: MAX_UINT32\n  };\n\n  var getUint64 = numbers.getUint64;\n  var parseSidx = function (data) {\n    var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n      result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4)),\n        references: [],\n        referenceId: view.getUint32(4),\n        timescale: view.getUint32(8)\n      },\n      i = 12;\n    if (result.version === 0) {\n      result.earliestPresentationTime = view.getUint32(i);\n      result.firstOffset = view.getUint32(i + 4);\n      i += 8;\n    } else {\n      // read 64 bits\n      result.earliestPresentationTime = getUint64(data.subarray(i));\n      result.firstOffset = getUint64(data.subarray(i + 8));\n      i += 16;\n    }\n    i += 2; // reserved\n\n    var referenceCount = view.getUint16(i);\n    i += 2; // start of references\n\n    for (; referenceCount > 0; i += 12, referenceCount--) {\n      result.references.push({\n        referenceType: (data[i] & 0x80) >>> 7,\n        referencedSize: view.getUint32(i) & 0x7FFFFFFF,\n        subsegmentDuration: view.getUint32(i + 4),\n        startsWithSap: !!(data[i + 8] & 0x80),\n        sapType: (data[i + 8] & 0x70) >>> 4,\n        sapDeltaTime: view.getUint32(i + 8) & 0x0FFFFFFF\n      });\n    }\n    return result;\n  };\n  var parseSidx_1 = parseSidx;\n\n  var ID3 = toUint8([0x49, 0x44, 0x33]);\n  var getId3Size = function getId3Size(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n    bytes = toUint8(bytes);\n    var flags = bytes[offset + 5];\n    var returnSize = bytes[offset + 6] << 21 | bytes[offset + 7] << 14 | bytes[offset + 8] << 7 | bytes[offset + 9];\n    var footerPresent = (flags & 16) >> 4;\n    if (footerPresent) {\n      return returnSize + 20;\n    }\n    return returnSize + 10;\n  };\n  var getId3Offset = function getId3Offset(bytes, offset) {\n    if (offset === void 0) {\n      offset = 0;\n    }\n    bytes = toUint8(bytes);\n    if (bytes.length - offset < 10 || !bytesMatch(bytes, ID3, {\n      offset: offset\n    })) {\n      return offset;\n    }\n    offset += getId3Size(bytes, offset); // recursive check for id3 tags as some files\n    // have multiple ID3 tag sections even though\n    // they should not.\n\n    return getId3Offset(bytes, offset);\n  };\n\n  var normalizePath$1 = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return stringToBytes(path);\n    }\n    if (typeof path === 'number') {\n      return path;\n    }\n    return path;\n  };\n  var normalizePaths$1 = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath$1(paths)];\n    }\n    return paths.map(function (p) {\n      return normalizePath$1(p);\n    });\n  };\n  /**\n   * find any number of boxes by name given a path to it in an iso bmff\n   * such as mp4.\n   *\n   * @param {TypedArray} bytes\n   *        bytes for the iso bmff to search for boxes in\n   *\n   * @param {Uint8Array[]|string[]|string|Uint8Array} name\n   *        An array of paths or a single path representing the name\n   *        of boxes to search through in bytes. Paths may be\n   *        uint8 (character codes) or strings.\n   *\n   * @param {boolean} [complete=false]\n   *        Should we search only for complete boxes on the final path.\n   *        This is very useful when you do not want to get back partial boxes\n   *        in the case of streaming files.\n   *\n   * @return {Uint8Array[]}\n   *         An array of the end paths that we found.\n   */\n\n  var findBox = function findBox(bytes, paths, complete) {\n    if (complete === void 0) {\n      complete = false;\n    }\n    paths = normalizePaths$1(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n    if (!paths.length) {\n      // short-circuit the search for empty paths\n      return results;\n    }\n    var i = 0;\n    while (i < bytes.length) {\n      var size = (bytes[i] << 24 | bytes[i + 1] << 16 | bytes[i + 2] << 8 | bytes[i + 3]) >>> 0;\n      var type = bytes.subarray(i + 4, i + 8); // invalid box format.\n\n      if (size === 0) {\n        break;\n      }\n      var end = i + size;\n      if (end > bytes.length) {\n        // this box is bigger than the number of bytes we have\n        // and complete is set, we cannot find any more boxes.\n        if (complete) {\n          break;\n        }\n        end = bytes.length;\n      }\n      var data = bytes.subarray(i + 8, end);\n      if (bytesMatch(type, paths[0])) {\n        if (paths.length === 1) {\n          // this is the end of the path and we've found the box we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next box along the path\n          results.push.apply(results, findBox(data, paths.slice(1), complete));\n        }\n      }\n      i = end;\n    } // we've finished searching all of bytes\n\n    return results;\n  };\n\n  // https://matroska-org.github.io/libebml/specs.html\n  // https://www.matroska.org/technical/elements.html\n  // https://www.webmproject.org/docs/container/\n\n  var EBML_TAGS = {\n    EBML: toUint8([0x1A, 0x45, 0xDF, 0xA3]),\n    DocType: toUint8([0x42, 0x82]),\n    Segment: toUint8([0x18, 0x53, 0x80, 0x67]),\n    SegmentInfo: toUint8([0x15, 0x49, 0xA9, 0x66]),\n    Tracks: toUint8([0x16, 0x54, 0xAE, 0x6B]),\n    Track: toUint8([0xAE]),\n    TrackNumber: toUint8([0xd7]),\n    DefaultDuration: toUint8([0x23, 0xe3, 0x83]),\n    TrackEntry: toUint8([0xAE]),\n    TrackType: toUint8([0x83]),\n    FlagDefault: toUint8([0x88]),\n    CodecID: toUint8([0x86]),\n    CodecPrivate: toUint8([0x63, 0xA2]),\n    VideoTrack: toUint8([0xe0]),\n    AudioTrack: toUint8([0xe1]),\n    // Not used yet, but will be used for live webm/mkv\n    // see https://www.matroska.org/technical/basics.html#block-structure\n    // see https://www.matroska.org/technical/basics.html#simpleblock-structure\n    Cluster: toUint8([0x1F, 0x43, 0xB6, 0x75]),\n    Timestamp: toUint8([0xE7]),\n    TimestampScale: toUint8([0x2A, 0xD7, 0xB1]),\n    BlockGroup: toUint8([0xA0]),\n    BlockDuration: toUint8([0x9B]),\n    Block: toUint8([0xA1]),\n    SimpleBlock: toUint8([0xA3])\n  };\n  /**\n   * This is a simple table to determine the length\n   * of things in ebml. The length is one based (starts at 1,\n   * rather than zero) and for every zero bit before a one bit\n   * we add one to length. We also need this table because in some\n   * case we have to xor all the length bits from another value.\n   */\n\n  var LENGTH_TABLE = [128, 64, 32, 16, 8, 4, 2, 1];\n  var getLength = function getLength(byte) {\n    var len = 1;\n    for (var i = 0; i < LENGTH_TABLE.length; i++) {\n      if (byte & LENGTH_TABLE[i]) {\n        break;\n      }\n      len++;\n    }\n    return len;\n  }; // length in ebml is stored in the first 4 to 8 bits\n  // of the first byte. 4 for the id length and 8 for the\n  // data size length. Length is measured by converting the number to binary\n  // then 1 + the number of zeros before a 1 is encountered starting\n  // from the left.\n\n  var getvint = function getvint(bytes, offset, removeLength, signed) {\n    if (removeLength === void 0) {\n      removeLength = true;\n    }\n    if (signed === void 0) {\n      signed = false;\n    }\n    var length = getLength(bytes[offset]);\n    var valueBytes = bytes.subarray(offset, offset + length); // NOTE that we do **not** subarray here because we need to copy these bytes\n    // as they will be modified below to remove the dataSizeLen bits and we do not\n    // want to modify the original data. normally we could just call slice on\n    // uint8array but ie 11 does not support that...\n\n    if (removeLength) {\n      valueBytes = Array.prototype.slice.call(bytes, offset, offset + length);\n      valueBytes[0] ^= LENGTH_TABLE[length - 1];\n    }\n    return {\n      length: length,\n      value: bytesToNumber(valueBytes, {\n        signed: signed\n      }),\n      bytes: valueBytes\n    };\n  };\n  var normalizePath = function normalizePath(path) {\n    if (typeof path === 'string') {\n      return path.match(/.{1,2}/g).map(function (p) {\n        return normalizePath(p);\n      });\n    }\n    if (typeof path === 'number') {\n      return numberToBytes(path);\n    }\n    return path;\n  };\n  var normalizePaths = function normalizePaths(paths) {\n    if (!Array.isArray(paths)) {\n      return [normalizePath(paths)];\n    }\n    return paths.map(function (p) {\n      return normalizePath(p);\n    });\n  };\n  var getInfinityDataSize = function getInfinityDataSize(id, bytes, offset) {\n    if (offset >= bytes.length) {\n      return bytes.length;\n    }\n    var innerid = getvint(bytes, offset, false);\n    if (bytesMatch(id.bytes, innerid.bytes)) {\n      return offset;\n    }\n    var dataHeader = getvint(bytes, offset + innerid.length);\n    return getInfinityDataSize(id, bytes, offset + dataHeader.length + dataHeader.value + innerid.length);\n  };\n  /**\n   * Notes on the EBLM format.\n   *\n   * EBLM uses \"vints\" tags. Every vint tag contains\n   * two parts\n   *\n   * 1. The length from the first byte. You get this by\n   *    converting the byte to binary and counting the zeros\n   *    before a 1. Then you add 1 to that. Examples\n   *    00011111 = length 4 because there are 3 zeros before a 1.\n   *    00100000 = length 3 because there are 2 zeros before a 1.\n   *    00000011 = length 7 because there are 6 zeros before a 1.\n   *\n   * 2. The bits used for length are removed from the first byte\n   *    Then all the bytes are merged into a value. NOTE: this\n   *    is not the case for id ebml tags as there id includes\n   *    length bits.\n   *\n   */\n\n  var findEbml = function findEbml(bytes, paths) {\n    paths = normalizePaths(paths);\n    bytes = toUint8(bytes);\n    var results = [];\n    if (!paths.length) {\n      return results;\n    }\n    var i = 0;\n    while (i < bytes.length) {\n      var id = getvint(bytes, i, false);\n      var dataHeader = getvint(bytes, i + id.length);\n      var dataStart = i + id.length + dataHeader.length; // dataSize is unknown or this is a live stream\n\n      if (dataHeader.value === 0x7f) {\n        dataHeader.value = getInfinityDataSize(id, bytes, dataStart);\n        if (dataHeader.value !== bytes.length) {\n          dataHeader.value -= dataStart;\n        }\n      }\n      var dataEnd = dataStart + dataHeader.value > bytes.length ? bytes.length : dataStart + dataHeader.value;\n      var data = bytes.subarray(dataStart, dataEnd);\n      if (bytesMatch(paths[0], id.bytes)) {\n        if (paths.length === 1) {\n          // this is the end of the paths and we've found the tag we were\n          // looking for\n          results.push(data);\n        } else {\n          // recursively search for the next tag inside of the data\n          // of this one\n          results = results.concat(findEbml(data, paths.slice(1)));\n        }\n      }\n      var totalLength = id.length + dataHeader.length + data.length; // move past this tag entirely, we are not looking for it\n\n      i += totalLength;\n    }\n    return results;\n  }; // see https://www.matroska.org/technical/basics.html#block-structure\n\n  var NAL_TYPE_ONE = toUint8([0x00, 0x00, 0x00, 0x01]);\n  var NAL_TYPE_TWO = toUint8([0x00, 0x00, 0x01]);\n  var EMULATION_PREVENTION = toUint8([0x00, 0x00, 0x03]);\n  /**\n   * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n   * Sequence Payload\"\n   *\n   * @param data {Uint8Array} the bytes of a RBSP from a NAL\n   * unit\n   * @return {Uint8Array} the RBSP without any Emulation\n   * Prevention Bytes\n   */\n\n  var discardEmulationPreventionBytes = function discardEmulationPreventionBytes(bytes) {\n    var positions = [];\n    var i = 1; // Find all `Emulation Prevention Bytes`\n\n    while (i < bytes.length - 2) {\n      if (bytesMatch(bytes.subarray(i, i + 3), EMULATION_PREVENTION)) {\n        positions.push(i + 2);\n        i++;\n      }\n      i++;\n    } // If no Emulation Prevention Bytes were found just return the original\n    // array\n\n    if (positions.length === 0) {\n      return bytes;\n    } // Create a new array to hold the NAL unit data\n\n    var newLength = bytes.length - positions.length;\n    var newData = new Uint8Array(newLength);\n    var sourceIndex = 0;\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === positions[0]) {\n        // Skip this byte\n        sourceIndex++; // Remove this position index\n\n        positions.shift();\n      }\n      newData[i] = bytes[sourceIndex];\n    }\n    return newData;\n  };\n  var findNal = function findNal(bytes, dataType, types, nalLimit) {\n    if (nalLimit === void 0) {\n      nalLimit = Infinity;\n    }\n    bytes = toUint8(bytes);\n    types = [].concat(types);\n    var i = 0;\n    var nalStart;\n    var nalsFound = 0; // keep searching until:\n    // we reach the end of bytes\n    // we reach the maximum number of nals they want to seach\n    // NOTE: that we disregard nalLimit when we have found the start\n    // of the nal we want so that we can find the end of the nal we want.\n\n    while (i < bytes.length && (nalsFound < nalLimit || nalStart)) {\n      var nalOffset = void 0;\n      if (bytesMatch(bytes.subarray(i), NAL_TYPE_ONE)) {\n        nalOffset = 4;\n      } else if (bytesMatch(bytes.subarray(i), NAL_TYPE_TWO)) {\n        nalOffset = 3;\n      } // we are unsynced,\n      // find the next nal unit\n\n      if (!nalOffset) {\n        i++;\n        continue;\n      }\n      nalsFound++;\n      if (nalStart) {\n        return discardEmulationPreventionBytes(bytes.subarray(nalStart, i));\n      }\n      var nalType = void 0;\n      if (dataType === 'h264') {\n        nalType = bytes[i + nalOffset] & 0x1f;\n      } else if (dataType === 'h265') {\n        nalType = bytes[i + nalOffset] >> 1 & 0x3f;\n      }\n      if (types.indexOf(nalType) !== -1) {\n        nalStart = i + nalOffset;\n      } // nal header is 1 length for h264, and 2 for h265\n\n      i += nalOffset + (dataType === 'h264' ? 1 : 2);\n    }\n    return bytes.subarray(0, 0);\n  };\n  var findH264Nal = function findH264Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h264', type, nalLimit);\n  };\n  var findH265Nal = function findH265Nal(bytes, type, nalLimit) {\n    return findNal(bytes, 'h265', type, nalLimit);\n  };\n\n  var CONSTANTS = {\n    // \"webm\" string literal in hex\n    'webm': toUint8([0x77, 0x65, 0x62, 0x6d]),\n    // \"matroska\" string literal in hex\n    'matroska': toUint8([0x6d, 0x61, 0x74, 0x72, 0x6f, 0x73, 0x6b, 0x61]),\n    // \"fLaC\" string literal in hex\n    'flac': toUint8([0x66, 0x4c, 0x61, 0x43]),\n    // \"OggS\" string literal in hex\n    'ogg': toUint8([0x4f, 0x67, 0x67, 0x53]),\n    // ac-3 sync byte, also works for ec-3 as that is simply a codec\n    // of ac-3\n    'ac3': toUint8([0x0b, 0x77]),\n    // \"RIFF\" string literal in hex used for wav and avi\n    'riff': toUint8([0x52, 0x49, 0x46, 0x46]),\n    // \"AVI\" string literal in hex\n    'avi': toUint8([0x41, 0x56, 0x49]),\n    // \"WAVE\" string literal in hex\n    'wav': toUint8([0x57, 0x41, 0x56, 0x45]),\n    // \"ftyp3g\" string literal in hex\n    '3gp': toUint8([0x66, 0x74, 0x79, 0x70, 0x33, 0x67]),\n    // \"ftyp\" string literal in hex\n    'mp4': toUint8([0x66, 0x74, 0x79, 0x70]),\n    // \"styp\" string literal in hex\n    'fmp4': toUint8([0x73, 0x74, 0x79, 0x70]),\n    // \"ftypqt\" string literal in hex\n    'mov': toUint8([0x66, 0x74, 0x79, 0x70, 0x71, 0x74]),\n    // moov string literal in hex\n    'moov': toUint8([0x6D, 0x6F, 0x6F, 0x76]),\n    // moof string literal in hex\n    'moof': toUint8([0x6D, 0x6F, 0x6F, 0x66])\n  };\n  var _isLikely = {\n    aac: function aac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x10], {\n        offset: offset,\n        mask: [0xFF, 0x16]\n      });\n    },\n    mp3: function mp3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, [0xFF, 0x02], {\n        offset: offset,\n        mask: [0xFF, 0x06]\n      });\n    },\n    webm: function webm(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is webm\n\n      return bytesMatch(docType, CONSTANTS.webm);\n    },\n    mkv: function mkv(bytes) {\n      var docType = findEbml(bytes, [EBML_TAGS.EBML, EBML_TAGS.DocType])[0]; // check if DocType EBML tag is matroska\n\n      return bytesMatch(docType, CONSTANTS.matroska);\n    },\n    mp4: function mp4(bytes) {\n      // if this file is another base media file format, it is not mp4\n      if (_isLikely['3gp'](bytes) || _isLikely.mov(bytes)) {\n        return false;\n      } // if this file starts with a ftyp or styp box its mp4\n\n      if (bytesMatch(bytes, CONSTANTS.mp4, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.fmp4, {\n        offset: 4\n      })) {\n        return true;\n      } // if this file starts with a moof/moov box its mp4\n\n      if (bytesMatch(bytes, CONSTANTS.moof, {\n        offset: 4\n      }) || bytesMatch(bytes, CONSTANTS.moov, {\n        offset: 4\n      })) {\n        return true;\n      }\n    },\n    mov: function mov(bytes) {\n      return bytesMatch(bytes, CONSTANTS.mov, {\n        offset: 4\n      });\n    },\n    '3gp': function gp(bytes) {\n      return bytesMatch(bytes, CONSTANTS['3gp'], {\n        offset: 4\n      });\n    },\n    ac3: function ac3(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.ac3, {\n        offset: offset\n      });\n    },\n    ts: function ts(bytes) {\n      if (bytes.length < 189 && bytes.length >= 1) {\n        return bytes[0] === 0x47;\n      }\n      var i = 0; // check the first 376 bytes for two matching sync bytes\n\n      while (i + 188 < bytes.length && i < 188) {\n        if (bytes[i] === 0x47 && bytes[i + 188] === 0x47) {\n          return true;\n        }\n        i += 1;\n      }\n      return false;\n    },\n    flac: function flac(bytes) {\n      var offset = getId3Offset(bytes);\n      return bytesMatch(bytes, CONSTANTS.flac, {\n        offset: offset\n      });\n    },\n    ogg: function ogg(bytes) {\n      return bytesMatch(bytes, CONSTANTS.ogg);\n    },\n    avi: function avi(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.avi, {\n        offset: 8\n      });\n    },\n    wav: function wav(bytes) {\n      return bytesMatch(bytes, CONSTANTS.riff) && bytesMatch(bytes, CONSTANTS.wav, {\n        offset: 8\n      });\n    },\n    'h264': function h264(bytes) {\n      // find seq_parameter_set_rbsp\n      return findH264Nal(bytes, 7, 3).length;\n    },\n    'h265': function h265(bytes) {\n      // find video_parameter_set_rbsp or seq_parameter_set_rbsp\n      return findH265Nal(bytes, [32, 33], 3).length;\n    }\n  }; // get all the isLikely functions\n  // but make sure 'ts' is above h264 and h265\n  // but below everything else as it is the least specific\n\n  var isLikelyTypes = Object.keys(_isLikely) // remove ts, h264, h265\n  .filter(function (t) {\n    return t !== 'ts' && t !== 'h264' && t !== 'h265';\n  }) // add it back to the bottom\n  .concat(['ts', 'h264', 'h265']); // make sure we are dealing with uint8 data.\n\n  isLikelyTypes.forEach(function (type) {\n    var isLikelyFn = _isLikely[type];\n    _isLikely[type] = function (bytes) {\n      return isLikelyFn(toUint8(bytes));\n    };\n  }); // export after wrapping\n\n  var isLikely = _isLikely; // A useful list of file signatures can be found here\n  // https://en.wikipedia.org/wiki/List_of_file_signatures\n\n  var detectContainerForBytes = function detectContainerForBytes(bytes) {\n    bytes = toUint8(bytes);\n    for (var i = 0; i < isLikelyTypes.length; i++) {\n      var type = isLikelyTypes[i];\n      if (isLikely[type](bytes)) {\n        return type;\n      }\n    }\n    return '';\n  }; // fmp4 is not a container\n\n  var isLikelyFmp4MediaSegment = function isLikelyFmp4MediaSegment(bytes) {\n    return findBox(bytes, ['moof']).length > 0;\n  };\n\n  /**\n   * mux.js\n   *\n   * Copyright (c) Brightcove\n   * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n   */\n  var ONE_SECOND_IN_TS = 90000,\n    // 90kHz clock\n    secondsToVideoTs,\n    secondsToAudioTs,\n    videoTsToSeconds,\n    audioTsToSeconds,\n    audioTsToVideoTs,\n    videoTsToAudioTs,\n    metadataTsToSeconds;\n  secondsToVideoTs = function (seconds) {\n    return seconds * ONE_SECOND_IN_TS;\n  };\n  secondsToAudioTs = function (seconds, sampleRate) {\n    return seconds * sampleRate;\n  };\n  videoTsToSeconds = function (timestamp) {\n    return timestamp / ONE_SECOND_IN_TS;\n  };\n  audioTsToSeconds = function (timestamp, sampleRate) {\n    return timestamp / sampleRate;\n  };\n  audioTsToVideoTs = function (timestamp, sampleRate) {\n    return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n  };\n  videoTsToAudioTs = function (timestamp, sampleRate) {\n    return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n  };\n\n  /**\n   * Adjust ID3 tag or caption timing information by the timeline pts values\n   * (if keepOriginalTimestamps is false) and convert to seconds\n   */\n  metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n    return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n  };\n  var clock = {\n    ONE_SECOND_IN_TS: ONE_SECOND_IN_TS,\n    secondsToVideoTs: secondsToVideoTs,\n    secondsToAudioTs: secondsToAudioTs,\n    videoTsToSeconds: videoTsToSeconds,\n    audioTsToSeconds: audioTsToSeconds,\n    audioTsToVideoTs: audioTsToVideoTs,\n    videoTsToAudioTs: videoTsToAudioTs,\n    metadataTsToSeconds: metadataTsToSeconds\n  };\n  var clock_1 = clock.ONE_SECOND_IN_TS;\n\n  /*! @name @videojs/http-streaming @version 3.0.0 @license Apache-2.0 */\n\n  /**\n   * @file resolve-url.js - Handling how URLs are resolved and manipulated\n   */\n  const resolveUrl = resolveUrl$2;\n  /**\n   * If the xhr request was redirected, return the responseURL, otherwise,\n   * return the original url.\n   *\n   * @api private\n   *\n   * @param  {string} url - an url being requested\n   * @param  {XMLHttpRequest} req - xhr request result\n   *\n   * @return {string}\n   */\n\n  const resolveManifestRedirect = (url, req) => {\n    // To understand how the responseURL below is set and generated:\n    // - https://fetch.spec.whatwg.org/#concept-response-url\n    // - https://fetch.spec.whatwg.org/#atomic-http-redirect-handling\n    if (req && req.responseURL && url !== req.responseURL) {\n      return req.responseURL;\n    }\n    return url;\n  };\n  const logger = source => {\n    if (videojs.log.debug) {\n      return videojs.log.debug.bind(videojs, 'VHS:', `${source} >`);\n    }\n    return function () {};\n  };\n\n  /**\n   * Provides a compatibility layer between Video.js 7 and 8 API changes for VHS.\n   */\n  /**\n   * Delegates to videojs.obj.merge (Video.js 8) or\n   * videojs.mergeOptions (Video.js 7).\n   */\n\n  function merge(...args) {\n    const context = videojs.obj || videojs;\n    const fn = context.merge || context.mergeOptions;\n    return fn.apply(context, args);\n  }\n  /**\n   * Delegates to videojs.time.createTimeRanges (Video.js 8) or\n   * videojs.createTimeRanges (Video.js 7).\n   */\n\n  function createTimeRanges(...args) {\n    const context = videojs.time || videojs;\n    const fn = context.createTimeRanges || context.createTimeRanges;\n    return fn.apply(context, args);\n  }\n\n  /**\n   * ranges\n   *\n   * Utilities for working with TimeRanges.\n   *\n   */\n\n  const TIME_FUDGE_FACTOR = 1 / 30; // Comparisons between time values such as current time and the end of the buffered range\n  // can be misleading because of precision differences or when the current media has poorly\n  // aligned audio and video, which can cause values to be slightly off from what you would\n  // expect. This value is what we consider to be safe to use in such comparisons to account\n  // for these scenarios.\n\n  const SAFE_TIME_DELTA = TIME_FUDGE_FACTOR * 3;\n  const filterRanges = function (timeRanges, predicate) {\n    const results = [];\n    let i;\n    if (timeRanges && timeRanges.length) {\n      // Search for ranges that match the predicate\n      for (i = 0; i < timeRanges.length; i++) {\n        if (predicate(timeRanges.start(i), timeRanges.end(i))) {\n          results.push([timeRanges.start(i), timeRanges.end(i)]);\n        }\n      }\n    }\n    return createTimeRanges(results);\n  };\n  /**\n   * Attempts to find the buffered TimeRange that contains the specified\n   * time.\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object to query\n   * @param {number} time  - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object\n   */\n\n  const findRange = function (buffered, time) {\n    return filterRanges(buffered, function (start, end) {\n      return start - SAFE_TIME_DELTA <= time && end + SAFE_TIME_DELTA >= time;\n    });\n  };\n  /**\n   * Returns the TimeRanges that begin later than the specified time.\n   *\n   * @param {TimeRanges} timeRanges - the TimeRanges object to query\n   * @param {number} time - the time to filter on.\n   * @return {TimeRanges} a new TimeRanges object.\n   */\n\n  const findNextRange = function (timeRanges, time) {\n    return filterRanges(timeRanges, function (start) {\n      return start - TIME_FUDGE_FACTOR >= time;\n    });\n  };\n  /**\n   * Returns gaps within a list of TimeRanges\n   *\n   * @param {TimeRanges} buffered - the TimeRanges object\n   * @return {TimeRanges} a TimeRanges object of gaps\n   */\n\n  const findGaps = function (buffered) {\n    if (buffered.length < 2) {\n      return createTimeRanges();\n    }\n    const ranges = [];\n    for (let i = 1; i < buffered.length; i++) {\n      const start = buffered.end(i - 1);\n      const end = buffered.start(i);\n      ranges.push([start, end]);\n    }\n    return createTimeRanges(ranges);\n  };\n  /**\n   * Calculate the intersection of two TimeRanges\n   *\n   * @param {TimeRanges} bufferA\n   * @param {TimeRanges} bufferB\n   * @return {TimeRanges} The interesection of `bufferA` with `bufferB`\n   */\n\n  const bufferIntersection = function (bufferA, bufferB) {\n    let start = null;\n    let end = null;\n    let arity = 0;\n    const extents = [];\n    const ranges = [];\n    if (!bufferA || !bufferA.length || !bufferB || !bufferB.length) {\n      return createTimeRanges();\n    } // Handle the case where we have both buffers and create an\n    // intersection of the two\n\n    let count = bufferA.length; // A) Gather up all start and end times\n\n    while (count--) {\n      extents.push({\n        time: bufferA.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferA.end(count),\n        type: 'end'\n      });\n    }\n    count = bufferB.length;\n    while (count--) {\n      extents.push({\n        time: bufferB.start(count),\n        type: 'start'\n      });\n      extents.push({\n        time: bufferB.end(count),\n        type: 'end'\n      });\n    } // B) Sort them by time\n\n    extents.sort(function (a, b) {\n      return a.time - b.time;\n    }); // C) Go along one by one incrementing arity for start and decrementing\n    //    arity for ends\n\n    for (count = 0; count < extents.length; count++) {\n      if (extents[count].type === 'start') {\n        arity++; // D) If arity is ever incremented to 2 we are entering an\n        //    overlapping range\n\n        if (arity === 2) {\n          start = extents[count].time;\n        }\n      } else if (extents[count].type === 'end') {\n        arity--; // E) If arity is ever decremented to 1 we leaving an\n        //    overlapping range\n\n        if (arity === 1) {\n          end = extents[count].time;\n        }\n      } // F) Record overlapping ranges\n\n      if (start !== null && end !== null) {\n        ranges.push([start, end]);\n        start = null;\n        end = null;\n      }\n    }\n    return createTimeRanges(ranges);\n  };\n  /**\n   * Gets a human readable string for a TimeRange\n   *\n   * @param {TimeRange} range\n   * @return {string} a human readable string\n   */\n\n  const printableRange = range => {\n    const strArr = [];\n    if (!range || !range.length) {\n      return '';\n    }\n    for (let i = 0; i < range.length; i++) {\n      strArr.push(range.start(i) + ' => ' + range.end(i));\n    }\n    return strArr.join(', ');\n  };\n  /**\n   * Calculates the amount of time left in seconds until the player hits the end of the\n   * buffer and causes a rebuffer\n   *\n   * @param {TimeRange} buffered\n   *        The state of the buffer\n   * @param {Numnber} currentTime\n   *        The current time of the player\n   * @param {number} playbackRate\n   *        The current playback rate of the player. Defaults to 1.\n   * @return {number}\n   *         Time until the player has to start rebuffering in seconds.\n   * @function timeUntilRebuffer\n   */\n\n  const timeUntilRebuffer = function (buffered, currentTime, playbackRate = 1) {\n    const bufferedEnd = buffered.length ? buffered.end(buffered.length - 1) : 0;\n    return (bufferedEnd - currentTime) / playbackRate;\n  };\n  /**\n   * Converts a TimeRanges object into an array representation\n   *\n   * @param {TimeRanges} timeRanges\n   * @return {Array}\n   */\n\n  const timeRangesToArray = timeRanges => {\n    const timeRangesList = [];\n    for (let i = 0; i < timeRanges.length; i++) {\n      timeRangesList.push({\n        start: timeRanges.start(i),\n        end: timeRanges.end(i)\n      });\n    }\n    return timeRangesList;\n  };\n  /**\n   * Determines if two time range objects are different.\n   *\n   * @param {TimeRange} a\n   *        the first time range object to check\n   *\n   * @param {TimeRange} b\n   *        the second time range object to check\n   *\n   * @return {Boolean}\n   *         Whether the time range objects differ\n   */\n\n  const isRangeDifferent = function (a, b) {\n    // same object\n    if (a === b) {\n      return false;\n    } // one or the other is undefined\n\n    if (!a && b || !b && a) {\n      return true;\n    } // length is different\n\n    if (a.length !== b.length) {\n      return true;\n    } // see if any start/end pair is different\n\n    for (let i = 0; i < a.length; i++) {\n      if (a.start(i) !== b.start(i) || a.end(i) !== b.end(i)) {\n        return true;\n      }\n    } // if the length and every pair is the same\n    // this is the same time range\n\n    return false;\n  };\n  const lastBufferedEnd = function (a) {\n    if (!a || !a.length || !a.end) {\n      return;\n    }\n    return a.end(a.length - 1);\n  };\n  /**\n   * A utility function to add up the amount of time in a timeRange\n   * after a specified startTime.\n   * ie:[[0, 10], [20, 40], [50, 60]] with a startTime 0\n   *     would return 40 as there are 40s seconds after 0 in the timeRange\n   *\n   * @param {TimeRange} range\n   *        The range to check against\n   * @param {number} startTime\n   *        The time in the time range that you should start counting from\n   *\n   * @return {number}\n   *          The number of seconds in the buffer passed the specified time.\n   */\n\n  const timeAheadOf = function (range, startTime) {\n    let time = 0;\n    if (!range || !range.length) {\n      return time;\n    }\n    for (let i = 0; i < range.length; i++) {\n      const start = range.start(i);\n      const end = range.end(i); // startTime is after this range entirely\n\n      if (startTime > end) {\n        continue;\n      } // startTime is within this range\n\n      if (startTime > start && startTime <= end) {\n        time += end - startTime;\n        continue;\n      } // startTime is before this range.\n\n      time += end - start;\n    }\n    return time;\n  };\n\n  /**\n   * @file playlist.js\n   *\n   * Playlist related utilities.\n   */\n  /**\n   * Get the duration of a segment, with special cases for\n   * llhls segments that do not have a duration yet.\n   *\n   * @param {Object} playlist\n   *        the playlist that the segment belongs to.\n   * @param {Object} segment\n   *        the segment to get a duration for.\n   *\n   * @return {number}\n   *          the segment duration\n   */\n\n  const segmentDurationWithParts = (playlist, segment) => {\n    // if this isn't a preload segment\n    // then we will have a segment duration that is accurate.\n    if (!segment.preload) {\n      return segment.duration;\n    } // otherwise we have to add up parts and preload hints\n    // to get an up to date duration.\n\n    let result = 0;\n    (segment.parts || []).forEach(function (p) {\n      result += p.duration;\n    }); // for preload hints we have to use partTargetDuration\n    // as they won't even have a duration yet.\n\n    (segment.preloadHints || []).forEach(function (p) {\n      if (p.type === 'PART') {\n        result += playlist.partTargetDuration;\n      }\n    });\n    return result;\n  };\n  /**\n   * A function to get a combined list of parts and segments with durations\n   * and indexes.\n   *\n   * @param {Playlist} playlist the playlist to get the list for.\n   *\n   * @return {Array} The part/segment list.\n   */\n\n  const getPartsAndSegments = playlist => (playlist.segments || []).reduce((acc, segment, si) => {\n    if (segment.parts) {\n      segment.parts.forEach(function (part, pi) {\n        acc.push({\n          duration: part.duration,\n          segmentIndex: si,\n          partIndex: pi,\n          part,\n          segment\n        });\n      });\n    } else {\n      acc.push({\n        duration: segment.duration,\n        segmentIndex: si,\n        partIndex: null,\n        segment,\n        part: null\n      });\n    }\n    return acc;\n  }, []);\n  const getLastParts = media => {\n    const lastSegment = media.segments && media.segments.length && media.segments[media.segments.length - 1];\n    return lastSegment && lastSegment.parts || [];\n  };\n  const getKnownPartCount = ({\n    preloadSegment\n  }) => {\n    if (!preloadSegment) {\n      return;\n    }\n    const {\n      parts,\n      preloadHints\n    } = preloadSegment;\n    let partCount = (preloadHints || []).reduce((count, hint) => count + (hint.type === 'PART' ? 1 : 0), 0);\n    partCount += parts && parts.length ? parts.length : 0;\n    return partCount;\n  };\n  /**\n   * Get the number of seconds to delay from the end of a\n   * live playlist.\n   *\n   * @param {Playlist} main the main playlist\n   * @param {Playlist} media the media playlist\n   * @return {number} the hold back in seconds.\n   */\n\n  const liveEdgeDelay = (main, media) => {\n    if (media.endList) {\n      return 0;\n    } // dash suggestedPresentationDelay trumps everything\n\n    if (main && main.suggestedPresentationDelay) {\n      return main.suggestedPresentationDelay;\n    }\n    const hasParts = getLastParts(media).length > 0; // look for \"part\" delays from ll-hls first\n\n    if (hasParts && media.serverControl && media.serverControl.partHoldBack) {\n      return media.serverControl.partHoldBack;\n    } else if (hasParts && media.partTargetDuration) {\n      return media.partTargetDuration * 3; // finally look for full segment delays\n    } else if (media.serverControl && media.serverControl.holdBack) {\n      return media.serverControl.holdBack;\n    } else if (media.targetDuration) {\n      return media.targetDuration * 3;\n    }\n    return 0;\n  };\n  /**\n   * walk backward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {Number} endSequence the mediaSequence to stop walking on\n   */\n\n  const backwardDuration = function (playlist, endSequence) {\n    let result = 0;\n    let i = endSequence - playlist.mediaSequence; // if a start time is available for segment immediately following\n    // the interval, use it\n\n    let segment = playlist.segments[i]; // Walk backward until we find the latest segment with timeline\n    // information that is earlier than endSequence\n\n    if (segment) {\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start,\n          precise: true\n        };\n      }\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - segment.duration,\n          precise: true\n        };\n      }\n    }\n    while (i--) {\n      segment = playlist.segments[i];\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: result + segment.end,\n          precise: true\n        };\n      }\n      result += segmentDurationWithParts(playlist, segment);\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: result + segment.start,\n          precise: true\n        };\n      }\n    }\n    return {\n      result,\n      precise: false\n    };\n  };\n  /**\n   * walk forward until we find a duration we can use\n   * or return a failure\n   *\n   * @param {Playlist} playlist the playlist to walk through\n   * @param {number} endSequence the mediaSequence to stop walking on\n   */\n\n  const forwardDuration = function (playlist, endSequence) {\n    let result = 0;\n    let segment;\n    let i = endSequence - playlist.mediaSequence; // Walk forward until we find the earliest segment with timeline\n    // information\n\n    for (; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i];\n      if (typeof segment.start !== 'undefined') {\n        return {\n          result: segment.start - result,\n          precise: true\n        };\n      }\n      result += segmentDurationWithParts(playlist, segment);\n      if (typeof segment.end !== 'undefined') {\n        return {\n          result: segment.end - result,\n          precise: true\n        };\n      }\n    } // indicate we didn't find a useful duration estimate\n\n    return {\n      result: -1,\n      precise: false\n    };\n  };\n  /**\n    * Calculate the media duration from the segments associated with a\n    * playlist. The duration of a subinterval of the available segments\n    * may be calculated by specifying an end index.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper boundary\n    * for the playlist.  Defaults to playlist length.\n    * @param {number} expired the amount of time that has dropped\n    * off the front of the playlist in a live scenario\n    * @return {number} the duration between the first available segment\n    * and end index.\n    */\n\n  const intervalDuration = function (playlist, endSequence, expired) {\n    if (typeof endSequence === 'undefined') {\n      endSequence = playlist.mediaSequence + playlist.segments.length;\n    }\n    if (endSequence < playlist.mediaSequence) {\n      return 0;\n    } // do a backward walk to estimate the duration\n\n    const backward = backwardDuration(playlist, endSequence);\n    if (backward.precise) {\n      // if we were able to base our duration estimate on timing\n      // information provided directly from the Media Source, return\n      // it\n      return backward.result;\n    } // walk forward to see if a precise duration estimate can be made\n    // that way\n\n    const forward = forwardDuration(playlist, endSequence);\n    if (forward.precise) {\n      // we found a segment that has been buffered and so it's\n      // position is known precisely\n      return forward.result;\n    } // return the less-precise, playlist-based duration estimate\n\n    return backward.result + expired;\n  };\n  /**\n    * Calculates the duration of a playlist. If a start and end index\n    * are specified, the duration will be for the subset of the media\n    * timeline between those two indices. The total duration for live\n    * playlists is always Infinity.\n    *\n    * @param {Object} playlist a media playlist object\n    * @param {number=} endSequence an exclusive upper\n    * boundary for the playlist. Defaults to the playlist media\n    * sequence number plus its length.\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @return {number} the duration between the start index and end\n    * index.\n    */\n\n  const duration = function (playlist, endSequence, expired) {\n    if (!playlist) {\n      return 0;\n    }\n    if (typeof expired !== 'number') {\n      expired = 0;\n    } // if a slice of the total duration is not requested, use\n    // playlist-level duration indicators when they're present\n\n    if (typeof endSequence === 'undefined') {\n      // if present, use the duration specified in the playlist\n      if (playlist.totalDuration) {\n        return playlist.totalDuration;\n      } // duration should be Infinity for live playlists\n\n      if (!playlist.endList) {\n        return window.Infinity;\n      }\n    } // calculate the total duration based on the segment durations\n\n    return intervalDuration(playlist, endSequence, expired);\n  };\n  /**\n    * Calculate the time between two indexes in the current playlist\n    * neight the start- nor the end-index need to be within the current\n    * playlist in which case, the targetDuration of the playlist is used\n    * to approximate the durations of the segments\n    *\n    * @param {Array} options.durationList list to iterate over for durations.\n    * @param {number} options.defaultDuration duration to use for elements before or after the durationList\n    * @param {number} options.startIndex partsAndSegments index to start\n    * @param {number} options.endIndex partsAndSegments index to end.\n    * @return {number} the number of seconds between startIndex and endIndex\n    */\n\n  const sumDurations = function ({\n    defaultDuration,\n    durationList,\n    startIndex,\n    endIndex\n  }) {\n    let durations = 0;\n    if (startIndex > endIndex) {\n      [startIndex, endIndex] = [endIndex, startIndex];\n    }\n    if (startIndex < 0) {\n      for (let i = startIndex; i < Math.min(0, endIndex); i++) {\n        durations += defaultDuration;\n      }\n      startIndex = 0;\n    }\n    for (let i = startIndex; i < endIndex; i++) {\n      durations += durationList[i].duration;\n    }\n    return durations;\n  };\n  /**\n   * Calculates the playlist end time\n   *\n   * @param {Object} playlist a media playlist object\n   * @param {number=} expired the amount of time that has\n   *                  dropped off the front of the playlist in a live scenario\n   * @param {boolean|false} useSafeLiveEnd a boolean value indicating whether or not the\n   *                        playlist end calculation should consider the safe live end\n   *                        (truncate the playlist end by three segments). This is normally\n   *                        used for calculating the end of the playlist's seekable range.\n   *                        This takes into account the value of liveEdgePadding.\n   *                        Setting liveEdgePadding to 0 is equivalent to setting this to false.\n   * @param {number} liveEdgePadding a number indicating how far from the end of the playlist we should be in seconds.\n   *                 If this is provided, it is used in the safe live end calculation.\n   *                 Setting useSafeLiveEnd=false or liveEdgePadding=0 are equivalent.\n   *                 Corresponds to suggestedPresentationDelay in DASH manifests.\n   * @return {number} the end time of playlist\n   * @function playlistEnd\n   */\n\n  const playlistEnd = function (playlist, expired, useSafeLiveEnd, liveEdgePadding) {\n    if (!playlist || !playlist.segments) {\n      return null;\n    }\n    if (playlist.endList) {\n      return duration(playlist);\n    }\n    if (expired === null) {\n      return null;\n    }\n    expired = expired || 0;\n    let lastSegmentEndTime = intervalDuration(playlist, playlist.mediaSequence + playlist.segments.length, expired);\n    if (useSafeLiveEnd) {\n      liveEdgePadding = typeof liveEdgePadding === 'number' ? liveEdgePadding : liveEdgeDelay(null, playlist);\n      lastSegmentEndTime -= liveEdgePadding;\n    } // don't return a time less than zero\n\n    return Math.max(0, lastSegmentEndTime);\n  };\n  /**\n    * Calculates the interval of time that is currently seekable in a\n    * playlist. The returned time ranges are relative to the earliest\n    * moment in the specified playlist that is still available. A full\n    * seekable implementation for live streams would need to offset\n    * these values by the duration of content that has expired from the\n    * stream.\n    *\n    * @param {Object} playlist a media playlist object\n    * dropped off the front of the playlist in a live scenario\n    * @param {number=} expired the amount of time that has\n    * dropped off the front of the playlist in a live scenario\n    * @param {number} liveEdgePadding how far from the end of the playlist we should be in seconds.\n    *        Corresponds to suggestedPresentationDelay in DASH manifests.\n    * @return {TimeRanges} the periods of time that are valid targets\n    * for seeking\n    */\n\n  const seekable = function (playlist, expired, liveEdgePadding) {\n    const useSafeLiveEnd = true;\n    const seekableStart = expired || 0;\n    const seekableEnd = playlistEnd(playlist, expired, useSafeLiveEnd, liveEdgePadding);\n    if (seekableEnd === null) {\n      return createTimeRanges();\n    }\n    return createTimeRanges(seekableStart, seekableEnd);\n  };\n  /**\n   * Determine the index and estimated starting time of the segment that\n   * contains a specified playback position in a media playlist.\n   *\n   * @param {Object} options.playlist the media playlist to query\n   * @param {number} options.currentTime The number of seconds since the earliest\n   * possible position to determine the containing segment for\n   * @param {number} options.startTime the time when the segment/part starts\n   * @param {number} options.startingSegmentIndex the segment index to start looking at.\n   * @param {number?} [options.startingPartIndex] the part index to look at within the segment.\n   *\n   * @return {Object} an object with partIndex, segmentIndex, and startTime.\n   */\n\n  const getMediaInfoForTime = function ({\n    playlist,\n    currentTime,\n    startingSegmentIndex,\n    startingPartIndex,\n    startTime,\n    exactManifestTimings\n  }) {\n    let time = currentTime - startTime;\n    const partsAndSegments = getPartsAndSegments(playlist);\n    let startIndex = 0;\n    for (let i = 0; i < partsAndSegments.length; i++) {\n      const partAndSegment = partsAndSegments[i];\n      if (startingSegmentIndex !== partAndSegment.segmentIndex) {\n        continue;\n      } // skip this if part index does not match.\n\n      if (typeof startingPartIndex === 'number' && typeof partAndSegment.partIndex === 'number' && startingPartIndex !== partAndSegment.partIndex) {\n        continue;\n      }\n      startIndex = i;\n      break;\n    }\n    if (time < 0) {\n      // Walk backward from startIndex in the playlist, adding durations\n      // until we find a segment that contains `time` and return it\n      if (startIndex > 0) {\n        for (let i = startIndex - 1; i >= 0; i--) {\n          const partAndSegment = partsAndSegments[i];\n          time += partAndSegment.duration;\n          if (exactManifestTimings) {\n            if (time < 0) {\n              continue;\n            }\n          } else if (time + TIME_FUDGE_FACTOR <= 0) {\n            continue;\n          }\n          return {\n            partIndex: partAndSegment.partIndex,\n            segmentIndex: partAndSegment.segmentIndex,\n            startTime: startTime - sumDurations({\n              defaultDuration: playlist.targetDuration,\n              durationList: partsAndSegments,\n              startIndex,\n              endIndex: i\n            })\n          };\n        }\n      } // We were unable to find a good segment within the playlist\n      // so select the first segment\n\n      return {\n        partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n        segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n        startTime: currentTime\n      };\n    } // When startIndex is negative, we first walk forward to first segment\n    // adding target durations. If we \"run out of time\" before getting to\n    // the first segment, return the first segment\n\n    if (startIndex < 0) {\n      for (let i = startIndex; i < 0; i++) {\n        time -= playlist.targetDuration;\n        if (time < 0) {\n          return {\n            partIndex: partsAndSegments[0] && partsAndSegments[0].partIndex || null,\n            segmentIndex: partsAndSegments[0] && partsAndSegments[0].segmentIndex || 0,\n            startTime: currentTime\n          };\n        }\n      }\n      startIndex = 0;\n    } // Walk forward from startIndex in the playlist, subtracting durations\n    // until we find a segment that contains `time` and return it\n\n    for (let i = startIndex; i < partsAndSegments.length; i++) {\n      const partAndSegment = partsAndSegments[i];\n      time -= partAndSegment.duration;\n      if (exactManifestTimings) {\n        if (time > 0) {\n          continue;\n        }\n      } else if (time - TIME_FUDGE_FACTOR >= 0) {\n        continue;\n      }\n      return {\n        partIndex: partAndSegment.partIndex,\n        segmentIndex: partAndSegment.segmentIndex,\n        startTime: startTime + sumDurations({\n          defaultDuration: playlist.targetDuration,\n          durationList: partsAndSegments,\n          startIndex,\n          endIndex: i\n        })\n      };\n    } // We are out of possible candidates so load the last one...\n\n    return {\n      segmentIndex: partsAndSegments[partsAndSegments.length - 1].segmentIndex,\n      partIndex: partsAndSegments[partsAndSegments.length - 1].partIndex,\n      startTime: currentTime\n    };\n  };\n  /**\n   * Check whether the playlist is excluded or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is excluded or not\n   * @function isExcluded\n   */\n\n  const isExcluded = function (playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil > Date.now();\n  };\n  /**\n   * Check whether the playlist is compatible with current playback configuration or has\n   * been excluded permanently for being incompatible.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is incompatible or not\n   * @function isIncompatible\n   */\n\n  const isIncompatible = function (playlist) {\n    return playlist.excludeUntil && playlist.excludeUntil === Infinity;\n  };\n  /**\n   * Check whether the playlist is enabled or not.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is enabled or not\n   * @function isEnabled\n   */\n\n  const isEnabled = function (playlist) {\n    const excluded = isExcluded(playlist);\n    return !playlist.disabled && !excluded;\n  };\n  /**\n   * Check whether the playlist has been manually disabled through the representations api.\n   *\n   * @param {Object} playlist the media playlist object\n   * @return {boolean} whether the playlist is disabled manually or not\n   * @function isDisabled\n   */\n\n  const isDisabled = function (playlist) {\n    return playlist.disabled;\n  };\n  /**\n   * Returns whether the current playlist is an AES encrypted HLS stream\n   *\n   * @return {boolean} true if it's an AES encrypted HLS stream\n   */\n\n  const isAes = function (media) {\n    for (let i = 0; i < media.segments.length; i++) {\n      if (media.segments[i].key) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Checks if the playlist has a value for the specified attribute\n   *\n   * @param {string} attr\n   *        Attribute to check for\n   * @param {Object} playlist\n   *        The media playlist object\n   * @return {boolean}\n   *         Whether the playlist contains a value for the attribute or not\n   * @function hasAttribute\n   */\n\n  const hasAttribute = function (attr, playlist) {\n    return playlist.attributes && playlist.attributes[attr];\n  };\n  /**\n   * Estimates the time required to complete a segment download from the specified playlist\n   *\n   * @param {number} segmentDuration\n   *        Duration of requested segment\n   * @param {number} bandwidth\n   *        Current measured bandwidth of the player\n   * @param {Object} playlist\n   *        The media playlist object\n   * @param {number=} bytesReceived\n   *        Number of bytes already received for the request. Defaults to 0\n   * @return {number|NaN}\n   *         The estimated time to request the segment. NaN if bandwidth information for\n   *         the given playlist is unavailable\n   * @function estimateSegmentRequestTime\n   */\n\n  const estimateSegmentRequestTime = function (segmentDuration, bandwidth, playlist, bytesReceived = 0) {\n    if (!hasAttribute('BANDWIDTH', playlist)) {\n      return NaN;\n    }\n    const size = segmentDuration * playlist.attributes.BANDWIDTH;\n    return (size - bytesReceived * 8) / bandwidth;\n  };\n  /*\n   * Returns whether the current playlist is the lowest rendition\n   *\n   * @return {Boolean} true if on lowest rendition\n   */\n\n  const isLowestEnabledRendition = (main, media) => {\n    if (main.playlists.length === 1) {\n      return true;\n    }\n    const currentBandwidth = media.attributes.BANDWIDTH || Number.MAX_VALUE;\n    return main.playlists.filter(playlist => {\n      if (!isEnabled(playlist)) {\n        return false;\n      }\n      return (playlist.attributes.BANDWIDTH || 0) < currentBandwidth;\n    }).length === 0;\n  };\n  const playlistMatch = (a, b) => {\n    // both playlits are null\n    // or only one playlist is non-null\n    // no match\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // playlist objects are the same, match\n\n    if (a === b) {\n      return true;\n    } // first try to use id as it should be the most\n    // accurate\n\n    if (a.id && b.id && a.id === b.id) {\n      return true;\n    } // next try to use reslovedUri as it should be the\n    // second most accurate.\n\n    if (a.resolvedUri && b.resolvedUri && a.resolvedUri === b.resolvedUri) {\n      return true;\n    } // finally try to use uri as it should be accurate\n    // but might miss a few cases for relative uris\n\n    if (a.uri && b.uri && a.uri === b.uri) {\n      return true;\n    }\n    return false;\n  };\n  const someAudioVariant = function (main, callback) {\n    const AUDIO = main && main.mediaGroups && main.mediaGroups.AUDIO || {};\n    let found = false;\n    for (const groupName in AUDIO) {\n      for (const label in AUDIO[groupName]) {\n        found = callback(AUDIO[groupName][label]);\n        if (found) {\n          break;\n        }\n      }\n      if (found) {\n        break;\n      }\n    }\n    return !!found;\n  };\n  const isAudioOnly = main => {\n    // we are audio only if we have no main playlists but do\n    // have media group playlists.\n    if (!main || !main.playlists || !main.playlists.length) {\n      // without audio variants or playlists this\n      // is not an audio only main.\n      const found = someAudioVariant(main, variant => variant.playlists && variant.playlists.length || variant.uri);\n      return found;\n    } // if every playlist has only an audio codec it is audio only\n\n    for (let i = 0; i < main.playlists.length; i++) {\n      const playlist = main.playlists[i];\n      const CODECS = playlist.attributes && playlist.attributes.CODECS; // all codecs are audio, this is an audio playlist.\n\n      if (CODECS && CODECS.split(',').every(c => isAudioCodec(c))) {\n        continue;\n      } // playlist is in an audio group it is audio only\n\n      const found = someAudioVariant(main, variant => playlistMatch(playlist, variant));\n      if (found) {\n        continue;\n      } // if we make it here this playlist isn't audio and we\n      // are not audio only\n\n      return false;\n    } // if we make it past every playlist without returning, then\n    // this is an audio only playlist.\n\n    return true;\n  }; // exports\n\n  var Playlist = {\n    liveEdgeDelay,\n    duration,\n    seekable,\n    getMediaInfoForTime,\n    isEnabled,\n    isDisabled,\n    isExcluded,\n    isIncompatible,\n    playlistEnd,\n    isAes,\n    hasAttribute,\n    estimateSegmentRequestTime,\n    isLowestEnabledRendition,\n    isAudioOnly,\n    playlistMatch,\n    segmentDurationWithParts\n  };\n  const {\n    log\n  } = videojs;\n  const createPlaylistID = (index, uri) => {\n    return `${index}-${uri}`;\n  };\n  /**\n   * Parses a given m3u8 playlist\n   *\n   * @param {Function} [onwarn]\n   *        a function to call when the parser triggers a warning event.\n   * @param {Function} [oninfo]\n   *        a function to call when the parser triggers an info event.\n   * @param {string} manifestString\n   *        The downloaded manifest string\n   * @param {Object[]} [customTagParsers]\n   *        An array of custom tag parsers for the m3u8-parser instance\n   * @param {Object[]} [customTagMappers]\n   *        An array of custom tag mappers for the m3u8-parser instance\n   * @param {boolean} [llhls]\n   *        Whether to keep ll-hls features in the manifest after parsing.\n   * @return {Object}\n   *         The manifest object\n   */\n\n  const parseManifest = ({\n    onwarn,\n    oninfo,\n    manifestString,\n    customTagParsers = [],\n    customTagMappers = [],\n    llhls\n  }) => {\n    const parser = new Parser();\n    if (onwarn) {\n      parser.on('warn', onwarn);\n    }\n    if (oninfo) {\n      parser.on('info', oninfo);\n    }\n    customTagParsers.forEach(customParser => parser.addParser(customParser));\n    customTagMappers.forEach(mapper => parser.addTagMapper(mapper));\n    parser.push(manifestString);\n    parser.end();\n    const manifest = parser.manifest; // remove llhls features from the parsed manifest\n    // if we don't want llhls support.\n\n    if (!llhls) {\n      ['preloadSegment', 'skip', 'serverControl', 'renditionReports', 'partInf', 'partTargetDuration'].forEach(function (k) {\n        if (manifest.hasOwnProperty(k)) {\n          delete manifest[k];\n        }\n      });\n      if (manifest.segments) {\n        manifest.segments.forEach(function (segment) {\n          ['parts', 'preloadHints'].forEach(function (k) {\n            if (segment.hasOwnProperty(k)) {\n              delete segment[k];\n            }\n          });\n        });\n      }\n    }\n    if (!manifest.targetDuration) {\n      let targetDuration = 10;\n      if (manifest.segments && manifest.segments.length) {\n        targetDuration = manifest.segments.reduce((acc, s) => Math.max(acc, s.duration), 0);\n      }\n      if (onwarn) {\n        onwarn(`manifest has no targetDuration defaulting to ${targetDuration}`);\n      }\n      manifest.targetDuration = targetDuration;\n    }\n    const parts = getLastParts(manifest);\n    if (parts.length && !manifest.partTargetDuration) {\n      const partTargetDuration = parts.reduce((acc, p) => Math.max(acc, p.duration), 0);\n      if (onwarn) {\n        onwarn(`manifest has no partTargetDuration defaulting to ${partTargetDuration}`);\n        log.error('LL-HLS manifest has parts but lacks required #EXT-X-PART-INF:PART-TARGET value. See https://datatracker.ietf.org/doc/html/draft-pantos-hls-rfc8216bis-09#section-4.4.3.7. Playback is not guaranteed.');\n      }\n      manifest.partTargetDuration = partTargetDuration;\n    }\n    return manifest;\n  };\n  /**\n   * Loops through all supported media groups in main and calls the provided\n   * callback for each group\n   *\n   * @param {Object} main\n   *        The parsed main manifest object\n   * @param {Function} callback\n   *        Callback to call for each media group\n   */\n\n  const forEachMediaGroup = (main, callback) => {\n    if (!main.mediaGroups) {\n      return;\n    }\n    ['AUDIO', 'SUBTITLES'].forEach(mediaType => {\n      if (!main.mediaGroups[mediaType]) {\n        return;\n      }\n      for (const groupKey in main.mediaGroups[mediaType]) {\n        for (const labelKey in main.mediaGroups[mediaType][groupKey]) {\n          const mediaProperties = main.mediaGroups[mediaType][groupKey][labelKey];\n          callback(mediaProperties, mediaType, groupKey, labelKey);\n        }\n      }\n    });\n  };\n  /**\n   * Adds properties and attributes to the playlist to keep consistent functionality for\n   * playlists throughout VHS.\n   *\n   * @param {Object} config\n   *        Arguments object\n   * @param {Object} config.playlist\n   *        The media playlist\n   * @param {string} [config.uri]\n   *        The uri to the media playlist (if media playlist is not from within a main\n   *        playlist)\n   * @param {string} id\n   *        ID to use for the playlist\n   */\n\n  const setupMediaPlaylist = ({\n    playlist,\n    uri,\n    id\n  }) => {\n    playlist.id = id;\n    playlist.playlistErrors_ = 0;\n    if (uri) {\n      // For media playlists, m3u8-parser does not have access to a URI, as HLS media\n      // playlists do not contain their own source URI, but one is needed for consistency in\n      // VHS.\n      playlist.uri = uri;\n    } // For HLS main playlists, even though certain attributes MUST be defined, the\n    // stream may still be played without them.\n    // For HLS media playlists, m3u8-parser does not attach an attributes object to the\n    // manifest.\n    //\n    // To avoid undefined reference errors through the project, and make the code easier\n    // to write/read, add an empty attributes object for these cases.\n\n    playlist.attributes = playlist.attributes || {};\n  };\n  /**\n   * Adds ID, resolvedUri, and attributes properties to each playlist of the main, where\n   * necessary. In addition, creates playlist IDs for each playlist and adds playlist ID to\n   * playlist references to the playlists array.\n   *\n   * @param {Object} main\n   *        The main playlist\n   */\n\n  const setupMediaPlaylists = main => {\n    let i = main.playlists.length;\n    while (i--) {\n      const playlist = main.playlists[i];\n      setupMediaPlaylist({\n        playlist,\n        id: createPlaylistID(i, playlist.uri)\n      });\n      playlist.resolvedUri = resolveUrl(main.uri, playlist.uri);\n      main.playlists[playlist.id] = playlist; // URI reference added for backwards compatibility\n\n      main.playlists[playlist.uri] = playlist; // Although the spec states an #EXT-X-STREAM-INF tag MUST have a BANDWIDTH attribute,\n      // the stream can be played without it. Although an attributes property may have been\n      // added to the playlist to prevent undefined references, issue a warning to fix the\n      // manifest.\n\n      if (!playlist.attributes.BANDWIDTH) {\n        log.warn('Invalid playlist STREAM-INF detected. Missing BANDWIDTH attribute.');\n      }\n    }\n  };\n  /**\n   * Adds resolvedUri properties to each media group.\n   *\n   * @param {Object} main\n   *        The main playlist\n   */\n\n  const resolveMediaGroupUris = main => {\n    forEachMediaGroup(main, properties => {\n      if (properties.uri) {\n        properties.resolvedUri = resolveUrl(main.uri, properties.uri);\n      }\n    });\n  };\n  /**\n   * Creates a main playlist wrapper to insert a sole media playlist into.\n   *\n   * @param {Object} media\n   *        Media playlist\n   * @param {string} uri\n   *        The media URI\n   *\n   * @return {Object}\n   *         main playlist\n   */\n\n  const mainForMedia = (media, uri) => {\n    const id = createPlaylistID(0, uri);\n    const main = {\n      mediaGroups: {\n        'AUDIO': {},\n        'VIDEO': {},\n        'CLOSED-CAPTIONS': {},\n        'SUBTITLES': {}\n      },\n      uri: window.location.href,\n      resolvedUri: window.location.href,\n      playlists: [{\n        uri,\n        id,\n        resolvedUri: uri,\n        // m3u8-parser does not attach an attributes property to media playlists so make\n        // sure that the property is attached to avoid undefined reference errors\n        attributes: {}\n      }]\n    }; // set up ID reference\n\n    main.playlists[id] = main.playlists[0]; // URI reference added for backwards compatibility\n\n    main.playlists[uri] = main.playlists[0];\n    return main;\n  };\n  /**\n   * Does an in-place update of the main manifest to add updated playlist URI references\n   * as well as other properties needed by VHS that aren't included by the parser.\n   *\n   * @param {Object} main\n   *        main manifest object\n   * @param {string} uri\n   *        The source URI\n   */\n\n  const addPropertiesToMain = (main, uri) => {\n    main.uri = uri;\n    for (let i = 0; i < main.playlists.length; i++) {\n      if (!main.playlists[i].uri) {\n        // Set up phony URIs for the playlists since playlists are referenced by their URIs\n        // throughout VHS, but some formats (e.g., DASH) don't have external URIs\n        // TODO: consider adding dummy URIs in mpd-parser\n        const phonyUri = `placeholder-uri-${i}`;\n        main.playlists[i].uri = phonyUri;\n      }\n    }\n    const audioOnlyMain = isAudioOnly(main);\n    forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n      const groupId = `placeholder-uri-${mediaType}-${groupKey}-${labelKey}`; // add a playlist array under properties\n\n      if (!properties.playlists || !properties.playlists.length) {\n        // If the manifest is audio only and this media group does not have a uri, check\n        // if the media group is located in the main list of playlists. If it is, don't add\n        // placeholder properties as it shouldn't be considered an alternate audio track.\n        if (audioOnlyMain && mediaType === 'AUDIO' && !properties.uri) {\n          for (let i = 0; i < main.playlists.length; i++) {\n            const p = main.playlists[i];\n            if (p.attributes && p.attributes.AUDIO && p.attributes.AUDIO === groupKey) {\n              return;\n            }\n          }\n        }\n        properties.playlists = [_extends$1({}, properties)];\n      }\n      properties.playlists.forEach(function (p, i) {\n        const id = createPlaylistID(i, groupId);\n        if (p.uri) {\n          p.resolvedUri = p.resolvedUri || resolveUrl(main.uri, p.uri);\n        } else {\n          // DEPRECATED, this has been added to prevent a breaking change.\n          // previously we only ever had a single media group playlist, so\n          // we mark the first playlist uri without prepending the index as we used to\n          // ideally we would do all of the playlists the same way.\n          p.uri = i === 0 ? groupId : id; // don't resolve a placeholder uri to an absolute url, just use\n          // the placeholder again\n\n          p.resolvedUri = p.uri;\n        }\n        p.id = p.id || id; // add an empty attributes object, all playlists are\n        // expected to have this.\n\n        p.attributes = p.attributes || {}; // setup ID and URI references (URI for backwards compatibility)\n\n        main.playlists[p.id] = p;\n        main.playlists[p.uri] = p;\n      });\n    });\n    setupMediaPlaylists(main);\n    resolveMediaGroupUris(main);\n  };\n\n  /**\n   * @file playlist-loader.js\n   *\n   * A state machine that manages the loading, caching, and updating of\n   * M3U8 playlists.\n   *\n   */\n  const {\n    EventTarget: EventTarget$1\n  } = videojs;\n  const addLLHLSQueryDirectives = (uri, media) => {\n    if (media.endList || !media.serverControl) {\n      return uri;\n    }\n    const parameters = {};\n    if (media.serverControl.canBlockReload) {\n      const {\n        preloadSegment\n      } = media; // next msn is a zero based value, length is not.\n\n      let nextMSN = media.mediaSequence + media.segments.length; // If preload segment has parts then it is likely\n      // that we are going to request a part of that preload segment.\n      // the logic below is used to determine that.\n\n      if (preloadSegment) {\n        const parts = preloadSegment.parts || []; // _HLS_part is a zero based index\n\n        const nextPart = getKnownPartCount(media) - 1; // if nextPart is > -1 and not equal to just the\n        // length of parts, then we know we had part preload hints\n        // and we need to add the _HLS_part= query\n\n        if (nextPart > -1 && nextPart !== parts.length - 1) {\n          // add existing parts to our preload hints\n          // eslint-disable-next-line\n          parameters._HLS_part = nextPart;\n        } // this if statement makes sure that we request the msn\n        // of the preload segment if:\n        // 1. the preload segment had parts (and was not yet a full segment)\n        //    but was added to our segments array\n        // 2. the preload segment had preload hints for parts that are not in\n        //    the manifest yet.\n        // in all other cases we want the segment after the preload segment\n        // which will be given by using media.segments.length because it is 1 based\n        // rather than 0 based.\n\n        if (nextPart > -1 || parts.length) {\n          nextMSN--;\n        }\n      } // add _HLS_msn= in front of any _HLS_part query\n      // eslint-disable-next-line\n\n      parameters._HLS_msn = nextMSN;\n    }\n    if (media.serverControl && media.serverControl.canSkipUntil) {\n      // add _HLS_skip= infront of all other queries.\n      // eslint-disable-next-line\n      parameters._HLS_skip = media.serverControl.canSkipDateranges ? 'v2' : 'YES';\n    }\n    if (Object.keys(parameters).length) {\n      const parsedUri = new window.URL(uri);\n      ['_HLS_skip', '_HLS_msn', '_HLS_part'].forEach(function (name) {\n        if (!parameters.hasOwnProperty(name)) {\n          return;\n        }\n        parsedUri.searchParams.set(name, parameters[name]);\n      });\n      uri = parsedUri.toString();\n    }\n    return uri;\n  };\n  /**\n   * Returns a new segment object with properties and\n   * the parts array merged.\n   *\n   * @param {Object} a the old segment\n   * @param {Object} b the new segment\n   *\n   * @return {Object} the merged segment\n   */\n\n  const updateSegment = (a, b) => {\n    if (!a) {\n      return b;\n    }\n    const result = merge(a, b); // if only the old segment has preload hints\n    // and the new one does not, remove preload hints.\n\n    if (a.preloadHints && !b.preloadHints) {\n      delete result.preloadHints;\n    } // if only the old segment has parts\n    // then the parts are no longer valid\n\n    if (a.parts && !b.parts) {\n      delete result.parts; // if both segments have parts\n      // copy part propeties from the old segment\n      // to the new one.\n    } else if (a.parts && b.parts) {\n      for (let i = 0; i < b.parts.length; i++) {\n        if (a.parts && a.parts[i]) {\n          result.parts[i] = merge(a.parts[i], b.parts[i]);\n        }\n      }\n    } // set skipped to false for segments that have\n    // have had information merged from the old segment.\n\n    if (!a.skipped && b.skipped) {\n      result.skipped = false;\n    } // set preload to false for segments that have\n    // had information added in the new segment.\n\n    if (a.preload && !b.preload) {\n      result.preload = false;\n    }\n    return result;\n  };\n  /**\n   * Returns a new array of segments that is the result of merging\n   * properties from an older list of segments onto an updated\n   * list. No properties on the updated playlist will be ovewritten.\n   *\n   * @param {Array} original the outdated list of segments\n   * @param {Array} update the updated list of segments\n   * @param {number=} offset the index of the first update\n   * segment in the original segment list. For non-live playlists,\n   * this should always be zero and does not need to be\n   * specified. For live playlists, it should be the difference\n   * between the media sequence numbers in the original and updated\n   * playlists.\n   * @return {Array} a list of merged segment objects\n   */\n\n  const updateSegments = (original, update, offset) => {\n    const oldSegments = original.slice();\n    const newSegments = update.slice();\n    offset = offset || 0;\n    const result = [];\n    let currentMap;\n    for (let newIndex = 0; newIndex < newSegments.length; newIndex++) {\n      const oldSegment = oldSegments[newIndex + offset];\n      const newSegment = newSegments[newIndex];\n      if (oldSegment) {\n        currentMap = oldSegment.map || currentMap;\n        result.push(updateSegment(oldSegment, newSegment));\n      } else {\n        // carry over map to new segment if it is missing\n        if (currentMap && !newSegment.map) {\n          newSegment.map = currentMap;\n        }\n        result.push(newSegment);\n      }\n    }\n    return result;\n  };\n  const resolveSegmentUris = (segment, baseUri) => {\n    // preloadSegment will not have a uri at all\n    // as the segment isn't actually in the manifest yet, only parts\n    if (!segment.resolvedUri && segment.uri) {\n      segment.resolvedUri = resolveUrl(baseUri, segment.uri);\n    }\n    if (segment.key && !segment.key.resolvedUri) {\n      segment.key.resolvedUri = resolveUrl(baseUri, segment.key.uri);\n    }\n    if (segment.map && !segment.map.resolvedUri) {\n      segment.map.resolvedUri = resolveUrl(baseUri, segment.map.uri);\n    }\n    if (segment.map && segment.map.key && !segment.map.key.resolvedUri) {\n      segment.map.key.resolvedUri = resolveUrl(baseUri, segment.map.key.uri);\n    }\n    if (segment.parts && segment.parts.length) {\n      segment.parts.forEach(p => {\n        if (p.resolvedUri) {\n          return;\n        }\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n    if (segment.preloadHints && segment.preloadHints.length) {\n      segment.preloadHints.forEach(p => {\n        if (p.resolvedUri) {\n          return;\n        }\n        p.resolvedUri = resolveUrl(baseUri, p.uri);\n      });\n    }\n  };\n  const getAllSegments = function (media) {\n    const segments = media.segments || [];\n    const preloadSegment = media.preloadSegment; // a preloadSegment with only preloadHints is not currently\n    // a usable segment, only include a preloadSegment that has\n    // parts.\n\n    if (preloadSegment && preloadSegment.parts && preloadSegment.parts.length) {\n      // if preloadHints has a MAP that means that the\n      // init segment is going to change. We cannot use any of the parts\n      // from this preload segment.\n      if (preloadSegment.preloadHints) {\n        for (let i = 0; i < preloadSegment.preloadHints.length; i++) {\n          if (preloadSegment.preloadHints[i].type === 'MAP') {\n            return segments;\n          }\n        }\n      } // set the duration for our preload segment to target duration.\n\n      preloadSegment.duration = media.targetDuration;\n      preloadSegment.preload = true;\n      segments.push(preloadSegment);\n    }\n    return segments;\n  }; // consider the playlist unchanged if the playlist object is the same or\n  // the number of segments is equal, the media sequence number is unchanged,\n  // and this playlist hasn't become the end of the playlist\n\n  const isPlaylistUnchanged = (a, b) => a === b || a.segments && b.segments && a.segments.length === b.segments.length && a.endList === b.endList && a.mediaSequence === b.mediaSequence && a.preloadSegment === b.preloadSegment;\n  /**\n    * Returns a new main playlist that is the result of merging an\n    * updated media playlist into the original version. If the\n    * updated media playlist does not match any of the playlist\n    * entries in the original main playlist, null is returned.\n    *\n    * @param {Object} main a parsed main M3U8 object\n    * @param {Object} media a parsed media M3U8 object\n    * @return {Object} a new object that represents the original\n    * main playlist with the updated media playlist merged in, or\n    * null if the merge produced no change.\n    */\n\n  const updateMain$1 = (main, newMedia, unchangedCheck = isPlaylistUnchanged) => {\n    const result = merge(main, {});\n    const oldMedia = result.playlists[newMedia.id];\n    if (!oldMedia) {\n      return null;\n    }\n    if (unchangedCheck(oldMedia, newMedia)) {\n      return null;\n    }\n    newMedia.segments = getAllSegments(newMedia);\n    const mergedPlaylist = merge(oldMedia, newMedia); // always use the new media's preload segment\n\n    if (mergedPlaylist.preloadSegment && !newMedia.preloadSegment) {\n      delete mergedPlaylist.preloadSegment;\n    } // if the update could overlap existing segment information, merge the two segment lists\n\n    if (oldMedia.segments) {\n      if (newMedia.skip) {\n        newMedia.segments = newMedia.segments || []; // add back in objects for skipped segments, so that we merge\n        // old properties into the new segments\n\n        for (let i = 0; i < newMedia.skip.skippedSegments; i++) {\n          newMedia.segments.unshift({\n            skipped: true\n          });\n        }\n      }\n      mergedPlaylist.segments = updateSegments(oldMedia.segments, newMedia.segments, newMedia.mediaSequence - oldMedia.mediaSequence);\n    } // resolve any segment URIs to prevent us from having to do it later\n\n    mergedPlaylist.segments.forEach(segment => {\n      resolveSegmentUris(segment, mergedPlaylist.resolvedUri);\n    }); // TODO Right now in the playlists array there are two references to each playlist, one\n    // that is referenced by index, and one by URI. The index reference may no longer be\n    // necessary.\n\n    for (let i = 0; i < result.playlists.length; i++) {\n      if (result.playlists[i].id === newMedia.id) {\n        result.playlists[i] = mergedPlaylist;\n      }\n    }\n    result.playlists[newMedia.id] = mergedPlaylist; // URI reference added for backwards compatibility\n\n    result.playlists[newMedia.uri] = mergedPlaylist; // update media group playlist references.\n\n    forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n      if (!properties.playlists) {\n        return;\n      }\n      for (let i = 0; i < properties.playlists.length; i++) {\n        if (newMedia.id === properties.playlists[i].id) {\n          properties.playlists[i] = mergedPlaylist;\n        }\n      }\n    });\n    return result;\n  };\n  /**\n   * Calculates the time to wait before refreshing a live playlist\n   *\n   * @param {Object} media\n   *        The current media\n   * @param {boolean} update\n   *        True if there were any updates from the last refresh, false otherwise\n   * @return {number}\n   *         The time in ms to wait before refreshing the live playlist\n   */\n\n  const refreshDelay = (media, update) => {\n    const segments = media.segments || [];\n    const lastSegment = segments[segments.length - 1];\n    const lastPart = lastSegment && lastSegment.parts && lastSegment.parts[lastSegment.parts.length - 1];\n    const lastDuration = lastPart && lastPart.duration || lastSegment && lastSegment.duration;\n    if (update && lastDuration) {\n      return lastDuration * 1000;\n    } // if the playlist is unchanged since the last reload or last segment duration\n    // cannot be determined, try again after half the target duration\n\n    return (media.partTargetDuration || media.targetDuration || 10) * 500;\n  };\n  /**\n   * Load a playlist from a remote location\n   *\n   * @class PlaylistLoader\n   * @extends Stream\n   * @param {string|Object} src url or object of manifest\n   * @param {boolean} withCredentials the withCredentials xhr option\n   * @class\n   */\n\n  class PlaylistLoader extends EventTarget$1 {\n    constructor(src, vhs, options = {}) {\n      super();\n      if (!src) {\n        throw new Error('A non-empty playlist URL or object is required');\n      }\n      this.logger_ = logger('PlaylistLoader');\n      const {\n        withCredentials = false\n      } = options;\n      this.src = src;\n      this.vhs_ = vhs;\n      this.withCredentials = withCredentials;\n      const vhsOptions = vhs.options_;\n      this.customTagParsers = vhsOptions && vhsOptions.customTagParsers || [];\n      this.customTagMappers = vhsOptions && vhsOptions.customTagMappers || [];\n      this.llhls = vhsOptions && vhsOptions.llhls; // initialize the loader state\n\n      this.state = 'HAVE_NOTHING'; // live playlist staleness timeout\n\n      this.handleMediaupdatetimeout_ = this.handleMediaupdatetimeout_.bind(this);\n      this.on('mediaupdatetimeout', this.handleMediaupdatetimeout_);\n    }\n    handleMediaupdatetimeout_() {\n      if (this.state !== 'HAVE_METADATA') {\n        // only refresh the media playlist if no other activity is going on\n        return;\n      }\n      const media = this.media();\n      let uri = resolveUrl(this.main.uri, media.uri);\n      if (this.llhls) {\n        uri = addLLHLSQueryDirectives(uri, media);\n      }\n      this.state = 'HAVE_CURRENT_METADATA';\n      this.request = this.vhs_.xhr({\n        uri,\n        withCredentials: this.withCredentials\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        }\n        if (error) {\n          return this.playlistRequestError(this.request, this.media(), 'HAVE_METADATA');\n        }\n        this.haveMetadata({\n          playlistString: this.request.responseText,\n          url: this.media().uri,\n          id: this.media().id\n        });\n      });\n    }\n    playlistRequestError(xhr, playlist, startingState) {\n      const {\n        uri,\n        id\n      } = playlist; // any in-flight request is now finished\n\n      this.request = null;\n      if (startingState) {\n        this.state = startingState;\n      }\n      this.error = {\n        playlist: this.main.playlists[id],\n        status: xhr.status,\n        message: `HLS playlist request error at URL: ${uri}.`,\n        responseText: xhr.responseText,\n        code: xhr.status >= 500 ? 4 : 2\n      };\n      this.trigger('error');\n    }\n    parseManifest_({\n      url,\n      manifestString\n    }) {\n      return parseManifest({\n        onwarn: ({\n          message\n        }) => this.logger_(`m3u8-parser warn for ${url}: ${message}`),\n        oninfo: ({\n          message\n        }) => this.logger_(`m3u8-parser info for ${url}: ${message}`),\n        manifestString,\n        customTagParsers: this.customTagParsers,\n        customTagMappers: this.customTagMappers,\n        llhls: this.llhls\n      });\n    }\n    /**\n     * Update the playlist loader's state in response to a new or updated playlist.\n     *\n     * @param {string} [playlistString]\n     *        Playlist string (if playlistObject is not provided)\n     * @param {Object} [playlistObject]\n     *        Playlist object (if playlistString is not provided)\n     * @param {string} url\n     *        URL of playlist\n     * @param {string} id\n     *        ID to use for playlist\n     */\n\n    haveMetadata({\n      playlistString,\n      playlistObject,\n      url,\n      id\n    }) {\n      // any in-flight request is now finished\n      this.request = null;\n      this.state = 'HAVE_METADATA';\n      const playlist = playlistObject || this.parseManifest_({\n        url,\n        manifestString: playlistString\n      });\n      playlist.lastRequest = Date.now();\n      setupMediaPlaylist({\n        playlist,\n        uri: url,\n        id\n      }); // merge this playlist into the main manifest\n\n      const update = updateMain$1(this.main, playlist);\n      this.targetDuration = playlist.partTargetDuration || playlist.targetDuration;\n      this.pendingMedia_ = null;\n      if (update) {\n        this.main = update;\n        this.media_ = this.main.playlists[id];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n      this.updateMediaUpdateTimeout_(refreshDelay(this.media(), !!update));\n      this.trigger('loadedplaylist');\n    }\n    /**\n      * Abort any outstanding work and clean up.\n      */\n\n    dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      window.clearTimeout(this.finalRenditionTimeout);\n      this.off();\n    }\n    stopRequest() {\n      if (this.request) {\n        const oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    /**\n      * When called without any arguments, returns the currently\n      * active media playlist. When called with a single argument,\n      * triggers the playlist loader to asynchronously switch to the\n      * specified media playlist. Calling this method while the\n      * loader is in the HAVE_NOTHING causes an error to be emitted\n      * but otherwise has no effect.\n      *\n      * @param {Object=} playlist the parsed media playlist\n      * object to switch to\n      * @param {boolean=} shouldDelay whether we should delay the request by half target duration\n      *\n      * @return {Playlist} the current loaded media\n      */\n\n    media(playlist, shouldDelay) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      } // find the playlist object if the target playlist has been\n      // specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.main.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.main.playlists[playlist];\n      }\n      window.clearTimeout(this.finalRenditionTimeout);\n      if (shouldDelay) {\n        const delay = (playlist.partTargetDuration || playlist.targetDuration) / 2 * 1000 || 5 * 1000;\n        this.finalRenditionTimeout = window.setTimeout(this.media.bind(this, playlist, false), delay);\n        return;\n      }\n      const startingState = this.state;\n      const mediaChange = !this.media_ || playlist.id !== this.media_.id;\n      const mainPlaylistRef = this.main.playlists[playlist.id]; // switch to fully loaded playlists immediately\n\n      if (mainPlaylistRef && mainPlaylistRef.endList ||\n      // handle the case of a playlist object (e.g., if using vhs-json with a resolved\n      // media playlist or, for the case of demuxed audio, a resolved audio media group)\n      playlist.endList && playlist.segments.length) {\n        // abort outstanding playlist requests\n        if (this.request) {\n          this.request.onreadystatechange = null;\n          this.request.abort();\n          this.request = null;\n        }\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          if (startingState === 'HAVE_MAIN_MANIFEST') {\n            // The initial playlist was a main manifest, and the first media selected was\n            // also provided (in the form of a resolved playlist object) as part of the\n            // source object (rather than just a URL). Therefore, since the media playlist\n            // doesn't need to be requested, loadedmetadata won't trigger as part of the\n            // normal flow, and needs an explicit trigger here.\n            this.trigger('loadedmetadata');\n          } else {\n            this.trigger('mediachange');\n          }\n        }\n        return;\n      } // We update/set the timeout here so that live playlists\n      // that are not a media change will \"start\" the loader as expected.\n      // We expect that this function will start the media update timeout\n      // cycle again. This also prevents a playlist switch failure from\n      // causing us to stall during live.\n\n      this.updateMediaUpdateTimeout_(refreshDelay(playlist, true)); // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      }\n      this.state = 'SWITCHING_MEDIA'; // there is already an outstanding playlist request\n\n      if (this.request) {\n        if (playlist.resolvedUri === this.request.url) {\n          // requesting to switch to the same playlist multiple times\n          // has no effect after the first\n          return;\n        }\n        this.request.onreadystatechange = null;\n        this.request.abort();\n        this.request = null;\n      } // request the new playlist\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n      this.pendingMedia_ = playlist;\n      this.request = this.vhs_.xhr({\n        uri: playlist.resolvedUri,\n        withCredentials: this.withCredentials\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        }\n        playlist.lastRequest = Date.now();\n        playlist.resolvedUri = resolveManifestRedirect(playlist.resolvedUri, req);\n        if (error) {\n          return this.playlistRequestError(this.request, playlist, startingState);\n        }\n        this.haveMetadata({\n          playlistString: req.responseText,\n          url: playlist.uri,\n          id: playlist.id\n        }); // fire loadedmetadata the first time a media playlist is loaded\n\n        if (startingState === 'HAVE_MAIN_MANIFEST') {\n          this.trigger('loadedmetadata');\n        } else {\n          this.trigger('mediachange');\n        }\n      });\n    }\n    /**\n     * pause loading of the playlist\n     */\n\n    pause() {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n      this.stopRequest();\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      } // Need to restore state now that no activity is happening\n\n      if (this.state === 'SWITCHING_MEDIA') {\n        // if the loader was in the process of switching media, it should either return to\n        // HAVE_MAIN_MANIFEST or HAVE_METADATA depending on if the loader has loaded a media\n        // playlist yet. This is determined by the existence of loader.media_\n        if (this.media_) {\n          this.state = 'HAVE_METADATA';\n        } else {\n          this.state = 'HAVE_MAIN_MANIFEST';\n        }\n      } else if (this.state === 'HAVE_CURRENT_METADATA') {\n        this.state = 'HAVE_METADATA';\n      }\n    }\n    /**\n     * start loading of the playlist\n     */\n\n    load(shouldDelay) {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      }\n      const media = this.media();\n      if (shouldDelay) {\n        const delay = media ? (media.partTargetDuration || media.targetDuration) / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(() => {\n          this.mediaUpdateTimeout = null;\n          this.load();\n        }, delay);\n        return;\n      }\n      if (!this.started) {\n        this.start();\n        return;\n      }\n      if (media && !media.endList) {\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    updateMediaUpdateTimeout_(delay) {\n      if (this.mediaUpdateTimeout) {\n        window.clearTimeout(this.mediaUpdateTimeout);\n        this.mediaUpdateTimeout = null;\n      } // we only have use mediaupdatetimeout for live playlists.\n\n      if (!this.media() || this.media().endList) {\n        return;\n      }\n      this.mediaUpdateTimeout = window.setTimeout(() => {\n        this.mediaUpdateTimeout = null;\n        this.trigger('mediaupdatetimeout');\n        this.updateMediaUpdateTimeout_(delay);\n      }, delay);\n    }\n    /**\n     * start loading of the playlist\n     */\n\n    start() {\n      this.started = true;\n      if (typeof this.src === 'object') {\n        // in the case of an entirely constructed manifest object (meaning there's no actual\n        // manifest on a server), default the uri to the page's href\n        if (!this.src.uri) {\n          this.src.uri = window.location.href;\n        } // resolvedUri is added on internally after the initial request. Since there's no\n        // request for pre-resolved manifests, add on resolvedUri here.\n\n        this.src.resolvedUri = this.src.uri; // Since a manifest object was passed in as the source (instead of a URL), the first\n        // request can be skipped (since the top level of the manifest, at a minimum, is\n        // already available as a parsed manifest object). However, if the manifest object\n        // represents a main playlist, some media playlists may need to be resolved before\n        // the starting segment list is available. Therefore, go directly to setup of the\n        // initial playlist, and let the normal flow continue from there.\n        //\n        // Note that the call to setup is asynchronous, as other sections of VHS may assume\n        // that the first request is asynchronous.\n\n        setTimeout(() => {\n          this.setupInitialPlaylist(this.src);\n        }, 0);\n        return;\n      } // request the specified URL\n\n      this.request = this.vhs_.xhr({\n        uri: this.src,\n        withCredentials: this.withCredentials\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        } // clear the loader's request reference\n\n        this.request = null;\n        if (error) {\n          this.error = {\n            status: req.status,\n            message: `HLS playlist request error at URL: ${this.src}.`,\n            responseText: req.responseText,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          };\n          if (this.state === 'HAVE_NOTHING') {\n            this.started = false;\n          }\n          return this.trigger('error');\n        }\n        this.src = resolveManifestRedirect(this.src, req);\n        const manifest = this.parseManifest_({\n          manifestString: req.responseText,\n          url: this.src\n        });\n        this.setupInitialPlaylist(manifest);\n      });\n    }\n    srcUri() {\n      return typeof this.src === 'string' ? this.src : this.src.uri;\n    }\n    /**\n     * Given a manifest object that's either a main or media playlist, trigger the proper\n     * events and set the state of the playlist loader.\n     *\n     * If the manifest object represents a main playlist, `loadedplaylist` will be\n     * triggered to allow listeners to select a playlist. If none is selected, the loader\n     * will default to the first one in the playlists array.\n     *\n     * If the manifest object represents a media playlist, `loadedplaylist` will be\n     * triggered followed by `loadedmetadata`, as the only available playlist is loaded.\n     *\n     * In the case of a media playlist, a main playlist object wrapper with one playlist\n     * will be created so that all logic can handle playlists in the same fashion (as an\n     * assumed manifest object schema).\n     *\n     * @param {Object} manifest\n     *        The parsed manifest object\n     */\n\n    setupInitialPlaylist(manifest) {\n      this.state = 'HAVE_MAIN_MANIFEST';\n      if (manifest.playlists) {\n        this.main = manifest;\n        addPropertiesToMain(this.main, this.srcUri()); // If the initial main playlist has playlists wtih segments already resolved,\n        // then resolve URIs in advance, as they are usually done after a playlist request,\n        // which may not happen if the playlist is resolved.\n\n        manifest.playlists.forEach(playlist => {\n          playlist.segments = getAllSegments(playlist);\n          playlist.segments.forEach(segment => {\n            resolveSegmentUris(segment, playlist.resolvedUri);\n          });\n        });\n        this.trigger('loadedplaylist');\n        if (!this.request) {\n          // no media playlist was specifically selected so start\n          // from the first listed one\n          this.media(this.main.playlists[0]);\n        }\n        return;\n      } // In order to support media playlists passed in as vhs-json, the case where the uri\n      // is not provided as part of the manifest should be considered, and an appropriate\n      // default used.\n\n      const uri = this.srcUri() || window.location.href;\n      this.main = mainForMedia(manifest, uri);\n      this.haveMetadata({\n        playlistObject: manifest,\n        url: uri,\n        id: this.main.playlists[0].id\n      });\n      this.trigger('loadedmetadata');\n    }\n  }\n\n  /**\n   * @file xhr.js\n   */\n  const {\n    xhr: videojsXHR\n  } = videojs;\n  const callbackWrapper = function (request, error, response, callback) {\n    const reqResponse = request.responseType === 'arraybuffer' ? request.response : request.responseText;\n    if (!error && reqResponse) {\n      request.responseTime = Date.now();\n      request.roundTripTime = request.responseTime - request.requestTime;\n      request.bytesReceived = reqResponse.byteLength || reqResponse.length;\n      if (!request.bandwidth) {\n        request.bandwidth = Math.floor(request.bytesReceived / request.roundTripTime * 8 * 1000);\n      }\n    }\n    if (response.headers) {\n      request.responseHeaders = response.headers;\n    } // videojs.xhr now uses a specific code on the error\n    // object to signal that a request has timed out instead\n    // of setting a boolean on the request object\n\n    if (error && error.code === 'ETIMEDOUT') {\n      request.timedout = true;\n    } // videojs.xhr no longer considers status codes outside of 200 and 0\n    // (for file uris) to be errors, but the old XHR did, so emulate that\n    // behavior. Status 206 may be used in response to byterange requests.\n\n    if (!error && !request.aborted && response.statusCode !== 200 && response.statusCode !== 206 && response.statusCode !== 0) {\n      error = new Error('XHR Failed with a response of: ' + (request && (reqResponse || request.responseText)));\n    }\n    callback(error, request);\n  };\n  const xhrFactory = function () {\n    const xhr = function XhrFunction(options, callback) {\n      // Add a default timeout\n      options = merge({\n        timeout: 45e3\n      }, options); // Allow an optional user-specified function to modify the option\n      // object before we construct the xhr request\n\n      const beforeRequest = XhrFunction.beforeRequest || videojs.Vhs.xhr.beforeRequest;\n      if (beforeRequest && typeof beforeRequest === 'function') {\n        const newOptions = beforeRequest(options);\n        if (newOptions) {\n          options = newOptions;\n        }\n      } // Use the standard videojs.xhr() method unless `videojs.Vhs.xhr` has been overriden\n      // TODO: switch back to videojs.Vhs.xhr.name === 'XhrFunction' when we drop IE11\n\n      const xhrMethod = videojs.Vhs.xhr.original === true ? videojsXHR : videojs.Vhs.xhr;\n      const request = xhrMethod(options, function (error, response) {\n        return callbackWrapper(request, error, response, callback);\n      });\n      const originalAbort = request.abort;\n      request.abort = function () {\n        request.aborted = true;\n        return originalAbort.apply(request, arguments);\n      };\n      request.uri = options.uri;\n      request.requestTime = Date.now();\n      return request;\n    };\n    xhr.original = true;\n    return xhr;\n  };\n  /**\n   * Turns segment byterange into a string suitable for use in\n   * HTTP Range requests\n   *\n   * @param {Object} byterange - an object with two values defining the start and end\n   *                             of a byte-range\n   */\n\n  const byterangeStr = function (byterange) {\n    // `byterangeEnd` is one less than `offset + length` because the HTTP range\n    // header uses inclusive ranges\n    let byterangeEnd;\n    const byterangeStart = byterange.offset;\n    if (typeof byterange.offset === 'bigint' || typeof byterange.length === 'bigint') {\n      byterangeEnd = window.BigInt(byterange.offset) + window.BigInt(byterange.length) - window.BigInt(1);\n    } else {\n      byterangeEnd = byterange.offset + byterange.length - 1;\n    }\n    return 'bytes=' + byterangeStart + '-' + byterangeEnd;\n  };\n  /**\n   * Defines headers for use in the xhr request for a particular segment.\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   */\n\n  const segmentXhrHeaders = function (segment) {\n    const headers = {};\n    if (segment.byterange) {\n      headers.Range = byterangeStr(segment.byterange);\n    }\n    return headers;\n  };\n\n  /**\n   * @file bin-utils.js\n   */\n\n  /**\n   * convert a TimeRange to text\n   *\n   * @param {TimeRange} range the timerange to use for conversion\n   * @param {number} i the iterator on the range to convert\n   * @return {string} the range in string format\n   */\n\n  const textRange = function (range, i) {\n    return range.start(i) + '-' + range.end(i);\n  };\n  /**\n   * format a number as hex string\n   *\n   * @param {number} e The number\n   * @param {number} i the iterator\n   * @return {string} the hex formatted number as a string\n   */\n\n  const formatHexString = function (e, i) {\n    const value = e.toString(16);\n    return '00'.substring(0, 2 - value.length) + value + (i % 2 ? ' ' : '');\n  };\n  const formatAsciiString = function (e) {\n    if (e >= 0x20 && e < 0x7e) {\n      return String.fromCharCode(e);\n    }\n    return '.';\n  };\n  /**\n   * Creates an object for sending to a web worker modifying properties that are TypedArrays\n   * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n   *\n   * @param {Object} message\n   *        Object of properties and values to send to the web worker\n   * @return {Object}\n   *         Modified message with TypedArray values expanded\n   * @function createTransferableMessage\n   */\n\n  const createTransferableMessage = function (message) {\n    const transferable = {};\n    Object.keys(message).forEach(key => {\n      const value = message[key];\n      if (isArrayBufferView(value)) {\n        transferable[key] = {\n          bytes: value.buffer,\n          byteOffset: value.byteOffset,\n          byteLength: value.byteLength\n        };\n      } else {\n        transferable[key] = value;\n      }\n    });\n    return transferable;\n  };\n  /**\n   * Returns a unique string identifier for a media initialization\n   * segment.\n   *\n   * @param {Object} initSegment\n   *        the init segment object.\n   *\n   * @return {string} the generated init segment id\n   */\n\n  const initSegmentId = function (initSegment) {\n    const byterange = initSegment.byterange || {\n      length: Infinity,\n      offset: 0\n    };\n    return [byterange.length, byterange.offset, initSegment.resolvedUri].join(',');\n  };\n  /**\n   * Returns a unique string identifier for a media segment key.\n   *\n   * @param {Object} key the encryption key\n   * @return {string} the unique id for the media segment key.\n   */\n\n  const segmentKeyId = function (key) {\n    return key.resolvedUri;\n  };\n  /**\n   * utils to help dump binary data to the console\n   *\n   * @param {Array|TypedArray} data\n   *        data to dump to a string\n   *\n   * @return {string} the data as a hex string.\n   */\n\n  const hexDump = data => {\n    const bytes = Array.prototype.slice.call(data);\n    const step = 16;\n    let result = '';\n    let hex;\n    let ascii;\n    for (let j = 0; j < bytes.length / step; j++) {\n      hex = bytes.slice(j * step, j * step + step).map(formatHexString).join('');\n      ascii = bytes.slice(j * step, j * step + step).map(formatAsciiString).join('');\n      result += hex + ' ' + ascii + '\\n';\n    }\n    return result;\n  };\n  const tagDump = ({\n    bytes\n  }) => hexDump(bytes);\n  const textRanges = ranges => {\n    let result = '';\n    let i;\n    for (i = 0; i < ranges.length; i++) {\n      result += textRange(ranges, i) + ' ';\n    }\n    return result;\n  };\n  var utils = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    createTransferableMessage: createTransferableMessage,\n    initSegmentId: initSegmentId,\n    segmentKeyId: segmentKeyId,\n    hexDump: hexDump,\n    tagDump: tagDump,\n    textRanges: textRanges\n  });\n\n  // TODO handle fmp4 case where the timing info is accurate and doesn't involve transmux\n  // 25% was arbitrarily chosen, and may need to be refined over time.\n\n  const SEGMENT_END_FUDGE_PERCENT = 0.25;\n  /**\n   * Converts a player time (any time that can be gotten/set from player.currentTime(),\n   * e.g., any time within player.seekable().start(0) to player.seekable().end(0)) to a\n   * program time (any time referencing the real world (e.g., EXT-X-PROGRAM-DATE-TIME)).\n   *\n   * The containing segment is required as the EXT-X-PROGRAM-DATE-TIME serves as an \"anchor\n   * point\" (a point where we have a mapping from program time to player time, with player\n   * time being the post transmux start of the segment).\n   *\n   * For more details, see [this doc](../../docs/program-time-from-player-time.md).\n   *\n   * @param {number} playerTime the player time\n   * @param {Object} segment the segment which contains the player time\n   * @return {Date} program time\n   */\n\n  const playerTimeToProgramTime = (playerTime, segment) => {\n    if (!segment.dateTimeObject) {\n      // Can't convert without an \"anchor point\" for the program time (i.e., a time that can\n      // be used to map the start of a segment with a real world time).\n      return null;\n    }\n    const transmuxerPrependedSeconds = segment.videoTimingInfo.transmuxerPrependedSeconds;\n    const transmuxedStart = segment.videoTimingInfo.transmuxedPresentationStart; // get the start of the content from before old content is prepended\n\n    const startOfSegment = transmuxedStart + transmuxerPrependedSeconds;\n    const offsetFromSegmentStart = playerTime - startOfSegment;\n    return new Date(segment.dateTimeObject.getTime() + offsetFromSegmentStart * 1000);\n  };\n  const originalSegmentVideoDuration = videoTimingInfo => {\n    return videoTimingInfo.transmuxedPresentationEnd - videoTimingInfo.transmuxedPresentationStart - videoTimingInfo.transmuxerPrependedSeconds;\n  };\n  /**\n   * Finds a segment that contains the time requested given as an ISO-8601 string. The\n   * returned segment might be an estimate or an accurate match.\n   *\n   * @param {string} programTime The ISO-8601 programTime to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n  const findSegmentForProgramTime = (programTime, playlist) => {\n    // Assumptions:\n    //  - verifyProgramDateTimeTags has already been run\n    //  - live streams have been started\n    let dateTimeObject;\n    try {\n      dateTimeObject = new Date(programTime);\n    } catch (e) {\n      return null;\n    }\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n    let segment = playlist.segments[0];\n    if (dateTimeObject < segment.dateTimeObject) {\n      // Requested time is before stream start.\n      return null;\n    }\n    for (let i = 0; i < playlist.segments.length - 1; i++) {\n      segment = playlist.segments[i];\n      const nextSegmentStart = playlist.segments[i + 1].dateTimeObject;\n      if (dateTimeObject < nextSegmentStart) {\n        break;\n      }\n    }\n    const lastSegment = playlist.segments[playlist.segments.length - 1];\n    const lastSegmentStart = lastSegment.dateTimeObject;\n    const lastSegmentDuration = lastSegment.videoTimingInfo ? originalSegmentVideoDuration(lastSegment.videoTimingInfo) : lastSegment.duration + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT;\n    const lastSegmentEnd = new Date(lastSegmentStart.getTime() + lastSegmentDuration * 1000);\n    if (dateTimeObject > lastSegmentEnd) {\n      // Beyond the end of the stream, or our best guess of the end of the stream.\n      return null;\n    }\n    if (dateTimeObject > lastSegmentStart) {\n      segment = lastSegment;\n    }\n    return {\n      segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : Playlist.duration(playlist, playlist.mediaSequence + playlist.segments.indexOf(segment)),\n      // Although, given that all segments have accurate date time objects, the segment\n      // selected should be accurate, unless the video has been transmuxed at some point\n      // (determined by the presence of the videoTimingInfo object), the segment's \"player\n      // time\" (the start time in the player) can't be considered accurate.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Finds a segment that contains the given player time(in seconds).\n   *\n   * @param {number} time The player time to find a match for\n   * @param {Object} playlist A playlist object to search within\n   */\n\n  const findSegmentForPlayerTime = (time, playlist) => {\n    // Assumptions:\n    // - there will always be a segment.duration\n    // - we can start from zero\n    // - segments are in time order\n    if (!playlist || !playlist.segments || playlist.segments.length === 0) {\n      return null;\n    }\n    let segmentEnd = 0;\n    let segment;\n    for (let i = 0; i < playlist.segments.length; i++) {\n      segment = playlist.segments[i]; // videoTimingInfo is set after the segment is downloaded and transmuxed, and\n      // should contain the most accurate values we have for the segment's player times.\n      //\n      // Use the accurate transmuxedPresentationEnd value if it is available, otherwise fall\n      // back to an estimate based on the manifest derived (inaccurate) segment.duration, to\n      // calculate an end value.\n\n      segmentEnd = segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationEnd : segmentEnd + segment.duration;\n      if (time <= segmentEnd) {\n        break;\n      }\n    }\n    const lastSegment = playlist.segments[playlist.segments.length - 1];\n    if (lastSegment.videoTimingInfo && lastSegment.videoTimingInfo.transmuxedPresentationEnd < time) {\n      // The time requested is beyond the stream end.\n      return null;\n    }\n    if (time > segmentEnd) {\n      // The time is within or beyond the last segment.\n      //\n      // Check to see if the time is beyond a reasonable guess of the end of the stream.\n      if (time > segmentEnd + lastSegment.duration * SEGMENT_END_FUDGE_PERCENT) {\n        // Technically, because the duration value is only an estimate, the time may still\n        // exist in the last segment, however, there isn't enough information to make even\n        // a reasonable estimate.\n        return null;\n      }\n      segment = lastSegment;\n    }\n    return {\n      segment,\n      estimatedStart: segment.videoTimingInfo ? segment.videoTimingInfo.transmuxedPresentationStart : segmentEnd - segment.duration,\n      // Because videoTimingInfo is only set after transmux, it is the only way to get\n      // accurate timing values.\n      type: segment.videoTimingInfo ? 'accurate' : 'estimate'\n    };\n  };\n  /**\n   * Gives the offset of the comparisonTimestamp from the programTime timestamp in seconds.\n   * If the offset returned is positive, the programTime occurs after the\n   * comparisonTimestamp.\n   * If the offset is negative, the programTime occurs before the comparisonTimestamp.\n   *\n   * @param {string} comparisonTimeStamp An ISO-8601 timestamp to compare against\n   * @param {string} programTime The programTime as an ISO-8601 string\n   * @return {number} offset\n   */\n\n  const getOffsetFromTimestamp = (comparisonTimeStamp, programTime) => {\n    let segmentDateTime;\n    let programDateTime;\n    try {\n      segmentDateTime = new Date(comparisonTimeStamp);\n      programDateTime = new Date(programTime);\n    } catch (e) {// TODO handle error\n    }\n    const segmentTimeEpoch = segmentDateTime.getTime();\n    const programTimeEpoch = programDateTime.getTime();\n    return (programTimeEpoch - segmentTimeEpoch) / 1000;\n  };\n  /**\n   * Checks that all segments in this playlist have programDateTime tags.\n   *\n   * @param {Object} playlist A playlist object\n   */\n\n  const verifyProgramDateTimeTags = playlist => {\n    if (!playlist.segments || playlist.segments.length === 0) {\n      return false;\n    }\n    for (let i = 0; i < playlist.segments.length; i++) {\n      const segment = playlist.segments[i];\n      if (!segment.dateTimeObject) {\n        return false;\n      }\n    }\n    return true;\n  };\n  /**\n   * Returns the programTime of the media given a playlist and a playerTime.\n   * The playlist must have programDateTime tags for a programDateTime tag to be returned.\n   * If the segments containing the time requested have not been buffered yet, an estimate\n   * may be returned to the callback.\n   *\n   * @param {Object} args\n   * @param {Object} args.playlist A playlist object to search within\n   * @param {number} time A playerTime in seconds\n   * @param {Function} callback(err, programTime)\n   * @return {string} err.message A detailed error message\n   * @return {Object} programTime\n   * @return {number} programTime.mediaSeconds The streamTime in seconds\n   * @return {string} programTime.programDateTime The programTime as an ISO-8601 String\n   */\n\n  const getProgramTime = ({\n    playlist,\n    time = undefined,\n    callback\n  }) => {\n    if (!callback) {\n      throw new Error('getProgramTime: callback must be provided');\n    }\n    if (!playlist || time === undefined) {\n      return callback({\n        message: 'getProgramTime: playlist and time must be provided'\n      });\n    }\n    const matchedSegment = findSegmentForPlayerTime(time, playlist);\n    if (!matchedSegment) {\n      return callback({\n        message: 'valid programTime was not found'\n      });\n    }\n    if (matchedSegment.type === 'estimate') {\n      return callback({\n        message: 'Accurate programTime could not be determined.' + ' Please seek to e.seekTime and try again',\n        seekTime: matchedSegment.estimatedStart\n      });\n    }\n    const programTimeObject = {\n      mediaSeconds: time\n    };\n    const programTime = playerTimeToProgramTime(time, matchedSegment.segment);\n    if (programTime) {\n      programTimeObject.programDateTime = programTime.toISOString();\n    }\n    return callback(null, programTimeObject);\n  };\n  /**\n   * Seeks in the player to a time that matches the given programTime ISO-8601 string.\n   *\n   * @param {Object} args\n   * @param {string} args.programTime A programTime to seek to as an ISO-8601 String\n   * @param {Object} args.playlist A playlist to look within\n   * @param {number} args.retryCount The number of times to try for an accurate seek. Default is 2.\n   * @param {Function} args.seekTo A method to perform a seek\n   * @param {boolean} args.pauseAfterSeek Whether to end in a paused state after seeking. Default is true.\n   * @param {Object} args.tech The tech to seek on\n   * @param {Function} args.callback(err, newTime) A callback to return the new time to\n   * @return {string} err.message A detailed error message\n   * @return {number} newTime The exact time that was seeked to in seconds\n   */\n\n  const seekToProgramTime = ({\n    programTime,\n    playlist,\n    retryCount = 2,\n    seekTo,\n    pauseAfterSeek = true,\n    tech,\n    callback\n  }) => {\n    if (!callback) {\n      throw new Error('seekToProgramTime: callback must be provided');\n    }\n    if (typeof programTime === 'undefined' || !playlist || !seekTo) {\n      return callback({\n        message: 'seekToProgramTime: programTime, seekTo and playlist must be provided'\n      });\n    }\n    if (!playlist.endList && !tech.hasStarted_) {\n      return callback({\n        message: 'player must be playing a live stream to start buffering'\n      });\n    }\n    if (!verifyProgramDateTimeTags(playlist)) {\n      return callback({\n        message: 'programDateTime tags must be provided in the manifest ' + playlist.resolvedUri\n      });\n    }\n    const matchedSegment = findSegmentForProgramTime(programTime, playlist); // no match\n\n    if (!matchedSegment) {\n      return callback({\n        message: `${programTime} was not found in the stream`\n      });\n    }\n    const segment = matchedSegment.segment;\n    const mediaOffset = getOffsetFromTimestamp(segment.dateTimeObject, programTime);\n    if (matchedSegment.type === 'estimate') {\n      // we've run out of retries\n      if (retryCount === 0) {\n        return callback({\n          message: `${programTime} is not buffered yet. Try again`\n        });\n      }\n      seekTo(matchedSegment.estimatedStart + mediaOffset);\n      tech.one('seeked', () => {\n        seekToProgramTime({\n          programTime,\n          playlist,\n          retryCount: retryCount - 1,\n          seekTo,\n          pauseAfterSeek,\n          tech,\n          callback\n        });\n      });\n      return;\n    } // Since the segment.start value is determined from the buffered end or ending time\n    // of the prior segment, the seekToTime doesn't need to account for any transmuxer\n    // modifications.\n\n    const seekToTime = segment.start + mediaOffset;\n    const seekedCallback = () => {\n      return callback(null, tech.currentTime());\n    }; // listen for seeked event\n\n    tech.one('seeked', seekedCallback); // pause before seeking as video.js will restore this state\n\n    if (pauseAfterSeek) {\n      tech.pause();\n    }\n    seekTo(seekToTime);\n  };\n\n  // which will only happen if the request is complete.\n\n  const callbackOnCompleted = (request, cb) => {\n    if (request.readyState === 4) {\n      return cb();\n    }\n    return;\n  };\n  const containerRequest = (uri, xhr, cb) => {\n    let bytes = [];\n    let id3Offset;\n    let finished = false;\n    const endRequestAndCallback = function (err, req, type, _bytes) {\n      req.abort();\n      finished = true;\n      return cb(err, req, type, _bytes);\n    };\n    const progressListener = function (error, request) {\n      if (finished) {\n        return;\n      }\n      if (error) {\n        return endRequestAndCallback(error, request, '', bytes);\n      } // grap the new part of content that was just downloaded\n\n      const newPart = request.responseText.substring(bytes && bytes.byteLength || 0, request.responseText.length); // add that onto bytes\n\n      bytes = concatTypedArrays(bytes, stringToBytes(newPart, true));\n      id3Offset = id3Offset || getId3Offset(bytes); // we need at least 10 bytes to determine a type\n      // or we need at least two bytes after an id3Offset\n\n      if (bytes.length < 10 || id3Offset && bytes.length < id3Offset + 2) {\n        return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n      }\n      const type = detectContainerForBytes(bytes); // if this looks like a ts segment but we don't have enough data\n      // to see the second sync byte, wait until we have enough data\n      // before declaring it ts\n\n      if (type === 'ts' && bytes.length < 188) {\n        return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n      } // this may be an unsynced ts segment\n      // wait for 376 bytes before detecting no container\n\n      if (!type && bytes.length < 376) {\n        return callbackOnCompleted(request, () => endRequestAndCallback(error, request, '', bytes));\n      }\n      return endRequestAndCallback(null, request, type, bytes);\n    };\n    const options = {\n      uri,\n      beforeSend(request) {\n        // this forces the browser to pass the bytes to us unprocessed\n        request.overrideMimeType('text/plain; charset=x-user-defined');\n        request.addEventListener('progress', function ({\n          total,\n          loaded\n        }) {\n          return callbackWrapper(request, null, {\n            statusCode: request.status\n          }, progressListener);\n        });\n      }\n    };\n    const request = xhr(options, function (error, response) {\n      return callbackWrapper(request, error, response, progressListener);\n    });\n    return request;\n  };\n  const {\n    EventTarget\n  } = videojs;\n  const dashPlaylistUnchanged = function (a, b) {\n    if (!isPlaylistUnchanged(a, b)) {\n      return false;\n    } // for dash the above check will often return true in scenarios where\n    // the playlist actually has changed because mediaSequence isn't a\n    // dash thing, and we often set it to 1. So if the playlists have the same amount\n    // of segments we return true.\n    // So for dash we need to make sure that the underlying segments are different.\n    // if sidx changed then the playlists are different.\n\n    if (a.sidx && b.sidx && (a.sidx.offset !== b.sidx.offset || a.sidx.length !== b.sidx.length)) {\n      return false;\n    } else if (!a.sidx && b.sidx || a.sidx && !b.sidx) {\n      return false;\n    } // one or the other does not have segments\n    // there was a change.\n\n    if (a.segments && !b.segments || !a.segments && b.segments) {\n      return false;\n    } // neither has segments nothing changed\n\n    if (!a.segments && !b.segments) {\n      return true;\n    } // check segments themselves\n\n    for (let i = 0; i < a.segments.length; i++) {\n      const aSegment = a.segments[i];\n      const bSegment = b.segments[i]; // if uris are different between segments there was a change\n\n      if (aSegment.uri !== bSegment.uri) {\n        return false;\n      } // neither segment has a byterange, there will be no byterange change.\n\n      if (!aSegment.byterange && !bSegment.byterange) {\n        continue;\n      }\n      const aByterange = aSegment.byterange;\n      const bByterange = bSegment.byterange; // if byterange only exists on one of the segments, there was a change.\n\n      if (aByterange && !bByterange || !aByterange && bByterange) {\n        return false;\n      } // if both segments have byterange with different offsets, there was a change.\n\n      if (aByterange.offset !== bByterange.offset || aByterange.length !== bByterange.length) {\n        return false;\n      }\n    } // if everything was the same with segments, this is the same playlist.\n\n    return true;\n  };\n  /**\n   * Parses the main XML string and updates playlist URI references.\n   *\n   * @param {Object} config\n   *        Object of arguments\n   * @param {string} config.mainXml\n   *        The mpd XML\n   * @param {string} config.srcUrl\n   *        The mpd URL\n   * @param {Date} config.clientOffset\n   *         A time difference between server and client\n   * @param {Object} config.sidxMapping\n   *        SIDX mappings for moof/mdat URIs and byte ranges\n   * @return {Object}\n   *         The parsed mpd manifest object\n   */\n\n  const parseMainXml = ({\n    mainXml,\n    srcUrl,\n    clientOffset,\n    sidxMapping,\n    previousManifest\n  }) => {\n    const manifest = parse(mainXml, {\n      manifestUri: srcUrl,\n      clientOffset,\n      sidxMapping,\n      previousManifest\n    });\n    addPropertiesToMain(manifest, srcUrl);\n    return manifest;\n  };\n  /**\n   * Returns a new main manifest that is the result of merging an updated main manifest\n   * into the original version.\n   *\n   * @param {Object} oldMain\n   *        The old parsed mpd object\n   * @param {Object} newMain\n   *        The updated parsed mpd object\n   * @return {Object}\n   *         A new object representing the original main manifest with the updated media\n   *         playlists merged in\n   */\n\n  const updateMain = (oldMain, newMain, sidxMapping) => {\n    let noChanges = true;\n    let update = merge(oldMain, {\n      // These are top level properties that can be updated\n      duration: newMain.duration,\n      minimumUpdatePeriod: newMain.minimumUpdatePeriod,\n      timelineStarts: newMain.timelineStarts\n    }); // First update the playlists in playlist list\n\n    for (let i = 0; i < newMain.playlists.length; i++) {\n      const playlist = newMain.playlists[i];\n      if (playlist.sidx) {\n        const sidxKey = generateSidxKey(playlist.sidx); // add sidx segments to the playlist if we have all the sidx info already\n\n        if (sidxMapping && sidxMapping[sidxKey] && sidxMapping[sidxKey].sidx) {\n          addSidxSegmentsToPlaylist$1(playlist, sidxMapping[sidxKey].sidx, playlist.sidx.resolvedUri);\n        }\n      }\n      const playlistUpdate = updateMain$1(update, playlist, dashPlaylistUnchanged);\n      if (playlistUpdate) {\n        update = playlistUpdate;\n        noChanges = false;\n      }\n    } // Then update media group playlists\n\n    forEachMediaGroup(newMain, (properties, type, group, label) => {\n      if (properties.playlists && properties.playlists.length) {\n        const id = properties.playlists[0].id;\n        const playlistUpdate = updateMain$1(update, properties.playlists[0], dashPlaylistUnchanged);\n        if (playlistUpdate) {\n          update = playlistUpdate; // update the playlist reference within media groups\n\n          update.mediaGroups[type][group][label].playlists[0] = update.playlists[id];\n          noChanges = false;\n        }\n      }\n    });\n    if (newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n      noChanges = false;\n    }\n    if (noChanges) {\n      return null;\n    }\n    return update;\n  }; // SIDX should be equivalent if the URI and byteranges of the SIDX match.\n  // If the SIDXs have maps, the two maps should match,\n  // both `a` and `b` missing SIDXs is considered matching.\n  // If `a` or `b` but not both have a map, they aren't matching.\n\n  const equivalentSidx = (a, b) => {\n    const neitherMap = Boolean(!a.map && !b.map);\n    const equivalentMap = neitherMap || Boolean(a.map && b.map && a.map.byterange.offset === b.map.byterange.offset && a.map.byterange.length === b.map.byterange.length);\n    return equivalentMap && a.uri === b.uri && a.byterange.offset === b.byterange.offset && a.byterange.length === b.byterange.length;\n  }; // exported for testing\n\n  const compareSidxEntry = (playlists, oldSidxMapping) => {\n    const newSidxMapping = {};\n    for (const id in playlists) {\n      const playlist = playlists[id];\n      const currentSidxInfo = playlist.sidx;\n      if (currentSidxInfo) {\n        const key = generateSidxKey(currentSidxInfo);\n        if (!oldSidxMapping[key]) {\n          break;\n        }\n        const savedSidxInfo = oldSidxMapping[key].sidxInfo;\n        if (equivalentSidx(savedSidxInfo, currentSidxInfo)) {\n          newSidxMapping[key] = oldSidxMapping[key];\n        }\n      }\n    }\n    return newSidxMapping;\n  };\n  /**\n   *  A function that filters out changed items as they need to be requested separately.\n   *\n   *  The method is exported for testing\n   *\n   *  @param {Object} main the parsed mpd XML returned via mpd-parser\n   *  @param {Object} oldSidxMapping the SIDX to compare against\n   */\n\n  const filterChangedSidxMappings = (main, oldSidxMapping) => {\n    const videoSidx = compareSidxEntry(main.playlists, oldSidxMapping);\n    let mediaGroupSidx = videoSidx;\n    forEachMediaGroup(main, (properties, mediaType, groupKey, labelKey) => {\n      if (properties.playlists && properties.playlists.length) {\n        const playlists = properties.playlists;\n        mediaGroupSidx = merge(mediaGroupSidx, compareSidxEntry(playlists, oldSidxMapping));\n      }\n    });\n    return mediaGroupSidx;\n  };\n  class DashPlaylistLoader extends EventTarget {\n    // DashPlaylistLoader must accept either a src url or a playlist because subsequent\n    // playlist loader setups from media groups will expect to be able to pass a playlist\n    // (since there aren't external URLs to media playlists with DASH)\n    constructor(srcUrlOrPlaylist, vhs, options = {}, mainPlaylistLoader) {\n      super();\n      this.mainPlaylistLoader_ = mainPlaylistLoader || this;\n      if (!mainPlaylistLoader) {\n        this.isMain_ = true;\n      }\n      const {\n        withCredentials = false\n      } = options;\n      this.vhs_ = vhs;\n      this.withCredentials = withCredentials;\n      if (!srcUrlOrPlaylist) {\n        throw new Error('A non-empty playlist URL or object is required');\n      } // event naming?\n\n      this.on('minimumUpdatePeriod', () => {\n        this.refreshXml_();\n      }); // live playlist staleness timeout\n\n      this.on('mediaupdatetimeout', () => {\n        this.refreshMedia_(this.media().id);\n      });\n      this.state = 'HAVE_NOTHING';\n      this.loadedPlaylists_ = {};\n      this.logger_ = logger('DashPlaylistLoader'); // initialize the loader state\n      // The mainPlaylistLoader will be created with a string\n\n      if (this.isMain_) {\n        this.mainPlaylistLoader_.srcUrl = srcUrlOrPlaylist; // TODO: reset sidxMapping between period changes\n        // once multi-period is refactored\n\n        this.mainPlaylistLoader_.sidxMapping_ = {};\n      } else {\n        this.childPlaylist_ = srcUrlOrPlaylist;\n      }\n    }\n    requestErrored_(err, request, startingState) {\n      // disposed\n      if (!this.request) {\n        return true;\n      } // pending request is cleared\n\n      this.request = null;\n      if (err) {\n        // use the provided error object or create one\n        // based on the request/response\n        this.error = typeof err === 'object' && !(err instanceof Error) ? err : {\n          status: request.status,\n          message: 'DASH request error at URL: ' + request.uri,\n          response: request.response,\n          // MEDIA_ERR_NETWORK\n          code: 2\n        };\n        if (startingState) {\n          this.state = startingState;\n        }\n        this.trigger('error');\n        return true;\n      }\n    }\n    /**\n     * Verify that the container of the sidx segment can be parsed\n     * and if it can, get and parse that segment.\n     */\n\n    addSidxSegments_(playlist, startingState, cb) {\n      const sidxKey = playlist.sidx && generateSidxKey(playlist.sidx); // playlist lacks sidx or sidx segments were added to this playlist already.\n\n      if (!playlist.sidx || !sidxKey || this.mainPlaylistLoader_.sidxMapping_[sidxKey]) {\n        // keep this function async\n        this.mediaRequest_ = window.setTimeout(() => cb(false), 0);\n        return;\n      } // resolve the segment URL relative to the playlist\n\n      const uri = resolveManifestRedirect(playlist.sidx.resolvedUri);\n      const fin = (err, request) => {\n        if (this.requestErrored_(err, request, startingState)) {\n          return;\n        }\n        const sidxMapping = this.mainPlaylistLoader_.sidxMapping_;\n        let sidx;\n        try {\n          sidx = parseSidx_1(toUint8(request.response).subarray(8));\n        } catch (e) {\n          // sidx parsing failed.\n          this.requestErrored_(e, request, startingState);\n          return;\n        }\n        sidxMapping[sidxKey] = {\n          sidxInfo: playlist.sidx,\n          sidx\n        };\n        addSidxSegmentsToPlaylist$1(playlist, sidx, playlist.sidx.resolvedUri);\n        return cb(true);\n      };\n      this.request = containerRequest(uri, this.vhs_.xhr, (err, request, container, bytes) => {\n        if (err) {\n          return fin(err, request);\n        }\n        if (!container || container !== 'mp4') {\n          return fin({\n            status: request.status,\n            message: `Unsupported ${container || 'unknown'} container type for sidx segment at URL: ${uri}`,\n            // response is just bytes in this case\n            // but we really don't want to return that.\n            response: '',\n            playlist,\n            internal: true,\n            playlistExclusionDuration: Infinity,\n            // MEDIA_ERR_NETWORK\n            code: 2\n          }, request);\n        } // if we already downloaded the sidx bytes in the container request, use them\n\n        const {\n          offset,\n          length\n        } = playlist.sidx.byterange;\n        if (bytes.length >= length + offset) {\n          return fin(err, {\n            response: bytes.subarray(offset, offset + length),\n            status: request.status,\n            uri: request.uri\n          });\n        } // otherwise request sidx bytes\n\n        this.request = this.vhs_.xhr({\n          uri,\n          responseType: 'arraybuffer',\n          headers: segmentXhrHeaders({\n            byterange: playlist.sidx.byterange\n          })\n        }, fin);\n      });\n    }\n    dispose() {\n      this.trigger('dispose');\n      this.stopRequest();\n      this.loadedPlaylists_ = {};\n      window.clearTimeout(this.minimumUpdatePeriodTimeout_);\n      window.clearTimeout(this.mediaRequest_);\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      this.mediaRequest_ = null;\n      this.minimumUpdatePeriodTimeout_ = null;\n      if (this.mainPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n        this.mainPlaylistLoader_.createMupOnMedia_ = null;\n      }\n      this.off();\n    }\n    hasPendingRequest() {\n      return this.request || this.mediaRequest_;\n    }\n    stopRequest() {\n      if (this.request) {\n        const oldRequest = this.request;\n        this.request = null;\n        oldRequest.onreadystatechange = null;\n        oldRequest.abort();\n      }\n    }\n    media(playlist) {\n      // getter\n      if (!playlist) {\n        return this.media_;\n      } // setter\n\n      if (this.state === 'HAVE_NOTHING') {\n        throw new Error('Cannot switch media playlist from ' + this.state);\n      }\n      const startingState = this.state; // find the playlist object if the target playlist has been specified by URI\n\n      if (typeof playlist === 'string') {\n        if (!this.mainPlaylistLoader_.main.playlists[playlist]) {\n          throw new Error('Unknown playlist URI: ' + playlist);\n        }\n        playlist = this.mainPlaylistLoader_.main.playlists[playlist];\n      }\n      const mediaChange = !this.media_ || playlist.id !== this.media_.id; // switch to previously loaded playlists immediately\n\n      if (mediaChange && this.loadedPlaylists_[playlist.id] && this.loadedPlaylists_[playlist.id].endList) {\n        this.state = 'HAVE_METADATA';\n        this.media_ = playlist; // trigger media change if the active media has been updated\n\n        if (mediaChange) {\n          this.trigger('mediachanging');\n          this.trigger('mediachange');\n        }\n        return;\n      } // switching to the active playlist is a no-op\n\n      if (!mediaChange) {\n        return;\n      } // switching from an already loaded playlist\n\n      if (this.media_) {\n        this.trigger('mediachanging');\n      }\n      this.addSidxSegments_(playlist, startingState, sidxChanged => {\n        // everything is ready just continue to haveMetadata\n        this.haveMetadata({\n          startingState,\n          playlist\n        });\n      });\n    }\n    haveMetadata({\n      startingState,\n      playlist\n    }) {\n      this.state = 'HAVE_METADATA';\n      this.loadedPlaylists_[playlist.id] = playlist;\n      this.mediaRequest_ = null; // This will trigger loadedplaylist\n\n      this.refreshMedia_(playlist.id); // fire loadedmetadata the first time a media playlist is loaded\n      // to resolve setup of media groups\n\n      if (startingState === 'HAVE_MAIN_MANIFEST') {\n        this.trigger('loadedmetadata');\n      } else {\n        // trigger media change if the active media has been updated\n        this.trigger('mediachange');\n      }\n    }\n    pause() {\n      if (this.mainPlaylistLoader_.createMupOnMedia_) {\n        this.off('loadedmetadata', this.mainPlaylistLoader_.createMupOnMedia_);\n        this.mainPlaylistLoader_.createMupOnMedia_ = null;\n      }\n      this.stopRequest();\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      if (this.isMain_) {\n        window.clearTimeout(this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_);\n        this.mainPlaylistLoader_.minimumUpdatePeriodTimeout_ = null;\n      }\n      if (this.state === 'HAVE_NOTHING') {\n        // If we pause the loader before any data has been retrieved, its as if we never\n        // started, so reset to an unstarted state.\n        this.started = false;\n      }\n    }\n    load(isFinalRendition) {\n      window.clearTimeout(this.mediaUpdateTimeout);\n      this.mediaUpdateTimeout = null;\n      const media = this.media();\n      if (isFinalRendition) {\n        const delay = media ? media.targetDuration / 2 * 1000 : 5 * 1000;\n        this.mediaUpdateTimeout = window.setTimeout(() => this.load(), delay);\n        return;\n      } // because the playlists are internal to the manifest, load should either load the\n      // main manifest, or do nothing but trigger an event\n\n      if (!this.started) {\n        this.start();\n        return;\n      }\n      if (media && !media.endList) {\n        // Check to see if this is the main loader and the MUP was cleared (this happens\n        // when the loader was paused). `media` should be set at this point since one is always\n        // set during `start()`.\n        if (this.isMain_ && !this.minimumUpdatePeriodTimeout_) {\n          // Trigger minimumUpdatePeriod to refresh the main manifest\n          this.trigger('minimumUpdatePeriod'); // Since there was no prior minimumUpdatePeriodTimeout it should be recreated\n\n          this.updateMinimumUpdatePeriodTimeout_();\n        }\n        this.trigger('mediaupdatetimeout');\n      } else {\n        this.trigger('loadedplaylist');\n      }\n    }\n    start() {\n      this.started = true; // We don't need to request the main manifest again\n      // Call this asynchronously to match the xhr request behavior below\n\n      if (!this.isMain_) {\n        this.mediaRequest_ = window.setTimeout(() => this.haveMain_(), 0);\n        return;\n      }\n      this.requestMain_((req, mainChanged) => {\n        this.haveMain_();\n        if (!this.hasPendingRequest() && !this.media_) {\n          this.media(this.mainPlaylistLoader_.main.playlists[0]);\n        }\n      });\n    }\n    requestMain_(cb) {\n      this.request = this.vhs_.xhr({\n        uri: this.mainPlaylistLoader_.srcUrl,\n        withCredentials: this.withCredentials\n      }, (error, req) => {\n        if (this.requestErrored_(error, req)) {\n          if (this.state === 'HAVE_NOTHING') {\n            this.started = false;\n          }\n          return;\n        }\n        const mainChanged = req.responseText !== this.mainPlaylistLoader_.mainXml_;\n        this.mainPlaylistLoader_.mainXml_ = req.responseText;\n        if (req.responseHeaders && req.responseHeaders.date) {\n          this.mainLoaded_ = Date.parse(req.responseHeaders.date);\n        } else {\n          this.mainLoaded_ = Date.now();\n        }\n        this.mainPlaylistLoader_.srcUrl = resolveManifestRedirect(this.mainPlaylistLoader_.srcUrl, req);\n        if (mainChanged) {\n          this.handleMain_();\n          this.syncClientServerClock_(() => {\n            return cb(req, mainChanged);\n          });\n          return;\n        }\n        return cb(req, mainChanged);\n      });\n    }\n    /**\n     * Parses the main xml for UTCTiming node to sync the client clock to the server\n     * clock. If the UTCTiming node requires a HEAD or GET request, that request is made.\n     *\n     * @param {Function} done\n     *        Function to call when clock sync has completed\n     */\n\n    syncClientServerClock_(done) {\n      const utcTiming = parseUTCTiming(this.mainPlaylistLoader_.mainXml_); // No UTCTiming element found in the mpd. Use Date header from mpd request as the\n      // server clock\n\n      if (utcTiming === null) {\n        this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n        return done();\n      }\n      if (utcTiming.method === 'DIRECT') {\n        this.mainPlaylistLoader_.clientOffset_ = utcTiming.value - Date.now();\n        return done();\n      }\n      this.request = this.vhs_.xhr({\n        uri: resolveUrl(this.mainPlaylistLoader_.srcUrl, utcTiming.value),\n        method: utcTiming.method,\n        withCredentials: this.withCredentials\n      }, (error, req) => {\n        // disposed\n        if (!this.request) {\n          return;\n        }\n        if (error) {\n          // sync request failed, fall back to using date header from mpd\n          // TODO: log warning\n          this.mainPlaylistLoader_.clientOffset_ = this.mainLoaded_ - Date.now();\n          return done();\n        }\n        let serverTime;\n        if (utcTiming.method === 'HEAD') {\n          if (!req.responseHeaders || !req.responseHeaders.date) {\n            // expected date header not preset, fall back to using date header from mpd\n            // TODO: log warning\n            serverTime = this.mainLoaded_;\n          } else {\n            serverTime = Date.parse(req.responseHeaders.date);\n          }\n        } else {\n          serverTime = Date.parse(req.responseText);\n        }\n        this.mainPlaylistLoader_.clientOffset_ = serverTime - Date.now();\n        done();\n      });\n    }\n    haveMain_() {\n      this.state = 'HAVE_MAIN_MANIFEST';\n      if (this.isMain_) {\n        // We have the main playlist at this point, so\n        // trigger this to allow PlaylistController\n        // to make an initial playlist selection\n        this.trigger('loadedplaylist');\n      } else if (!this.media_) {\n        // no media playlist was specifically selected so select\n        // the one the child playlist loader was created with\n        this.media(this.childPlaylist_);\n      }\n    }\n    handleMain_() {\n      // clear media request\n      this.mediaRequest_ = null;\n      const oldMain = this.mainPlaylistLoader_.main;\n      let newMain = parseMainXml({\n        mainXml: this.mainPlaylistLoader_.mainXml_,\n        srcUrl: this.mainPlaylistLoader_.srcUrl,\n        clientOffset: this.mainPlaylistLoader_.clientOffset_,\n        sidxMapping: this.mainPlaylistLoader_.sidxMapping_,\n        previousManifest: oldMain\n      }); // if we have an old main to compare the new main against\n\n      if (oldMain) {\n        newMain = updateMain(oldMain, newMain, this.mainPlaylistLoader_.sidxMapping_);\n      } // only update main if we have a new main\n\n      this.mainPlaylistLoader_.main = newMain ? newMain : oldMain;\n      const location = this.mainPlaylistLoader_.main.locations && this.mainPlaylistLoader_.main.locations[0];\n      if (location && location !== this.mainPlaylistLoader_.srcUrl) {\n        this.mainPlaylistLoader_.srcUrl = location;\n      }\n      if (!oldMain || newMain && newMain.minimumUpdatePeriod !== oldMain.minimumUpdatePeriod) {\n        this.updateMinimumUpdatePeriodTimeout_();\n      }\n      return Boolean(newMain);\n    }\n    updateMinimumUpdatePeriodTimeout_() {\n      const mpl = this.mainPlaylistLoader_; // cancel any pending creation of mup on media\n      // a new one will be added if needed.\n\n      if (mpl.createMupOnMedia_) {\n        mpl.off('loadedmetadata', mpl.createMupOnMedia_);\n        mpl.createMupOnMedia_ = null;\n      } // clear any pending timeouts\n\n      if (mpl.minimumUpdatePeriodTimeout_) {\n        window.clearTimeout(mpl.minimumUpdatePeriodTimeout_);\n        mpl.minimumUpdatePeriodTimeout_ = null;\n      }\n      let mup = mpl.main && mpl.main.minimumUpdatePeriod; // If the minimumUpdatePeriod has a value of 0, that indicates that the current\n      // MPD has no future validity, so a new one will need to be acquired when new\n      // media segments are to be made available. Thus, we use the target duration\n      // in this case\n\n      if (mup === 0) {\n        if (mpl.media()) {\n          mup = mpl.media().targetDuration * 1000;\n        } else {\n          mpl.createMupOnMedia_ = mpl.updateMinimumUpdatePeriodTimeout_;\n          mpl.one('loadedmetadata', mpl.createMupOnMedia_);\n        }\n      } // if minimumUpdatePeriod is invalid or <= zero, which\n      // can happen when a live video becomes VOD. skip timeout\n      // creation.\n\n      if (typeof mup !== 'number' || mup <= 0) {\n        if (mup < 0) {\n          this.logger_(`found invalid minimumUpdatePeriod of ${mup}, not setting a timeout`);\n        }\n        return;\n      }\n      this.createMUPTimeout_(mup);\n    }\n    createMUPTimeout_(mup) {\n      const mpl = this.mainPlaylistLoader_;\n      mpl.minimumUpdatePeriodTimeout_ = window.setTimeout(() => {\n        mpl.minimumUpdatePeriodTimeout_ = null;\n        mpl.trigger('minimumUpdatePeriod');\n        mpl.createMUPTimeout_(mup);\n      }, mup);\n    }\n    /**\n     * Sends request to refresh the main xml and updates the parsed main manifest\n     */\n\n    refreshXml_() {\n      this.requestMain_((req, mainChanged) => {\n        if (!mainChanged) {\n          return;\n        }\n        if (this.media_) {\n          this.media_ = this.mainPlaylistLoader_.main.playlists[this.media_.id];\n        } // This will filter out updated sidx info from the mapping\n\n        this.mainPlaylistLoader_.sidxMapping_ = filterChangedSidxMappings(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.sidxMapping_);\n        this.addSidxSegments_(this.media(), this.state, sidxChanged => {\n          // TODO: do we need to reload the current playlist?\n          this.refreshMedia_(this.media().id);\n        });\n      });\n    }\n    /**\n     * Refreshes the media playlist by re-parsing the main xml and updating playlist\n     * references. If this is an alternate loader, the updated parsed manifest is retrieved\n     * from the main loader.\n     */\n\n    refreshMedia_(mediaID) {\n      if (!mediaID) {\n        throw new Error('refreshMedia_ must take a media id');\n      } // for main we have to reparse the main xml\n      // to re-create segments based on current timing values\n      // which may change media. We only skip updating the main manifest\n      // if this is the first time this.media_ is being set.\n      // as main was just parsed in that case.\n\n      if (this.media_ && this.isMain_) {\n        this.handleMain_();\n      }\n      const playlists = this.mainPlaylistLoader_.main.playlists;\n      const mediaChanged = !this.media_ || this.media_ !== playlists[mediaID];\n      if (mediaChanged) {\n        this.media_ = playlists[mediaID];\n      } else {\n        this.trigger('playlistunchanged');\n      }\n      if (!this.mediaUpdateTimeout) {\n        const createMediaUpdateTimeout = () => {\n          if (this.media().endList) {\n            return;\n          }\n          this.mediaUpdateTimeout = window.setTimeout(() => {\n            this.trigger('mediaupdatetimeout');\n            createMediaUpdateTimeout();\n          }, refreshDelay(this.media(), Boolean(mediaChanged)));\n        };\n        createMediaUpdateTimeout();\n      }\n      this.trigger('loadedplaylist');\n    }\n  }\n  var Config = {\n    GOAL_BUFFER_LENGTH: 30,\n    MAX_GOAL_BUFFER_LENGTH: 60,\n    BACK_BUFFER_LENGTH: 30,\n    GOAL_BUFFER_LENGTH_RATE: 1,\n    // 0.5 MB/s\n    INITIAL_BANDWIDTH: 4194304,\n    // A fudge factor to apply to advertised playlist bitrates to account for\n    // temporary flucations in client bandwidth\n    BANDWIDTH_VARIANCE: 1.2,\n    // How much of the buffer must be filled before we consider upswitching\n    BUFFER_LOW_WATER_LINE: 0,\n    MAX_BUFFER_LOW_WATER_LINE: 30,\n    // TODO: Remove this when experimentalBufferBasedABR is removed\n    EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE: 16,\n    BUFFER_LOW_WATER_LINE_RATE: 1,\n    // If the buffer is greater than the high water line, we won't switch down\n    BUFFER_HIGH_WATER_LINE: 30\n  };\n  const stringToArrayBuffer = string => {\n    const view = new Uint8Array(new ArrayBuffer(string.length));\n    for (let i = 0; i < string.length; i++) {\n      view[i] = string.charCodeAt(i);\n    }\n    return view.buffer;\n  };\n\n  /* global Blob, BlobBuilder, Worker */\n  // unify worker interface\n  const browserWorkerPolyFill = function (workerObj) {\n    // node only supports on/off\n    workerObj.on = workerObj.addEventListener;\n    workerObj.off = workerObj.removeEventListener;\n    return workerObj;\n  };\n  const createObjectURL = function (str) {\n    try {\n      return URL.createObjectURL(new Blob([str], {\n        type: 'application/javascript'\n      }));\n    } catch (e) {\n      const blob = new BlobBuilder();\n      blob.append(str);\n      return URL.createObjectURL(blob.getBlob());\n    }\n  };\n  const factory = function (code) {\n    return function () {\n      const objectUrl = createObjectURL(code);\n      const worker = browserWorkerPolyFill(new Worker(objectUrl));\n      worker.objURL = objectUrl;\n      const terminate = worker.terminate;\n      worker.on = worker.addEventListener;\n      worker.off = worker.removeEventListener;\n      worker.terminate = function () {\n        URL.revokeObjectURL(objectUrl);\n        return terminate.call(this);\n      };\n      return worker;\n    };\n  };\n  const transform = function (code) {\n    return `var browserWorkerPolyFill = ${browserWorkerPolyFill.toString()};\\n` + 'browserWorkerPolyFill(self);\\n' + code;\n  };\n  const getWorkerString = function (fn) {\n    return fn.toString().replace(/^function.+?{/, '').slice(0, -1);\n  };\n\n  /* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\n  const workerCode$1 = transform(getWorkerString(function () {\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A lightweight readable stream implemention that handles event dispatching.\n     * Objects that inherit from streams should call init in their constructors.\n     */\n\n    var Stream$8 = function () {\n      this.init = function () {\n        var listeners = {};\n        /**\n         * Add a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} the callback to be invoked when an event of\n         * the specified type occurs\n         */\n\n        this.on = function (type, listener) {\n          if (!listeners[type]) {\n            listeners[type] = [];\n          }\n          listeners[type] = listeners[type].concat(listener);\n        };\n        /**\n         * Remove a listener for a specified event type.\n         * @param type {string} the event name\n         * @param listener {function} a function previously registered for this\n         * type of event through `on`\n         */\n\n        this.off = function (type, listener) {\n          var index;\n          if (!listeners[type]) {\n            return false;\n          }\n          index = listeners[type].indexOf(listener);\n          listeners[type] = listeners[type].slice();\n          listeners[type].splice(index, 1);\n          return index > -1;\n        };\n        /**\n         * Trigger an event of the specified type on this stream. Any additional\n         * arguments to this function are passed as parameters to event listeners.\n         * @param type {string} the event name\n         */\n\n        this.trigger = function (type) {\n          var callbacks, i, length, args;\n          callbacks = listeners[type];\n          if (!callbacks) {\n            return;\n          } // Slicing the arguments on every invocation of this method\n          // can add a significant amount of overhead. Avoid the\n          // intermediate object creation for the common case of a\n          // single callback argument\n\n          if (arguments.length === 2) {\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].call(this, arguments[1]);\n            }\n          } else {\n            args = [];\n            i = arguments.length;\n            for (i = 1; i < arguments.length; ++i) {\n              args.push(arguments[i]);\n            }\n            length = callbacks.length;\n            for (i = 0; i < length; ++i) {\n              callbacks[i].apply(this, args);\n            }\n          }\n        };\n        /**\n         * Destroys the stream and cleans up.\n         */\n\n        this.dispose = function () {\n          listeners = {};\n        };\n      };\n    };\n    /**\n     * Forwards all `data` events on this stream to the destination stream. The\n     * destination stream should provide a method `push` to receive the data\n     * events as they arrive.\n     * @param destination {stream} the stream that will receive all `data` events\n     * @param autoFlush {boolean} if false, we will not call `flush` on the destination\n     *                            when the current stream emits a 'done' event\n     * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n     */\n\n    Stream$8.prototype.pipe = function (destination) {\n      this.on('data', function (data) {\n        destination.push(data);\n      });\n      this.on('done', function (flushSource) {\n        destination.flush(flushSource);\n      });\n      this.on('partialdone', function (flushSource) {\n        destination.partialFlush(flushSource);\n      });\n      this.on('endedtimeline', function (flushSource) {\n        destination.endTimeline(flushSource);\n      });\n      this.on('reset', function (flushSource) {\n        destination.reset(flushSource);\n      });\n      return destination;\n    }; // Default stream functions that are expected to be overridden to perform\n    // actual work. These are provided by the prototype as a sort of no-op\n    // implementation so that we don't have to check for their existence in the\n    // `pipe` function above.\n\n    Stream$8.prototype.push = function (data) {\n      this.trigger('data', data);\n    };\n    Stream$8.prototype.flush = function (flushSource) {\n      this.trigger('done', flushSource);\n    };\n    Stream$8.prototype.partialFlush = function (flushSource) {\n      this.trigger('partialdone', flushSource);\n    };\n    Stream$8.prototype.endTimeline = function (flushSource) {\n      this.trigger('endedtimeline', flushSource);\n    };\n    Stream$8.prototype.reset = function (flushSource) {\n      this.trigger('reset', flushSource);\n    };\n    var stream = Stream$8;\n    var MAX_UINT32$1 = Math.pow(2, 32);\n    var getUint64$2 = function (uint8) {\n      var dv = new DataView(uint8.buffer, uint8.byteOffset, uint8.byteLength);\n      var value;\n      if (dv.getBigUint64) {\n        value = dv.getBigUint64(0);\n        if (value < Number.MAX_SAFE_INTEGER) {\n          return Number(value);\n        }\n        return value;\n      }\n      return dv.getUint32(0) * MAX_UINT32$1 + dv.getUint32(4);\n    };\n    var numbers = {\n      getUint64: getUint64$2,\n      MAX_UINT32: MAX_UINT32$1\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Functions that generate fragmented MP4s suitable for use with Media\n     * Source Extensions.\n     */\n\n    var MAX_UINT32 = numbers.MAX_UINT32;\n    var box, dinf, esds, ftyp, mdat, mfhd, minf, moof, moov, mvex, mvhd, trak, tkhd, mdia, mdhd, hdlr, sdtp, stbl, stsd, traf, trex, trun$1, types, MAJOR_BRAND, MINOR_VERSION, AVC1_BRAND, VIDEO_HDLR, AUDIO_HDLR, HDLR_TYPES, VMHD, SMHD, DREF, STCO, STSC, STSZ, STTS; // pre-calculate constants\n\n    (function () {\n      var i;\n      types = {\n        avc1: [],\n        // codingname\n        avcC: [],\n        btrt: [],\n        dinf: [],\n        dref: [],\n        esds: [],\n        ftyp: [],\n        hdlr: [],\n        mdat: [],\n        mdhd: [],\n        mdia: [],\n        mfhd: [],\n        minf: [],\n        moof: [],\n        moov: [],\n        mp4a: [],\n        // codingname\n        mvex: [],\n        mvhd: [],\n        pasp: [],\n        sdtp: [],\n        smhd: [],\n        stbl: [],\n        stco: [],\n        stsc: [],\n        stsd: [],\n        stsz: [],\n        stts: [],\n        styp: [],\n        tfdt: [],\n        tfhd: [],\n        traf: [],\n        trak: [],\n        trun: [],\n        trex: [],\n        tkhd: [],\n        vmhd: []\n      }; // In environments where Uint8Array is undefined (e.g., IE8), skip set up so that we\n      // don't throw an error\n\n      if (typeof Uint8Array === 'undefined') {\n        return;\n      }\n      for (i in types) {\n        if (types.hasOwnProperty(i)) {\n          types[i] = [i.charCodeAt(0), i.charCodeAt(1), i.charCodeAt(2), i.charCodeAt(3)];\n        }\n      }\n      MAJOR_BRAND = new Uint8Array(['i'.charCodeAt(0), 's'.charCodeAt(0), 'o'.charCodeAt(0), 'm'.charCodeAt(0)]);\n      AVC1_BRAND = new Uint8Array(['a'.charCodeAt(0), 'v'.charCodeAt(0), 'c'.charCodeAt(0), '1'.charCodeAt(0)]);\n      MINOR_VERSION = new Uint8Array([0, 0, 0, 1]);\n      VIDEO_HDLR = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      0x76, 0x69, 0x64, 0x65,\n      // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n      ]);\n\n      AUDIO_HDLR = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      0x73, 0x6f, 0x75, 0x6e,\n      // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61, 0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n      ]);\n\n      HDLR_TYPES = {\n        video: VIDEO_HDLR,\n        audio: AUDIO_HDLR\n      };\n      DREF = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01,\n      // entry_count\n      0x00, 0x00, 0x00, 0x0c,\n      // entry_size\n      0x75, 0x72, 0x6c, 0x20,\n      // 'url' type\n      0x00,\n      // version 0\n      0x00, 0x00, 0x01 // entry_flags\n      ]);\n\n      SMHD = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00,\n      // balance, 0 means centered\n      0x00, 0x00 // reserved\n      ]);\n\n      STCO = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00 // entry_count\n      ]);\n\n      STSC = STCO;\n      STSZ = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // sample_size\n      0x00, 0x00, 0x00, 0x00 // sample_count\n      ]);\n\n      STTS = STCO;\n      VMHD = new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x01,\n      // flags\n      0x00, 0x00,\n      // graphicsmode\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // opcolor\n      ]);\n    })();\n\n    box = function (type) {\n      var payload = [],\n        size = 0,\n        i,\n        result,\n        view;\n      for (i = 1; i < arguments.length; i++) {\n        payload.push(arguments[i]);\n      }\n      i = payload.length; // calculate the total size we need to allocate\n\n      while (i--) {\n        size += payload[i].byteLength;\n      }\n      result = new Uint8Array(size + 8);\n      view = new DataView(result.buffer, result.byteOffset, result.byteLength);\n      view.setUint32(0, result.byteLength);\n      result.set(type, 4); // copy the payload into the result\n\n      for (i = 0, size = 8; i < payload.length; i++) {\n        result.set(payload[i], size);\n        size += payload[i].byteLength;\n      }\n      return result;\n    };\n    dinf = function () {\n      return box(types.dinf, box(types.dref, DREF));\n    };\n    esds = function (track) {\n      return box(types.esds, new Uint8Array([0x00,\n      // version\n      0x00, 0x00, 0x00,\n      // flags\n      // ES_Descriptor\n      0x03,\n      // tag, ES_DescrTag\n      0x19,\n      // length\n      0x00, 0x00,\n      // ES_ID\n      0x00,\n      // streamDependenceFlag, URL_flag, reserved, streamPriority\n      // DecoderConfigDescriptor\n      0x04,\n      // tag, DecoderConfigDescrTag\n      0x11,\n      // length\n      0x40,\n      // object type\n      0x15,\n      // streamType\n      0x00, 0x06, 0x00,\n      // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0,\n      // maxBitrate\n      0x00, 0x00, 0xda, 0xc0,\n      // avgBitrate\n      // DecoderSpecificInfo\n      0x05,\n      // tag, DecoderSpecificInfoTag\n      0x02,\n      // length\n      // ISO/IEC 14496-3, AudioSpecificConfig\n      // for samplingFrequencyIndex see ISO/IEC 13818-7:2006, 8.1.3.2.2, Table 35\n      track.audioobjecttype << 3 | track.samplingfrequencyindex >>> 1, track.samplingfrequencyindex << 7 | track.channelcount << 3, 0x06, 0x01, 0x02 // GASpecificConfig\n      ]));\n    };\n\n    ftyp = function () {\n      return box(types.ftyp, MAJOR_BRAND, MINOR_VERSION, MAJOR_BRAND, AVC1_BRAND);\n    };\n    hdlr = function (type) {\n      return box(types.hdlr, HDLR_TYPES[type]);\n    };\n    mdat = function (data) {\n      return box(types.mdat, data);\n    };\n    mdhd = function (track) {\n      var result = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x02,\n      // creation_time\n      0x00, 0x00, 0x00, 0x03,\n      // modification_time\n      0x00, 0x01, 0x5f, 0x90,\n      // timescale, 90,000 \"ticks\" per second\n      track.duration >>> 24 & 0xFF, track.duration >>> 16 & 0xFF, track.duration >>> 8 & 0xFF, track.duration & 0xFF,\n      // duration\n      0x55, 0xc4,\n      // 'und' language (undetermined)\n      0x00, 0x00]); // Use the sample rate from the track metadata, when it is\n      // defined. The sample rate can be parsed out of an ADTS header, for\n      // instance.\n\n      if (track.samplerate) {\n        result[12] = track.samplerate >>> 24 & 0xFF;\n        result[13] = track.samplerate >>> 16 & 0xFF;\n        result[14] = track.samplerate >>> 8 & 0xFF;\n        result[15] = track.samplerate & 0xFF;\n      }\n      return box(types.mdhd, result);\n    };\n    mdia = function (track) {\n      return box(types.mdia, mdhd(track), hdlr(track.type), minf(track));\n    };\n    mfhd = function (sequenceNumber) {\n      return box(types.mfhd, new Uint8Array([0x00, 0x00, 0x00, 0x00,\n      // flags\n      (sequenceNumber & 0xFF000000) >> 24, (sequenceNumber & 0xFF0000) >> 16, (sequenceNumber & 0xFF00) >> 8, sequenceNumber & 0xFF // sequence_number\n      ]));\n    };\n\n    minf = function (track) {\n      return box(types.minf, track.type === 'video' ? box(types.vmhd, VMHD) : box(types.smhd, SMHD), dinf(), stbl(track));\n    };\n    moof = function (sequenceNumber, tracks) {\n      var trackFragments = [],\n        i = tracks.length; // build traf boxes for each track fragment\n\n      while (i--) {\n        trackFragments[i] = traf(tracks[i]);\n      }\n      return box.apply(null, [types.moof, mfhd(sequenceNumber)].concat(trackFragments));\n    };\n    /**\n     * Returns a movie box.\n     * @param tracks {array} the tracks associated with this movie\n     * @see ISO/IEC 14496-12:2012(E), section 8.2.1\n     */\n\n    moov = function (tracks) {\n      var i = tracks.length,\n        boxes = [];\n      while (i--) {\n        boxes[i] = trak(tracks[i]);\n      }\n      return box.apply(null, [types.moov, mvhd(0xffffffff)].concat(boxes).concat(mvex(tracks)));\n    };\n    mvex = function (tracks) {\n      var i = tracks.length,\n        boxes = [];\n      while (i--) {\n        boxes[i] = trex(tracks[i]);\n      }\n      return box.apply(null, [types.mvex].concat(boxes));\n    };\n    mvhd = function (duration) {\n      var bytes = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      0x00, 0x00, 0x00, 0x01,\n      // creation_time\n      0x00, 0x00, 0x00, 0x02,\n      // modification_time\n      0x00, 0x01, 0x5f, 0x90,\n      // timescale, 90,000 \"ticks\" per second\n      (duration & 0xFF000000) >> 24, (duration & 0xFF0000) >> 16, (duration & 0xFF00) >> 8, duration & 0xFF,\n      // duration\n      0x00, 0x01, 0x00, 0x00,\n      // 1.0 rate\n      0x01, 0x00,\n      // 1.0 volume\n      0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n      // transformation: unity matrix\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // pre_defined\n      0xff, 0xff, 0xff, 0xff // next_track_ID\n      ]);\n\n      return box(types.mvhd, bytes);\n    };\n    sdtp = function (track) {\n      var samples = track.samples || [],\n        bytes = new Uint8Array(4 + samples.length),\n        flags,\n        i; // leave the full box header (4 bytes) all zero\n      // write the sample table\n\n      for (i = 0; i < samples.length; i++) {\n        flags = samples[i].flags;\n        bytes[i + 4] = flags.dependsOn << 4 | flags.isDependedOn << 2 | flags.hasRedundancy;\n      }\n      return box(types.sdtp, bytes);\n    };\n    stbl = function (track) {\n      return box(types.stbl, stsd(track), box(types.stts, STTS), box(types.stsc, STSC), box(types.stsz, STSZ), box(types.stco, STCO));\n    };\n    (function () {\n      var videoSample, audioSample;\n      stsd = function (track) {\n        return box(types.stsd, new Uint8Array([0x00,\n        // version 0\n        0x00, 0x00, 0x00,\n        // flags\n        0x00, 0x00, 0x00, 0x01]), track.type === 'video' ? videoSample(track) : audioSample(track));\n      };\n      videoSample = function (track) {\n        var sps = track.sps || [],\n          pps = track.pps || [],\n          sequenceParameterSets = [],\n          pictureParameterSets = [],\n          i,\n          avc1Box; // assemble the SPSs\n\n        for (i = 0; i < sps.length; i++) {\n          sequenceParameterSets.push((sps[i].byteLength & 0xFF00) >>> 8);\n          sequenceParameterSets.push(sps[i].byteLength & 0xFF); // sequenceParameterSetLength\n\n          sequenceParameterSets = sequenceParameterSets.concat(Array.prototype.slice.call(sps[i])); // SPS\n        } // assemble the PPSs\n\n        for (i = 0; i < pps.length; i++) {\n          pictureParameterSets.push((pps[i].byteLength & 0xFF00) >>> 8);\n          pictureParameterSets.push(pps[i].byteLength & 0xFF);\n          pictureParameterSets = pictureParameterSets.concat(Array.prototype.slice.call(pps[i]));\n        }\n        avc1Box = [types.avc1, new Uint8Array([0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x01,\n        // data_reference_index\n        0x00, 0x00,\n        // pre_defined\n        0x00, 0x00,\n        // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // pre_defined\n        (track.width & 0xff00) >> 8, track.width & 0xff,\n        // width\n        (track.height & 0xff00) >> 8, track.height & 0xff,\n        // height\n        0x00, 0x48, 0x00, 0x00,\n        // horizresolution\n        0x00, 0x48, 0x00, 0x00,\n        // vertresolution\n        0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x01,\n        // frame_count\n        0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x6a, 0x73, 0x2d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x2d, 0x68, 0x6c, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // compressorname\n        0x00, 0x18,\n        // depth = 24\n        0x11, 0x11 // pre_defined = -1\n        ]), box(types.avcC, new Uint8Array([0x01,\n        // configurationVersion\n        track.profileIdc,\n        // AVCProfileIndication\n        track.profileCompatibility,\n        // profile_compatibility\n        track.levelIdc,\n        // AVCLevelIndication\n        0xff // lengthSizeMinusOne, hard-coded to 4 bytes\n        ].concat([sps.length],\n        // numOfSequenceParameterSets\n        sequenceParameterSets,\n        // \"SPS\"\n        [pps.length],\n        // numOfPictureParameterSets\n        pictureParameterSets // \"PPS\"\n        ))), box(types.btrt, new Uint8Array([0x00, 0x1c, 0x9c, 0x80,\n        // bufferSizeDB\n        0x00, 0x2d, 0xc6, 0xc0,\n        // maxBitrate\n        0x00, 0x2d, 0xc6, 0xc0 // avgBitrate\n        ]))];\n\n        if (track.sarRatio) {\n          var hSpacing = track.sarRatio[0],\n            vSpacing = track.sarRatio[1];\n          avc1Box.push(box(types.pasp, new Uint8Array([(hSpacing & 0xFF000000) >> 24, (hSpacing & 0xFF0000) >> 16, (hSpacing & 0xFF00) >> 8, hSpacing & 0xFF, (vSpacing & 0xFF000000) >> 24, (vSpacing & 0xFF0000) >> 16, (vSpacing & 0xFF00) >> 8, vSpacing & 0xFF])));\n        }\n        return box.apply(null, avc1Box);\n      };\n      audioSample = function (track) {\n        return box(types.mp4a, new Uint8Array([\n        // SampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x01,\n        // data_reference_index\n        // AudioSampleEntry, ISO/IEC 14496-12\n        0x00, 0x00, 0x00, 0x00,\n        // reserved\n        0x00, 0x00, 0x00, 0x00,\n        // reserved\n        (track.channelcount & 0xff00) >> 8, track.channelcount & 0xff,\n        // channelcount\n        (track.samplesize & 0xff00) >> 8, track.samplesize & 0xff,\n        // samplesize\n        0x00, 0x00,\n        // pre_defined\n        0x00, 0x00,\n        // reserved\n        (track.samplerate & 0xff00) >> 8, track.samplerate & 0xff, 0x00, 0x00 // samplerate, 16.16\n        // MP4AudioSampleEntry, ISO/IEC 14496-14\n        ]), esds(track));\n      };\n    })();\n    tkhd = function (track) {\n      var result = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x07,\n      // flags\n      0x00, 0x00, 0x00, 0x00,\n      // creation_time\n      0x00, 0x00, 0x00, 0x00,\n      // modification_time\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n      // track_ID\n      0x00, 0x00, 0x00, 0x00,\n      // reserved\n      (track.duration & 0xFF000000) >> 24, (track.duration & 0xFF0000) >> 16, (track.duration & 0xFF00) >> 8, track.duration & 0xFF,\n      // duration\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,\n      // reserved\n      0x00, 0x00,\n      // layer\n      0x00, 0x00,\n      // alternate_group\n      0x01, 0x00,\n      // non-audio track volume\n      0x00, 0x00,\n      // reserved\n      0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00,\n      // transformation: unity matrix\n      (track.width & 0xFF00) >> 8, track.width & 0xFF, 0x00, 0x00,\n      // width\n      (track.height & 0xFF00) >> 8, track.height & 0xFF, 0x00, 0x00 // height\n      ]);\n\n      return box(types.tkhd, result);\n    };\n    /**\n     * Generate a track fragment (traf) box. A traf box collects metadata\n     * about tracks in a movie fragment (moof) box.\n     */\n\n    traf = function (track) {\n      var trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable, dataOffset, upperWordBaseMediaDecodeTime, lowerWordBaseMediaDecodeTime;\n      trackFragmentHeader = box(types.tfhd, new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x3a,\n      // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n      // track_ID\n      0x00, 0x00, 0x00, 0x01,\n      // sample_description_index\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_duration\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_size\n      0x00, 0x00, 0x00, 0x00 // default_sample_flags\n      ]));\n\n      upperWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime / MAX_UINT32);\n      lowerWordBaseMediaDecodeTime = Math.floor(track.baseMediaDecodeTime % MAX_UINT32);\n      trackFragmentDecodeTime = box(types.tfdt, new Uint8Array([0x01,\n      // version 1\n      0x00, 0x00, 0x00,\n      // flags\n      // baseMediaDecodeTime\n      upperWordBaseMediaDecodeTime >>> 24 & 0xFF, upperWordBaseMediaDecodeTime >>> 16 & 0xFF, upperWordBaseMediaDecodeTime >>> 8 & 0xFF, upperWordBaseMediaDecodeTime & 0xFF, lowerWordBaseMediaDecodeTime >>> 24 & 0xFF, lowerWordBaseMediaDecodeTime >>> 16 & 0xFF, lowerWordBaseMediaDecodeTime >>> 8 & 0xFF, lowerWordBaseMediaDecodeTime & 0xFF])); // the data offset specifies the number of bytes from the start of\n      // the containing moof to the first payload byte of the associated\n      // mdat\n\n      dataOffset = 32 +\n      // tfhd\n      20 +\n      // tfdt\n      8 +\n      // traf header\n      16 +\n      // mfhd\n      8 +\n      // moof header\n      8; // mdat header\n      // audio tracks require less metadata\n\n      if (track.type === 'audio') {\n        trackFragmentRun = trun$1(track, dataOffset);\n        return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun);\n      } // video tracks should contain an independent and disposable samples\n      // box (sdtp)\n      // generate one and adjust offsets to match\n\n      sampleDependencyTable = sdtp(track);\n      trackFragmentRun = trun$1(track, sampleDependencyTable.length + dataOffset);\n      return box(types.traf, trackFragmentHeader, trackFragmentDecodeTime, trackFragmentRun, sampleDependencyTable);\n    };\n    /**\n     * Generate a track box.\n     * @param track {object} a track definition\n     * @return {Uint8Array} the track box\n     */\n\n    trak = function (track) {\n      track.duration = track.duration || 0xffffffff;\n      return box(types.trak, tkhd(track), mdia(track));\n    };\n    trex = function (track) {\n      var result = new Uint8Array([0x00,\n      // version 0\n      0x00, 0x00, 0x00,\n      // flags\n      (track.id & 0xFF000000) >> 24, (track.id & 0xFF0000) >> 16, (track.id & 0xFF00) >> 8, track.id & 0xFF,\n      // track_ID\n      0x00, 0x00, 0x00, 0x01,\n      // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_duration\n      0x00, 0x00, 0x00, 0x00,\n      // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n      ]); // the last two bytes of default_sample_flags is the sample\n      // degradation priority, a hint about the importance of this sample\n      // relative to others. Lower the degradation priority for all sample\n      // types other than video.\n\n      if (track.type !== 'video') {\n        result[result.length - 1] = 0x00;\n      }\n      return box(types.trex, result);\n    };\n    (function () {\n      var audioTrun, videoTrun, trunHeader; // This method assumes all samples are uniform. That is, if a\n      // duration is present for the first sample, it will be present for\n      // all subsequent samples.\n      // see ISO/IEC 14496-12:2012, Section 8.8.8.1\n\n      trunHeader = function (samples, offset) {\n        var durationPresent = 0,\n          sizePresent = 0,\n          flagsPresent = 0,\n          compositionTimeOffset = 0; // trun flag constants\n\n        if (samples.length) {\n          if (samples[0].duration !== undefined) {\n            durationPresent = 0x1;\n          }\n          if (samples[0].size !== undefined) {\n            sizePresent = 0x2;\n          }\n          if (samples[0].flags !== undefined) {\n            flagsPresent = 0x4;\n          }\n          if (samples[0].compositionTimeOffset !== undefined) {\n            compositionTimeOffset = 0x8;\n          }\n        }\n        return [0x00,\n        // version 0\n        0x00, durationPresent | sizePresent | flagsPresent | compositionTimeOffset, 0x01,\n        // flags\n        (samples.length & 0xFF000000) >>> 24, (samples.length & 0xFF0000) >>> 16, (samples.length & 0xFF00) >>> 8, samples.length & 0xFF,\n        // sample_count\n        (offset & 0xFF000000) >>> 24, (offset & 0xFF0000) >>> 16, (offset & 0xFF00) >>> 8, offset & 0xFF // data_offset\n        ];\n      };\n\n      videoTrun = function (track, offset) {\n        var bytesOffest, bytes, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 16 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 16);\n        bytes.set(header);\n        bytesOffest = header.length;\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n\n          bytes[bytesOffest++] = sample.flags.isLeading << 2 | sample.flags.dependsOn;\n          bytes[bytesOffest++] = sample.flags.isDependedOn << 6 | sample.flags.hasRedundancy << 4 | sample.flags.paddingValue << 1 | sample.flags.isNonSyncSample;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0xF0 << 8;\n          bytes[bytesOffest++] = sample.flags.degradationPriority & 0x0F; // sample_flags\n\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.compositionTimeOffset & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.compositionTimeOffset & 0xFF; // sample_composition_time_offset\n        }\n\n        return box(types.trun, bytes);\n      };\n      audioTrun = function (track, offset) {\n        var bytes, bytesOffest, header, samples, sample, i;\n        samples = track.samples || [];\n        offset += 8 + 12 + 8 * samples.length;\n        header = trunHeader(samples, offset);\n        bytes = new Uint8Array(header.length + samples.length * 8);\n        bytes.set(header);\n        bytesOffest = header.length;\n        for (i = 0; i < samples.length; i++) {\n          sample = samples[i];\n          bytes[bytesOffest++] = (sample.duration & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.duration & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.duration & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.duration & 0xFF; // sample_duration\n\n          bytes[bytesOffest++] = (sample.size & 0xFF000000) >>> 24;\n          bytes[bytesOffest++] = (sample.size & 0xFF0000) >>> 16;\n          bytes[bytesOffest++] = (sample.size & 0xFF00) >>> 8;\n          bytes[bytesOffest++] = sample.size & 0xFF; // sample_size\n        }\n\n        return box(types.trun, bytes);\n      };\n      trun$1 = function (track, offset) {\n        if (track.type === 'audio') {\n          return audioTrun(track, offset);\n        }\n        return videoTrun(track, offset);\n      };\n    })();\n    var mp4Generator = {\n      ftyp: ftyp,\n      mdat: mdat,\n      moof: moof,\n      moov: moov,\n      initSegment: function (tracks) {\n        var fileType = ftyp(),\n          movie = moov(tracks),\n          result;\n        result = new Uint8Array(fileType.byteLength + movie.byteLength);\n        result.set(fileType);\n        result.set(movie, fileType.byteLength);\n        return result;\n      }\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n    // composed of the nal units that make up that frame\n    // Also keep track of cummulative data about the frame from the nal units such\n    // as the frame duration, starting pts, etc.\n\n    var groupNalsIntoFrames = function (nalUnits) {\n      var i,\n        currentNal,\n        currentFrame = [],\n        frames = []; // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength = 0;\n      frames.nalCount = 0;\n      frames.duration = 0;\n      currentFrame.byteLength = 0;\n      for (i = 0; i < nalUnits.length; i++) {\n        currentNal = nalUnits[i]; // Split on 'aud'-type nal units\n\n        if (currentNal.nalUnitType === 'access_unit_delimiter_rbsp') {\n          // Since the very first nal unit is expected to be an AUD\n          // only push to the frames array when currentFrame is not empty\n          if (currentFrame.length) {\n            currentFrame.duration = currentNal.dts - currentFrame.dts; // TODO added for LHLS, make sure this is OK\n\n            frames.byteLength += currentFrame.byteLength;\n            frames.nalCount += currentFrame.length;\n            frames.duration += currentFrame.duration;\n            frames.push(currentFrame);\n          }\n          currentFrame = [currentNal];\n          currentFrame.byteLength = currentNal.data.byteLength;\n          currentFrame.pts = currentNal.pts;\n          currentFrame.dts = currentNal.dts;\n        } else {\n          // Specifically flag key frames for ease of use later\n          if (currentNal.nalUnitType === 'slice_layer_without_partitioning_rbsp_idr') {\n            currentFrame.keyFrame = true;\n          }\n          currentFrame.duration = currentNal.dts - currentFrame.dts;\n          currentFrame.byteLength += currentNal.data.byteLength;\n          currentFrame.push(currentNal);\n        }\n      } // For the last frame, use the duration of the previous frame if we\n      // have nothing better to go on\n\n      if (frames.length && (!currentFrame.duration || currentFrame.duration <= 0)) {\n        currentFrame.duration = frames[frames.length - 1].duration;\n      } // Push the final frame\n      // TODO added for LHLS, make sure this is OK\n\n      frames.byteLength += currentFrame.byteLength;\n      frames.nalCount += currentFrame.length;\n      frames.duration += currentFrame.duration;\n      frames.push(currentFrame);\n      return frames;\n    }; // Convert an array of frames into an array of Gop with each Gop being composed\n    // of the frames that make up that Gop\n    // Also keep track of cummulative data about the Gop from the frames such as the\n    // Gop duration, starting pts, etc.\n\n    var groupFramesIntoGops = function (frames) {\n      var i,\n        currentFrame,\n        currentGop = [],\n        gops = []; // We must pre-set some of the values on the Gop since we\n      // keep running totals of these values\n\n      currentGop.byteLength = 0;\n      currentGop.nalCount = 0;\n      currentGop.duration = 0;\n      currentGop.pts = frames[0].pts;\n      currentGop.dts = frames[0].dts; // store some metadata about all the Gops\n\n      gops.byteLength = 0;\n      gops.nalCount = 0;\n      gops.duration = 0;\n      gops.pts = frames[0].pts;\n      gops.dts = frames[0].dts;\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        if (currentFrame.keyFrame) {\n          // Since the very first frame is expected to be an keyframe\n          // only push to the gops array when currentGop is not empty\n          if (currentGop.length) {\n            gops.push(currentGop);\n            gops.byteLength += currentGop.byteLength;\n            gops.nalCount += currentGop.nalCount;\n            gops.duration += currentGop.duration;\n          }\n          currentGop = [currentFrame];\n          currentGop.nalCount = currentFrame.length;\n          currentGop.byteLength = currentFrame.byteLength;\n          currentGop.pts = currentFrame.pts;\n          currentGop.dts = currentFrame.dts;\n          currentGop.duration = currentFrame.duration;\n        } else {\n          currentGop.duration += currentFrame.duration;\n          currentGop.nalCount += currentFrame.length;\n          currentGop.byteLength += currentFrame.byteLength;\n          currentGop.push(currentFrame);\n        }\n      }\n      if (gops.length && currentGop.duration <= 0) {\n        currentGop.duration = gops[gops.length - 1].duration;\n      }\n      gops.byteLength += currentGop.byteLength;\n      gops.nalCount += currentGop.nalCount;\n      gops.duration += currentGop.duration; // push the final Gop\n\n      gops.push(currentGop);\n      return gops;\n    };\n    /*\n     * Search for the first keyframe in the GOPs and throw away all frames\n     * until that keyframe. Then extend the duration of the pulled keyframe\n     * and pull the PTS and DTS of the keyframe so that it covers the time\n     * range of the frames that were disposed.\n     *\n     * @param {Array} gops video GOPs\n     * @returns {Array} modified video GOPs\n     */\n\n    var extendFirstKeyFrame = function (gops) {\n      var currentGop;\n      if (!gops[0][0].keyFrame && gops.length > 1) {\n        // Remove the first GOP\n        currentGop = gops.shift();\n        gops.byteLength -= currentGop.byteLength;\n        gops.nalCount -= currentGop.nalCount; // Extend the first frame of what is now the\n        // first gop to cover the time period of the\n        // frames we just removed\n\n        gops[0][0].dts = currentGop.dts;\n        gops[0][0].pts = currentGop.pts;\n        gops[0][0].duration += currentGop.duration;\n      }\n      return gops;\n    };\n    /**\n     * Default sample object\n     * see ISO/IEC 14496-12:2012, section 8.6.4.3\n     */\n\n    var createDefaultSample = function () {\n      return {\n        size: 0,\n        flags: {\n          isLeading: 0,\n          dependsOn: 1,\n          isDependedOn: 0,\n          hasRedundancy: 0,\n          degradationPriority: 0,\n          isNonSyncSample: 1\n        }\n      };\n    };\n    /*\n     * Collates information from a video frame into an object for eventual\n     * entry into an MP4 sample table.\n     *\n     * @param {Object} frame the video frame\n     * @param {Number} dataOffset the byte offset to position the sample\n     * @return {Object} object containing sample table info for a frame\n     */\n\n    var sampleForFrame = function (frame, dataOffset) {\n      var sample = createDefaultSample();\n      sample.dataOffset = dataOffset;\n      sample.compositionTimeOffset = frame.pts - frame.dts;\n      sample.duration = frame.duration;\n      sample.size = 4 * frame.length; // Space for nal unit size\n\n      sample.size += frame.byteLength;\n      if (frame.keyFrame) {\n        sample.flags.dependsOn = 2;\n        sample.flags.isNonSyncSample = 0;\n      }\n      return sample;\n    }; // generate the track's sample table from an array of gops\n\n    var generateSampleTable$1 = function (gops, baseDataOffset) {\n      var h,\n        i,\n        sample,\n        currentGop,\n        currentFrame,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h];\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i];\n          sample = sampleForFrame(currentFrame, dataOffset);\n          dataOffset += sample.size;\n          samples.push(sample);\n        }\n      }\n      return samples;\n    }; // generate the track's raw mdat data from an array of gops\n\n    var concatenateNalData = function (gops) {\n      var h,\n        i,\n        j,\n        currentGop,\n        currentFrame,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = gops.byteLength,\n        numberOfNals = gops.nalCount,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each Gop..\n\n      for (h = 0; h < gops.length; h++) {\n        currentGop = gops[h]; // For each Frame..\n\n        for (i = 0; i < currentGop.length; i++) {\n          currentFrame = currentGop[i]; // For each NAL..\n\n          for (j = 0; j < currentFrame.length; j++) {\n            currentNal = currentFrame[j];\n            view.setUint32(dataOffset, currentNal.data.byteLength);\n            dataOffset += 4;\n            data.set(currentNal.data, dataOffset);\n            dataOffset += currentNal.data.byteLength;\n          }\n        }\n      }\n      return data;\n    }; // generate the track's sample table from a frame\n\n    var generateSampleTableForFrame = function (frame, baseDataOffset) {\n      var sample,\n        dataOffset = baseDataOffset || 0,\n        samples = [];\n      sample = sampleForFrame(frame, dataOffset);\n      samples.push(sample);\n      return samples;\n    }; // generate the track's raw mdat data from a frame\n\n    var concatenateNalDataForFrame = function (frame) {\n      var i,\n        currentNal,\n        dataOffset = 0,\n        nalsByteLength = frame.byteLength,\n        numberOfNals = frame.length,\n        totalByteLength = nalsByteLength + 4 * numberOfNals,\n        data = new Uint8Array(totalByteLength),\n        view = new DataView(data.buffer); // For each NAL..\n\n      for (i = 0; i < frame.length; i++) {\n        currentNal = frame[i];\n        view.setUint32(dataOffset, currentNal.data.byteLength);\n        dataOffset += 4;\n        data.set(currentNal.data, dataOffset);\n        dataOffset += currentNal.data.byteLength;\n      }\n      return data;\n    };\n    var frameUtils$1 = {\n      groupNalsIntoFrames: groupNalsIntoFrames,\n      groupFramesIntoGops: groupFramesIntoGops,\n      extendFirstKeyFrame: extendFirstKeyFrame,\n      generateSampleTable: generateSampleTable$1,\n      concatenateNalData: concatenateNalData,\n      generateSampleTableForFrame: generateSampleTableForFrame,\n      concatenateNalDataForFrame: concatenateNalDataForFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var highPrefix = [33, 16, 5, 32, 164, 27];\n    var lowPrefix = [33, 65, 108, 84, 1, 2, 4, 8, 168, 2, 4, 8, 17, 191, 252];\n    var zeroFill = function (count) {\n      var a = [];\n      while (count--) {\n        a.push(0);\n      }\n      return a;\n    };\n    var makeTable = function (metaTable) {\n      return Object.keys(metaTable).reduce(function (obj, key) {\n        obj[key] = new Uint8Array(metaTable[key].reduce(function (arr, part) {\n          return arr.concat(part);\n        }, []));\n        return obj;\n      }, {});\n    };\n    var silence;\n    var silence_1 = function () {\n      if (!silence) {\n        // Frames-of-silence to use for filling in missing AAC frames\n        var coneOfSilence = {\n          96000: [highPrefix, [227, 64], zeroFill(154), [56]],\n          88200: [highPrefix, [231], zeroFill(170), [56]],\n          64000: [highPrefix, [248, 192], zeroFill(240), [56]],\n          48000: [highPrefix, [255, 192], zeroFill(268), [55, 148, 128], zeroFill(54), [112]],\n          44100: [highPrefix, [255, 192], zeroFill(268), [55, 163, 128], zeroFill(84), [112]],\n          32000: [highPrefix, [255, 192], zeroFill(268), [55, 234], zeroFill(226), [112]],\n          24000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 112], zeroFill(126), [224]],\n          16000: [highPrefix, [255, 192], zeroFill(268), [55, 255, 128], zeroFill(268), [111, 255], zeroFill(269), [223, 108], zeroFill(195), [1, 192]],\n          12000: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 253, 128], zeroFill(259), [56]],\n          11025: [lowPrefix, zeroFill(268), [3, 127, 248], zeroFill(268), [6, 255, 240], zeroFill(268), [13, 255, 224], zeroFill(268), [27, 255, 192], zeroFill(268), [55, 175, 128], zeroFill(108), [112]],\n          8000: [lowPrefix, zeroFill(268), [3, 121, 16], zeroFill(47), [7]]\n        };\n        silence = makeTable(coneOfSilence);\n      }\n      return silence;\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$4 = 90000,\n      // 90kHz clock\n      secondsToVideoTs,\n      secondsToAudioTs,\n      videoTsToSeconds,\n      audioTsToSeconds,\n      audioTsToVideoTs,\n      videoTsToAudioTs,\n      metadataTsToSeconds;\n    secondsToVideoTs = function (seconds) {\n      return seconds * ONE_SECOND_IN_TS$4;\n    };\n    secondsToAudioTs = function (seconds, sampleRate) {\n      return seconds * sampleRate;\n    };\n    videoTsToSeconds = function (timestamp) {\n      return timestamp / ONE_SECOND_IN_TS$4;\n    };\n    audioTsToSeconds = function (timestamp, sampleRate) {\n      return timestamp / sampleRate;\n    };\n    audioTsToVideoTs = function (timestamp, sampleRate) {\n      return secondsToVideoTs(audioTsToSeconds(timestamp, sampleRate));\n    };\n    videoTsToAudioTs = function (timestamp, sampleRate) {\n      return secondsToAudioTs(videoTsToSeconds(timestamp), sampleRate);\n    };\n    /**\n     * Adjust ID3 tag or caption timing information by the timeline pts values\n     * (if keepOriginalTimestamps is false) and convert to seconds\n     */\n\n    metadataTsToSeconds = function (timestamp, timelineStartPts, keepOriginalTimestamps) {\n      return videoTsToSeconds(keepOriginalTimestamps ? timestamp : timestamp - timelineStartPts);\n    };\n    var clock$2 = {\n      ONE_SECOND_IN_TS: ONE_SECOND_IN_TS$4,\n      secondsToVideoTs: secondsToVideoTs,\n      secondsToAudioTs: secondsToAudioTs,\n      videoTsToSeconds: videoTsToSeconds,\n      audioTsToSeconds: audioTsToSeconds,\n      audioTsToVideoTs: audioTsToVideoTs,\n      videoTsToAudioTs: videoTsToAudioTs,\n      metadataTsToSeconds: metadataTsToSeconds\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var coneOfSilence = silence_1;\n    var clock$1 = clock$2;\n    /**\n     * Sum the `byteLength` properties of the data in each AAC frame\n     */\n\n    var sumFrameByteLengths = function (array) {\n      var i,\n        currentObj,\n        sum = 0; // sum the byteLength's all each nal unit in the frame\n\n      for (i = 0; i < array.length; i++) {\n        currentObj = array[i];\n        sum += currentObj.data.byteLength;\n      }\n      return sum;\n    }; // Possibly pad (prefix) the audio track with silence if appending this track\n    // would lead to the introduction of a gap in the audio buffer\n\n    var prefixWithSilence = function (track, frames, audioAppendStartTs, videoBaseMediaDecodeTime) {\n      var baseMediaDecodeTimeTs,\n        frameDuration = 0,\n        audioGapDuration = 0,\n        audioFillFrameCount = 0,\n        audioFillDuration = 0,\n        silentFrame,\n        i,\n        firstFrame;\n      if (!frames.length) {\n        return;\n      }\n      baseMediaDecodeTimeTs = clock$1.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate); // determine frame clock duration based on sample rate, round up to avoid overfills\n\n      frameDuration = Math.ceil(clock$1.ONE_SECOND_IN_TS / (track.samplerate / 1024));\n      if (audioAppendStartTs && videoBaseMediaDecodeTime) {\n        // insert the shortest possible amount (audio gap or audio to video gap)\n        audioGapDuration = baseMediaDecodeTimeTs - Math.max(audioAppendStartTs, videoBaseMediaDecodeTime); // number of full frames in the audio gap\n\n        audioFillFrameCount = Math.floor(audioGapDuration / frameDuration);\n        audioFillDuration = audioFillFrameCount * frameDuration;\n      } // don't attempt to fill gaps smaller than a single frame or larger\n      // than a half second\n\n      if (audioFillFrameCount < 1 || audioFillDuration > clock$1.ONE_SECOND_IN_TS / 2) {\n        return;\n      }\n      silentFrame = coneOfSilence()[track.samplerate];\n      if (!silentFrame) {\n        // we don't have a silent frame pregenerated for the sample rate, so use a frame\n        // from the content instead\n        silentFrame = frames[0].data;\n      }\n      for (i = 0; i < audioFillFrameCount; i++) {\n        firstFrame = frames[0];\n        frames.splice(0, 0, {\n          data: silentFrame,\n          dts: firstFrame.dts - frameDuration,\n          pts: firstFrame.pts - frameDuration\n        });\n      }\n      track.baseMediaDecodeTime -= Math.floor(clock$1.videoTsToAudioTs(audioFillDuration, track.samplerate));\n      return audioFillDuration;\n    }; // If the audio segment extends before the earliest allowed dts\n    // value, remove AAC frames until starts at or after the earliest\n    // allowed DTS so that we don't end up with a negative baseMedia-\n    // DecodeTime for the audio track\n\n    var trimAdtsFramesByEarliestDts = function (adtsFrames, track, earliestAllowedDts) {\n      if (track.minSegmentDts >= earliestAllowedDts) {\n        return adtsFrames;\n      } // We will need to recalculate the earliest segment Dts\n\n      track.minSegmentDts = Infinity;\n      return adtsFrames.filter(function (currentFrame) {\n        // If this is an allowed frame, keep it and record it's Dts\n        if (currentFrame.dts >= earliestAllowedDts) {\n          track.minSegmentDts = Math.min(track.minSegmentDts, currentFrame.dts);\n          track.minSegmentPts = track.minSegmentDts;\n          return true;\n        } // Otherwise, discard it\n\n        return false;\n      });\n    }; // generate the track's raw mdat data from an array of frames\n\n    var generateSampleTable = function (frames) {\n      var i,\n        currentFrame,\n        samples = [];\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        samples.push({\n          size: currentFrame.data.byteLength,\n          duration: 1024 // For AAC audio, all samples contain 1024 samples\n        });\n      }\n\n      return samples;\n    }; // generate the track's sample table from an array of frames\n\n    var concatenateFrameData = function (frames) {\n      var i,\n        currentFrame,\n        dataOffset = 0,\n        data = new Uint8Array(sumFrameByteLengths(frames));\n      for (i = 0; i < frames.length; i++) {\n        currentFrame = frames[i];\n        data.set(currentFrame.data, dataOffset);\n        dataOffset += currentFrame.data.byteLength;\n      }\n      return data;\n    };\n    var audioFrameUtils$1 = {\n      prefixWithSilence: prefixWithSilence,\n      trimAdtsFramesByEarliestDts: trimAdtsFramesByEarliestDts,\n      generateSampleTable: generateSampleTable,\n      concatenateFrameData: concatenateFrameData\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ONE_SECOND_IN_TS$3 = clock$2.ONE_SECOND_IN_TS;\n    /**\n     * Store information about the start and end of the track and the\n     * duration for each frame/sample we process in order to calculate\n     * the baseMediaDecodeTime\n     */\n\n    var collectDtsInfo = function (track, data) {\n      if (typeof data.pts === 'number') {\n        if (track.timelineStartInfo.pts === undefined) {\n          track.timelineStartInfo.pts = data.pts;\n        }\n        if (track.minSegmentPts === undefined) {\n          track.minSegmentPts = data.pts;\n        } else {\n          track.minSegmentPts = Math.min(track.minSegmentPts, data.pts);\n        }\n        if (track.maxSegmentPts === undefined) {\n          track.maxSegmentPts = data.pts;\n        } else {\n          track.maxSegmentPts = Math.max(track.maxSegmentPts, data.pts);\n        }\n      }\n      if (typeof data.dts === 'number') {\n        if (track.timelineStartInfo.dts === undefined) {\n          track.timelineStartInfo.dts = data.dts;\n        }\n        if (track.minSegmentDts === undefined) {\n          track.minSegmentDts = data.dts;\n        } else {\n          track.minSegmentDts = Math.min(track.minSegmentDts, data.dts);\n        }\n        if (track.maxSegmentDts === undefined) {\n          track.maxSegmentDts = data.dts;\n        } else {\n          track.maxSegmentDts = Math.max(track.maxSegmentDts, data.dts);\n        }\n      }\n    };\n    /**\n     * Clear values used to calculate the baseMediaDecodeTime between\n     * tracks\n     */\n\n    var clearDtsInfo = function (track) {\n      delete track.minSegmentDts;\n      delete track.maxSegmentDts;\n      delete track.minSegmentPts;\n      delete track.maxSegmentPts;\n    };\n    /**\n     * Calculate the track's baseMediaDecodeTime based on the earliest\n     * DTS the transmuxer has ever seen and the minimum DTS for the\n     * current track\n     * @param track {object} track metadata configuration\n     * @param keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    var calculateTrackBaseMediaDecodeTime = function (track, keepOriginalTimestamps) {\n      var baseMediaDecodeTime,\n        scale,\n        minSegmentDts = track.minSegmentDts; // Optionally adjust the time so the first segment starts at zero.\n\n      if (!keepOriginalTimestamps) {\n        minSegmentDts -= track.timelineStartInfo.dts;\n      } // track.timelineStartInfo.baseMediaDecodeTime is the location, in time, where\n      // we want the start of the first segment to be placed\n\n      baseMediaDecodeTime = track.timelineStartInfo.baseMediaDecodeTime; // Add to that the distance this segment is from the very first\n\n      baseMediaDecodeTime += minSegmentDts; // baseMediaDecodeTime must not become negative\n\n      baseMediaDecodeTime = Math.max(0, baseMediaDecodeTime);\n      if (track.type === 'audio') {\n        // Audio has a different clock equal to the sampling_rate so we need to\n        // scale the PTS values into the clock rate of the track\n        scale = track.samplerate / ONE_SECOND_IN_TS$3;\n        baseMediaDecodeTime *= scale;\n        baseMediaDecodeTime = Math.floor(baseMediaDecodeTime);\n      }\n      return baseMediaDecodeTime;\n    };\n    var trackDecodeInfo$1 = {\n      clearDtsInfo: clearDtsInfo,\n      calculateTrackBaseMediaDecodeTime: calculateTrackBaseMediaDecodeTime,\n      collectDtsInfo: collectDtsInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // payload type field to indicate how they are to be\n    // interpreted. CEAS-708 caption content is always transmitted with\n    // payload type 0x04.\n\n    var USER_DATA_REGISTERED_ITU_T_T35 = 4,\n      RBSP_TRAILING_BITS = 128;\n    /**\n      * Parse a supplemental enhancement information (SEI) NAL unit.\n      * Stops parsing once a message of type ITU T T35 has been found.\n      *\n      * @param bytes {Uint8Array} the bytes of a SEI NAL unit\n      * @return {object} the parsed SEI payload\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n      */\n\n    var parseSei = function (bytes) {\n      var i = 0,\n        result = {\n          payloadType: -1,\n          payloadSize: 0\n        },\n        payloadType = 0,\n        payloadSize = 0; // go through the sei_rbsp parsing each each individual sei_message\n\n      while (i < bytes.byteLength) {\n        // stop once we have hit the end of the sei_rbsp\n        if (bytes[i] === RBSP_TRAILING_BITS) {\n          break;\n        } // Parse payload type\n\n        while (bytes[i] === 0xFF) {\n          payloadType += 255;\n          i++;\n        }\n        payloadType += bytes[i++]; // Parse payload size\n\n        while (bytes[i] === 0xFF) {\n          payloadSize += 255;\n          i++;\n        }\n        payloadSize += bytes[i++]; // this sei_message is a 608/708 caption so save it and break\n        // there can only ever be one caption message in a frame's sei\n\n        if (!result.payload && payloadType === USER_DATA_REGISTERED_ITU_T_T35) {\n          var userIdentifier = String.fromCharCode(bytes[i + 3], bytes[i + 4], bytes[i + 5], bytes[i + 6]);\n          if (userIdentifier === 'GA94') {\n            result.payloadType = payloadType;\n            result.payloadSize = payloadSize;\n            result.payload = bytes.subarray(i, i + payloadSize);\n            break;\n          } else {\n            result.payload = void 0;\n          }\n        } // skip the payload and parse the next message\n\n        i += payloadSize;\n        payloadType = 0;\n        payloadSize = 0;\n      }\n      return result;\n    }; // see ANSI/SCTE 128-1 (2013), section 8.1\n\n    var parseUserData = function (sei) {\n      // itu_t_t35_contry_code must be 181 (United States) for\n      // captions\n      if (sei.payload[0] !== 181) {\n        return null;\n      } // itu_t_t35_provider_code should be 49 (ATSC) for captions\n\n      if ((sei.payload[1] << 8 | sei.payload[2]) !== 49) {\n        return null;\n      } // the user_identifier should be \"GA94\" to indicate ATSC1 data\n\n      if (String.fromCharCode(sei.payload[3], sei.payload[4], sei.payload[5], sei.payload[6]) !== 'GA94') {\n        return null;\n      } // finally, user_data_type_code should be 0x03 for caption data\n\n      if (sei.payload[7] !== 0x03) {\n        return null;\n      } // return the user_data_type_structure and strip the trailing\n      // marker bits\n\n      return sei.payload.subarray(8, sei.payload.length - 1);\n    }; // see CEA-708-D, section 4.4\n\n    var parseCaptionPackets = function (pts, userData) {\n      var results = [],\n        i,\n        count,\n        offset,\n        data; // if this is just filler, return immediately\n\n      if (!(userData[0] & 0x40)) {\n        return results;\n      } // parse out the cc_data_1 and cc_data_2 fields\n\n      count = userData[0] & 0x1f;\n      for (i = 0; i < count; i++) {\n        offset = i * 3;\n        data = {\n          type: userData[offset + 2] & 0x03,\n          pts: pts\n        }; // capture cc data when cc_valid is 1\n\n        if (userData[offset + 2] & 0x04) {\n          data.ccData = userData[offset + 3] << 8 | userData[offset + 4];\n          results.push(data);\n        }\n      }\n      return results;\n    };\n    var discardEmulationPreventionBytes$1 = function (data) {\n      var length = data.byteLength,\n        emulationPreventionBytesPositions = [],\n        i = 1,\n        newLength,\n        newData; // Find all `Emulation Prevention Bytes`\n\n      while (i < length - 2) {\n        if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n          emulationPreventionBytesPositions.push(i + 2);\n          i += 2;\n        } else {\n          i++;\n        }\n      } // If no Emulation Prevention Bytes were found just return the original\n      // array\n\n      if (emulationPreventionBytesPositions.length === 0) {\n        return data;\n      } // Create a new array to hold the NAL unit data\n\n      newLength = length - emulationPreventionBytesPositions.length;\n      newData = new Uint8Array(newLength);\n      var sourceIndex = 0;\n      for (i = 0; i < newLength; sourceIndex++, i++) {\n        if (sourceIndex === emulationPreventionBytesPositions[0]) {\n          // Skip this byte\n          sourceIndex++; // Remove this position index\n\n          emulationPreventionBytesPositions.shift();\n        }\n        newData[i] = data[sourceIndex];\n      }\n      return newData;\n    }; // exports\n\n    var captionPacketParser = {\n      parseSei: parseSei,\n      parseUserData: parseUserData,\n      parseCaptionPackets: parseCaptionPackets,\n      discardEmulationPreventionBytes: discardEmulationPreventionBytes$1,\n      USER_DATA_REGISTERED_ITU_T_T35: USER_DATA_REGISTERED_ITU_T_T35\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band caption information from a video elementary\n     * stream. Captions must follow the CEA-708 standard for injection\n     * into an MPEG-2 transport streams.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     * @see https://www.gpo.gov/fdsys/pkg/CFR-2007-title47-vol1/pdf/CFR-2007-title47-vol1-sec15-119.pdf\n     */\n    // Link To Transport\n    // -----------------\n\n    var Stream$7 = stream;\n    var cea708Parser = captionPacketParser;\n    var CaptionStream$2 = function (options) {\n      options = options || {};\n      CaptionStream$2.prototype.init.call(this); // parse708captions flag, default to true\n\n      this.parse708captions_ = typeof options.parse708captions === 'boolean' ? options.parse708captions : true;\n      this.captionPackets_ = [];\n      this.ccStreams_ = [new Cea608Stream(0, 0),\n      // eslint-disable-line no-use-before-define\n      new Cea608Stream(0, 1),\n      // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 0),\n      // eslint-disable-line no-use-before-define\n      new Cea608Stream(1, 1) // eslint-disable-line no-use-before-define\n      ];\n\n      if (this.parse708captions_) {\n        this.cc708Stream_ = new Cea708Stream({\n          captionServices: options.captionServices\n        }); // eslint-disable-line no-use-before-define\n      }\n\n      this.reset(); // forward data and done events from CCs to this CaptionStream\n\n      this.ccStreams_.forEach(function (cc) {\n        cc.on('data', this.trigger.bind(this, 'data'));\n        cc.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        cc.on('done', this.trigger.bind(this, 'done'));\n      }, this);\n      if (this.parse708captions_) {\n        this.cc708Stream_.on('data', this.trigger.bind(this, 'data'));\n        this.cc708Stream_.on('partialdone', this.trigger.bind(this, 'partialdone'));\n        this.cc708Stream_.on('done', this.trigger.bind(this, 'done'));\n      }\n    };\n    CaptionStream$2.prototype = new Stream$7();\n    CaptionStream$2.prototype.push = function (event) {\n      var sei, userData, newCaptionPackets; // only examine SEI NALs\n\n      if (event.nalUnitType !== 'sei_rbsp') {\n        return;\n      } // parse the sei\n\n      sei = cea708Parser.parseSei(event.escapedRBSP); // no payload data, skip\n\n      if (!sei.payload) {\n        return;\n      } // ignore everything but user_data_registered_itu_t_t35\n\n      if (sei.payloadType !== cea708Parser.USER_DATA_REGISTERED_ITU_T_T35) {\n        return;\n      } // parse out the user data payload\n\n      userData = cea708Parser.parseUserData(sei); // ignore unrecognized userData\n\n      if (!userData) {\n        return;\n      } // Sometimes, the same segment # will be downloaded twice. To stop the\n      // caption data from being processed twice, we track the latest dts we've\n      // received and ignore everything with a dts before that. However, since\n      // data for a specific dts can be split across packets on either side of\n      // a segment boundary, we need to make sure we *don't* ignore the packets\n      // from the *next* segment that have dts === this.latestDts_. By constantly\n      // tracking the number of packets received with dts === this.latestDts_, we\n      // know how many should be ignored once we start receiving duplicates.\n\n      if (event.dts < this.latestDts_) {\n        // We've started getting older data, so set the flag.\n        this.ignoreNextEqualDts_ = true;\n        return;\n      } else if (event.dts === this.latestDts_ && this.ignoreNextEqualDts_) {\n        this.numSameDts_--;\n        if (!this.numSameDts_) {\n          // We've received the last duplicate packet, time to start processing again\n          this.ignoreNextEqualDts_ = false;\n        }\n        return;\n      } // parse out CC data packets and save them for later\n\n      newCaptionPackets = cea708Parser.parseCaptionPackets(event.pts, userData);\n      this.captionPackets_ = this.captionPackets_.concat(newCaptionPackets);\n      if (this.latestDts_ !== event.dts) {\n        this.numSameDts_ = 0;\n      }\n      this.numSameDts_++;\n      this.latestDts_ = event.dts;\n    };\n    CaptionStream$2.prototype.flushCCStreams = function (flushType) {\n      this.ccStreams_.forEach(function (cc) {\n        return flushType === 'flush' ? cc.flush() : cc.partialFlush();\n      }, this);\n    };\n    CaptionStream$2.prototype.flushStream = function (flushType) {\n      // make sure we actually parsed captions before proceeding\n      if (!this.captionPackets_.length) {\n        this.flushCCStreams(flushType);\n        return;\n      } // In Chrome, the Array#sort function is not stable so add a\n      // presortIndex that we can use to ensure we get a stable-sort\n\n      this.captionPackets_.forEach(function (elem, idx) {\n        elem.presortIndex = idx;\n      }); // sort caption byte-pairs based on their PTS values\n\n      this.captionPackets_.sort(function (a, b) {\n        if (a.pts === b.pts) {\n          return a.presortIndex - b.presortIndex;\n        }\n        return a.pts - b.pts;\n      });\n      this.captionPackets_.forEach(function (packet) {\n        if (packet.type < 2) {\n          // Dispatch packet to the right Cea608Stream\n          this.dispatchCea608Packet(packet);\n        } else {\n          // Dispatch packet to the Cea708Stream\n          this.dispatchCea708Packet(packet);\n        }\n      }, this);\n      this.captionPackets_.length = 0;\n      this.flushCCStreams(flushType);\n    };\n    CaptionStream$2.prototype.flush = function () {\n      return this.flushStream('flush');\n    }; // Only called if handling partial data\n\n    CaptionStream$2.prototype.partialFlush = function () {\n      return this.flushStream('partialFlush');\n    };\n    CaptionStream$2.prototype.reset = function () {\n      this.latestDts_ = null;\n      this.ignoreNextEqualDts_ = false;\n      this.numSameDts_ = 0;\n      this.activeCea608Channel_ = [null, null];\n      this.ccStreams_.forEach(function (ccStream) {\n        ccStream.reset();\n      });\n    }; // From the CEA-608 spec:\n\n    /*\n     * When XDS sub-packets are interleaved with other services, the end of each sub-packet shall be followed\n     * by a control pair to change to a different service. When any of the control codes from 0x10 to 0x1F is\n     * used to begin a control code pair, it indicates the return to captioning or Text data. The control code pair\n     * and subsequent data should then be processed according to the FCC rules. It may be necessary for the\n     * line 21 data encoder to automatically insert a control code pair (i.e. RCL, RU2, RU3, RU4, RDC, or RTD)\n     * to switch to captioning or Text.\n    */\n    // With that in mind, we ignore any data between an XDS control code and a\n    // subsequent closed-captioning control code.\n\n    CaptionStream$2.prototype.dispatchCea608Packet = function (packet) {\n      // NOTE: packet.type is the CEA608 field\n      if (this.setsTextOrXDSActive(packet)) {\n        this.activeCea608Channel_[packet.type] = null;\n      } else if (this.setsChannel1Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 0;\n      } else if (this.setsChannel2Active(packet)) {\n        this.activeCea608Channel_[packet.type] = 1;\n      }\n      if (this.activeCea608Channel_[packet.type] === null) {\n        // If we haven't received anything to set the active channel, or the\n        // packets are Text/XDS data, discard the data; we don't want jumbled\n        // captions\n        return;\n      }\n      this.ccStreams_[(packet.type << 1) + this.activeCea608Channel_[packet.type]].push(packet);\n    };\n    CaptionStream$2.prototype.setsChannel1Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1000;\n    };\n    CaptionStream$2.prototype.setsChannel2Active = function (packet) {\n      return (packet.ccData & 0x7800) === 0x1800;\n    };\n    CaptionStream$2.prototype.setsTextOrXDSActive = function (packet) {\n      return (packet.ccData & 0x7100) === 0x0100 || (packet.ccData & 0x78fe) === 0x102a || (packet.ccData & 0x78fe) === 0x182a;\n    };\n    CaptionStream$2.prototype.dispatchCea708Packet = function (packet) {\n      if (this.parse708captions_) {\n        this.cc708Stream_.push(packet);\n      }\n    }; // ----------------------\n    // Session to Application\n    // ----------------------\n    // This hash maps special and extended character codes to their\n    // proper Unicode equivalent. The first one-byte key is just a\n    // non-standard character code. The two-byte keys that follow are\n    // the extended CEA708 character codes, along with the preceding\n    // 0x10 extended character byte to distinguish these codes from\n    // non-extended character codes. Every CEA708 character code that\n    // is not in this object maps directly to a standard unicode\n    // character code.\n    // The transparent space and non-breaking transparent space are\n    // technically not fully supported since there is no code to\n    // make them transparent, so they have normal non-transparent\n    // stand-ins.\n    // The special closed caption (CC) character isn't a standard\n    // unicode character, so a fairly similar unicode character was\n    // chosen in it's place.\n\n    var CHARACTER_TRANSLATION_708 = {\n      0x7f: 0x266a,\n      // ♪\n      0x1020: 0x20,\n      // Transparent Space\n      0x1021: 0xa0,\n      // Nob-breaking Transparent Space\n      0x1025: 0x2026,\n      // …\n      0x102a: 0x0160,\n      // Š\n      0x102c: 0x0152,\n      // Œ\n      0x1030: 0x2588,\n      // █\n      0x1031: 0x2018,\n      // ‘\n      0x1032: 0x2019,\n      // ’\n      0x1033: 0x201c,\n      // “\n      0x1034: 0x201d,\n      // ”\n      0x1035: 0x2022,\n      // •\n      0x1039: 0x2122,\n      // ™\n      0x103a: 0x0161,\n      // š\n      0x103c: 0x0153,\n      // œ\n      0x103d: 0x2120,\n      // ℠\n      0x103f: 0x0178,\n      // Ÿ\n      0x1076: 0x215b,\n      // ⅛\n      0x1077: 0x215c,\n      // ⅜\n      0x1078: 0x215d,\n      // ⅝\n      0x1079: 0x215e,\n      // ⅞\n      0x107a: 0x23d0,\n      // ⏐\n      0x107b: 0x23a4,\n      // ⎤\n      0x107c: 0x23a3,\n      // ⎣\n      0x107d: 0x23af,\n      // ⎯\n      0x107e: 0x23a6,\n      // ⎦\n      0x107f: 0x23a1,\n      // ⎡\n      0x10a0: 0x3138 // ㄸ (CC char)\n    };\n\n    var get708CharFromCode = function (code) {\n      var newCode = CHARACTER_TRANSLATION_708[code] || code;\n      if (code & 0x1000 && code === newCode) {\n        // Invalid extended code\n        return '';\n      }\n      return String.fromCharCode(newCode);\n    };\n    var within708TextBlock = function (b) {\n      return 0x20 <= b && b <= 0x7f || 0xa0 <= b && b <= 0xff;\n    };\n    var Cea708Window = function (windowNum) {\n      this.windowNum = windowNum;\n      this.reset();\n    };\n    Cea708Window.prototype.reset = function () {\n      this.clearText();\n      this.pendingNewLine = false;\n      this.winAttr = {};\n      this.penAttr = {};\n      this.penLoc = {};\n      this.penColor = {}; // These default values are arbitrary,\n      // defineWindow will usually override them\n\n      this.visible = 0;\n      this.rowLock = 0;\n      this.columnLock = 0;\n      this.priority = 0;\n      this.relativePositioning = 0;\n      this.anchorVertical = 0;\n      this.anchorHorizontal = 0;\n      this.anchorPoint = 0;\n      this.rowCount = 1;\n      this.virtualRowCount = this.rowCount + 1;\n      this.columnCount = 41;\n      this.windowStyle = 0;\n      this.penStyle = 0;\n    };\n    Cea708Window.prototype.getText = function () {\n      return this.rows.join('\\n');\n    };\n    Cea708Window.prototype.clearText = function () {\n      this.rows = [''];\n      this.rowIdx = 0;\n    };\n    Cea708Window.prototype.newLine = function (pts) {\n      if (this.rows.length >= this.virtualRowCount && typeof this.beforeRowOverflow === 'function') {\n        this.beforeRowOverflow(pts);\n      }\n      if (this.rows.length > 0) {\n        this.rows.push('');\n        this.rowIdx++;\n      } // Show all virtual rows since there's no visible scrolling\n\n      while (this.rows.length > this.virtualRowCount) {\n        this.rows.shift();\n        this.rowIdx--;\n      }\n    };\n    Cea708Window.prototype.isEmpty = function () {\n      if (this.rows.length === 0) {\n        return true;\n      } else if (this.rows.length === 1) {\n        return this.rows[0] === '';\n      }\n      return false;\n    };\n    Cea708Window.prototype.addText = function (text) {\n      this.rows[this.rowIdx] += text;\n    };\n    Cea708Window.prototype.backspace = function () {\n      if (!this.isEmpty()) {\n        var row = this.rows[this.rowIdx];\n        this.rows[this.rowIdx] = row.substr(0, row.length - 1);\n      }\n    };\n    var Cea708Service = function (serviceNum, encoding, stream) {\n      this.serviceNum = serviceNum;\n      this.text = '';\n      this.currentWindow = new Cea708Window(-1);\n      this.windows = [];\n      this.stream = stream; // Try to setup a TextDecoder if an `encoding` value was provided\n\n      if (typeof encoding === 'string') {\n        this.createTextDecoder(encoding);\n      }\n    };\n    /**\n     * Initialize service windows\n     * Must be run before service use\n     *\n     * @param  {Integer}  pts               PTS value\n     * @param  {Function} beforeRowOverflow Function to execute before row overflow of a window\n     */\n\n    Cea708Service.prototype.init = function (pts, beforeRowOverflow) {\n      this.startPts = pts;\n      for (var win = 0; win < 8; win++) {\n        this.windows[win] = new Cea708Window(win);\n        if (typeof beforeRowOverflow === 'function') {\n          this.windows[win].beforeRowOverflow = beforeRowOverflow;\n        }\n      }\n    };\n    /**\n     * Set current window of service to be affected by commands\n     *\n     * @param  {Integer} windowNum Window number\n     */\n\n    Cea708Service.prototype.setCurrentWindow = function (windowNum) {\n      this.currentWindow = this.windows[windowNum];\n    };\n    /**\n     * Try to create a TextDecoder if it is natively supported\n     */\n\n    Cea708Service.prototype.createTextDecoder = function (encoding) {\n      if (typeof TextDecoder === 'undefined') {\n        this.stream.trigger('log', {\n          level: 'warn',\n          message: 'The `encoding` option is unsupported without TextDecoder support'\n        });\n      } else {\n        try {\n          this.textDecoder_ = new TextDecoder(encoding);\n        } catch (error) {\n          this.stream.trigger('log', {\n            level: 'warn',\n            message: 'TextDecoder could not be created with ' + encoding + ' encoding. ' + error\n          });\n        }\n      }\n    };\n    var Cea708Stream = function (options) {\n      options = options || {};\n      Cea708Stream.prototype.init.call(this);\n      var self = this;\n      var captionServices = options.captionServices || {};\n      var captionServiceEncodings = {};\n      var serviceProps; // Get service encodings from captionServices option block\n\n      Object.keys(captionServices).forEach(serviceName => {\n        serviceProps = captionServices[serviceName];\n        if (/^SERVICE/.test(serviceName)) {\n          captionServiceEncodings[serviceName] = serviceProps.encoding;\n        }\n      });\n      this.serviceEncodings = captionServiceEncodings;\n      this.current708Packet = null;\n      this.services = {};\n      this.push = function (packet) {\n        if (packet.type === 3) {\n          // 708 packet start\n          self.new708Packet();\n          self.add708Bytes(packet);\n        } else {\n          if (self.current708Packet === null) {\n            // This should only happen at the start of a file if there's no packet start.\n            self.new708Packet();\n          }\n          self.add708Bytes(packet);\n        }\n      };\n    };\n    Cea708Stream.prototype = new Stream$7();\n    /**\n     * Push current 708 packet, create new 708 packet.\n     */\n\n    Cea708Stream.prototype.new708Packet = function () {\n      if (this.current708Packet !== null) {\n        this.push708Packet();\n      }\n      this.current708Packet = {\n        data: [],\n        ptsVals: []\n      };\n    };\n    /**\n     * Add pts and both bytes from packet into current 708 packet.\n     */\n\n    Cea708Stream.prototype.add708Bytes = function (packet) {\n      var data = packet.ccData;\n      var byte0 = data >>> 8;\n      var byte1 = data & 0xff; // I would just keep a list of packets instead of bytes, but it isn't clear in the spec\n      // that service blocks will always line up with byte pairs.\n\n      this.current708Packet.ptsVals.push(packet.pts);\n      this.current708Packet.data.push(byte0);\n      this.current708Packet.data.push(byte1);\n    };\n    /**\n     * Parse completed 708 packet into service blocks and push each service block.\n     */\n\n    Cea708Stream.prototype.push708Packet = function () {\n      var packet708 = this.current708Packet;\n      var packetData = packet708.data;\n      var serviceNum = null;\n      var blockSize = null;\n      var i = 0;\n      var b = packetData[i++];\n      packet708.seq = b >> 6;\n      packet708.sizeCode = b & 0x3f; // 0b00111111;\n\n      for (; i < packetData.length; i++) {\n        b = packetData[i++];\n        serviceNum = b >> 5;\n        blockSize = b & 0x1f; // 0b00011111\n\n        if (serviceNum === 7 && blockSize > 0) {\n          // Extended service num\n          b = packetData[i++];\n          serviceNum = b;\n        }\n        this.pushServiceBlock(serviceNum, i, blockSize);\n        if (blockSize > 0) {\n          i += blockSize - 1;\n        }\n      }\n    };\n    /**\n     * Parse service block, execute commands, read text.\n     *\n     * Note: While many of these commands serve important purposes,\n     * many others just parse out the parameters or attributes, but\n     * nothing is done with them because this is not a full and complete\n     * implementation of the entire 708 spec.\n     *\n     * @param  {Integer} serviceNum Service number\n     * @param  {Integer} start      Start index of the 708 packet data\n     * @param  {Integer} size       Block size\n     */\n\n    Cea708Stream.prototype.pushServiceBlock = function (serviceNum, start, size) {\n      var b;\n      var i = start;\n      var packetData = this.current708Packet.data;\n      var service = this.services[serviceNum];\n      if (!service) {\n        service = this.initService(serviceNum, i);\n      }\n      for (; i < start + size && i < packetData.length; i++) {\n        b = packetData[i];\n        if (within708TextBlock(b)) {\n          i = this.handleText(i, service);\n        } else if (b === 0x18) {\n          i = this.multiByteCharacter(i, service);\n        } else if (b === 0x10) {\n          i = this.extendedCommands(i, service);\n        } else if (0x80 <= b && b <= 0x87) {\n          i = this.setCurrentWindow(i, service);\n        } else if (0x98 <= b && b <= 0x9f) {\n          i = this.defineWindow(i, service);\n        } else if (b === 0x88) {\n          i = this.clearWindows(i, service);\n        } else if (b === 0x8c) {\n          i = this.deleteWindows(i, service);\n        } else if (b === 0x89) {\n          i = this.displayWindows(i, service);\n        } else if (b === 0x8a) {\n          i = this.hideWindows(i, service);\n        } else if (b === 0x8b) {\n          i = this.toggleWindows(i, service);\n        } else if (b === 0x97) {\n          i = this.setWindowAttributes(i, service);\n        } else if (b === 0x90) {\n          i = this.setPenAttributes(i, service);\n        } else if (b === 0x91) {\n          i = this.setPenColor(i, service);\n        } else if (b === 0x92) {\n          i = this.setPenLocation(i, service);\n        } else if (b === 0x8f) {\n          service = this.reset(i, service);\n        } else if (b === 0x08) {\n          // BS: Backspace\n          service.currentWindow.backspace();\n        } else if (b === 0x0c) {\n          // FF: Form feed\n          service.currentWindow.clearText();\n        } else if (b === 0x0d) {\n          // CR: Carriage return\n          service.currentWindow.pendingNewLine = true;\n        } else if (b === 0x0e) {\n          // HCR: Horizontal carriage return\n          service.currentWindow.clearText();\n        } else if (b === 0x8d) {\n          // DLY: Delay, nothing to do\n          i++;\n        } else ;\n      }\n    };\n    /**\n     * Execute an extended command\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.extendedCommands = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      if (within708TextBlock(b)) {\n        i = this.handleText(i, service, {\n          isExtended: true\n        });\n      }\n      return i;\n    };\n    /**\n     * Get PTS value of a given byte index\n     *\n     * @param  {Integer} byteIndex  Index of the byte\n     * @return {Integer}            PTS\n     */\n\n    Cea708Stream.prototype.getPts = function (byteIndex) {\n      // There's 1 pts value per 2 bytes\n      return this.current708Packet.ptsVals[Math.floor(byteIndex / 2)];\n    };\n    /**\n     * Initializes a service\n     *\n     * @param  {Integer} serviceNum Service number\n     * @return {Service}            Initialized service object\n     */\n\n    Cea708Stream.prototype.initService = function (serviceNum, i) {\n      var serviceName = 'SERVICE' + serviceNum;\n      var self = this;\n      var serviceName;\n      var encoding;\n      if (serviceName in this.serviceEncodings) {\n        encoding = this.serviceEncodings[serviceName];\n      }\n      this.services[serviceNum] = new Cea708Service(serviceNum, encoding, self);\n      this.services[serviceNum].init(this.getPts(i), function (pts) {\n        self.flushDisplayed(pts, self.services[serviceNum]);\n      });\n      return this.services[serviceNum];\n    };\n    /**\n     * Execute text writing to current window\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.handleText = function (i, service, options) {\n      var isExtended = options && options.isExtended;\n      var isMultiByte = options && options.isMultiByte;\n      var packetData = this.current708Packet.data;\n      var extended = isExtended ? 0x1000 : 0x0000;\n      var currentByte = packetData[i];\n      var nextByte = packetData[i + 1];\n      var win = service.currentWindow;\n      var char;\n      var charCodeArray; // Use the TextDecoder if one was created for this service\n\n      if (service.textDecoder_ && !isExtended) {\n        if (isMultiByte) {\n          charCodeArray = [currentByte, nextByte];\n          i++;\n        } else {\n          charCodeArray = [currentByte];\n        }\n        char = service.textDecoder_.decode(new Uint8Array(charCodeArray));\n      } else {\n        char = get708CharFromCode(extended | currentByte);\n      }\n      if (win.pendingNewLine && !win.isEmpty()) {\n        win.newLine(this.getPts(i));\n      }\n      win.pendingNewLine = false;\n      win.addText(char);\n      return i;\n    };\n    /**\n     * Handle decoding of multibyte character\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.multiByteCharacter = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var firstByte = packetData[i + 1];\n      var secondByte = packetData[i + 2];\n      if (within708TextBlock(firstByte) && within708TextBlock(secondByte)) {\n        i = this.handleText(++i, service, {\n          isMultiByte: true\n        });\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the CW# command.\n     *\n     * Set the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setCurrentWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      return i;\n    };\n    /**\n     * Parse and execute the DF# command.\n     *\n     * Define a window and set it as the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.defineWindow = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var windowNum = b & 0x07;\n      service.setCurrentWindow(windowNum);\n      var win = service.currentWindow;\n      b = packetData[++i];\n      win.visible = (b & 0x20) >> 5; // v\n\n      win.rowLock = (b & 0x10) >> 4; // rl\n\n      win.columnLock = (b & 0x08) >> 3; // cl\n\n      win.priority = b & 0x07; // p\n\n      b = packetData[++i];\n      win.relativePositioning = (b & 0x80) >> 7; // rp\n\n      win.anchorVertical = b & 0x7f; // av\n\n      b = packetData[++i];\n      win.anchorHorizontal = b; // ah\n\n      b = packetData[++i];\n      win.anchorPoint = (b & 0xf0) >> 4; // ap\n\n      win.rowCount = b & 0x0f; // rc\n\n      b = packetData[++i];\n      win.columnCount = b & 0x3f; // cc\n\n      b = packetData[++i];\n      win.windowStyle = (b & 0x38) >> 3; // ws\n\n      win.penStyle = b & 0x07; // ps\n      // The spec says there are (rowCount+1) \"virtual rows\"\n\n      win.virtualRowCount = win.rowCount + 1;\n      return i;\n    };\n    /**\n     * Parse and execute the SWA command.\n     *\n     * Set attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setWindowAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var winAttr = service.currentWindow.winAttr;\n      b = packetData[++i];\n      winAttr.fillOpacity = (b & 0xc0) >> 6; // fo\n\n      winAttr.fillRed = (b & 0x30) >> 4; // fr\n\n      winAttr.fillGreen = (b & 0x0c) >> 2; // fg\n\n      winAttr.fillBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      winAttr.borderType = (b & 0xc0) >> 6; // bt\n\n      winAttr.borderRed = (b & 0x30) >> 4; // br\n\n      winAttr.borderGreen = (b & 0x0c) >> 2; // bg\n\n      winAttr.borderBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      winAttr.borderType += (b & 0x80) >> 5; // bt\n\n      winAttr.wordWrap = (b & 0x40) >> 6; // ww\n\n      winAttr.printDirection = (b & 0x30) >> 4; // pd\n\n      winAttr.scrollDirection = (b & 0x0c) >> 2; // sd\n\n      winAttr.justify = b & 0x03; // j\n\n      b = packetData[++i];\n      winAttr.effectSpeed = (b & 0xf0) >> 4; // es\n\n      winAttr.effectDirection = (b & 0x0c) >> 2; // ed\n\n      winAttr.displayEffect = b & 0x03; // de\n\n      return i;\n    };\n    /**\n     * Gather text from all displayed windows and push a caption to output.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     */\n\n    Cea708Stream.prototype.flushDisplayed = function (pts, service) {\n      var displayedText = []; // TODO: Positioning not supported, displaying multiple windows will not necessarily\n      // display text in the correct order, but sample files so far have not shown any issue.\n\n      for (var winId = 0; winId < 8; winId++) {\n        if (service.windows[winId].visible && !service.windows[winId].isEmpty()) {\n          displayedText.push(service.windows[winId].getText());\n        }\n      }\n      service.endPts = pts;\n      service.text = displayedText.join('\\n\\n');\n      this.pushCaption(service);\n      service.startPts = pts;\n    };\n    /**\n     * Push a caption to output if the caption contains text.\n     *\n     * @param  {Service} service  The service object to be affected\n     */\n\n    Cea708Stream.prototype.pushCaption = function (service) {\n      if (service.text !== '') {\n        this.trigger('data', {\n          startPts: service.startPts,\n          endPts: service.endPts,\n          text: service.text,\n          stream: 'cc708_' + service.serviceNum\n        });\n        service.text = '';\n        service.startPts = service.endPts;\n      }\n    };\n    /**\n     * Parse and execute the DSW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.displayWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 1;\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the HDW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.hideWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible = 0;\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the TGW command.\n     *\n     * Set visible property of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.toggleWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].visible ^= 1;\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the CLW command.\n     *\n     * Clear text of windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.clearWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].clearText();\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the DLW command.\n     *\n     * Re-initialize windows based on the parsed bitmask.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.deleteWindows = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[++i];\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      for (var winId = 0; winId < 8; winId++) {\n        if (b & 0x01 << winId) {\n          service.windows[winId].reset();\n        }\n      }\n      return i;\n    };\n    /**\n     * Parse and execute the SPA command.\n     *\n     * Set pen attributes of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setPenAttributes = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penAttr = service.currentWindow.penAttr;\n      b = packetData[++i];\n      penAttr.textTag = (b & 0xf0) >> 4; // tt\n\n      penAttr.offset = (b & 0x0c) >> 2; // o\n\n      penAttr.penSize = b & 0x03; // s\n\n      b = packetData[++i];\n      penAttr.italics = (b & 0x80) >> 7; // i\n\n      penAttr.underline = (b & 0x40) >> 6; // u\n\n      penAttr.edgeType = (b & 0x38) >> 3; // et\n\n      penAttr.fontStyle = b & 0x07; // fs\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPC command.\n     *\n     * Set pen color of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setPenColor = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penColor = service.currentWindow.penColor;\n      b = packetData[++i];\n      penColor.fgOpacity = (b & 0xc0) >> 6; // fo\n\n      penColor.fgRed = (b & 0x30) >> 4; // fr\n\n      penColor.fgGreen = (b & 0x0c) >> 2; // fg\n\n      penColor.fgBlue = b & 0x03; // fb\n\n      b = packetData[++i];\n      penColor.bgOpacity = (b & 0xc0) >> 6; // bo\n\n      penColor.bgRed = (b & 0x30) >> 4; // br\n\n      penColor.bgGreen = (b & 0x0c) >> 2; // bg\n\n      penColor.bgBlue = b & 0x03; // bb\n\n      b = packetData[++i];\n      penColor.edgeRed = (b & 0x30) >> 4; // er\n\n      penColor.edgeGreen = (b & 0x0c) >> 2; // eg\n\n      penColor.edgeBlue = b & 0x03; // eb\n\n      return i;\n    };\n    /**\n     * Parse and execute the SPL command.\n     *\n     * Set pen location of the current window.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Integer}          New index after parsing\n     */\n\n    Cea708Stream.prototype.setPenLocation = function (i, service) {\n      var packetData = this.current708Packet.data;\n      var b = packetData[i];\n      var penLoc = service.currentWindow.penLoc; // Positioning isn't really supported at the moment, so this essentially just inserts a linebreak\n\n      service.currentWindow.pendingNewLine = true;\n      b = packetData[++i];\n      penLoc.row = b & 0x0f; // r\n\n      b = packetData[++i];\n      penLoc.column = b & 0x3f; // c\n\n      return i;\n    };\n    /**\n     * Execute the RST command.\n     *\n     * Reset service to a clean slate. Re-initialize.\n     *\n     * @param  {Integer} i        Current index in the 708 packet\n     * @param  {Service} service  The service object to be affected\n     * @return {Service}          Re-initialized service\n     */\n\n    Cea708Stream.prototype.reset = function (i, service) {\n      var pts = this.getPts(i);\n      this.flushDisplayed(pts, service);\n      return this.initService(service.serviceNum, i);\n    }; // This hash maps non-ASCII, special, and extended character codes to their\n    // proper Unicode equivalent. The first keys that are only a single byte\n    // are the non-standard ASCII characters, which simply map the CEA608 byte\n    // to the standard ASCII/Unicode. The two-byte keys that follow are the CEA608\n    // character codes, but have their MSB bitmasked with 0x03 so that a lookup\n    // can be performed regardless of the field and data channel on which the\n    // character code was received.\n\n    var CHARACTER_TRANSLATION = {\n      0x2a: 0xe1,\n      // á\n      0x5c: 0xe9,\n      // é\n      0x5e: 0xed,\n      // í\n      0x5f: 0xf3,\n      // ó\n      0x60: 0xfa,\n      // ú\n      0x7b: 0xe7,\n      // ç\n      0x7c: 0xf7,\n      // ÷\n      0x7d: 0xd1,\n      // Ñ\n      0x7e: 0xf1,\n      // ñ\n      0x7f: 0x2588,\n      // █\n      0x0130: 0xae,\n      // ®\n      0x0131: 0xb0,\n      // °\n      0x0132: 0xbd,\n      // ½\n      0x0133: 0xbf,\n      // ¿\n      0x0134: 0x2122,\n      // ™\n      0x0135: 0xa2,\n      // ¢\n      0x0136: 0xa3,\n      // £\n      0x0137: 0x266a,\n      // ♪\n      0x0138: 0xe0,\n      // à\n      0x0139: 0xa0,\n      //\n      0x013a: 0xe8,\n      // è\n      0x013b: 0xe2,\n      // â\n      0x013c: 0xea,\n      // ê\n      0x013d: 0xee,\n      // î\n      0x013e: 0xf4,\n      // ô\n      0x013f: 0xfb,\n      // û\n      0x0220: 0xc1,\n      // Á\n      0x0221: 0xc9,\n      // É\n      0x0222: 0xd3,\n      // Ó\n      0x0223: 0xda,\n      // Ú\n      0x0224: 0xdc,\n      // Ü\n      0x0225: 0xfc,\n      // ü\n      0x0226: 0x2018,\n      // ‘\n      0x0227: 0xa1,\n      // ¡\n      0x0228: 0x2a,\n      // *\n      0x0229: 0x27,\n      // '\n      0x022a: 0x2014,\n      // —\n      0x022b: 0xa9,\n      // ©\n      0x022c: 0x2120,\n      // ℠\n      0x022d: 0x2022,\n      // •\n      0x022e: 0x201c,\n      // “\n      0x022f: 0x201d,\n      // ”\n      0x0230: 0xc0,\n      // À\n      0x0231: 0xc2,\n      // Â\n      0x0232: 0xc7,\n      // Ç\n      0x0233: 0xc8,\n      // È\n      0x0234: 0xca,\n      // Ê\n      0x0235: 0xcb,\n      // Ë\n      0x0236: 0xeb,\n      // ë\n      0x0237: 0xce,\n      // Î\n      0x0238: 0xcf,\n      // Ï\n      0x0239: 0xef,\n      // ï\n      0x023a: 0xd4,\n      // Ô\n      0x023b: 0xd9,\n      // Ù\n      0x023c: 0xf9,\n      // ù\n      0x023d: 0xdb,\n      // Û\n      0x023e: 0xab,\n      // «\n      0x023f: 0xbb,\n      // »\n      0x0320: 0xc3,\n      // Ã\n      0x0321: 0xe3,\n      // ã\n      0x0322: 0xcd,\n      // Í\n      0x0323: 0xcc,\n      // Ì\n      0x0324: 0xec,\n      // ì\n      0x0325: 0xd2,\n      // Ò\n      0x0326: 0xf2,\n      // ò\n      0x0327: 0xd5,\n      // Õ\n      0x0328: 0xf5,\n      // õ\n      0x0329: 0x7b,\n      // {\n      0x032a: 0x7d,\n      // }\n      0x032b: 0x5c,\n      // \\\n      0x032c: 0x5e,\n      // ^\n      0x032d: 0x5f,\n      // _\n      0x032e: 0x7c,\n      // |\n      0x032f: 0x7e,\n      // ~\n      0x0330: 0xc4,\n      // Ä\n      0x0331: 0xe4,\n      // ä\n      0x0332: 0xd6,\n      // Ö\n      0x0333: 0xf6,\n      // ö\n      0x0334: 0xdf,\n      // ß\n      0x0335: 0xa5,\n      // ¥\n      0x0336: 0xa4,\n      // ¤\n      0x0337: 0x2502,\n      // │\n      0x0338: 0xc5,\n      // Å\n      0x0339: 0xe5,\n      // å\n      0x033a: 0xd8,\n      // Ø\n      0x033b: 0xf8,\n      // ø\n      0x033c: 0x250c,\n      // ┌\n      0x033d: 0x2510,\n      // ┐\n      0x033e: 0x2514,\n      // └\n      0x033f: 0x2518 // ┘\n    };\n\n    var getCharFromCode = function (code) {\n      if (code === null) {\n        return '';\n      }\n      code = CHARACTER_TRANSLATION[code] || code;\n      return String.fromCharCode(code);\n    }; // the index of the last row in a CEA-608 display buffer\n\n    var BOTTOM_ROW = 14; // This array is used for mapping PACs -> row #, since there's no way of\n    // getting it through bit logic.\n\n    var ROWS = [0x1100, 0x1120, 0x1200, 0x1220, 0x1500, 0x1520, 0x1600, 0x1620, 0x1700, 0x1720, 0x1000, 0x1300, 0x1320, 0x1400, 0x1420]; // CEA-608 captions are rendered onto a 34x15 matrix of character\n    // cells. The \"bottom\" row is the last element in the outer array.\n\n    var createDisplayBuffer = function () {\n      var result = [],\n        i = BOTTOM_ROW + 1;\n      while (i--) {\n        result.push('');\n      }\n      return result;\n    };\n    var Cea608Stream = function (field, dataChannel) {\n      Cea608Stream.prototype.init.call(this);\n      this.field_ = field || 0;\n      this.dataChannel_ = dataChannel || 0;\n      this.name_ = 'CC' + ((this.field_ << 1 | this.dataChannel_) + 1);\n      this.setConstants();\n      this.reset();\n      this.push = function (packet) {\n        var data, swap, char0, char1, text; // remove the parity bits\n\n        data = packet.ccData & 0x7f7f; // ignore duplicate control codes; the spec demands they're sent twice\n\n        if (data === this.lastControlCode_) {\n          this.lastControlCode_ = null;\n          return;\n        } // Store control codes\n\n        if ((data & 0xf000) === 0x1000) {\n          this.lastControlCode_ = data;\n        } else if (data !== this.PADDING_) {\n          this.lastControlCode_ = null;\n        }\n        char0 = data >>> 8;\n        char1 = data & 0xff;\n        if (data === this.PADDING_) {\n          return;\n        } else if (data === this.RESUME_CAPTION_LOADING_) {\n          this.mode_ = 'popOn';\n        } else if (data === this.END_OF_CAPTION_) {\n          // If an EOC is received while in paint-on mode, the displayed caption\n          // text should be swapped to non-displayed memory as if it was a pop-on\n          // caption. Because of that, we should explicitly switch back to pop-on\n          // mode\n          this.mode_ = 'popOn';\n          this.clearFormatting(packet.pts); // if a caption was being displayed, it's gone now\n\n          this.flushDisplayed(packet.pts); // flip memory\n\n          swap = this.displayed_;\n          this.displayed_ = this.nonDisplayed_;\n          this.nonDisplayed_ = swap; // start measuring the time to display the caption\n\n          this.startPts_ = packet.pts;\n        } else if (data === this.ROLL_UP_2_ROWS_) {\n          this.rollUpRows_ = 2;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_3_ROWS_) {\n          this.rollUpRows_ = 3;\n          this.setRollUp(packet.pts);\n        } else if (data === this.ROLL_UP_4_ROWS_) {\n          this.rollUpRows_ = 4;\n          this.setRollUp(packet.pts);\n        } else if (data === this.CARRIAGE_RETURN_) {\n          this.clearFormatting(packet.pts);\n          this.flushDisplayed(packet.pts);\n          this.shiftRowsUp_();\n          this.startPts_ = packet.pts;\n        } else if (data === this.BACKSPACE_) {\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          }\n        } else if (data === this.ERASE_DISPLAYED_MEMORY_) {\n          this.flushDisplayed(packet.pts);\n          this.displayed_ = createDisplayBuffer();\n        } else if (data === this.ERASE_NON_DISPLAYED_MEMORY_) {\n          this.nonDisplayed_ = createDisplayBuffer();\n        } else if (data === this.RESUME_DIRECT_CAPTIONING_) {\n          if (this.mode_ !== 'paintOn') {\n            // NOTE: This should be removed when proper caption positioning is\n            // implemented\n            this.flushDisplayed(packet.pts);\n            this.displayed_ = createDisplayBuffer();\n          }\n          this.mode_ = 'paintOn';\n          this.startPts_ = packet.pts; // Append special characters to caption text\n        } else if (this.isSpecialCharacter(char0, char1)) {\n          // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Append extended characters to caption text\n        } else if (this.isExtCharacter(char0, char1)) {\n          // Extended characters always follow their \"non-extended\" equivalents.\n          // IE if a \"è\" is desired, you'll always receive \"eè\"; non-compliant\n          // decoders are supposed to drop the \"è\", while compliant decoders\n          // backspace the \"e\" and insert \"è\".\n          // Delete the previous character\n          if (this.mode_ === 'popOn') {\n            this.nonDisplayed_[this.row_] = this.nonDisplayed_[this.row_].slice(0, -1);\n          } else {\n            this.displayed_[this.row_] = this.displayed_[this.row_].slice(0, -1);\n          } // Bitmask char0 so that we can apply character transformations\n          // regardless of field and data channel.\n          // Then byte-shift to the left and OR with char1 so we can pass the\n          // entire character code to `getCharFromCode`.\n\n          char0 = (char0 & 0x03) << 8;\n          text = getCharFromCode(char0 | char1);\n          this[this.mode_](packet.pts, text);\n          this.column_++; // Process mid-row codes\n        } else if (this.isMidRowCode(char0, char1)) {\n          // Attributes are not additive, so clear all formatting\n          this.clearFormatting(packet.pts); // According to the standard, mid-row codes\n          // should be replaced with spaces, so add one now\n\n          this[this.mode_](packet.pts, ' ');\n          this.column_++;\n          if ((char1 & 0xe) === 0xe) {\n            this.addFormatting(packet.pts, ['i']);\n          }\n          if ((char1 & 0x1) === 0x1) {\n            this.addFormatting(packet.pts, ['u']);\n          } // Detect offset control codes and adjust cursor\n        } else if (this.isOffsetControlCode(char0, char1)) {\n          // Cursor position is set by indent PAC (see below) in 4-column\n          // increments, with an additional offset code of 1-3 to reach any\n          // of the 32 columns specified by CEA-608. So all we need to do\n          // here is increment the column cursor by the given offset.\n          this.column_ += char1 & 0x03; // Detect PACs (Preamble Address Codes)\n        } else if (this.isPAC(char0, char1)) {\n          // There's no logic for PAC -> row mapping, so we have to just\n          // find the row code in an array and use its index :(\n          var row = ROWS.indexOf(data & 0x1f20); // Configure the caption window if we're in roll-up mode\n\n          if (this.mode_ === 'rollUp') {\n            // This implies that the base row is incorrectly set.\n            // As per the recommendation in CEA-608(Base Row Implementation), defer to the number\n            // of roll-up rows set.\n            if (row - this.rollUpRows_ + 1 < 0) {\n              row = this.rollUpRows_ - 1;\n            }\n            this.setRollUp(packet.pts, row);\n          }\n          if (row !== this.row_) {\n            // formatting is only persistent for current row\n            this.clearFormatting(packet.pts);\n            this.row_ = row;\n          } // All PACs can apply underline, so detect and apply\n          // (All odd-numbered second bytes set underline)\n\n          if (char1 & 0x1 && this.formatting_.indexOf('u') === -1) {\n            this.addFormatting(packet.pts, ['u']);\n          }\n          if ((data & 0x10) === 0x10) {\n            // We've got an indent level code. Each successive even number\n            // increments the column cursor by 4, so we can get the desired\n            // column position by bit-shifting to the right (to get n/2)\n            // and multiplying by 4.\n            this.column_ = ((data & 0xe) >> 1) * 4;\n          }\n          if (this.isColorPAC(char1)) {\n            // it's a color code, though we only support white, which\n            // can be either normal or italicized. white italics can be\n            // either 0x4e or 0x6e depending on the row, so we just\n            // bitwise-and with 0xe to see if italics should be turned on\n            if ((char1 & 0xe) === 0xe) {\n              this.addFormatting(packet.pts, ['i']);\n            }\n          } // We have a normal character in char0, and possibly one in char1\n        } else if (this.isNormalChar(char0)) {\n          if (char1 === 0x00) {\n            char1 = null;\n          }\n          text = getCharFromCode(char0);\n          text += getCharFromCode(char1);\n          this[this.mode_](packet.pts, text);\n          this.column_ += text.length;\n        } // finish data processing\n      };\n    };\n\n    Cea608Stream.prototype = new Stream$7(); // Trigger a cue point that captures the current state of the\n    // display buffer\n\n    Cea608Stream.prototype.flushDisplayed = function (pts) {\n      var content = this.displayed_ // remove spaces from the start and end of the string\n      .map(function (row, index) {\n        try {\n          return row.trim();\n        } catch (e) {\n          // Ordinarily, this shouldn't happen. However, caption\n          // parsing errors should not throw exceptions and\n          // break playback.\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping a malformed 608 caption at index ' + index + '.'\n          });\n          return '';\n        }\n      }, this) // combine all text rows to display in one cue\n      .join('\\n') // and remove blank rows from the start and end, but not the middle\n      .replace(/^\\n+|\\n+$/g, '');\n      if (content.length) {\n        this.trigger('data', {\n          startPts: this.startPts_,\n          endPts: pts,\n          text: content,\n          stream: this.name_\n        });\n      }\n    };\n    /**\n     * Zero out the data, used for startup and on seek\n     */\n\n    Cea608Stream.prototype.reset = function () {\n      this.mode_ = 'popOn'; // When in roll-up mode, the index of the last row that will\n      // actually display captions. If a caption is shifted to a row\n      // with a lower index than this, it is cleared from the display\n      // buffer\n\n      this.topRow_ = 0;\n      this.startPts_ = 0;\n      this.displayed_ = createDisplayBuffer();\n      this.nonDisplayed_ = createDisplayBuffer();\n      this.lastControlCode_ = null; // Track row and column for proper line-breaking and spacing\n\n      this.column_ = 0;\n      this.row_ = BOTTOM_ROW;\n      this.rollUpRows_ = 2; // This variable holds currently-applied formatting\n\n      this.formatting_ = [];\n    };\n    /**\n     * Sets up control code and related constants for this instance\n     */\n\n    Cea608Stream.prototype.setConstants = function () {\n      // The following attributes have these uses:\n      // ext_ :    char0 for mid-row codes, and the base for extended\n      //           chars (ext_+0, ext_+1, and ext_+2 are char0s for\n      //           extended codes)\n      // control_: char0 for control codes, except byte-shifted to the\n      //           left so that we can do this.control_ | CONTROL_CODE\n      // offset_:  char0 for tab offset codes\n      //\n      // It's also worth noting that control codes, and _only_ control codes,\n      // differ between field 1 and field2. Field 2 control codes are always\n      // their field 1 value plus 1. That's why there's the \"| field\" on the\n      // control value.\n      if (this.dataChannel_ === 0) {\n        this.BASE_ = 0x10;\n        this.EXT_ = 0x11;\n        this.CONTROL_ = (0x14 | this.field_) << 8;\n        this.OFFSET_ = 0x17;\n      } else if (this.dataChannel_ === 1) {\n        this.BASE_ = 0x18;\n        this.EXT_ = 0x19;\n        this.CONTROL_ = (0x1c | this.field_) << 8;\n        this.OFFSET_ = 0x1f;\n      } // Constants for the LSByte command codes recognized by Cea608Stream. This\n      // list is not exhaustive. For a more comprehensive listing and semantics see\n      // http://www.gpo.gov/fdsys/pkg/CFR-2010-title47-vol1/pdf/CFR-2010-title47-vol1-sec15-119.pdf\n      // Padding\n\n      this.PADDING_ = 0x0000; // Pop-on Mode\n\n      this.RESUME_CAPTION_LOADING_ = this.CONTROL_ | 0x20;\n      this.END_OF_CAPTION_ = this.CONTROL_ | 0x2f; // Roll-up Mode\n\n      this.ROLL_UP_2_ROWS_ = this.CONTROL_ | 0x25;\n      this.ROLL_UP_3_ROWS_ = this.CONTROL_ | 0x26;\n      this.ROLL_UP_4_ROWS_ = this.CONTROL_ | 0x27;\n      this.CARRIAGE_RETURN_ = this.CONTROL_ | 0x2d; // paint-on mode\n\n      this.RESUME_DIRECT_CAPTIONING_ = this.CONTROL_ | 0x29; // Erasure\n\n      this.BACKSPACE_ = this.CONTROL_ | 0x21;\n      this.ERASE_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2c;\n      this.ERASE_NON_DISPLAYED_MEMORY_ = this.CONTROL_ | 0x2e;\n    };\n    /**\n     * Detects if the 2-byte packet data is a special character\n     *\n     * Special characters have a second byte in the range 0x30 to 0x3f,\n     * with the first byte being 0x11 (for data channel 1) or 0x19 (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an special character\n     */\n\n    Cea608Stream.prototype.isSpecialCharacter = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x30 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet data is an extended character\n     *\n     * Extended characters have a second byte in the range 0x20 to 0x3f,\n     * with the first byte being 0x12 or 0x13 (for data channel 1) or\n     * 0x1a or 0x1b (for data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an extended character\n     */\n\n    Cea608Stream.prototype.isExtCharacter = function (char0, char1) {\n      return (char0 === this.EXT_ + 1 || char0 === this.EXT_ + 2) && char1 >= 0x20 && char1 <= 0x3f;\n    };\n    /**\n     * Detects if the 2-byte packet is a mid-row code\n     *\n     * Mid-row codes have a second byte in the range 0x20 to 0x2f, with\n     * the first byte being 0x11 (for data channel 1) or 0x19 (for data\n     * channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a mid-row code\n     */\n\n    Cea608Stream.prototype.isMidRowCode = function (char0, char1) {\n      return char0 === this.EXT_ && char1 >= 0x20 && char1 <= 0x2f;\n    };\n    /**\n     * Detects if the 2-byte packet is an offset control code\n     *\n     * Offset control codes have a second byte in the range 0x21 to 0x23,\n     * with the first byte being 0x17 (for data channel 1) or 0x1f (for\n     * data channel 2).\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are an offset control code\n     */\n\n    Cea608Stream.prototype.isOffsetControlCode = function (char0, char1) {\n      return char0 === this.OFFSET_ && char1 >= 0x21 && char1 <= 0x23;\n    };\n    /**\n     * Detects if the 2-byte packet is a Preamble Address Code\n     *\n     * PACs have a first byte in the range 0x10 to 0x17 (for data channel 1)\n     * or 0x18 to 0x1f (for data channel 2), with the second byte in the\n     * range 0x40 to 0x7f.\n     *\n     * @param  {Integer} char0 The first byte\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the 2 bytes are a PAC\n     */\n\n    Cea608Stream.prototype.isPAC = function (char0, char1) {\n      return char0 >= this.BASE_ && char0 < this.BASE_ + 8 && char1 >= 0x40 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a packet's second byte is in the range of a PAC color code\n     *\n     * PAC color codes have the second byte be in the range 0x40 to 0x4f, or\n     * 0x60 to 0x6f.\n     *\n     * @param  {Integer} char1 The second byte\n     * @return {Boolean}       Whether the byte is a color PAC\n     */\n\n    Cea608Stream.prototype.isColorPAC = function (char1) {\n      return char1 >= 0x40 && char1 <= 0x4f || char1 >= 0x60 && char1 <= 0x7f;\n    };\n    /**\n     * Detects if a single byte is in the range of a normal character\n     *\n     * Normal text bytes are in the range 0x20 to 0x7f.\n     *\n     * @param  {Integer} char  The byte\n     * @return {Boolean}       Whether the byte is a normal character\n     */\n\n    Cea608Stream.prototype.isNormalChar = function (char) {\n      return char >= 0x20 && char <= 0x7f;\n    };\n    /**\n     * Configures roll-up\n     *\n     * @param  {Integer} pts         Current PTS\n     * @param  {Integer} newBaseRow  Used by PACs to slide the current window to\n     *                               a new position\n     */\n\n    Cea608Stream.prototype.setRollUp = function (pts, newBaseRow) {\n      // Reset the base row to the bottom row when switching modes\n      if (this.mode_ !== 'rollUp') {\n        this.row_ = BOTTOM_ROW;\n        this.mode_ = 'rollUp'; // Spec says to wipe memories when switching to roll-up\n\n        this.flushDisplayed(pts);\n        this.nonDisplayed_ = createDisplayBuffer();\n        this.displayed_ = createDisplayBuffer();\n      }\n      if (newBaseRow !== undefined && newBaseRow !== this.row_) {\n        // move currently displayed captions (up or down) to the new base row\n        for (var i = 0; i < this.rollUpRows_; i++) {\n          this.displayed_[newBaseRow - i] = this.displayed_[this.row_ - i];\n          this.displayed_[this.row_ - i] = '';\n        }\n      }\n      if (newBaseRow === undefined) {\n        newBaseRow = this.row_;\n      }\n      this.topRow_ = newBaseRow - this.rollUpRows_ + 1;\n    }; // Adds the opening HTML tag for the passed character to the caption text,\n    // and keeps track of it for later closing\n\n    Cea608Stream.prototype.addFormatting = function (pts, format) {\n      this.formatting_ = this.formatting_.concat(format);\n      var text = format.reduce(function (text, format) {\n        return text + '<' + format + '>';\n      }, '');\n      this[this.mode_](pts, text);\n    }; // Adds HTML closing tags for current formatting to caption text and\n    // clears remembered formatting\n\n    Cea608Stream.prototype.clearFormatting = function (pts) {\n      if (!this.formatting_.length) {\n        return;\n      }\n      var text = this.formatting_.reverse().reduce(function (text, format) {\n        return text + '</' + format + '>';\n      }, '');\n      this.formatting_ = [];\n      this[this.mode_](pts, text);\n    }; // Mode Implementations\n\n    Cea608Stream.prototype.popOn = function (pts, text) {\n      var baseRow = this.nonDisplayed_[this.row_]; // buffer characters\n\n      baseRow += text;\n      this.nonDisplayed_[this.row_] = baseRow;\n    };\n    Cea608Stream.prototype.rollUp = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    };\n    Cea608Stream.prototype.shiftRowsUp_ = function () {\n      var i; // clear out inactive rows\n\n      for (i = 0; i < this.topRow_; i++) {\n        this.displayed_[i] = '';\n      }\n      for (i = this.row_ + 1; i < BOTTOM_ROW + 1; i++) {\n        this.displayed_[i] = '';\n      } // shift displayed rows up\n\n      for (i = this.topRow_; i < this.row_; i++) {\n        this.displayed_[i] = this.displayed_[i + 1];\n      } // clear out the bottom row\n\n      this.displayed_[this.row_] = '';\n    };\n    Cea608Stream.prototype.paintOn = function (pts, text) {\n      var baseRow = this.displayed_[this.row_];\n      baseRow += text;\n      this.displayed_[this.row_] = baseRow;\n    }; // exports\n\n    var captionStream = {\n      CaptionStream: CaptionStream$2,\n      Cea608Stream: Cea608Stream,\n      Cea708Stream: Cea708Stream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var streamTypes = {\n      H264_STREAM_TYPE: 0x1B,\n      ADTS_STREAM_TYPE: 0x0F,\n      METADATA_STREAM_TYPE: 0x15\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Accepts program elementary stream (PES) data events and corrects\n     * decode and presentation time stamps to account for a rollover\n     * of the 33 bit value.\n     */\n\n    var Stream$6 = stream;\n    var MAX_TS = 8589934592;\n    var RO_THRESH = 4294967296;\n    var TYPE_SHARED = 'shared';\n    var handleRollover$1 = function (value, reference) {\n      var direction = 1;\n      if (value > reference) {\n        // If the current timestamp value is greater than our reference timestamp and we detect a\n        // timestamp rollover, this means the roll over is happening in the opposite direction.\n        // Example scenario: Enter a long stream/video just after a rollover occurred. The reference\n        // point will be set to a small number, e.g. 1. The user then seeks backwards over the\n        // rollover point. In loading this segment, the timestamp values will be very large,\n        // e.g. 2^33 - 1. Since this comes before the data we loaded previously, we want to adjust\n        // the time stamp to be `value - 2^33`.\n        direction = -1;\n      } // Note: A seek forwards or back that is greater than the RO_THRESH (2^32, ~13 hours) will\n      // cause an incorrect adjustment.\n\n      while (Math.abs(reference - value) > RO_THRESH) {\n        value += direction * MAX_TS;\n      }\n      return value;\n    };\n    var TimestampRolloverStream$1 = function (type) {\n      var lastDTS, referenceDTS;\n      TimestampRolloverStream$1.prototype.init.call(this); // The \"shared\" type is used in cases where a stream will contain muxed\n      // video and audio. We could use `undefined` here, but having a string\n      // makes debugging a little clearer.\n\n      this.type_ = type || TYPE_SHARED;\n      this.push = function (data) {\n        // Any \"shared\" rollover streams will accept _all_ data. Otherwise,\n        // streams will only accept data that matches their type.\n        if (this.type_ !== TYPE_SHARED && data.type !== this.type_) {\n          return;\n        }\n        if (referenceDTS === undefined) {\n          referenceDTS = data.dts;\n        }\n        data.dts = handleRollover$1(data.dts, referenceDTS);\n        data.pts = handleRollover$1(data.pts, referenceDTS);\n        lastDTS = data.dts;\n        this.trigger('data', data);\n      };\n      this.flush = function () {\n        referenceDTS = lastDTS;\n        this.trigger('done');\n      };\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n      this.discontinuity = function () {\n        referenceDTS = void 0;\n        lastDTS = void 0;\n      };\n      this.reset = function () {\n        this.discontinuity();\n        this.trigger('reset');\n      };\n    };\n    TimestampRolloverStream$1.prototype = new Stream$6();\n    var timestampRolloverStream = {\n      TimestampRolloverStream: TimestampRolloverStream$1,\n      handleRollover: handleRollover$1\n    }; // Once IE11 support is dropped, this function should be removed.\n\n    var typedArrayIndexOf$1 = (typedArray, element, fromIndex) => {\n      if (!typedArray) {\n        return -1;\n      }\n      var currentIndex = fromIndex;\n      for (; currentIndex < typedArray.length; currentIndex++) {\n        if (typedArray[currentIndex] === element) {\n          return currentIndex;\n        }\n      }\n      return -1;\n    };\n    var typedArray = {\n      typedArrayIndexOf: typedArrayIndexOf$1\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Accepts program elementary stream (PES) data events and parses out\n     * ID3 metadata from them, if present.\n     * @see http://id3.org/id3v2.3.0\n     */\n\n    var Stream$5 = stream,\n      StreamTypes$3 = streamTypes,\n      typedArrayIndexOf = typedArray.typedArrayIndexOf,\n      // Frames that allow different types of text encoding contain a text\n      // encoding description byte [ID3v2.4.0 section 4.]\n      textEncodingDescriptionByte = {\n        Iso88591: 0x00,\n        // ISO-8859-1, terminated with \\0.\n        Utf16: 0x01,\n        // UTF-16 encoded Unicode BOM, terminated with \\0\\0\n        Utf16be: 0x02,\n        // UTF-16BE encoded Unicode, without BOM, terminated with \\0\\0\n        Utf8: 0x03 // UTF-8 encoded Unicode, terminated with \\0\n      },\n      // return a percent-encoded representation of the specified byte range\n      // @see http://en.wikipedia.org/wiki/Percent-encoding\n      percentEncode$1 = function (bytes, start, end) {\n        var i,\n          result = '';\n        for (i = start; i < end; i++) {\n          result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n        }\n        return result;\n      },\n      // return the string representation of the specified byte range,\n      // interpreted as UTf-8.\n      parseUtf8 = function (bytes, start, end) {\n        return decodeURIComponent(percentEncode$1(bytes, start, end));\n      },\n      // return the string representation of the specified byte range,\n      // interpreted as ISO-8859-1.\n      parseIso88591$1 = function (bytes, start, end) {\n        return unescape(percentEncode$1(bytes, start, end)); // jshint ignore:line\n      },\n      parseSyncSafeInteger$1 = function (data) {\n        return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n      },\n      frameParsers = {\n        'APIC': function (frame) {\n          var i = 1,\n            mimeTypeEndIndex,\n            descriptionEndIndex,\n            LINK_MIME_TYPE = '-->';\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          } // parsing fields [ID3v2.4.0 section 4.14.]\n\n          mimeTypeEndIndex = typedArrayIndexOf(frame.data, 0, i);\n          if (mimeTypeEndIndex < 0) {\n            // malformed frame\n            return;\n          } // parsing Mime type field (terminated with \\0)\n\n          frame.mimeType = parseIso88591$1(frame.data, i, mimeTypeEndIndex);\n          i = mimeTypeEndIndex + 1; // parsing 1-byte Picture Type field\n\n          frame.pictureType = frame.data[i];\n          i++;\n          descriptionEndIndex = typedArrayIndexOf(frame.data, 0, i);\n          if (descriptionEndIndex < 0) {\n            // malformed frame\n            return;\n          } // parsing Description field (terminated with \\0)\n\n          frame.description = parseUtf8(frame.data, i, descriptionEndIndex);\n          i = descriptionEndIndex + 1;\n          if (frame.mimeType === LINK_MIME_TYPE) {\n            // parsing Picture Data field as URL (always represented as ISO-8859-1 [ID3v2.4.0 section 4.])\n            frame.url = parseIso88591$1(frame.data, i, frame.data.length);\n          } else {\n            // parsing Picture Data field as binary data\n            frame.pictureData = frame.data.subarray(i, frame.data.length);\n          }\n        },\n        'T*': function (frame) {\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          } // parse text field, do not include null terminator in the frame value\n          // frames that allow different types of encoding contain terminated text [ID3v2.4.0 section 4.]\n\n          frame.value = parseUtf8(frame.data, 1, frame.data.length).replace(/\\0*$/, ''); // text information frames supports multiple strings, stored as a terminator separated list [ID3v2.4.0 section 4.2.]\n\n          frame.values = frame.value.split('\\0');\n        },\n        'TXXX': function (frame) {\n          var descriptionEndIndex;\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          }\n          descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n          if (descriptionEndIndex === -1) {\n            return;\n          } // parse the text fields\n\n          frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // do not include the null terminator in the tag value\n          // frames that allow different types of encoding contain terminated text\n          // [ID3v2.4.0 section 4.]\n\n          frame.value = parseUtf8(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0*$/, '');\n          frame.data = frame.value;\n        },\n        'W*': function (frame) {\n          // parse URL field; URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n          // if the value is followed by a string termination all the following information should be ignored [ID3v2.4.0 section 4.3]\n          frame.url = parseIso88591$1(frame.data, 0, frame.data.length).replace(/\\0.*$/, '');\n        },\n        'WXXX': function (frame) {\n          var descriptionEndIndex;\n          if (frame.data[0] !== textEncodingDescriptionByte.Utf8) {\n            // ignore frames with unrecognized character encodings\n            return;\n          }\n          descriptionEndIndex = typedArrayIndexOf(frame.data, 0, 1);\n          if (descriptionEndIndex === -1) {\n            return;\n          } // parse the description and URL fields\n\n          frame.description = parseUtf8(frame.data, 1, descriptionEndIndex); // URL fields are always represented as ISO-8859-1 [ID3v2.4.0 section 4.]\n          // if the value is followed by a string termination all the following information\n          // should be ignored [ID3v2.4.0 section 4.3]\n\n          frame.url = parseIso88591$1(frame.data, descriptionEndIndex + 1, frame.data.length).replace(/\\0.*$/, '');\n        },\n        'PRIV': function (frame) {\n          var i;\n          for (i = 0; i < frame.data.length; i++) {\n            if (frame.data[i] === 0) {\n              // parse the description and URL fields\n              frame.owner = parseIso88591$1(frame.data, 0, i);\n              break;\n            }\n          }\n          frame.privateData = frame.data.subarray(i + 1);\n          frame.data = frame.privateData;\n        }\n      },\n      MetadataStream;\n    MetadataStream = function (options) {\n      var settings = {\n          // the bytes of the program-level descriptor field in MP2T\n          // see ISO/IEC 13818-1:2013 (E), section 2.6 \"Program and\n          // program element descriptors\"\n          descriptor: options && options.descriptor\n        },\n        // the total size in bytes of the ID3 tag being parsed\n        tagSize = 0,\n        // tag data that is not complete enough to be parsed\n        buffer = [],\n        // the total number of bytes currently in the buffer\n        bufferSize = 0,\n        i;\n      MetadataStream.prototype.init.call(this); // calculate the text track in-band metadata track dispatch type\n      // https://html.spec.whatwg.org/multipage/embedded-content.html#steps-to-expose-a-media-resource-specific-text-track\n\n      this.dispatchType = StreamTypes$3.METADATA_STREAM_TYPE.toString(16);\n      if (settings.descriptor) {\n        for (i = 0; i < settings.descriptor.length; i++) {\n          this.dispatchType += ('00' + settings.descriptor[i].toString(16)).slice(-2);\n        }\n      }\n      this.push = function (chunk) {\n        var tag, frameStart, frameSize, frame, i, frameHeader;\n        if (chunk.type !== 'timed-metadata') {\n          return;\n        } // if data_alignment_indicator is set in the PES header,\n        // we must have the start of a new ID3 tag. Assume anything\n        // remaining in the buffer was malformed and throw it out\n\n        if (chunk.dataAlignmentIndicator) {\n          bufferSize = 0;\n          buffer.length = 0;\n        } // ignore events that don't look like ID3 data\n\n        if (buffer.length === 0 && (chunk.data.length < 10 || chunk.data[0] !== 'I'.charCodeAt(0) || chunk.data[1] !== 'D'.charCodeAt(0) || chunk.data[2] !== '3'.charCodeAt(0))) {\n          this.trigger('log', {\n            level: 'warn',\n            message: 'Skipping unrecognized metadata packet'\n          });\n          return;\n        } // add this chunk to the data we've collected so far\n\n        buffer.push(chunk);\n        bufferSize += chunk.data.byteLength; // grab the size of the entire frame from the ID3 header\n\n        if (buffer.length === 1) {\n          // the frame size is transmitted as a 28-bit integer in the\n          // last four bytes of the ID3 header.\n          // The most significant bit of each byte is dropped and the\n          // results concatenated to recover the actual value.\n          tagSize = parseSyncSafeInteger$1(chunk.data.subarray(6, 10)); // ID3 reports the tag size excluding the header but it's more\n          // convenient for our comparisons to include it\n\n          tagSize += 10;\n        } // if the entire frame has not arrived, wait for more data\n\n        if (bufferSize < tagSize) {\n          return;\n        } // collect the entire frame so it can be parsed\n\n        tag = {\n          data: new Uint8Array(tagSize),\n          frames: [],\n          pts: buffer[0].pts,\n          dts: buffer[0].dts\n        };\n        for (i = 0; i < tagSize;) {\n          tag.data.set(buffer[0].data.subarray(0, tagSize - i), i);\n          i += buffer[0].data.byteLength;\n          bufferSize -= buffer[0].data.byteLength;\n          buffer.shift();\n        } // find the start of the first frame and the end of the tag\n\n        frameStart = 10;\n        if (tag.data[5] & 0x40) {\n          // advance the frame start past the extended header\n          frameStart += 4; // header size field\n\n          frameStart += parseSyncSafeInteger$1(tag.data.subarray(10, 14)); // clip any padding off the end\n\n          tagSize -= parseSyncSafeInteger$1(tag.data.subarray(16, 20));\n        } // parse one or more ID3 frames\n        // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n        do {\n          // determine the number of bytes in this frame\n          frameSize = parseSyncSafeInteger$1(tag.data.subarray(frameStart + 4, frameStart + 8));\n          if (frameSize < 1) {\n            this.trigger('log', {\n              level: 'warn',\n              message: 'Malformed ID3 frame encountered. Skipping remaining metadata parsing.'\n            }); // If the frame is malformed, don't parse any further frames but allow previous valid parsed frames\n            // to be sent along.\n\n            break;\n          }\n          frameHeader = String.fromCharCode(tag.data[frameStart], tag.data[frameStart + 1], tag.data[frameStart + 2], tag.data[frameStart + 3]);\n          frame = {\n            id: frameHeader,\n            data: tag.data.subarray(frameStart + 10, frameStart + frameSize + 10)\n          };\n          frame.key = frame.id; // parse frame values\n\n          if (frameParsers[frame.id]) {\n            // use frame specific parser\n            frameParsers[frame.id](frame);\n          } else if (frame.id[0] === 'T') {\n            // use text frame generic parser\n            frameParsers['T*'](frame);\n          } else if (frame.id[0] === 'W') {\n            // use URL link frame generic parser\n            frameParsers['W*'](frame);\n          } // handle the special PRIV frame used to indicate the start\n          // time for raw AAC data\n\n          if (frame.owner === 'com.apple.streaming.transportStreamTimestamp') {\n            var d = frame.data,\n              size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n            size *= 4;\n            size += d[7] & 0x03;\n            frame.timeStamp = size; // in raw AAC, all subsequent data will be timestamped based\n            // on the value of this frame\n            // we couldn't have known the appropriate pts and dts before\n            // parsing this ID3 tag so set those values now\n\n            if (tag.pts === undefined && tag.dts === undefined) {\n              tag.pts = frame.timeStamp;\n              tag.dts = frame.timeStamp;\n            }\n            this.trigger('timestamp', frame);\n          }\n          tag.frames.push(frame);\n          frameStart += 10; // advance past the frame header\n\n          frameStart += frameSize; // advance past the frame body\n        } while (frameStart < tagSize);\n        this.trigger('data', tag);\n      };\n    };\n    MetadataStream.prototype = new Stream$5();\n    var metadataStream = MetadataStream;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A stream-based mp2t to mp4 converter. This utility can be used to\n     * deliver mp4s to a SourceBuffer on platforms that support native\n     * Media Source Extensions.\n     */\n\n    var Stream$4 = stream,\n      CaptionStream$1 = captionStream,\n      StreamTypes$2 = streamTypes,\n      TimestampRolloverStream = timestampRolloverStream.TimestampRolloverStream; // object types\n\n    var TransportPacketStream, TransportParseStream, ElementaryStream; // constants\n\n    var MP2T_PACKET_LENGTH$1 = 188,\n      // bytes\n      SYNC_BYTE$1 = 0x47;\n    /**\n     * Splits an incoming stream of binary data into MPEG-2 Transport\n     * Stream packets.\n     */\n\n    TransportPacketStream = function () {\n      var buffer = new Uint8Array(MP2T_PACKET_LENGTH$1),\n        bytesInBuffer = 0;\n      TransportPacketStream.prototype.init.call(this); // Deliver new bytes to the stream.\n\n      /**\n       * Split a stream of data into M2TS packets\n      **/\n\n      this.push = function (bytes) {\n        var startIndex = 0,\n          endIndex = MP2T_PACKET_LENGTH$1,\n          everything; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (bytesInBuffer) {\n          everything = new Uint8Array(bytes.byteLength + bytesInBuffer);\n          everything.set(buffer.subarray(0, bytesInBuffer));\n          everything.set(bytes, bytesInBuffer);\n          bytesInBuffer = 0;\n        } else {\n          everything = bytes;\n        } // While we have enough data for a packet\n\n        while (endIndex < everything.byteLength) {\n          // Look for a pair of start and end sync bytes in the data..\n          if (everything[startIndex] === SYNC_BYTE$1 && everything[endIndex] === SYNC_BYTE$1) {\n            // We found a packet so emit it and jump one whole packet forward in\n            // the stream\n            this.trigger('data', everything.subarray(startIndex, endIndex));\n            startIndex += MP2T_PACKET_LENGTH$1;\n            endIndex += MP2T_PACKET_LENGTH$1;\n            continue;\n          } // If we get here, we have somehow become de-synchronized and we need to step\n          // forward one byte at a time until we find a pair of sync bytes that denote\n          // a packet\n\n          startIndex++;\n          endIndex++;\n        } // If there was some data left over at the end of the segment that couldn't\n        // possibly be a whole packet, keep it because it might be the start of a packet\n        // that continues in the next segment\n\n        if (startIndex < everything.byteLength) {\n          buffer.set(everything.subarray(startIndex), 0);\n          bytesInBuffer = everything.byteLength - startIndex;\n        }\n      };\n      /**\n       * Passes identified M2TS packets to the TransportParseStream to be parsed\n      **/\n\n      this.flush = function () {\n        // If the buffer contains a whole packet when we are being flushed, emit it\n        // and empty the buffer. Otherwise hold onto the data because it may be\n        // important for decoding the next segment\n        if (bytesInBuffer === MP2T_PACKET_LENGTH$1 && buffer[0] === SYNC_BYTE$1) {\n          this.trigger('data', buffer);\n          bytesInBuffer = 0;\n        }\n        this.trigger('done');\n      };\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n      this.reset = function () {\n        bytesInBuffer = 0;\n        this.trigger('reset');\n      };\n    };\n    TransportPacketStream.prototype = new Stream$4();\n    /**\n     * Accepts an MP2T TransportPacketStream and emits data events with parsed\n     * forms of the individual transport stream packets.\n     */\n\n    TransportParseStream = function () {\n      var parsePsi, parsePat, parsePmt, self;\n      TransportParseStream.prototype.init.call(this);\n      self = this;\n      this.packetsWaitingForPmt = [];\n      this.programMapTable = undefined;\n      parsePsi = function (payload, psi) {\n        var offset = 0; // PSI packets may be split into multiple sections and those\n        // sections may be split into multiple packets. If a PSI\n        // section starts in this packet, the payload_unit_start_indicator\n        // will be true and the first byte of the payload will indicate\n        // the offset from the current position to the start of the\n        // section.\n\n        if (psi.payloadUnitStartIndicator) {\n          offset += payload[offset] + 1;\n        }\n        if (psi.type === 'pat') {\n          parsePat(payload.subarray(offset), psi);\n        } else {\n          parsePmt(payload.subarray(offset), psi);\n        }\n      };\n      parsePat = function (payload, pat) {\n        pat.section_number = payload[7]; // eslint-disable-line camelcase\n\n        pat.last_section_number = payload[8]; // eslint-disable-line camelcase\n        // skip the PSI header and parse the first PMT entry\n\n        self.pmtPid = (payload[10] & 0x1F) << 8 | payload[11];\n        pat.pmtPid = self.pmtPid;\n      };\n      /**\n       * Parse out the relevant fields of a Program Map Table (PMT).\n       * @param payload {Uint8Array} the PMT-specific portion of an MP2T\n       * packet. The first byte in this array should be the table_id\n       * field.\n       * @param pmt {object} the object that should be decorated with\n       * fields parsed from the PMT.\n       */\n\n      parsePmt = function (payload, pmt) {\n        var sectionLength, tableEnd, programInfoLength, offset; // PMTs can be sent ahead of the time when they should actually\n        // take effect. We don't believe this should ever be the case\n        // for HLS but we'll ignore \"forward\" PMT declarations if we see\n        // them. Future PMT declarations have the current_next_indicator\n        // set to zero.\n\n        if (!(payload[5] & 0x01)) {\n          return;\n        } // overwrite any existing program map table\n\n        self.programMapTable = {\n          video: null,\n          audio: null,\n          'timed-metadata': {}\n        }; // the mapping table ends at the end of the current section\n\n        sectionLength = (payload[1] & 0x0f) << 8 | payload[2];\n        tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n        // long the program info descriptors are\n\n        programInfoLength = (payload[10] & 0x0f) << 8 | payload[11]; // advance the offset to the first entry in the mapping table\n\n        offset = 12 + programInfoLength;\n        while (offset < tableEnd) {\n          var streamType = payload[offset];\n          var pid = (payload[offset + 1] & 0x1F) << 8 | payload[offset + 2]; // only map a single elementary_pid for audio and video stream types\n          // TODO: should this be done for metadata too? for now maintain behavior of\n          //       multiple metadata streams\n\n          if (streamType === StreamTypes$2.H264_STREAM_TYPE && self.programMapTable.video === null) {\n            self.programMapTable.video = pid;\n          } else if (streamType === StreamTypes$2.ADTS_STREAM_TYPE && self.programMapTable.audio === null) {\n            self.programMapTable.audio = pid;\n          } else if (streamType === StreamTypes$2.METADATA_STREAM_TYPE) {\n            // map pid to stream type for metadata streams\n            self.programMapTable['timed-metadata'][pid] = streamType;\n          } // move to the next table entry\n          // skip past the elementary stream descriptors, if present\n\n          offset += ((payload[offset + 3] & 0x0F) << 8 | payload[offset + 4]) + 5;\n        } // record the map on the packet as well\n\n        pmt.programMapTable = self.programMapTable;\n      };\n      /**\n       * Deliver a new MP2T packet to the next stream in the pipeline.\n       */\n\n      this.push = function (packet) {\n        var result = {},\n          offset = 4;\n        result.payloadUnitStartIndicator = !!(packet[1] & 0x40); // pid is a 13-bit field starting at the last bit of packet[1]\n\n        result.pid = packet[1] & 0x1f;\n        result.pid <<= 8;\n        result.pid |= packet[2]; // if an adaption field is present, its length is specified by the\n        // fifth byte of the TS packet header. The adaptation field is\n        // used to add stuffing to PES packets that don't fill a complete\n        // TS packet, and to specify some forms of timing and control data\n        // that we do not currently use.\n\n        if ((packet[3] & 0x30) >>> 4 > 0x01) {\n          offset += packet[offset] + 1;\n        } // parse the rest of the packet based on the type\n\n        if (result.pid === 0) {\n          result.type = 'pat';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result);\n        } else if (result.pid === this.pmtPid) {\n          result.type = 'pmt';\n          parsePsi(packet.subarray(offset), result);\n          this.trigger('data', result); // if there are any packets waiting for a PMT to be found, process them now\n\n          while (this.packetsWaitingForPmt.length) {\n            this.processPes_.apply(this, this.packetsWaitingForPmt.shift());\n          }\n        } else if (this.programMapTable === undefined) {\n          // When we have not seen a PMT yet, defer further processing of\n          // PES packets until one has been parsed\n          this.packetsWaitingForPmt.push([packet, offset, result]);\n        } else {\n          this.processPes_(packet, offset, result);\n        }\n      };\n      this.processPes_ = function (packet, offset, result) {\n        // set the appropriate stream type\n        if (result.pid === this.programMapTable.video) {\n          result.streamType = StreamTypes$2.H264_STREAM_TYPE;\n        } else if (result.pid === this.programMapTable.audio) {\n          result.streamType = StreamTypes$2.ADTS_STREAM_TYPE;\n        } else {\n          // if not video or audio, it is timed-metadata or unknown\n          // if unknown, streamType will be undefined\n          result.streamType = this.programMapTable['timed-metadata'][result.pid];\n        }\n        result.type = 'pes';\n        result.data = packet.subarray(offset);\n        this.trigger('data', result);\n      };\n    };\n    TransportParseStream.prototype = new Stream$4();\n    TransportParseStream.STREAM_TYPES = {\n      h264: 0x1b,\n      adts: 0x0f\n    };\n    /**\n     * Reconsistutes program elementary stream (PES) packets from parsed\n     * transport stream packets. That is, if you pipe an\n     * mp2t.TransportParseStream into a mp2t.ElementaryStream, the output\n     * events will be events which capture the bytes for individual PES\n     * packets plus relevant metadata that has been extracted from the\n     * container.\n     */\n\n    ElementaryStream = function () {\n      var self = this,\n        segmentHadPmt = false,\n        // PES packet fragments\n        video = {\n          data: [],\n          size: 0\n        },\n        audio = {\n          data: [],\n          size: 0\n        },\n        timedMetadata = {\n          data: [],\n          size: 0\n        },\n        programMapTable,\n        parsePes = function (payload, pes) {\n          var ptsDtsFlags;\n          const startPrefix = payload[0] << 16 | payload[1] << 8 | payload[2]; // default to an empty array\n\n          pes.data = new Uint8Array(); // In certain live streams, the start of a TS fragment has ts packets\n          // that are frame data that is continuing from the previous fragment. This\n          // is to check that the pes data is the start of a new pes payload\n\n          if (startPrefix !== 1) {\n            return;\n          } // get the packet length, this will be 0 for video\n\n          pes.packetLength = 6 + (payload[4] << 8 | payload[5]); // find out if this packets starts a new keyframe\n\n          pes.dataAlignmentIndicator = (payload[6] & 0x04) !== 0; // PES packets may be annotated with a PTS value, or a PTS value\n          // and a DTS value. Determine what combination of values is\n          // available to work with.\n\n          ptsDtsFlags = payload[7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n          // performs all bitwise operations on 32-bit integers but javascript\n          // supports a much greater range (52-bits) of integer using standard\n          // mathematical operations.\n          // We construct a 31-bit value using bitwise operators over the 31\n          // most significant bits and then multiply by 4 (equal to a left-shift\n          // of 2) before we add the final 2 least significant bits of the\n          // timestamp (equal to an OR.)\n\n          if (ptsDtsFlags & 0xC0) {\n            // the PTS and DTS are not written out directly. For information\n            // on how they are encoded, see\n            // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n            pes.pts = (payload[9] & 0x0E) << 27 | (payload[10] & 0xFF) << 20 | (payload[11] & 0xFE) << 12 | (payload[12] & 0xFF) << 5 | (payload[13] & 0xFE) >>> 3;\n            pes.pts *= 4; // Left shift by 2\n\n            pes.pts += (payload[13] & 0x06) >>> 1; // OR by the two LSBs\n\n            pes.dts = pes.pts;\n            if (ptsDtsFlags & 0x40) {\n              pes.dts = (payload[14] & 0x0E) << 27 | (payload[15] & 0xFF) << 20 | (payload[16] & 0xFE) << 12 | (payload[17] & 0xFF) << 5 | (payload[18] & 0xFE) >>> 3;\n              pes.dts *= 4; // Left shift by 2\n\n              pes.dts += (payload[18] & 0x06) >>> 1; // OR by the two LSBs\n            }\n          } // the data section starts immediately after the PES header.\n          // pes_header_data_length specifies the number of header bytes\n          // that follow the last byte of the field.\n\n          pes.data = payload.subarray(9 + payload[8]);\n        },\n        /**\n          * Pass completely parsed PES packets to the next stream in the pipeline\n         **/\n        flushStream = function (stream, type, forceFlush) {\n          var packetData = new Uint8Array(stream.size),\n            event = {\n              type: type\n            },\n            i = 0,\n            offset = 0,\n            packetFlushable = false,\n            fragment; // do nothing if there is not enough buffered data for a complete\n          // PES header\n\n          if (!stream.data.length || stream.size < 9) {\n            return;\n          }\n          event.trackId = stream.data[0].pid; // reassemble the packet\n\n          for (i = 0; i < stream.data.length; i++) {\n            fragment = stream.data[i];\n            packetData.set(fragment.data, offset);\n            offset += fragment.data.byteLength;\n          } // parse assembled packet's PES header\n\n          parsePes(packetData, event); // non-video PES packets MUST have a non-zero PES_packet_length\n          // check that there is enough stream data to fill the packet\n\n          packetFlushable = type === 'video' || event.packetLength <= stream.size; // flush pending packets if the conditions are right\n\n          if (forceFlush || packetFlushable) {\n            stream.size = 0;\n            stream.data.length = 0;\n          } // only emit packets that are complete. this is to avoid assembling\n          // incomplete PES packets due to poor segmentation\n\n          if (packetFlushable) {\n            self.trigger('data', event);\n          }\n        };\n      ElementaryStream.prototype.init.call(this);\n      /**\n       * Identifies M2TS packet types and parses PES packets using metadata\n       * parsed from the PMT\n       **/\n\n      this.push = function (data) {\n        ({\n          pat: function () {// we have to wait for the PMT to arrive as well before we\n            // have any meaningful metadata\n          },\n          pes: function () {\n            var stream, streamType;\n            switch (data.streamType) {\n              case StreamTypes$2.H264_STREAM_TYPE:\n                stream = video;\n                streamType = 'video';\n                break;\n              case StreamTypes$2.ADTS_STREAM_TYPE:\n                stream = audio;\n                streamType = 'audio';\n                break;\n              case StreamTypes$2.METADATA_STREAM_TYPE:\n                stream = timedMetadata;\n                streamType = 'timed-metadata';\n                break;\n              default:\n                // ignore unknown stream types\n                return;\n            } // if a new packet is starting, we can flush the completed\n            // packet\n\n            if (data.payloadUnitStartIndicator) {\n              flushStream(stream, streamType, true);\n            } // buffer this fragment until we are sure we've received the\n            // complete payload\n\n            stream.data.push(data);\n            stream.size += data.data.byteLength;\n          },\n          pmt: function () {\n            var event = {\n              type: 'metadata',\n              tracks: []\n            };\n            programMapTable = data.programMapTable; // translate audio and video streams to tracks\n\n            if (programMapTable.video !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.video,\n                codec: 'avc',\n                type: 'video'\n              });\n            }\n            if (programMapTable.audio !== null) {\n              event.tracks.push({\n                timelineStartInfo: {\n                  baseMediaDecodeTime: 0\n                },\n                id: +programMapTable.audio,\n                codec: 'adts',\n                type: 'audio'\n              });\n            }\n            segmentHadPmt = true;\n            self.trigger('data', event);\n          }\n        })[data.type]();\n      };\n      this.reset = function () {\n        video.size = 0;\n        video.data.length = 0;\n        audio.size = 0;\n        audio.data.length = 0;\n        this.trigger('reset');\n      };\n      /**\n       * Flush any remaining input. Video PES packets may be of variable\n       * length. Normally, the start of a new video packet can trigger the\n       * finalization of the previous packet. That is not possible if no\n       * more video is forthcoming, however. In that case, some other\n       * mechanism (like the end of the file) has to be employed. When it is\n       * clear that no additional data is forthcoming, calling this method\n       * will flush the buffered packets.\n       */\n\n      this.flushStreams_ = function () {\n        // !!THIS ORDER IS IMPORTANT!!\n        // video first then audio\n        flushStream(video, 'video');\n        flushStream(audio, 'audio');\n        flushStream(timedMetadata, 'timed-metadata');\n      };\n      this.flush = function () {\n        // if on flush we haven't had a pmt emitted\n        // and we have a pmt to emit. emit the pmt\n        // so that we trigger a trackinfo downstream.\n        if (!segmentHadPmt && programMapTable) {\n          var pmt = {\n            type: 'metadata',\n            tracks: []\n          }; // translate audio and video streams to tracks\n\n          if (programMapTable.video !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.video,\n              codec: 'avc',\n              type: 'video'\n            });\n          }\n          if (programMapTable.audio !== null) {\n            pmt.tracks.push({\n              timelineStartInfo: {\n                baseMediaDecodeTime: 0\n              },\n              id: +programMapTable.audio,\n              codec: 'adts',\n              type: 'audio'\n            });\n          }\n          self.trigger('data', pmt);\n        }\n        segmentHadPmt = false;\n        this.flushStreams_();\n        this.trigger('done');\n      };\n    };\n    ElementaryStream.prototype = new Stream$4();\n    var m2ts$1 = {\n      PAT_PID: 0x0000,\n      MP2T_PACKET_LENGTH: MP2T_PACKET_LENGTH$1,\n      TransportPacketStream: TransportPacketStream,\n      TransportParseStream: TransportParseStream,\n      ElementaryStream: ElementaryStream,\n      TimestampRolloverStream: TimestampRolloverStream,\n      CaptionStream: CaptionStream$1.CaptionStream,\n      Cea608Stream: CaptionStream$1.Cea608Stream,\n      Cea708Stream: CaptionStream$1.Cea708Stream,\n      MetadataStream: metadataStream\n    };\n    for (var type in StreamTypes$2) {\n      if (StreamTypes$2.hasOwnProperty(type)) {\n        m2ts$1[type] = StreamTypes$2[type];\n      }\n    }\n    var m2ts_1 = m2ts$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var Stream$3 = stream;\n    var ONE_SECOND_IN_TS$2 = clock$2.ONE_SECOND_IN_TS;\n    var AdtsStream$1;\n    var ADTS_SAMPLING_FREQUENCIES$1 = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    /*\n     * Accepts a ElementaryStream and emits data events with parsed\n     * AAC Audio Frames of the individual packets. Input audio in ADTS\n     * format is unpacked and re-emitted as AAC frames.\n     *\n     * @see http://wiki.multimedia.cx/index.php?title=ADTS\n     * @see http://wiki.multimedia.cx/?title=Understanding_AAC\n     */\n\n    AdtsStream$1 = function (handlePartialSegments) {\n      var buffer,\n        frameNum = 0;\n      AdtsStream$1.prototype.init.call(this);\n      this.skipWarn_ = function (start, end) {\n        this.trigger('log', {\n          level: 'warn',\n          message: `adts skiping bytes ${start} to ${end} in frame ${frameNum} outside syncword`\n        });\n      };\n      this.push = function (packet) {\n        var i = 0,\n          frameLength,\n          protectionSkipBytes,\n          oldBuffer,\n          sampleCount,\n          adtsFrameDuration;\n        if (!handlePartialSegments) {\n          frameNum = 0;\n        }\n        if (packet.type !== 'audio') {\n          // ignore non-audio data\n          return;\n        } // Prepend any data in the buffer to the input data so that we can parse\n        // aac frames the cross a PES packet boundary\n\n        if (buffer && buffer.length) {\n          oldBuffer = buffer;\n          buffer = new Uint8Array(oldBuffer.byteLength + packet.data.byteLength);\n          buffer.set(oldBuffer);\n          buffer.set(packet.data, oldBuffer.byteLength);\n        } else {\n          buffer = packet.data;\n        } // unpack any ADTS frames which have been fully received\n        // for details on the ADTS header, see http://wiki.multimedia.cx/index.php?title=ADTS\n\n        var skip; // We use i + 7 here because we want to be able to parse the entire header.\n        // If we don't have enough bytes to do that, then we definitely won't have a full frame.\n\n        while (i + 7 < buffer.length) {\n          // Look for the start of an ADTS header..\n          if (buffer[i] !== 0xFF || (buffer[i + 1] & 0xF6) !== 0xF0) {\n            if (typeof skip !== 'number') {\n              skip = i;\n            } // If a valid header was not found,  jump one forward and attempt to\n            // find a valid ADTS header starting at the next byte\n\n            i++;\n            continue;\n          }\n          if (typeof skip === 'number') {\n            this.skipWarn_(skip, i);\n            skip = null;\n          } // The protection skip bit tells us if we have 2 bytes of CRC data at the\n          // end of the ADTS header\n\n          protectionSkipBytes = (~buffer[i + 1] & 0x01) * 2; // Frame length is a 13 bit integer starting 16 bits from the\n          // end of the sync sequence\n          // NOTE: frame length includes the size of the header\n\n          frameLength = (buffer[i + 3] & 0x03) << 11 | buffer[i + 4] << 3 | (buffer[i + 5] & 0xe0) >> 5;\n          sampleCount = ((buffer[i + 6] & 0x03) + 1) * 1024;\n          adtsFrameDuration = sampleCount * ONE_SECOND_IN_TS$2 / ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2]; // If we don't have enough data to actually finish this ADTS frame,\n          // then we have to wait for more data\n\n          if (buffer.byteLength - i < frameLength) {\n            break;\n          } // Otherwise, deliver the complete AAC frame\n\n          this.trigger('data', {\n            pts: packet.pts + frameNum * adtsFrameDuration,\n            dts: packet.dts + frameNum * adtsFrameDuration,\n            sampleCount: sampleCount,\n            audioobjecttype: (buffer[i + 2] >>> 6 & 0x03) + 1,\n            channelcount: (buffer[i + 2] & 1) << 2 | (buffer[i + 3] & 0xc0) >>> 6,\n            samplerate: ADTS_SAMPLING_FREQUENCIES$1[(buffer[i + 2] & 0x3c) >>> 2],\n            samplingfrequencyindex: (buffer[i + 2] & 0x3c) >>> 2,\n            // assume ISO/IEC 14496-12 AudioSampleEntry default of 16\n            samplesize: 16,\n            // data is the frame without it's header\n            data: buffer.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n          });\n          frameNum++;\n          i += frameLength;\n        }\n        if (typeof skip === 'number') {\n          this.skipWarn_(skip, i);\n          skip = null;\n        } // remove processed bytes from the buffer.\n\n        buffer = buffer.subarray(i);\n      };\n      this.flush = function () {\n        frameNum = 0;\n        this.trigger('done');\n      };\n      this.reset = function () {\n        buffer = void 0;\n        this.trigger('reset');\n      };\n      this.endTimeline = function () {\n        buffer = void 0;\n        this.trigger('endedtimeline');\n      };\n    };\n    AdtsStream$1.prototype = new Stream$3();\n    var adts = AdtsStream$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var ExpGolomb$1;\n    /**\n     * Parser for exponential Golomb codes, a variable-bitwidth number encoding\n     * scheme used by h264.\n     */\n\n    ExpGolomb$1 = function (workingData) {\n      var\n        // the number of bytes left to examine in workingData\n        workingBytesAvailable = workingData.byteLength,\n        // the current word being examined\n        workingWord = 0,\n        // :uint\n        // the number of bits left to examine in the current word\n        workingBitsAvailable = 0; // :uint;\n      // ():uint\n\n      this.length = function () {\n        return 8 * workingBytesAvailable;\n      }; // ():uint\n\n      this.bitsAvailable = function () {\n        return 8 * workingBytesAvailable + workingBitsAvailable;\n      }; // ():void\n\n      this.loadWord = function () {\n        var position = workingData.byteLength - workingBytesAvailable,\n          workingBytes = new Uint8Array(4),\n          availableBytes = Math.min(4, workingBytesAvailable);\n        if (availableBytes === 0) {\n          throw new Error('no bytes available');\n        }\n        workingBytes.set(workingData.subarray(position, position + availableBytes));\n        workingWord = new DataView(workingBytes.buffer).getUint32(0); // track the amount of workingData that has been processed\n\n        workingBitsAvailable = availableBytes * 8;\n        workingBytesAvailable -= availableBytes;\n      }; // (count:int):void\n\n      this.skipBits = function (count) {\n        var skipBytes; // :int\n\n        if (workingBitsAvailable > count) {\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        } else {\n          count -= workingBitsAvailable;\n          skipBytes = Math.floor(count / 8);\n          count -= skipBytes * 8;\n          workingBytesAvailable -= skipBytes;\n          this.loadWord();\n          workingWord <<= count;\n          workingBitsAvailable -= count;\n        }\n      }; // (size:int):uint\n\n      this.readBits = function (size) {\n        var bits = Math.min(workingBitsAvailable, size),\n          // :uint\n          valu = workingWord >>> 32 - bits; // :uint\n        // if size > 31, handle error\n\n        workingBitsAvailable -= bits;\n        if (workingBitsAvailable > 0) {\n          workingWord <<= bits;\n        } else if (workingBytesAvailable > 0) {\n          this.loadWord();\n        }\n        bits = size - bits;\n        if (bits > 0) {\n          return valu << bits | this.readBits(bits);\n        }\n        return valu;\n      }; // ():uint\n\n      this.skipLeadingZeros = function () {\n        var leadingZeroCount; // :uint\n\n        for (leadingZeroCount = 0; leadingZeroCount < workingBitsAvailable; ++leadingZeroCount) {\n          if ((workingWord & 0x80000000 >>> leadingZeroCount) !== 0) {\n            // the first bit of working word is 1\n            workingWord <<= leadingZeroCount;\n            workingBitsAvailable -= leadingZeroCount;\n            return leadingZeroCount;\n          }\n        } // we exhausted workingWord and still have not found a 1\n\n        this.loadWord();\n        return leadingZeroCount + this.skipLeadingZeros();\n      }; // ():void\n\n      this.skipUnsignedExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():void\n\n      this.skipExpGolomb = function () {\n        this.skipBits(1 + this.skipLeadingZeros());\n      }; // ():uint\n\n      this.readUnsignedExpGolomb = function () {\n        var clz = this.skipLeadingZeros(); // :uint\n\n        return this.readBits(clz + 1) - 1;\n      }; // ():int\n\n      this.readExpGolomb = function () {\n        var valu = this.readUnsignedExpGolomb(); // :int\n\n        if (0x01 & valu) {\n          // the number is odd if the low order bit is set\n          return 1 + valu >>> 1; // add 1 to make it even, and divide by 2\n        }\n\n        return -1 * (valu >>> 1); // divide by two then make it negative\n      }; // Some convenience functions\n      // :Boolean\n\n      this.readBoolean = function () {\n        return this.readBits(1) === 1;\n      }; // ():int\n\n      this.readUnsignedByte = function () {\n        return this.readBits(8);\n      };\n      this.loadWord();\n    };\n    var expGolomb = ExpGolomb$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var Stream$2 = stream;\n    var ExpGolomb = expGolomb;\n    var H264Stream$1, NalByteStream;\n    var PROFILES_WITH_OPTIONAL_SPS_DATA;\n    /**\n     * Accepts a NAL unit byte stream and unpacks the embedded NAL units.\n     */\n\n    NalByteStream = function () {\n      var syncPoint = 0,\n        i,\n        buffer;\n      NalByteStream.prototype.init.call(this);\n      /*\n       * Scans a byte stream and triggers a data event with the NAL units found.\n       * @param {Object} data Event received from H264Stream\n       * @param {Uint8Array} data.data The h264 byte stream to be scanned\n       *\n       * @see H264Stream.push\n       */\n\n      this.push = function (data) {\n        var swapBuffer;\n        if (!buffer) {\n          buffer = data.data;\n        } else {\n          swapBuffer = new Uint8Array(buffer.byteLength + data.data.byteLength);\n          swapBuffer.set(buffer);\n          swapBuffer.set(data.data, buffer.byteLength);\n          buffer = swapBuffer;\n        }\n        var len = buffer.byteLength; // Rec. ITU-T H.264, Annex B\n        // scan for NAL unit boundaries\n        // a match looks like this:\n        // 0 0 1 .. NAL .. 0 0 1\n        // ^ sync point        ^ i\n        // or this:\n        // 0 0 1 .. NAL .. 0 0 0\n        // ^ sync point        ^ i\n        // advance the sync point to a NAL start, if necessary\n\n        for (; syncPoint < len - 3; syncPoint++) {\n          if (buffer[syncPoint + 2] === 1) {\n            // the sync point is properly aligned\n            i = syncPoint + 5;\n            break;\n          }\n        }\n        while (i < len) {\n          // look at the current byte to determine if we've hit the end of\n          // a NAL unit boundary\n          switch (buffer[i]) {\n            case 0:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0) {\n                i += 2;\n                break;\n              } else if (buffer[i - 2] !== 0) {\n                i++;\n                break;\n              } // deliver the NAL unit if it isn't empty\n\n              if (syncPoint + 3 !== i - 2) {\n                this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              } // drop trailing zeroes\n\n              do {\n                i++;\n              } while (buffer[i] !== 1 && i < len);\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            case 1:\n              // skip past non-sync sequences\n              if (buffer[i - 1] !== 0 || buffer[i - 2] !== 0) {\n                i += 3;\n                break;\n              } // deliver the NAL unit\n\n              this.trigger('data', buffer.subarray(syncPoint + 3, i - 2));\n              syncPoint = i - 2;\n              i += 3;\n              break;\n            default:\n              // the current byte isn't a one or zero, so it cannot be part\n              // of a sync sequence\n              i += 3;\n              break;\n          }\n        } // filter out the NAL units that were delivered\n\n        buffer = buffer.subarray(syncPoint);\n        i -= syncPoint;\n        syncPoint = 0;\n      };\n      this.reset = function () {\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('reset');\n      };\n      this.flush = function () {\n        // deliver the last buffered NAL unit\n        if (buffer && buffer.byteLength > 3) {\n          this.trigger('data', buffer.subarray(syncPoint + 3));\n        } // reset the stream state\n\n        buffer = null;\n        syncPoint = 0;\n        this.trigger('done');\n      };\n      this.endTimeline = function () {\n        this.flush();\n        this.trigger('endedtimeline');\n      };\n    };\n    NalByteStream.prototype = new Stream$2(); // values of profile_idc that indicate additional fields are included in the SPS\n    // see Recommendation ITU-T H.264 (4/2013),\n    // 7.3.2.1.1 Sequence parameter set data syntax\n\n    PROFILES_WITH_OPTIONAL_SPS_DATA = {\n      100: true,\n      110: true,\n      122: true,\n      244: true,\n      44: true,\n      83: true,\n      86: true,\n      118: true,\n      128: true,\n      // TODO: the three profiles below don't\n      // appear to have sps data in the specificiation anymore?\n      138: true,\n      139: true,\n      134: true\n    };\n    /**\n     * Accepts input from a ElementaryStream and produces H.264 NAL unit data\n     * events.\n     */\n\n    H264Stream$1 = function () {\n      var nalByteStream = new NalByteStream(),\n        self,\n        trackId,\n        currentPts,\n        currentDts,\n        discardEmulationPreventionBytes,\n        readSequenceParameterSet,\n        skipScalingList;\n      H264Stream$1.prototype.init.call(this);\n      self = this;\n      /*\n       * Pushes a packet from a stream onto the NalByteStream\n       *\n       * @param {Object} packet - A packet received from a stream\n       * @param {Uint8Array} packet.data - The raw bytes of the packet\n       * @param {Number} packet.dts - Decode timestamp of the packet\n       * @param {Number} packet.pts - Presentation timestamp of the packet\n       * @param {Number} packet.trackId - The id of the h264 track this packet came from\n       * @param {('video'|'audio')} packet.type - The type of packet\n       *\n       */\n\n      this.push = function (packet) {\n        if (packet.type !== 'video') {\n          return;\n        }\n        trackId = packet.trackId;\n        currentPts = packet.pts;\n        currentDts = packet.dts;\n        nalByteStream.push(packet);\n      };\n      /*\n       * Identify NAL unit types and pass on the NALU, trackId, presentation and decode timestamps\n       * for the NALUs to the next stream component.\n       * Also, preprocess caption and sequence parameter NALUs.\n       *\n       * @param {Uint8Array} data - A NAL unit identified by `NalByteStream.push`\n       * @see NalByteStream.push\n       */\n\n      nalByteStream.on('data', function (data) {\n        var event = {\n          trackId: trackId,\n          pts: currentPts,\n          dts: currentDts,\n          data: data,\n          nalUnitTypeCode: data[0] & 0x1f\n        };\n        switch (event.nalUnitTypeCode) {\n          case 0x05:\n            event.nalUnitType = 'slice_layer_without_partitioning_rbsp_idr';\n            break;\n          case 0x06:\n            event.nalUnitType = 'sei_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            break;\n          case 0x07:\n            event.nalUnitType = 'seq_parameter_set_rbsp';\n            event.escapedRBSP = discardEmulationPreventionBytes(data.subarray(1));\n            event.config = readSequenceParameterSet(event.escapedRBSP);\n            break;\n          case 0x08:\n            event.nalUnitType = 'pic_parameter_set_rbsp';\n            break;\n          case 0x09:\n            event.nalUnitType = 'access_unit_delimiter_rbsp';\n            break;\n        } // This triggers data on the H264Stream\n\n        self.trigger('data', event);\n      });\n      nalByteStream.on('done', function () {\n        self.trigger('done');\n      });\n      nalByteStream.on('partialdone', function () {\n        self.trigger('partialdone');\n      });\n      nalByteStream.on('reset', function () {\n        self.trigger('reset');\n      });\n      nalByteStream.on('endedtimeline', function () {\n        self.trigger('endedtimeline');\n      });\n      this.flush = function () {\n        nalByteStream.flush();\n      };\n      this.partialFlush = function () {\n        nalByteStream.partialFlush();\n      };\n      this.reset = function () {\n        nalByteStream.reset();\n      };\n      this.endTimeline = function () {\n        nalByteStream.endTimeline();\n      };\n      /**\n       * Advance the ExpGolomb decoder past a scaling list. The scaling\n       * list is optionally transmitted as part of a sequence parameter\n       * set and is not relevant to transmuxing.\n       * @param count {number} the number of entries in this scaling list\n       * @param expGolombDecoder {object} an ExpGolomb pointed to the\n       * start of a scaling list\n       * @see Recommendation ITU-T H.264, Section 7.3.2.1.1.1\n       */\n\n      skipScalingList = function (count, expGolombDecoder) {\n        var lastScale = 8,\n          nextScale = 8,\n          j,\n          deltaScale;\n        for (j = 0; j < count; j++) {\n          if (nextScale !== 0) {\n            deltaScale = expGolombDecoder.readExpGolomb();\n            nextScale = (lastScale + deltaScale + 256) % 256;\n          }\n          lastScale = nextScale === 0 ? lastScale : nextScale;\n        }\n      };\n      /**\n       * Expunge any \"Emulation Prevention\" bytes from a \"Raw Byte\n       * Sequence Payload\"\n       * @param data {Uint8Array} the bytes of a RBSP from a NAL\n       * unit\n       * @return {Uint8Array} the RBSP without any Emulation\n       * Prevention Bytes\n       */\n\n      discardEmulationPreventionBytes = function (data) {\n        var length = data.byteLength,\n          emulationPreventionBytesPositions = [],\n          i = 1,\n          newLength,\n          newData; // Find all `Emulation Prevention Bytes`\n\n        while (i < length - 2) {\n          if (data[i] === 0 && data[i + 1] === 0 && data[i + 2] === 0x03) {\n            emulationPreventionBytesPositions.push(i + 2);\n            i += 2;\n          } else {\n            i++;\n          }\n        } // If no Emulation Prevention Bytes were found just return the original\n        // array\n\n        if (emulationPreventionBytesPositions.length === 0) {\n          return data;\n        } // Create a new array to hold the NAL unit data\n\n        newLength = length - emulationPreventionBytesPositions.length;\n        newData = new Uint8Array(newLength);\n        var sourceIndex = 0;\n        for (i = 0; i < newLength; sourceIndex++, i++) {\n          if (sourceIndex === emulationPreventionBytesPositions[0]) {\n            // Skip this byte\n            sourceIndex++; // Remove this position index\n\n            emulationPreventionBytesPositions.shift();\n          }\n          newData[i] = data[sourceIndex];\n        }\n        return newData;\n      };\n      /**\n       * Read a sequence parameter set and return some interesting video\n       * properties. A sequence parameter set is the H264 metadata that\n       * describes the properties of upcoming video frames.\n       * @param data {Uint8Array} the bytes of a sequence parameter set\n       * @return {object} an object with configuration parsed from the\n       * sequence parameter set, including the dimensions of the\n       * associated video frames.\n       */\n\n      readSequenceParameterSet = function (data) {\n        var frameCropLeftOffset = 0,\n          frameCropRightOffset = 0,\n          frameCropTopOffset = 0,\n          frameCropBottomOffset = 0,\n          expGolombDecoder,\n          profileIdc,\n          levelIdc,\n          profileCompatibility,\n          chromaFormatIdc,\n          picOrderCntType,\n          numRefFramesInPicOrderCntCycle,\n          picWidthInMbsMinus1,\n          picHeightInMapUnitsMinus1,\n          frameMbsOnlyFlag,\n          scalingListCount,\n          sarRatio = [1, 1],\n          aspectRatioIdc,\n          i;\n        expGolombDecoder = new ExpGolomb(data);\n        profileIdc = expGolombDecoder.readUnsignedByte(); // profile_idc\n\n        profileCompatibility = expGolombDecoder.readUnsignedByte(); // constraint_set[0-5]_flag\n\n        levelIdc = expGolombDecoder.readUnsignedByte(); // level_idc u(8)\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // seq_parameter_set_id\n        // some profiles have more optional data we don't need\n\n        if (PROFILES_WITH_OPTIONAL_SPS_DATA[profileIdc]) {\n          chromaFormatIdc = expGolombDecoder.readUnsignedExpGolomb();\n          if (chromaFormatIdc === 3) {\n            expGolombDecoder.skipBits(1); // separate_colour_plane_flag\n          }\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_luma_minus8\n\n          expGolombDecoder.skipUnsignedExpGolomb(); // bit_depth_chroma_minus8\n\n          expGolombDecoder.skipBits(1); // qpprime_y_zero_transform_bypass_flag\n\n          if (expGolombDecoder.readBoolean()) {\n            // seq_scaling_matrix_present_flag\n            scalingListCount = chromaFormatIdc !== 3 ? 8 : 12;\n            for (i = 0; i < scalingListCount; i++) {\n              if (expGolombDecoder.readBoolean()) {\n                // seq_scaling_list_present_flag[ i ]\n                if (i < 6) {\n                  skipScalingList(16, expGolombDecoder);\n                } else {\n                  skipScalingList(64, expGolombDecoder);\n                }\n              }\n            }\n          }\n        }\n        expGolombDecoder.skipUnsignedExpGolomb(); // log2_max_frame_num_minus4\n\n        picOrderCntType = expGolombDecoder.readUnsignedExpGolomb();\n        if (picOrderCntType === 0) {\n          expGolombDecoder.readUnsignedExpGolomb(); // log2_max_pic_order_cnt_lsb_minus4\n        } else if (picOrderCntType === 1) {\n          expGolombDecoder.skipBits(1); // delta_pic_order_always_zero_flag\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_non_ref_pic\n\n          expGolombDecoder.skipExpGolomb(); // offset_for_top_to_bottom_field\n\n          numRefFramesInPicOrderCntCycle = expGolombDecoder.readUnsignedExpGolomb();\n          for (i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n            expGolombDecoder.skipExpGolomb(); // offset_for_ref_frame[ i ]\n          }\n        }\n\n        expGolombDecoder.skipUnsignedExpGolomb(); // max_num_ref_frames\n\n        expGolombDecoder.skipBits(1); // gaps_in_frame_num_value_allowed_flag\n\n        picWidthInMbsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        picHeightInMapUnitsMinus1 = expGolombDecoder.readUnsignedExpGolomb();\n        frameMbsOnlyFlag = expGolombDecoder.readBits(1);\n        if (frameMbsOnlyFlag === 0) {\n          expGolombDecoder.skipBits(1); // mb_adaptive_frame_field_flag\n        }\n\n        expGolombDecoder.skipBits(1); // direct_8x8_inference_flag\n\n        if (expGolombDecoder.readBoolean()) {\n          // frame_cropping_flag\n          frameCropLeftOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropRightOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropTopOffset = expGolombDecoder.readUnsignedExpGolomb();\n          frameCropBottomOffset = expGolombDecoder.readUnsignedExpGolomb();\n        }\n        if (expGolombDecoder.readBoolean()) {\n          // vui_parameters_present_flag\n          if (expGolombDecoder.readBoolean()) {\n            // aspect_ratio_info_present_flag\n            aspectRatioIdc = expGolombDecoder.readUnsignedByte();\n            switch (aspectRatioIdc) {\n              case 1:\n                sarRatio = [1, 1];\n                break;\n              case 2:\n                sarRatio = [12, 11];\n                break;\n              case 3:\n                sarRatio = [10, 11];\n                break;\n              case 4:\n                sarRatio = [16, 11];\n                break;\n              case 5:\n                sarRatio = [40, 33];\n                break;\n              case 6:\n                sarRatio = [24, 11];\n                break;\n              case 7:\n                sarRatio = [20, 11];\n                break;\n              case 8:\n                sarRatio = [32, 11];\n                break;\n              case 9:\n                sarRatio = [80, 33];\n                break;\n              case 10:\n                sarRatio = [18, 11];\n                break;\n              case 11:\n                sarRatio = [15, 11];\n                break;\n              case 12:\n                sarRatio = [64, 33];\n                break;\n              case 13:\n                sarRatio = [160, 99];\n                break;\n              case 14:\n                sarRatio = [4, 3];\n                break;\n              case 15:\n                sarRatio = [3, 2];\n                break;\n              case 16:\n                sarRatio = [2, 1];\n                break;\n              case 255:\n                {\n                  sarRatio = [expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte(), expGolombDecoder.readUnsignedByte() << 8 | expGolombDecoder.readUnsignedByte()];\n                  break;\n                }\n            }\n            if (sarRatio) {\n              sarRatio[0] / sarRatio[1];\n            }\n          }\n        }\n        return {\n          profileIdc: profileIdc,\n          levelIdc: levelIdc,\n          profileCompatibility: profileCompatibility,\n          width: (picWidthInMbsMinus1 + 1) * 16 - frameCropLeftOffset * 2 - frameCropRightOffset * 2,\n          height: (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 - frameCropTopOffset * 2 - frameCropBottomOffset * 2,\n          // sar is sample aspect ratio\n          sarRatio: sarRatio\n        };\n      };\n    };\n    H264Stream$1.prototype = new Stream$2();\n    var h264 = {\n      H264Stream: H264Stream$1,\n      NalByteStream: NalByteStream\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about Aac data.\n     */\n\n    var ADTS_SAMPLING_FREQUENCIES = [96000, 88200, 64000, 48000, 44100, 32000, 24000, 22050, 16000, 12000, 11025, 8000, 7350];\n    var parseId3TagSize = function (header, byteIndex) {\n      var returnSize = header[byteIndex + 6] << 21 | header[byteIndex + 7] << 14 | header[byteIndex + 8] << 7 | header[byteIndex + 9],\n        flags = header[byteIndex + 5],\n        footerPresent = (flags & 16) >> 4; // if we get a negative returnSize clamp it to 0\n\n      returnSize = returnSize >= 0 ? returnSize : 0;\n      if (footerPresent) {\n        return returnSize + 20;\n      }\n      return returnSize + 10;\n    };\n    var getId3Offset = function (data, offset) {\n      if (data.length - offset < 10 || data[offset] !== 'I'.charCodeAt(0) || data[offset + 1] !== 'D'.charCodeAt(0) || data[offset + 2] !== '3'.charCodeAt(0)) {\n        return offset;\n      }\n      offset += parseId3TagSize(data, offset);\n      return getId3Offset(data, offset);\n    }; // TODO: use vhs-utils\n\n    var isLikelyAacData$1 = function (data) {\n      var offset = getId3Offset(data, 0);\n      return data.length >= offset + 2 && (data[offset] & 0xFF) === 0xFF && (data[offset + 1] & 0xF0) === 0xF0 &&\n      // verify that the 2 layer bits are 0, aka this\n      // is not mp3 data but aac data.\n      (data[offset + 1] & 0x16) === 0x10;\n    };\n    var parseSyncSafeInteger = function (data) {\n      return data[0] << 21 | data[1] << 14 | data[2] << 7 | data[3];\n    }; // return a percent-encoded representation of the specified byte range\n    // @see http://en.wikipedia.org/wiki/Percent-encoding\n\n    var percentEncode = function (bytes, start, end) {\n      var i,\n        result = '';\n      for (i = start; i < end; i++) {\n        result += '%' + ('00' + bytes[i].toString(16)).slice(-2);\n      }\n      return result;\n    }; // return the string representation of the specified byte range,\n    // interpreted as ISO-8859-1.\n\n    var parseIso88591 = function (bytes, start, end) {\n      return unescape(percentEncode(bytes, start, end)); // jshint ignore:line\n    };\n\n    var parseAdtsSize = function (header, byteIndex) {\n      var lowThree = (header[byteIndex + 5] & 0xE0) >> 5,\n        middle = header[byteIndex + 4] << 3,\n        highTwo = header[byteIndex + 3] & 0x3 << 11;\n      return highTwo | middle | lowThree;\n    };\n    var parseType$4 = function (header, byteIndex) {\n      if (header[byteIndex] === 'I'.charCodeAt(0) && header[byteIndex + 1] === 'D'.charCodeAt(0) && header[byteIndex + 2] === '3'.charCodeAt(0)) {\n        return 'timed-metadata';\n      } else if (header[byteIndex] & 0xff === 0xff && (header[byteIndex + 1] & 0xf0) === 0xf0) {\n        return 'audio';\n      }\n      return null;\n    };\n    var parseSampleRate = function (packet) {\n      var i = 0;\n      while (i + 5 < packet.length) {\n        if (packet[i] !== 0xFF || (packet[i + 1] & 0xF6) !== 0xF0) {\n          // If a valid header was not found,  jump one forward and attempt to\n          // find a valid ADTS header starting at the next byte\n          i++;\n          continue;\n        }\n        return ADTS_SAMPLING_FREQUENCIES[(packet[i + 2] & 0x3c) >>> 2];\n      }\n      return null;\n    };\n    var parseAacTimestamp = function (packet) {\n      var frameStart, frameSize, frame, frameHeader; // find the start of the first frame and the end of the tag\n\n      frameStart = 10;\n      if (packet[5] & 0x40) {\n        // advance the frame start past the extended header\n        frameStart += 4; // header size field\n\n        frameStart += parseSyncSafeInteger(packet.subarray(10, 14));\n      } // parse one or more ID3 frames\n      // http://id3.org/id3v2.3.0#ID3v2_frame_overview\n\n      do {\n        // determine the number of bytes in this frame\n        frameSize = parseSyncSafeInteger(packet.subarray(frameStart + 4, frameStart + 8));\n        if (frameSize < 1) {\n          return null;\n        }\n        frameHeader = String.fromCharCode(packet[frameStart], packet[frameStart + 1], packet[frameStart + 2], packet[frameStart + 3]);\n        if (frameHeader === 'PRIV') {\n          frame = packet.subarray(frameStart + 10, frameStart + frameSize + 10);\n          for (var i = 0; i < frame.byteLength; i++) {\n            if (frame[i] === 0) {\n              var owner = parseIso88591(frame, 0, i);\n              if (owner === 'com.apple.streaming.transportStreamTimestamp') {\n                var d = frame.subarray(i + 1);\n                var size = (d[3] & 0x01) << 30 | d[4] << 22 | d[5] << 14 | d[6] << 6 | d[7] >>> 2;\n                size *= 4;\n                size += d[7] & 0x03;\n                return size;\n              }\n              break;\n            }\n          }\n        }\n        frameStart += 10; // advance past the frame header\n\n        frameStart += frameSize; // advance past the frame body\n      } while (frameStart < packet.byteLength);\n      return null;\n    };\n    var utils = {\n      isLikelyAacData: isLikelyAacData$1,\n      parseId3TagSize: parseId3TagSize,\n      parseAdtsSize: parseAdtsSize,\n      parseType: parseType$4,\n      parseSampleRate: parseSampleRate,\n      parseAacTimestamp: parseAacTimestamp\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A stream-based aac to mp4 converter. This utility can be used to\n     * deliver mp4s to a SourceBuffer on platforms that support native\n     * Media Source Extensions.\n     */\n\n    var Stream$1 = stream;\n    var aacUtils = utils; // Constants\n\n    var AacStream$1;\n    /**\n     * Splits an incoming stream of binary data into ADTS and ID3 Frames.\n     */\n\n    AacStream$1 = function () {\n      var everything = new Uint8Array(),\n        timeStamp = 0;\n      AacStream$1.prototype.init.call(this);\n      this.setTimestamp = function (timestamp) {\n        timeStamp = timestamp;\n      };\n      this.push = function (bytes) {\n        var frameSize = 0,\n          byteIndex = 0,\n          bytesLeft,\n          chunk,\n          packet,\n          tempLength; // If there are bytes remaining from the last segment, prepend them to the\n        // bytes that were pushed in\n\n        if (everything.length) {\n          tempLength = everything.length;\n          everything = new Uint8Array(bytes.byteLength + tempLength);\n          everything.set(everything.subarray(0, tempLength));\n          everything.set(bytes, tempLength);\n        } else {\n          everything = bytes;\n        }\n        while (everything.length - byteIndex >= 3) {\n          if (everything[byteIndex] === 'I'.charCodeAt(0) && everything[byteIndex + 1] === 'D'.charCodeAt(0) && everything[byteIndex + 2] === '3'.charCodeAt(0)) {\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (everything.length - byteIndex < 10) {\n              break;\n            } // check framesize\n\n            frameSize = aacUtils.parseId3TagSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n            // Add to byteIndex to support multiple ID3 tags in sequence\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n            chunk = {\n              type: 'timed-metadata',\n              data: everything.subarray(byteIndex, byteIndex + frameSize)\n            };\n            this.trigger('data', chunk);\n            byteIndex += frameSize;\n            continue;\n          } else if ((everything[byteIndex] & 0xff) === 0xff && (everything[byteIndex + 1] & 0xf0) === 0xf0) {\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (everything.length - byteIndex < 7) {\n              break;\n            }\n            frameSize = aacUtils.parseAdtsSize(everything, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (byteIndex + frameSize > everything.length) {\n              break;\n            }\n            packet = {\n              type: 'audio',\n              data: everything.subarray(byteIndex, byteIndex + frameSize),\n              pts: timeStamp,\n              dts: timeStamp\n            };\n            this.trigger('data', packet);\n            byteIndex += frameSize;\n            continue;\n          }\n          byteIndex++;\n        }\n        bytesLeft = everything.length - byteIndex;\n        if (bytesLeft > 0) {\n          everything = everything.subarray(byteIndex);\n        } else {\n          everything = new Uint8Array();\n        }\n      };\n      this.reset = function () {\n        everything = new Uint8Array();\n        this.trigger('reset');\n      };\n      this.endTimeline = function () {\n        everything = new Uint8Array();\n        this.trigger('endedtimeline');\n      };\n    };\n    AacStream$1.prototype = new Stream$1();\n    var aac = AacStream$1;\n    var AUDIO_PROPERTIES$1 = ['audioobjecttype', 'channelcount', 'samplerate', 'samplingfrequencyindex', 'samplesize'];\n    var audioProperties = AUDIO_PROPERTIES$1;\n    var VIDEO_PROPERTIES$1 = ['width', 'height', 'profileIdc', 'levelIdc', 'profileCompatibility', 'sarRatio'];\n    var videoProperties = VIDEO_PROPERTIES$1;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * A stream-based mp2t to mp4 converter. This utility can be used to\n     * deliver mp4s to a SourceBuffer on platforms that support native\n     * Media Source Extensions.\n     */\n\n    var Stream = stream;\n    var mp4 = mp4Generator;\n    var frameUtils = frameUtils$1;\n    var audioFrameUtils = audioFrameUtils$1;\n    var trackDecodeInfo = trackDecodeInfo$1;\n    var m2ts = m2ts_1;\n    var clock = clock$2;\n    var AdtsStream = adts;\n    var H264Stream = h264.H264Stream;\n    var AacStream = aac;\n    var isLikelyAacData = utils.isLikelyAacData;\n    var ONE_SECOND_IN_TS$1 = clock$2.ONE_SECOND_IN_TS;\n    var AUDIO_PROPERTIES = audioProperties;\n    var VIDEO_PROPERTIES = videoProperties; // object types\n\n    var VideoSegmentStream, AudioSegmentStream, Transmuxer, CoalesceStream;\n    var retriggerForStream = function (key, event) {\n      event.stream = key;\n      this.trigger('log', event);\n    };\n    var addPipelineLogRetriggers = function (transmuxer, pipeline) {\n      var keys = Object.keys(pipeline);\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i]; // skip non-stream keys and headOfPipeline\n        // which is just a duplicate\n\n        if (key === 'headOfPipeline' || !pipeline[key].on) {\n          continue;\n        }\n        pipeline[key].on('log', retriggerForStream.bind(transmuxer, key));\n      }\n    };\n    /**\n     * Compare two arrays (even typed) for same-ness\n     */\n\n    var arrayEquals = function (a, b) {\n      var i;\n      if (a.length !== b.length) {\n        return false;\n      } // compare the value of each element in the array\n\n      for (i = 0; i < a.length; i++) {\n        if (a[i] !== b[i]) {\n          return false;\n        }\n      }\n      return true;\n    };\n    var generateSegmentTimingInfo = function (baseMediaDecodeTime, startDts, startPts, endDts, endPts, prependedContentDuration) {\n      var ptsOffsetFromDts = startPts - startDts,\n        decodeDuration = endDts - startDts,\n        presentationDuration = endPts - startPts; // The PTS and DTS values are based on the actual stream times from the segment,\n      // however, the player time values will reflect a start from the baseMediaDecodeTime.\n      // In order to provide relevant values for the player times, base timing info on the\n      // baseMediaDecodeTime and the DTS and PTS durations of the segment.\n\n      return {\n        start: {\n          dts: baseMediaDecodeTime,\n          pts: baseMediaDecodeTime + ptsOffsetFromDts\n        },\n        end: {\n          dts: baseMediaDecodeTime + decodeDuration,\n          pts: baseMediaDecodeTime + presentationDuration\n        },\n        prependedContentDuration: prependedContentDuration,\n        baseMediaDecodeTime: baseMediaDecodeTime\n      };\n    };\n    /**\n     * Constructs a single-track, ISO BMFF media segment from AAC data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    AudioSegmentStream = function (track, options) {\n      var adtsFrames = [],\n        sequenceNumber,\n        earliestAllowedDts = 0,\n        audioAppendStartTs = 0,\n        videoBaseMediaDecodeTime = Infinity;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n      AudioSegmentStream.prototype.init.call(this);\n      this.push = function (data) {\n        trackDecodeInfo.collectDtsInfo(track, data);\n        if (track) {\n          AUDIO_PROPERTIES.forEach(function (prop) {\n            track[prop] = data[prop];\n          });\n        } // buffer audio data until end() is called\n\n        adtsFrames.push(data);\n      };\n      this.setEarliestDts = function (earliestDts) {\n        earliestAllowedDts = earliestDts;\n      };\n      this.setVideoBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        videoBaseMediaDecodeTime = baseMediaDecodeTime;\n      };\n      this.setAudioAppendStart = function (timestamp) {\n        audioAppendStartTs = timestamp;\n      };\n      this.flush = function () {\n        var frames, moof, mdat, boxes, frameDuration, segmentDuration, videoClockCyclesOfSilencePrefixed; // return early if no audio data has been observed\n\n        if (adtsFrames.length === 0) {\n          this.trigger('done', 'AudioSegmentStream');\n          return;\n        }\n        frames = audioFrameUtils.trimAdtsFramesByEarliestDts(adtsFrames, track, earliestAllowedDts);\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps); // amount of audio filled but the value is in video clock rather than audio clock\n\n        videoClockCyclesOfSilencePrefixed = audioFrameUtils.prefixWithSilence(track, frames, audioAppendStartTs, videoBaseMediaDecodeTime); // we have to build the index from byte locations to\n        // samples (that is, adts frames) in the audio data\n\n        track.samples = audioFrameUtils.generateSampleTable(frames); // concatenate the audio data to constuct the mdat\n\n        mdat = mp4.mdat(audioFrameUtils.concatenateFrameData(frames));\n        adtsFrames = [];\n        moof = mp4.moof(sequenceNumber, [track]);\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        trackDecodeInfo.clearDtsInfo(track);\n        frameDuration = Math.ceil(ONE_SECOND_IN_TS$1 * 1024 / track.samplerate); // TODO this check was added to maintain backwards compatibility (particularly with\n        // tests) on adding the timingInfo event. However, it seems unlikely that there's a\n        // valid use-case where an init segment/data should be triggered without associated\n        // frames. Leaving for now, but should be looked into.\n\n        if (frames.length) {\n          segmentDuration = frames.length * frameDuration;\n          this.trigger('segmentTimingInfo', generateSegmentTimingInfo(\n          // The audio track's baseMediaDecodeTime is in audio clock cycles, but the\n          // frame info is in video clock cycles. Convert to match expectation of\n          // listeners (that all timestamps will be based on video clock cycles).\n          clock.audioTsToVideoTs(track.baseMediaDecodeTime, track.samplerate),\n          // frame times are already in video clock, as is segment duration\n          frames[0].dts, frames[0].pts, frames[0].dts + segmentDuration, frames[0].pts + segmentDuration, videoClockCyclesOfSilencePrefixed || 0));\n          this.trigger('timingInfo', {\n            start: frames[0].pts,\n            end: frames[0].pts + segmentDuration\n          });\n        }\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.trigger('done', 'AudioSegmentStream');\n      };\n      this.reset = function () {\n        trackDecodeInfo.clearDtsInfo(track);\n        adtsFrames = [];\n        this.trigger('reset');\n      };\n    };\n    AudioSegmentStream.prototype = new Stream();\n    /**\n     * Constructs a single-track, ISO BMFF media segment from H264 data\n     * events. The output of this stream can be fed to a SourceBuffer\n     * configured with a suitable initialization segment.\n     * @param track {object} track metadata configuration\n     * @param options {object} transmuxer options object\n     * @param options.alignGopsAtEnd {boolean} If true, start from the end of the\n     *        gopsToAlignWith list when attempting to align gop pts\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at 0.\n     */\n\n    VideoSegmentStream = function (track, options) {\n      var sequenceNumber,\n        nalUnits = [],\n        gopsToAlignWith = [],\n        config,\n        pps;\n      options = options || {};\n      sequenceNumber = options.firstSequenceNumber || 0;\n      VideoSegmentStream.prototype.init.call(this);\n      delete track.minPTS;\n      this.gopCache_ = [];\n      /**\n        * Constructs a ISO BMFF segment given H264 nalUnits\n        * @param {Object} nalUnit A data event representing a nalUnit\n        * @param {String} nalUnit.nalUnitType\n        * @param {Object} nalUnit.config Properties for a mp4 track\n        * @param {Uint8Array} nalUnit.data The nalUnit bytes\n        * @see lib/codecs/h264.js\n       **/\n\n      this.push = function (nalUnit) {\n        trackDecodeInfo.collectDtsInfo(track, nalUnit); // record the track config\n\n        if (nalUnit.nalUnitType === 'seq_parameter_set_rbsp' && !config) {\n          config = nalUnit.config;\n          track.sps = [nalUnit.data];\n          VIDEO_PROPERTIES.forEach(function (prop) {\n            track[prop] = config[prop];\n          }, this);\n        }\n        if (nalUnit.nalUnitType === 'pic_parameter_set_rbsp' && !pps) {\n          pps = nalUnit.data;\n          track.pps = [nalUnit.data];\n        } // buffer video until flush() is called\n\n        nalUnits.push(nalUnit);\n      };\n      /**\n        * Pass constructed ISO BMFF track and boxes on to the\n        * next stream in the pipeline\n       **/\n\n      this.flush = function () {\n        var frames,\n          gopForFusion,\n          gops,\n          moof,\n          mdat,\n          boxes,\n          prependedContentDuration = 0,\n          firstGop,\n          lastGop; // Throw away nalUnits at the start of the byte stream until\n        // we find the first AUD\n\n        while (nalUnits.length) {\n          if (nalUnits[0].nalUnitType === 'access_unit_delimiter_rbsp') {\n            break;\n          }\n          nalUnits.shift();\n        } // Return early if no video data has been observed\n\n        if (nalUnits.length === 0) {\n          this.resetStream_();\n          this.trigger('done', 'VideoSegmentStream');\n          return;\n        } // Organize the raw nal-units into arrays that represent\n        // higher-level constructs such as frames and gops\n        // (group-of-pictures)\n\n        frames = frameUtils.groupNalsIntoFrames(nalUnits);\n        gops = frameUtils.groupFramesIntoGops(frames); // If the first frame of this fragment is not a keyframe we have\n        // a problem since MSE (on Chrome) requires a leading keyframe.\n        //\n        // We have two approaches to repairing this situation:\n        // 1) GOP-FUSION:\n        //    This is where we keep track of the GOPS (group-of-pictures)\n        //    from previous fragments and attempt to find one that we can\n        //    prepend to the current fragment in order to create a valid\n        //    fragment.\n        // 2) KEYFRAME-PULLING:\n        //    Here we search for the first keyframe in the fragment and\n        //    throw away all the frames between the start of the fragment\n        //    and that keyframe. We then extend the duration and pull the\n        //    PTS of the keyframe forward so that it covers the time range\n        //    of the frames that were disposed of.\n        //\n        // #1 is far prefereable over #2 which can cause \"stuttering\" but\n        // requires more things to be just right.\n\n        if (!gops[0][0].keyFrame) {\n          // Search for a gop for fusion from our gopCache\n          gopForFusion = this.getGopForFusion_(nalUnits[0], track);\n          if (gopForFusion) {\n            // in order to provide more accurate timing information about the segment, save\n            // the number of seconds prepended to the original segment due to GOP fusion\n            prependedContentDuration = gopForFusion.duration;\n            gops.unshift(gopForFusion); // Adjust Gops' metadata to account for the inclusion of the\n            // new gop at the beginning\n\n            gops.byteLength += gopForFusion.byteLength;\n            gops.nalCount += gopForFusion.nalCount;\n            gops.pts = gopForFusion.pts;\n            gops.dts = gopForFusion.dts;\n            gops.duration += gopForFusion.duration;\n          } else {\n            // If we didn't find a candidate gop fall back to keyframe-pulling\n            gops = frameUtils.extendFirstKeyFrame(gops);\n          }\n        } // Trim gops to align with gopsToAlignWith\n\n        if (gopsToAlignWith.length) {\n          var alignedGops;\n          if (options.alignGopsAtEnd) {\n            alignedGops = this.alignGopsAtEnd_(gops);\n          } else {\n            alignedGops = this.alignGopsAtStart_(gops);\n          }\n          if (!alignedGops) {\n            // save all the nals in the last GOP into the gop cache\n            this.gopCache_.unshift({\n              gop: gops.pop(),\n              pps: track.pps,\n              sps: track.sps\n            }); // Keep a maximum of 6 GOPs in the cache\n\n            this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n            nalUnits = []; // return early no gops can be aligned with desired gopsToAlignWith\n\n            this.resetStream_();\n            this.trigger('done', 'VideoSegmentStream');\n            return;\n          } // Some gops were trimmed. clear dts info so minSegmentDts and pts are correct\n          // when recalculated before sending off to CoalesceStream\n\n          trackDecodeInfo.clearDtsInfo(track);\n          gops = alignedGops;\n        }\n        trackDecodeInfo.collectDtsInfo(track, gops); // First, we have to build the index from byte locations to\n        // samples (that is, frames) in the video data\n\n        track.samples = frameUtils.generateSampleTable(gops); // Concatenate the video data and construct the mdat\n\n        mdat = mp4.mdat(frameUtils.concatenateNalData(gops));\n        track.baseMediaDecodeTime = trackDecodeInfo.calculateTrackBaseMediaDecodeTime(track, options.keepOriginalTimestamps);\n        this.trigger('processedGopsInfo', gops.map(function (gop) {\n          return {\n            pts: gop.pts,\n            dts: gop.dts,\n            byteLength: gop.byteLength\n          };\n        }));\n        firstGop = gops[0];\n        lastGop = gops[gops.length - 1];\n        this.trigger('segmentTimingInfo', generateSegmentTimingInfo(track.baseMediaDecodeTime, firstGop.dts, firstGop.pts, lastGop.dts + lastGop.duration, lastGop.pts + lastGop.duration, prependedContentDuration));\n        this.trigger('timingInfo', {\n          start: gops[0].pts,\n          end: gops[gops.length - 1].pts + gops[gops.length - 1].duration\n        }); // save all the nals in the last GOP into the gop cache\n\n        this.gopCache_.unshift({\n          gop: gops.pop(),\n          pps: track.pps,\n          sps: track.sps\n        }); // Keep a maximum of 6 GOPs in the cache\n\n        this.gopCache_.length = Math.min(6, this.gopCache_.length); // Clear nalUnits\n\n        nalUnits = [];\n        this.trigger('baseMediaDecodeTime', track.baseMediaDecodeTime);\n        this.trigger('timelineStartInfo', track.timelineStartInfo);\n        moof = mp4.moof(sequenceNumber, [track]); // it would be great to allocate this array up front instead of\n        // throwing away hundreds of media segment fragments\n\n        boxes = new Uint8Array(moof.byteLength + mdat.byteLength); // Bump the sequence number for next time\n\n        sequenceNumber++;\n        boxes.set(moof);\n        boxes.set(mdat, moof.byteLength);\n        this.trigger('data', {\n          track: track,\n          boxes: boxes\n        });\n        this.resetStream_(); // Continue with the flush process now\n\n        this.trigger('done', 'VideoSegmentStream');\n      };\n      this.reset = function () {\n        this.resetStream_();\n        nalUnits = [];\n        this.gopCache_.length = 0;\n        gopsToAlignWith.length = 0;\n        this.trigger('reset');\n      };\n      this.resetStream_ = function () {\n        trackDecodeInfo.clearDtsInfo(track); // reset config and pps because they may differ across segments\n        // for instance, when we are rendition switching\n\n        config = undefined;\n        pps = undefined;\n      }; // Search for a candidate Gop for gop-fusion from the gop cache and\n      // return it or return null if no good candidate was found\n\n      this.getGopForFusion_ = function (nalUnit) {\n        var halfSecond = 45000,\n          // Half-a-second in a 90khz clock\n          allowableOverlap = 10000,\n          // About 3 frames @ 30fps\n          nearestDistance = Infinity,\n          dtsDistance,\n          nearestGopObj,\n          currentGop,\n          currentGopObj,\n          i; // Search for the GOP nearest to the beginning of this nal unit\n\n        for (i = 0; i < this.gopCache_.length; i++) {\n          currentGopObj = this.gopCache_[i];\n          currentGop = currentGopObj.gop; // Reject Gops with different SPS or PPS\n\n          if (!(track.pps && arrayEquals(track.pps[0], currentGopObj.pps[0])) || !(track.sps && arrayEquals(track.sps[0], currentGopObj.sps[0]))) {\n            continue;\n          } // Reject Gops that would require a negative baseMediaDecodeTime\n\n          if (currentGop.dts < track.timelineStartInfo.dts) {\n            continue;\n          } // The distance between the end of the gop and the start of the nalUnit\n\n          dtsDistance = nalUnit.dts - currentGop.dts - currentGop.duration; // Only consider GOPS that start before the nal unit and end within\n          // a half-second of the nal unit\n\n          if (dtsDistance >= -allowableOverlap && dtsDistance <= halfSecond) {\n            // Always use the closest GOP we found if there is more than\n            // one candidate\n            if (!nearestGopObj || nearestDistance > dtsDistance) {\n              nearestGopObj = currentGopObj;\n              nearestDistance = dtsDistance;\n            }\n          }\n        }\n        if (nearestGopObj) {\n          return nearestGopObj.gop;\n        }\n        return null;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the START of the list\n\n      this.alignGopsAtStart_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, byteLength, nalCount, duration, alignedGops;\n        byteLength = gops.byteLength;\n        nalCount = gops.nalCount;\n        duration = gops.duration;\n        alignIndex = gopIndex = 0;\n        while (alignIndex < gopsToAlignWith.length && gopIndex < gops.length) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n          if (align.pts === gop.pts) {\n            break;\n          }\n          if (gop.pts > align.pts) {\n            // this current gop starts after the current gop we want to align on, so increment\n            // align index\n            alignIndex++;\n            continue;\n          } // current gop starts before the current gop we want to align on. so increment gop\n          // index\n\n          gopIndex++;\n          byteLength -= gop.byteLength;\n          nalCount -= gop.nalCount;\n          duration -= gop.duration;\n        }\n        if (gopIndex === 0) {\n          // no gops to trim\n          return gops;\n        }\n        if (gopIndex === gops.length) {\n          // all gops trimmed, skip appending all gops\n          return null;\n        }\n        alignedGops = gops.slice(gopIndex);\n        alignedGops.byteLength = byteLength;\n        alignedGops.duration = duration;\n        alignedGops.nalCount = nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      }; // trim gop list to the first gop found that has a matching pts with a gop in the list\n      // of gopsToAlignWith starting from the END of the list\n\n      this.alignGopsAtEnd_ = function (gops) {\n        var alignIndex, gopIndex, align, gop, alignEndIndex, matchFound;\n        alignIndex = gopsToAlignWith.length - 1;\n        gopIndex = gops.length - 1;\n        alignEndIndex = null;\n        matchFound = false;\n        while (alignIndex >= 0 && gopIndex >= 0) {\n          align = gopsToAlignWith[alignIndex];\n          gop = gops[gopIndex];\n          if (align.pts === gop.pts) {\n            matchFound = true;\n            break;\n          }\n          if (align.pts > gop.pts) {\n            alignIndex--;\n            continue;\n          }\n          if (alignIndex === gopsToAlignWith.length - 1) {\n            // gop.pts is greater than the last alignment candidate. If no match is found\n            // by the end of this loop, we still want to append gops that come after this\n            // point\n            alignEndIndex = gopIndex;\n          }\n          gopIndex--;\n        }\n        if (!matchFound && alignEndIndex === null) {\n          return null;\n        }\n        var trimIndex;\n        if (matchFound) {\n          trimIndex = gopIndex;\n        } else {\n          trimIndex = alignEndIndex;\n        }\n        if (trimIndex === 0) {\n          return gops;\n        }\n        var alignedGops = gops.slice(trimIndex);\n        var metadata = alignedGops.reduce(function (total, gop) {\n          total.byteLength += gop.byteLength;\n          total.duration += gop.duration;\n          total.nalCount += gop.nalCount;\n          return total;\n        }, {\n          byteLength: 0,\n          duration: 0,\n          nalCount: 0\n        });\n        alignedGops.byteLength = metadata.byteLength;\n        alignedGops.duration = metadata.duration;\n        alignedGops.nalCount = metadata.nalCount;\n        alignedGops.pts = alignedGops[0].pts;\n        alignedGops.dts = alignedGops[0].dts;\n        return alignedGops;\n      };\n      this.alignGopsWith = function (newGopsToAlignWith) {\n        gopsToAlignWith = newGopsToAlignWith;\n      };\n    };\n    VideoSegmentStream.prototype = new Stream();\n    /**\n     * A Stream that can combine multiple streams (ie. audio & video)\n     * into a single output segment for MSE. Also supports audio-only\n     * and video-only streams.\n     * @param options {object} transmuxer options object\n     * @param options.keepOriginalTimestamps {boolean} If true, keep the timestamps\n     *        in the source; false to adjust the first segment to start at media timeline start.\n     */\n\n    CoalesceStream = function (options, metadataStream) {\n      // Number of Tracks per output segment\n      // If greater than 1, we combine multiple\n      // tracks into a single segment\n      this.numberOfTracks = 0;\n      this.metadataStream = metadataStream;\n      options = options || {};\n      if (typeof options.remux !== 'undefined') {\n        this.remuxTracks = !!options.remux;\n      } else {\n        this.remuxTracks = true;\n      }\n      if (typeof options.keepOriginalTimestamps === 'boolean') {\n        this.keepOriginalTimestamps = options.keepOriginalTimestamps;\n      } else {\n        this.keepOriginalTimestamps = false;\n      }\n      this.pendingTracks = [];\n      this.videoTrack = null;\n      this.pendingBoxes = [];\n      this.pendingCaptions = [];\n      this.pendingMetadata = [];\n      this.pendingBytes = 0;\n      this.emittedTracks = 0;\n      CoalesceStream.prototype.init.call(this); // Take output from multiple\n\n      this.push = function (output) {\n        // buffer incoming captions until the associated video segment\n        // finishes\n        if (output.text) {\n          return this.pendingCaptions.push(output);\n        } // buffer incoming id3 tags until the final flush\n\n        if (output.frames) {\n          return this.pendingMetadata.push(output);\n        } // Add this track to the list of pending tracks and store\n        // important information required for the construction of\n        // the final segment\n\n        this.pendingTracks.push(output.track);\n        this.pendingBytes += output.boxes.byteLength; // TODO: is there an issue for this against chrome?\n        // We unshift audio and push video because\n        // as of Chrome 75 when switching from\n        // one init segment to another if the video\n        // mdat does not appear after the audio mdat\n        // only audio will play for the duration of our transmux.\n\n        if (output.track.type === 'video') {\n          this.videoTrack = output.track;\n          this.pendingBoxes.push(output.boxes);\n        }\n        if (output.track.type === 'audio') {\n          this.audioTrack = output.track;\n          this.pendingBoxes.unshift(output.boxes);\n        }\n      };\n    };\n    CoalesceStream.prototype = new Stream();\n    CoalesceStream.prototype.flush = function (flushSource) {\n      var offset = 0,\n        event = {\n          captions: [],\n          captionStreams: {},\n          metadata: [],\n          info: {}\n        },\n        caption,\n        id3,\n        initSegment,\n        timelineStartPts = 0,\n        i;\n      if (this.pendingTracks.length < this.numberOfTracks) {\n        if (flushSource !== 'VideoSegmentStream' && flushSource !== 'AudioSegmentStream') {\n          // Return because we haven't received a flush from a data-generating\n          // portion of the segment (meaning that we have only recieved meta-data\n          // or captions.)\n          return;\n        } else if (this.remuxTracks) {\n          // Return until we have enough tracks from the pipeline to remux (if we\n          // are remuxing audio and video into a single MP4)\n          return;\n        } else if (this.pendingTracks.length === 0) {\n          // In the case where we receive a flush without any data having been\n          // received we consider it an emitted track for the purposes of coalescing\n          // `done` events.\n          // We do this for the case where there is an audio and video track in the\n          // segment but no audio data. (seen in several playlists with alternate\n          // audio tracks and no audio present in the main TS segments.)\n          this.emittedTracks++;\n          if (this.emittedTracks >= this.numberOfTracks) {\n            this.trigger('done');\n            this.emittedTracks = 0;\n          }\n          return;\n        }\n      }\n      if (this.videoTrack) {\n        timelineStartPts = this.videoTrack.timelineStartInfo.pts;\n        VIDEO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.videoTrack[prop];\n        }, this);\n      } else if (this.audioTrack) {\n        timelineStartPts = this.audioTrack.timelineStartInfo.pts;\n        AUDIO_PROPERTIES.forEach(function (prop) {\n          event.info[prop] = this.audioTrack[prop];\n        }, this);\n      }\n      if (this.videoTrack || this.audioTrack) {\n        if (this.pendingTracks.length === 1) {\n          event.type = this.pendingTracks[0].type;\n        } else {\n          event.type = 'combined';\n        }\n        this.emittedTracks += this.pendingTracks.length;\n        initSegment = mp4.initSegment(this.pendingTracks); // Create a new typed array to hold the init segment\n\n        event.initSegment = new Uint8Array(initSegment.byteLength); // Create an init segment containing a moov\n        // and track definitions\n\n        event.initSegment.set(initSegment); // Create a new typed array to hold the moof+mdats\n\n        event.data = new Uint8Array(this.pendingBytes); // Append each moof+mdat (one per track) together\n\n        for (i = 0; i < this.pendingBoxes.length; i++) {\n          event.data.set(this.pendingBoxes[i], offset);\n          offset += this.pendingBoxes[i].byteLength;\n        } // Translate caption PTS times into second offsets to match the\n        // video timeline for the segment, and add track info\n\n        for (i = 0; i < this.pendingCaptions.length; i++) {\n          caption = this.pendingCaptions[i];\n          caption.startTime = clock.metadataTsToSeconds(caption.startPts, timelineStartPts, this.keepOriginalTimestamps);\n          caption.endTime = clock.metadataTsToSeconds(caption.endPts, timelineStartPts, this.keepOriginalTimestamps);\n          event.captionStreams[caption.stream] = true;\n          event.captions.push(caption);\n        } // Translate ID3 frame PTS times into second offsets to match the\n        // video timeline for the segment\n\n        for (i = 0; i < this.pendingMetadata.length; i++) {\n          id3 = this.pendingMetadata[i];\n          id3.cueTime = clock.metadataTsToSeconds(id3.pts, timelineStartPts, this.keepOriginalTimestamps);\n          event.metadata.push(id3);\n        } // We add this to every single emitted segment even though we only need\n        // it for the first\n\n        event.metadata.dispatchType = this.metadataStream.dispatchType; // Reset stream state\n\n        this.pendingTracks.length = 0;\n        this.videoTrack = null;\n        this.pendingBoxes.length = 0;\n        this.pendingCaptions.length = 0;\n        this.pendingBytes = 0;\n        this.pendingMetadata.length = 0; // Emit the built segment\n        // We include captions and ID3 tags for backwards compatibility,\n        // ideally we should send only video and audio in the data event\n\n        this.trigger('data', event); // Emit each caption to the outside world\n        // Ideally, this would happen immediately on parsing captions,\n        // but we need to ensure that video data is sent back first\n        // so that caption timing can be adjusted to match video timing\n\n        for (i = 0; i < event.captions.length; i++) {\n          caption = event.captions[i];\n          this.trigger('caption', caption);\n        } // Emit each id3 tag to the outside world\n        // Ideally, this would happen immediately on parsing the tag,\n        // but we need to ensure that video data is sent back first\n        // so that ID3 frame timing can be adjusted to match video timing\n\n        for (i = 0; i < event.metadata.length; i++) {\n          id3 = event.metadata[i];\n          this.trigger('id3Frame', id3);\n        }\n      } // Only emit `done` if all tracks have been flushed and emitted\n\n      if (this.emittedTracks >= this.numberOfTracks) {\n        this.trigger('done');\n        this.emittedTracks = 0;\n      }\n    };\n    CoalesceStream.prototype.setRemux = function (val) {\n      this.remuxTracks = val;\n    };\n    /**\n     * A Stream that expects MP2T binary data as input and produces\n     * corresponding media segments, suitable for use with Media Source\n     * Extension (MSE) implementations that support the ISO BMFF byte\n     * stream format, like Chrome.\n     */\n\n    Transmuxer = function (options) {\n      var self = this,\n        hasFlushed = true,\n        videoTrack,\n        audioTrack;\n      Transmuxer.prototype.init.call(this);\n      options = options || {};\n      this.baseMediaDecodeTime = options.baseMediaDecodeTime || 0;\n      this.transmuxPipeline_ = {};\n      this.setupAacPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'aac';\n        pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.aacStream = new AacStream();\n        pipeline.audioTimestampRolloverStream = new m2ts.TimestampRolloverStream('audio');\n        pipeline.timedMetadataTimestampRolloverStream = new m2ts.TimestampRolloverStream('timed-metadata');\n        pipeline.adtsStream = new AdtsStream();\n        pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.aacStream;\n        pipeline.aacStream.pipe(pipeline.audioTimestampRolloverStream).pipe(pipeline.adtsStream);\n        pipeline.aacStream.pipe(pipeline.timedMetadataTimestampRolloverStream).pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream);\n        pipeline.metadataStream.on('timestamp', function (frame) {\n          pipeline.aacStream.setTimestamp(frame.timeStamp);\n        });\n        pipeline.aacStream.on('data', function (data) {\n          if (data.type !== 'timed-metadata' && data.type !== 'audio' || pipeline.audioSegmentStream) {\n            return;\n          }\n          audioTrack = audioTrack || {\n            timelineStartInfo: {\n              baseMediaDecodeTime: self.baseMediaDecodeTime\n            },\n            codec: 'adts',\n            type: 'audio'\n          }; // hook up the audio segment stream to the first track with aac data\n\n          pipeline.coalesceStream.numberOfTracks++;\n          pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n          pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n          pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo')); // Set up the final part of the audio pipeline\n\n          pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream); // emit pmt info\n\n          self.trigger('trackinfo', {\n            hasAudio: !!audioTrack,\n            hasVideo: !!videoTrack\n          });\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      };\n      this.setupTsPipeline = function () {\n        var pipeline = {};\n        this.transmuxPipeline_ = pipeline;\n        pipeline.type = 'ts';\n        pipeline.metadataStream = new m2ts.MetadataStream(); // set up the parsing pipeline\n\n        pipeline.packetStream = new m2ts.TransportPacketStream();\n        pipeline.parseStream = new m2ts.TransportParseStream();\n        pipeline.elementaryStream = new m2ts.ElementaryStream();\n        pipeline.timestampRolloverStream = new m2ts.TimestampRolloverStream();\n        pipeline.adtsStream = new AdtsStream();\n        pipeline.h264Stream = new H264Stream();\n        pipeline.captionStream = new m2ts.CaptionStream(options);\n        pipeline.coalesceStream = new CoalesceStream(options, pipeline.metadataStream);\n        pipeline.headOfPipeline = pipeline.packetStream; // disassemble MPEG2-TS packets into elementary streams\n\n        pipeline.packetStream.pipe(pipeline.parseStream).pipe(pipeline.elementaryStream).pipe(pipeline.timestampRolloverStream); // !!THIS ORDER IS IMPORTANT!!\n        // demux the streams\n\n        pipeline.timestampRolloverStream.pipe(pipeline.h264Stream);\n        pipeline.timestampRolloverStream.pipe(pipeline.adtsStream);\n        pipeline.timestampRolloverStream.pipe(pipeline.metadataStream).pipe(pipeline.coalesceStream); // Hook up CEA-608/708 caption stream\n\n        pipeline.h264Stream.pipe(pipeline.captionStream).pipe(pipeline.coalesceStream);\n        pipeline.elementaryStream.on('data', function (data) {\n          var i;\n          if (data.type === 'metadata') {\n            i = data.tracks.length; // scan the tracks listed in the metadata\n\n            while (i--) {\n              if (!videoTrack && data.tracks[i].type === 'video') {\n                videoTrack = data.tracks[i];\n                videoTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              } else if (!audioTrack && data.tracks[i].type === 'audio') {\n                audioTrack = data.tracks[i];\n                audioTrack.timelineStartInfo.baseMediaDecodeTime = self.baseMediaDecodeTime;\n              }\n            } // hook up the video segment stream to the first track with h264 data\n\n            if (videoTrack && !pipeline.videoSegmentStream) {\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.videoSegmentStream = new VideoSegmentStream(videoTrack, options);\n              pipeline.videoSegmentStream.on('log', self.getLogTrigger_('videoSegmentStream'));\n              pipeline.videoSegmentStream.on('timelineStartInfo', function (timelineStartInfo) {\n                // When video emits timelineStartInfo data after a flush, we forward that\n                // info to the AudioSegmentStream, if it exists, because video timeline\n                // data takes precedence.  Do not do this if keepOriginalTimestamps is set,\n                // because this is a particularly subtle form of timestamp alteration.\n                if (audioTrack && !options.keepOriginalTimestamps) {\n                  audioTrack.timelineStartInfo = timelineStartInfo; // On the first segment we trim AAC frames that exist before the\n                  // very earliest DTS we have seen in video because Chrome will\n                  // interpret any video track with a baseMediaDecodeTime that is\n                  // non-zero as a gap.\n\n                  pipeline.audioSegmentStream.setEarliestDts(timelineStartInfo.dts - self.baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('processedGopsInfo', self.trigger.bind(self, 'gopInfo'));\n              pipeline.videoSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'videoSegmentTimingInfo'));\n              pipeline.videoSegmentStream.on('baseMediaDecodeTime', function (baseMediaDecodeTime) {\n                if (audioTrack) {\n                  pipeline.audioSegmentStream.setVideoBaseMediaDecodeTime(baseMediaDecodeTime);\n                }\n              });\n              pipeline.videoSegmentStream.on('timingInfo', self.trigger.bind(self, 'videoTimingInfo')); // Set up the final part of the video pipeline\n\n              pipeline.h264Stream.pipe(pipeline.videoSegmentStream).pipe(pipeline.coalesceStream);\n            }\n            if (audioTrack && !pipeline.audioSegmentStream) {\n              // hook up the audio segment stream to the first track with aac data\n              pipeline.coalesceStream.numberOfTracks++;\n              pipeline.audioSegmentStream = new AudioSegmentStream(audioTrack, options);\n              pipeline.audioSegmentStream.on('log', self.getLogTrigger_('audioSegmentStream'));\n              pipeline.audioSegmentStream.on('timingInfo', self.trigger.bind(self, 'audioTimingInfo'));\n              pipeline.audioSegmentStream.on('segmentTimingInfo', self.trigger.bind(self, 'audioSegmentTimingInfo')); // Set up the final part of the audio pipeline\n\n              pipeline.adtsStream.pipe(pipeline.audioSegmentStream).pipe(pipeline.coalesceStream);\n            } // emit pmt info\n\n            self.trigger('trackinfo', {\n              hasAudio: !!audioTrack,\n              hasVideo: !!videoTrack\n            });\n          }\n        }); // Re-emit any data coming from the coalesce stream to the outside world\n\n        pipeline.coalesceStream.on('data', this.trigger.bind(this, 'data'));\n        pipeline.coalesceStream.on('id3Frame', function (id3Frame) {\n          id3Frame.dispatchType = pipeline.metadataStream.dispatchType;\n          self.trigger('id3Frame', id3Frame);\n        });\n        pipeline.coalesceStream.on('caption', this.trigger.bind(this, 'caption')); // Let the consumer know we have finished flushing the entire pipeline\n\n        pipeline.coalesceStream.on('done', this.trigger.bind(this, 'done'));\n        addPipelineLogRetriggers(this, pipeline);\n      }; // hook up the segment streams once track metadata is delivered\n\n      this.setBaseMediaDecodeTime = function (baseMediaDecodeTime) {\n        var pipeline = this.transmuxPipeline_;\n        if (!options.keepOriginalTimestamps) {\n          this.baseMediaDecodeTime = baseMediaDecodeTime;\n        }\n        if (audioTrack) {\n          audioTrack.timelineStartInfo.dts = undefined;\n          audioTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(audioTrack);\n          if (pipeline.audioTimestampRolloverStream) {\n            pipeline.audioTimestampRolloverStream.discontinuity();\n          }\n        }\n        if (videoTrack) {\n          if (pipeline.videoSegmentStream) {\n            pipeline.videoSegmentStream.gopCache_ = [];\n          }\n          videoTrack.timelineStartInfo.dts = undefined;\n          videoTrack.timelineStartInfo.pts = undefined;\n          trackDecodeInfo.clearDtsInfo(videoTrack);\n          pipeline.captionStream.reset();\n        }\n        if (pipeline.timestampRolloverStream) {\n          pipeline.timestampRolloverStream.discontinuity();\n        }\n      };\n      this.setAudioAppendStart = function (timestamp) {\n        if (audioTrack) {\n          this.transmuxPipeline_.audioSegmentStream.setAudioAppendStart(timestamp);\n        }\n      };\n      this.setRemux = function (val) {\n        var pipeline = this.transmuxPipeline_;\n        options.remux = val;\n        if (pipeline && pipeline.coalesceStream) {\n          pipeline.coalesceStream.setRemux(val);\n        }\n      };\n      this.alignGopsWith = function (gopsToAlignWith) {\n        if (videoTrack && this.transmuxPipeline_.videoSegmentStream) {\n          this.transmuxPipeline_.videoSegmentStream.alignGopsWith(gopsToAlignWith);\n        }\n      };\n      this.getLogTrigger_ = function (key) {\n        var self = this;\n        return function (event) {\n          event.stream = key;\n          self.trigger('log', event);\n        };\n      }; // feed incoming data to the front of the parsing pipeline\n\n      this.push = function (data) {\n        if (hasFlushed) {\n          var isAac = isLikelyAacData(data);\n          if (isAac && this.transmuxPipeline_.type !== 'aac') {\n            this.setupAacPipeline();\n          } else if (!isAac && this.transmuxPipeline_.type !== 'ts') {\n            this.setupTsPipeline();\n          }\n          hasFlushed = false;\n        }\n        this.transmuxPipeline_.headOfPipeline.push(data);\n      }; // flush any buffered data\n\n      this.flush = function () {\n        hasFlushed = true; // Start at the top of the pipeline and flush all pending work\n\n        this.transmuxPipeline_.headOfPipeline.flush();\n      };\n      this.endTimeline = function () {\n        this.transmuxPipeline_.headOfPipeline.endTimeline();\n      };\n      this.reset = function () {\n        if (this.transmuxPipeline_.headOfPipeline) {\n          this.transmuxPipeline_.headOfPipeline.reset();\n        }\n      }; // Caption data has to be reset when seeking outside buffered range\n\n      this.resetCaptions = function () {\n        if (this.transmuxPipeline_.captionStream) {\n          this.transmuxPipeline_.captionStream.reset();\n        }\n      };\n    };\n    Transmuxer.prototype = new Stream();\n    var transmuxer = {\n      Transmuxer: Transmuxer,\n      VideoSegmentStream: VideoSegmentStream,\n      AudioSegmentStream: AudioSegmentStream,\n      AUDIO_PROPERTIES: AUDIO_PROPERTIES,\n      VIDEO_PROPERTIES: VIDEO_PROPERTIES,\n      // exported for testing\n      generateSegmentTimingInfo: generateSegmentTimingInfo\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     */\n\n    var toUnsigned$3 = function (value) {\n      return value >>> 0;\n    };\n    var toHexString$1 = function (value) {\n      return ('00' + value.toString(16)).slice(-2);\n    };\n    var bin = {\n      toUnsigned: toUnsigned$3,\n      toHexString: toHexString$1\n    };\n    var parseType$3 = function (buffer) {\n      var result = '';\n      result += String.fromCharCode(buffer[0]);\n      result += String.fromCharCode(buffer[1]);\n      result += String.fromCharCode(buffer[2]);\n      result += String.fromCharCode(buffer[3]);\n      return result;\n    };\n    var parseType_1 = parseType$3;\n    var toUnsigned$2 = bin.toUnsigned;\n    var parseType$2 = parseType_1;\n    var findBox$2 = function (data, path) {\n      var results = [],\n        i,\n        size,\n        type,\n        end,\n        subresults;\n      if (!path.length) {\n        // short-circuit the search for empty paths\n        return null;\n      }\n      for (i = 0; i < data.byteLength;) {\n        size = toUnsigned$2(data[i] << 24 | data[i + 1] << 16 | data[i + 2] << 8 | data[i + 3]);\n        type = parseType$2(data.subarray(i + 4, i + 8));\n        end = size > 1 ? i + size : data.byteLength;\n        if (type === path[0]) {\n          if (path.length === 1) {\n            // this is the end of the path and we've found the box we were\n            // looking for\n            results.push(data.subarray(i + 8, end));\n          } else {\n            // recursively search for the next box along the path\n            subresults = findBox$2(data.subarray(i + 8, end), path.slice(1));\n            if (subresults.length) {\n              results = results.concat(subresults);\n            }\n          }\n        }\n        i = end;\n      } // we've finished searching all of data\n\n      return results;\n    };\n    var findBox_1 = findBox$2;\n    var toUnsigned$1 = bin.toUnsigned;\n    var getUint64$1 = numbers.getUint64;\n    var tfdt = function (data) {\n      var result = {\n        version: data[0],\n        flags: new Uint8Array(data.subarray(1, 4))\n      };\n      if (result.version === 1) {\n        result.baseMediaDecodeTime = getUint64$1(data.subarray(4));\n      } else {\n        result.baseMediaDecodeTime = toUnsigned$1(data[4] << 24 | data[5] << 16 | data[6] << 8 | data[7]);\n      }\n      return result;\n    };\n    var parseTfdt$2 = tfdt;\n    var parseSampleFlags$1 = function (flags) {\n      return {\n        isLeading: (flags[0] & 0x0c) >>> 2,\n        dependsOn: flags[0] & 0x03,\n        isDependedOn: (flags[1] & 0xc0) >>> 6,\n        hasRedundancy: (flags[1] & 0x30) >>> 4,\n        paddingValue: (flags[1] & 0x0e) >>> 1,\n        isNonSyncSample: flags[1] & 0x01,\n        degradationPriority: flags[2] << 8 | flags[3]\n      };\n    };\n    var parseSampleFlags_1 = parseSampleFlags$1;\n    var parseSampleFlags = parseSampleFlags_1;\n    var trun = function (data) {\n      var result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          samples: []\n        },\n        view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        // Flag interpretation\n        dataOffsetPresent = result.flags[2] & 0x01,\n        // compare with 2nd byte of 0x1\n        firstSampleFlagsPresent = result.flags[2] & 0x04,\n        // compare with 2nd byte of 0x4\n        sampleDurationPresent = result.flags[1] & 0x01,\n        // compare with 2nd byte of 0x100\n        sampleSizePresent = result.flags[1] & 0x02,\n        // compare with 2nd byte of 0x200\n        sampleFlagsPresent = result.flags[1] & 0x04,\n        // compare with 2nd byte of 0x400\n        sampleCompositionTimeOffsetPresent = result.flags[1] & 0x08,\n        // compare with 2nd byte of 0x800\n        sampleCount = view.getUint32(4),\n        offset = 8,\n        sample;\n      if (dataOffsetPresent) {\n        // 32 bit signed integer\n        result.dataOffset = view.getInt32(offset);\n        offset += 4;\n      } // Overrides the flags for the first sample only. The order of\n      // optional values will be: duration, size, compositionTimeOffset\n\n      if (firstSampleFlagsPresent && sampleCount) {\n        sample = {\n          flags: parseSampleFlags(data.subarray(offset, offset + 4))\n        };\n        offset += 4;\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n          offset += 4;\n        }\n        result.samples.push(sample);\n        sampleCount--;\n      }\n      while (sampleCount--) {\n        sample = {};\n        if (sampleDurationPresent) {\n          sample.duration = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleSizePresent) {\n          sample.size = view.getUint32(offset);\n          offset += 4;\n        }\n        if (sampleFlagsPresent) {\n          sample.flags = parseSampleFlags(data.subarray(offset, offset + 4));\n          offset += 4;\n        }\n        if (sampleCompositionTimeOffsetPresent) {\n          if (result.version === 1) {\n            sample.compositionTimeOffset = view.getInt32(offset);\n          } else {\n            sample.compositionTimeOffset = view.getUint32(offset);\n          }\n          offset += 4;\n        }\n        result.samples.push(sample);\n      }\n      return result;\n    };\n    var parseTrun$2 = trun;\n    var tfhd = function (data) {\n      var view = new DataView(data.buffer, data.byteOffset, data.byteLength),\n        result = {\n          version: data[0],\n          flags: new Uint8Array(data.subarray(1, 4)),\n          trackId: view.getUint32(4)\n        },\n        baseDataOffsetPresent = result.flags[2] & 0x01,\n        sampleDescriptionIndexPresent = result.flags[2] & 0x02,\n        defaultSampleDurationPresent = result.flags[2] & 0x08,\n        defaultSampleSizePresent = result.flags[2] & 0x10,\n        defaultSampleFlagsPresent = result.flags[2] & 0x20,\n        durationIsEmpty = result.flags[0] & 0x010000,\n        defaultBaseIsMoof = result.flags[0] & 0x020000,\n        i;\n      i = 8;\n      if (baseDataOffsetPresent) {\n        i += 4; // truncate top 4 bytes\n        // FIXME: should we read the full 64 bits?\n\n        result.baseDataOffset = view.getUint32(12);\n        i += 4;\n      }\n      if (sampleDescriptionIndexPresent) {\n        result.sampleDescriptionIndex = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleDurationPresent) {\n        result.defaultSampleDuration = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleSizePresent) {\n        result.defaultSampleSize = view.getUint32(i);\n        i += 4;\n      }\n      if (defaultSampleFlagsPresent) {\n        result.defaultSampleFlags = view.getUint32(i);\n      }\n      if (durationIsEmpty) {\n        result.durationIsEmpty = true;\n      }\n      if (!baseDataOffsetPresent && defaultBaseIsMoof) {\n        result.baseDataOffsetIsMoof = true;\n      }\n      return result;\n    };\n    var parseTfhd$2 = tfhd;\n    var win;\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n    var window_1 = win;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Reads in-band CEA-708 captions out of FMP4 segments.\n     * @see https://en.wikipedia.org/wiki/CEA-708\n     */\n\n    var discardEmulationPreventionBytes = captionPacketParser.discardEmulationPreventionBytes;\n    var CaptionStream = captionStream.CaptionStream;\n    var findBox$1 = findBox_1;\n    var parseTfdt$1 = parseTfdt$2;\n    var parseTrun$1 = parseTrun$2;\n    var parseTfhd$1 = parseTfhd$2;\n    var window$2 = window_1;\n    /**\n      * Maps an offset in the mdat to a sample based on the the size of the samples.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Number} offset - The offset into the mdat\n      * @param {Object[]} samples - An array of samples, parsed using `parseSamples`\n      * @return {?Object} The matching sample, or null if no match was found.\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var mapToSample = function (offset, samples) {\n      var approximateOffset = offset;\n      for (var i = 0; i < samples.length; i++) {\n        var sample = samples[i];\n        if (approximateOffset < sample.size) {\n          return sample;\n        }\n        approximateOffset -= sample.size;\n      }\n      return null;\n    };\n    /**\n      * Finds SEI nal units contained in a Media Data Box.\n      * Assumes that `parseSamples` has been called first.\n      *\n      * @param {Uint8Array} avcStream - The bytes of the mdat\n      * @param {Object[]} samples - The samples parsed out by `parseSamples`\n      * @param {Number} trackId - The trackId of this video track\n      * @return {Object[]} seiNals - the parsed SEI NALUs found.\n      *   The contents of the seiNal should match what is expected by\n      *   CaptionStream.push (nalUnitType, size, data, escapedRBSP, pts, dts)\n      *\n      * @see ISO-BMFF-12/2015, Section 8.1.1\n      * @see Rec. ITU-T H.264, 7.3.2.3.1\n     **/\n\n    var findSeiNals = function (avcStream, samples, trackId) {\n      var avcView = new DataView(avcStream.buffer, avcStream.byteOffset, avcStream.byteLength),\n        result = {\n          logs: [],\n          seiNals: []\n        },\n        seiNal,\n        i,\n        length,\n        lastMatchedSample;\n      for (i = 0; i + 4 < avcStream.length; i += length) {\n        length = avcView.getUint32(i);\n        i += 4; // Bail if this doesn't appear to be an H264 stream\n\n        if (length <= 0) {\n          continue;\n        }\n        switch (avcStream[i] & 0x1F) {\n          case 0x06:\n            var data = avcStream.subarray(i + 1, i + 1 + length);\n            var matchingSample = mapToSample(i, samples);\n            seiNal = {\n              nalUnitType: 'sei_rbsp',\n              size: length,\n              data: data,\n              escapedRBSP: discardEmulationPreventionBytes(data),\n              trackId: trackId\n            };\n            if (matchingSample) {\n              seiNal.pts = matchingSample.pts;\n              seiNal.dts = matchingSample.dts;\n              lastMatchedSample = matchingSample;\n            } else if (lastMatchedSample) {\n              // If a matching sample cannot be found, use the last\n              // sample's values as they should be as close as possible\n              seiNal.pts = lastMatchedSample.pts;\n              seiNal.dts = lastMatchedSample.dts;\n            } else {\n              result.logs.push({\n                level: 'warn',\n                message: 'We\\'ve encountered a nal unit without data at ' + i + ' for trackId ' + trackId + '. See mux.js#223.'\n              });\n              break;\n            }\n            result.seiNals.push(seiNal);\n            break;\n        }\n      }\n      return result;\n    };\n    /**\n      * Parses sample information out of Track Run Boxes and calculates\n      * the absolute presentation and decode timestamps of each sample.\n      *\n      * @param {Array<Uint8Array>} truns - The Trun Run boxes to be parsed\n      * @param {Number|BigInt} baseMediaDecodeTime - base media decode time from tfdt\n          @see ISO-BMFF-12/2015, Section 8.8.12\n      * @param {Object} tfhd - The parsed Track Fragment Header\n      *   @see inspect.parseTfhd\n      * @return {Object[]} the parsed samples\n      *\n      * @see ISO-BMFF-12/2015, Section 8.8.8\n     **/\n\n    var parseSamples = function (truns, baseMediaDecodeTime, tfhd) {\n      var currentDts = baseMediaDecodeTime;\n      var defaultSampleDuration = tfhd.defaultSampleDuration || 0;\n      var defaultSampleSize = tfhd.defaultSampleSize || 0;\n      var trackId = tfhd.trackId;\n      var allSamples = [];\n      truns.forEach(function (trun) {\n        // Note: We currently do not parse the sample table as well\n        // as the trun. It's possible some sources will require this.\n        // moov > trak > mdia > minf > stbl\n        var trackRun = parseTrun$1(trun);\n        var samples = trackRun.samples;\n        samples.forEach(function (sample) {\n          if (sample.duration === undefined) {\n            sample.duration = defaultSampleDuration;\n          }\n          if (sample.size === undefined) {\n            sample.size = defaultSampleSize;\n          }\n          sample.trackId = trackId;\n          sample.dts = currentDts;\n          if (sample.compositionTimeOffset === undefined) {\n            sample.compositionTimeOffset = 0;\n          }\n          if (typeof currentDts === 'bigint') {\n            sample.pts = currentDts + window$2.BigInt(sample.compositionTimeOffset);\n            currentDts += window$2.BigInt(sample.duration);\n          } else {\n            sample.pts = currentDts + sample.compositionTimeOffset;\n            currentDts += sample.duration;\n          }\n        });\n        allSamples = allSamples.concat(samples);\n      });\n      return allSamples;\n    };\n    /**\n      * Parses out caption nals from an FMP4 segment's video tracks.\n      *\n      * @param {Uint8Array} segment - The bytes of a single segment\n      * @param {Number} videoTrackId - The trackId of a video track in the segment\n      * @return {Object.<Number, Object[]>} A mapping of video trackId to\n      *   a list of seiNals found in that track\n     **/\n\n    var parseCaptionNals = function (segment, videoTrackId) {\n      // To get the samples\n      var trafs = findBox$1(segment, ['moof', 'traf']); // To get SEI NAL units\n\n      var mdats = findBox$1(segment, ['mdat']);\n      var captionNals = {};\n      var mdatTrafPairs = []; // Pair up each traf with a mdat as moofs and mdats are in pairs\n\n      mdats.forEach(function (mdat, index) {\n        var matchingTraf = trafs[index];\n        mdatTrafPairs.push({\n          mdat: mdat,\n          traf: matchingTraf\n        });\n      });\n      mdatTrafPairs.forEach(function (pair) {\n        var mdat = pair.mdat;\n        var traf = pair.traf;\n        var tfhd = findBox$1(traf, ['tfhd']); // Exactly 1 tfhd per traf\n\n        var headerInfo = parseTfhd$1(tfhd[0]);\n        var trackId = headerInfo.trackId;\n        var tfdt = findBox$1(traf, ['tfdt']); // Either 0 or 1 tfdt per traf\n\n        var baseMediaDecodeTime = tfdt.length > 0 ? parseTfdt$1(tfdt[0]).baseMediaDecodeTime : 0;\n        var truns = findBox$1(traf, ['trun']);\n        var samples;\n        var result; // Only parse video data for the chosen video track\n\n        if (videoTrackId === trackId && truns.length > 0) {\n          samples = parseSamples(truns, baseMediaDecodeTime, headerInfo);\n          result = findSeiNals(mdat, samples, trackId);\n          if (!captionNals[trackId]) {\n            captionNals[trackId] = {\n              seiNals: [],\n              logs: []\n            };\n          }\n          captionNals[trackId].seiNals = captionNals[trackId].seiNals.concat(result.seiNals);\n          captionNals[trackId].logs = captionNals[trackId].logs.concat(result.logs);\n        }\n      });\n      return captionNals;\n    };\n    /**\n      * Parses out inband captions from an MP4 container and returns\n      * caption objects that can be used by WebVTT and the TextTrack API.\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/VTTCue\n      * @see https://developer.mozilla.org/en-US/docs/Web/API/TextTrack\n      * Assumes that `probe.getVideoTrackIds` and `probe.timescale` have been called first\n      *\n      * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n      * @param {Number} trackId - The id of the video track to parse\n      * @param {Number} timescale - The timescale for the video track from the init segment\n      *\n      * @return {?Object[]} parsedCaptions - A list of captions or null if no video tracks\n      * @return {Number} parsedCaptions[].startTime - The time to show the caption in seconds\n      * @return {Number} parsedCaptions[].endTime - The time to stop showing the caption in seconds\n      * @return {String} parsedCaptions[].text - The visible content of the caption\n     **/\n\n    var parseEmbeddedCaptions = function (segment, trackId, timescale) {\n      var captionNals; // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n\n      if (trackId === null) {\n        return null;\n      }\n      captionNals = parseCaptionNals(segment, trackId);\n      var trackNals = captionNals[trackId] || {};\n      return {\n        seiNals: trackNals.seiNals,\n        logs: trackNals.logs,\n        timescale: timescale\n      };\n    };\n    /**\n      * Converts SEI NALUs into captions that can be used by video.js\n     **/\n\n    var CaptionParser = function () {\n      var isInitialized = false;\n      var captionStream; // Stores segments seen before trackId and timescale are set\n\n      var segmentCache; // Stores video track ID of the track being parsed\n\n      var trackId; // Stores the timescale of the track being parsed\n\n      var timescale; // Stores captions parsed so far\n\n      var parsedCaptions; // Stores whether we are receiving partial data or not\n\n      var parsingPartial;\n      /**\n        * A method to indicate whether a CaptionParser has been initalized\n        * @returns {Boolean}\n       **/\n\n      this.isInitialized = function () {\n        return isInitialized;\n      };\n      /**\n        * Initializes the underlying CaptionStream, SEI NAL parsing\n        * and management, and caption collection\n       **/\n\n      this.init = function (options) {\n        captionStream = new CaptionStream();\n        isInitialized = true;\n        parsingPartial = options ? options.isPartial : false; // Collect dispatched captions\n\n        captionStream.on('data', function (event) {\n          // Convert to seconds in the source's timescale\n          event.startTime = event.startPts / timescale;\n          event.endTime = event.endPts / timescale;\n          parsedCaptions.captions.push(event);\n          parsedCaptions.captionStreams[event.stream] = true;\n        });\n        captionStream.on('log', function (log) {\n          parsedCaptions.logs.push(log);\n        });\n      };\n      /**\n        * Determines if a new video track will be selected\n        * or if the timescale changed\n        * @return {Boolean}\n       **/\n\n      this.isNewInit = function (videoTrackIds, timescales) {\n        if (videoTrackIds && videoTrackIds.length === 0 || timescales && typeof timescales === 'object' && Object.keys(timescales).length === 0) {\n          return false;\n        }\n        return trackId !== videoTrackIds[0] || timescale !== timescales[trackId];\n      };\n      /**\n        * Parses out SEI captions and interacts with underlying\n        * CaptionStream to return dispatched captions\n        *\n        * @param {Uint8Array} segment - The fmp4 segment containing embedded captions\n        * @param {Number[]} videoTrackIds - A list of video tracks found in the init segment\n        * @param {Object.<Number, Number>} timescales - The timescales found in the init segment\n        * @see parseEmbeddedCaptions\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.parse = function (segment, videoTrackIds, timescales) {\n        var parsedData;\n        if (!this.isInitialized()) {\n          return null; // This is not likely to be a video segment\n        } else if (!videoTrackIds || !timescales) {\n          return null;\n        } else if (this.isNewInit(videoTrackIds, timescales)) {\n          // Use the first video track only as there is no\n          // mechanism to switch to other video tracks\n          trackId = videoTrackIds[0];\n          timescale = timescales[trackId]; // If an init segment has not been seen yet, hold onto segment\n          // data until we have one.\n          // the ISO-BMFF spec says that trackId can't be zero, but there's some broken content out there\n        } else if (trackId === null || !timescale) {\n          segmentCache.push(segment);\n          return null;\n        } // Now that a timescale and trackId is set, parse cached segments\n\n        while (segmentCache.length > 0) {\n          var cachedSegment = segmentCache.shift();\n          this.parse(cachedSegment, videoTrackIds, timescales);\n        }\n        parsedData = parseEmbeddedCaptions(segment, trackId, timescale);\n        if (parsedData && parsedData.logs) {\n          parsedCaptions.logs = parsedCaptions.logs.concat(parsedData.logs);\n        }\n        if (parsedData === null || !parsedData.seiNals) {\n          if (parsedCaptions.logs.length) {\n            return {\n              logs: parsedCaptions.logs,\n              captions: [],\n              captionStreams: []\n            };\n          }\n          return null;\n        }\n        this.pushNals(parsedData.seiNals); // Force the parsed captions to be dispatched\n\n        this.flushStream();\n        return parsedCaptions;\n      };\n      /**\n        * Pushes SEI NALUs onto CaptionStream\n        * @param {Object[]} nals - A list of SEI nals parsed using `parseCaptionNals`\n        * Assumes that `parseCaptionNals` has been called first\n        * @see m2ts/caption-stream.js\n        **/\n\n      this.pushNals = function (nals) {\n        if (!this.isInitialized() || !nals || nals.length === 0) {\n          return null;\n        }\n        nals.forEach(function (nal) {\n          captionStream.push(nal);\n        });\n      };\n      /**\n        * Flushes underlying CaptionStream to dispatch processed, displayable captions\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.flushStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n        if (!parsingPartial) {\n          captionStream.flush();\n        } else {\n          captionStream.partialFlush();\n        }\n      };\n      /**\n        * Reset caption buckets for new data\n       **/\n\n      this.clearParsedCaptions = function () {\n        parsedCaptions.captions = [];\n        parsedCaptions.captionStreams = {};\n        parsedCaptions.logs = [];\n      };\n      /**\n        * Resets underlying CaptionStream\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.resetCaptionStream = function () {\n        if (!this.isInitialized()) {\n          return null;\n        }\n        captionStream.reset();\n      };\n      /**\n        * Convenience method to clear all captions flushed from the\n        * CaptionStream and still being parsed\n        * @see m2ts/caption-stream.js\n       **/\n\n      this.clearAllCaptions = function () {\n        this.clearParsedCaptions();\n        this.resetCaptionStream();\n      };\n      /**\n        * Reset caption parser\n       **/\n\n      this.reset = function () {\n        segmentCache = [];\n        trackId = null;\n        timescale = null;\n        if (!parsedCaptions) {\n          parsedCaptions = {\n            captions: [],\n            // CC1, CC2, CC3, CC4\n            captionStreams: {},\n            logs: []\n          };\n        } else {\n          this.clearParsedCaptions();\n        }\n        this.resetCaptionStream();\n      };\n      this.reset();\n    };\n    var captionParser = CaptionParser;\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about MP4s.\n     */\n\n    var toUnsigned = bin.toUnsigned;\n    var toHexString = bin.toHexString;\n    var findBox = findBox_1;\n    var parseType$1 = parseType_1;\n    var parseTfhd = parseTfhd$2;\n    var parseTrun = parseTrun$2;\n    var parseTfdt = parseTfdt$2;\n    var getUint64 = numbers.getUint64;\n    var timescale, startTime, compositionStartTime, getVideoTrackIds, getTracks, getTimescaleFromMediaHeader;\n    var window$1 = window_1;\n    /**\n     * Parses an MP4 initialization segment and extracts the timescale\n     * values for any declared tracks. Timescale values indicate the\n     * number of clock ticks per second to assume for time-based values\n     * elsewhere in the MP4.\n     *\n     * To determine the start time of an MP4, you need two pieces of\n     * information: the timescale unit and the earliest base media decode\n     * time. Multiple timescales can be specified within an MP4 but the\n     * base media decode time is always expressed in the timescale from\n     * the media header box for the track:\n     * ```\n     * moov > trak > mdia > mdhd.timescale\n     * ```\n     * @param init {Uint8Array} the bytes of the init segment\n     * @return {object} a hash of track ids to timescale values or null if\n     * the init segment is malformed.\n     */\n\n    timescale = function (init) {\n      var result = {},\n        traks = findBox(init, ['moov', 'trak']); // mdhd timescale\n\n      return traks.reduce(function (result, trak) {\n        var tkhd, version, index, id, mdhd;\n        tkhd = findBox(trak, ['tkhd'])[0];\n        if (!tkhd) {\n          return null;\n        }\n        version = tkhd[0];\n        index = version === 0 ? 12 : 20;\n        id = toUnsigned(tkhd[index] << 24 | tkhd[index + 1] << 16 | tkhd[index + 2] << 8 | tkhd[index + 3]);\n        mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n        if (!mdhd) {\n          return null;\n        }\n        version = mdhd[0];\n        index = version === 0 ? 12 : 20;\n        result[id] = toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n        return result;\n      }, result);\n    };\n    /**\n     * Determine the base media decode start time, in seconds, for an MP4\n     * fragment. If multiple fragments are specified, the earliest time is\n     * returned.\n     *\n     * The base media decode time can be parsed from track fragment\n     * metadata:\n     * ```\n     * moof > traf > tfdt.baseMediaDecodeTime\n     * ```\n     * It requires the timescale value from the mdhd to interpret.\n     *\n     * @param timescale {object} a hash of track ids to timescale values.\n     * @return {number} the earliest base media decode start time for the\n     * fragment, in seconds\n     */\n\n    startTime = function (timescale, fragment) {\n      var trafs; // we need info from two childrend of each track fragment box\n\n      trafs = findBox(fragment, ['moof', 'traf']); // determine the start times for each track\n\n      var lowestTime = trafs.reduce(function (acc, traf) {\n        var tfhd = findBox(traf, ['tfhd'])[0]; // get the track id from the tfhd\n\n        var id = toUnsigned(tfhd[4] << 24 | tfhd[5] << 16 | tfhd[6] << 8 | tfhd[7]); // assume a 90kHz clock if no timescale was specified\n\n        var scale = timescale[id] || 90e3; // get the base media decode time from the tfdt\n\n        var tfdt = findBox(traf, ['tfdt'])[0];\n        var dv = new DataView(tfdt.buffer, tfdt.byteOffset, tfdt.byteLength);\n        var baseTime; // version 1 is 64 bit\n\n        if (tfdt[0] === 1) {\n          baseTime = getUint64(tfdt.subarray(4, 12));\n        } else {\n          baseTime = dv.getUint32(4);\n        } // convert base time to seconds if it is a valid number.\n\n        let seconds;\n        if (typeof baseTime === 'bigint') {\n          seconds = baseTime / window$1.BigInt(scale);\n        } else if (typeof baseTime === 'number' && !isNaN(baseTime)) {\n          seconds = baseTime / scale;\n        }\n        if (seconds < Number.MAX_SAFE_INTEGER) {\n          seconds = Number(seconds);\n        }\n        if (seconds < acc) {\n          acc = seconds;\n        }\n        return acc;\n      }, Infinity);\n      return typeof lowestTime === 'bigint' || isFinite(lowestTime) ? lowestTime : 0;\n    };\n    /**\n     * Determine the composition start, in seconds, for an MP4\n     * fragment.\n     *\n     * The composition start time of a fragment can be calculated using the base\n     * media decode time, composition time offset, and timescale, as follows:\n     *\n     * compositionStartTime = (baseMediaDecodeTime + compositionTimeOffset) / timescale\n     *\n     * All of the aforementioned information is contained within a media fragment's\n     * `traf` box, except for timescale info, which comes from the initialization\n     * segment, so a track id (also contained within a `traf`) is also necessary to\n     * associate it with a timescale\n     *\n     *\n     * @param timescales {object} - a hash of track ids to timescale values.\n     * @param fragment {Unit8Array} - the bytes of a media segment\n     * @return {number} the composition start time for the fragment, in seconds\n     **/\n\n    compositionStartTime = function (timescales, fragment) {\n      var trafBoxes = findBox(fragment, ['moof', 'traf']);\n      var baseMediaDecodeTime = 0;\n      var compositionTimeOffset = 0;\n      var trackId;\n      if (trafBoxes && trafBoxes.length) {\n        // The spec states that track run samples contained within a `traf` box are contiguous, but\n        // it does not explicitly state whether the `traf` boxes themselves are contiguous.\n        // We will assume that they are, so we only need the first to calculate start time.\n        var tfhd = findBox(trafBoxes[0], ['tfhd'])[0];\n        var trun = findBox(trafBoxes[0], ['trun'])[0];\n        var tfdt = findBox(trafBoxes[0], ['tfdt'])[0];\n        if (tfhd) {\n          var parsedTfhd = parseTfhd(tfhd);\n          trackId = parsedTfhd.trackId;\n        }\n        if (tfdt) {\n          var parsedTfdt = parseTfdt(tfdt);\n          baseMediaDecodeTime = parsedTfdt.baseMediaDecodeTime;\n        }\n        if (trun) {\n          var parsedTrun = parseTrun(trun);\n          if (parsedTrun.samples && parsedTrun.samples.length) {\n            compositionTimeOffset = parsedTrun.samples[0].compositionTimeOffset || 0;\n          }\n        }\n      } // Get timescale for this specific track. Assume a 90kHz clock if no timescale was\n      // specified.\n\n      var timescale = timescales[trackId] || 90e3; // return the composition start time, in seconds\n\n      if (typeof baseMediaDecodeTime === 'bigint') {\n        compositionTimeOffset = window$1.BigInt(compositionTimeOffset);\n        timescale = window$1.BigInt(timescale);\n      }\n      var result = (baseMediaDecodeTime + compositionTimeOffset) / timescale;\n      if (typeof result === 'bigint' && result < Number.MAX_SAFE_INTEGER) {\n        result = Number(result);\n      }\n      return result;\n    };\n    /**\n      * Find the trackIds of the video tracks in this source.\n      * Found by parsing the Handler Reference and Track Header Boxes:\n      *   moov > trak > mdia > hdlr\n      *   moov > trak > tkhd\n      *\n      * @param {Uint8Array} init - The bytes of the init segment for this source\n      * @return {Number[]} A list of trackIds\n      *\n      * @see ISO-BMFF-12/2015, Section 8.4.3\n     **/\n\n    getVideoTrackIds = function (init) {\n      var traks = findBox(init, ['moov', 'trak']);\n      var videoTrackIds = [];\n      traks.forEach(function (trak) {\n        var hdlrs = findBox(trak, ['mdia', 'hdlr']);\n        var tkhds = findBox(trak, ['tkhd']);\n        hdlrs.forEach(function (hdlr, index) {\n          var handlerType = parseType$1(hdlr.subarray(8, 12));\n          var tkhd = tkhds[index];\n          var view;\n          var version;\n          var trackId;\n          if (handlerType === 'vide') {\n            view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n            version = view.getUint8(0);\n            trackId = version === 0 ? view.getUint32(12) : view.getUint32(20);\n            videoTrackIds.push(trackId);\n          }\n        });\n      });\n      return videoTrackIds;\n    };\n    getTimescaleFromMediaHeader = function (mdhd) {\n      // mdhd is a FullBox, meaning it will have its own version as the first byte\n      var version = mdhd[0];\n      var index = version === 0 ? 12 : 20;\n      return toUnsigned(mdhd[index] << 24 | mdhd[index + 1] << 16 | mdhd[index + 2] << 8 | mdhd[index + 3]);\n    };\n    /**\n     * Get all the video, audio, and hint tracks from a non fragmented\n     * mp4 segment\n     */\n\n    getTracks = function (init) {\n      var traks = findBox(init, ['moov', 'trak']);\n      var tracks = [];\n      traks.forEach(function (trak) {\n        var track = {};\n        var tkhd = findBox(trak, ['tkhd'])[0];\n        var view, tkhdVersion; // id\n\n        if (tkhd) {\n          view = new DataView(tkhd.buffer, tkhd.byteOffset, tkhd.byteLength);\n          tkhdVersion = view.getUint8(0);\n          track.id = tkhdVersion === 0 ? view.getUint32(12) : view.getUint32(20);\n        }\n        var hdlr = findBox(trak, ['mdia', 'hdlr'])[0]; // type\n\n        if (hdlr) {\n          var type = parseType$1(hdlr.subarray(8, 12));\n          if (type === 'vide') {\n            track.type = 'video';\n          } else if (type === 'soun') {\n            track.type = 'audio';\n          } else {\n            track.type = type;\n          }\n        } // codec\n\n        var stsd = findBox(trak, ['mdia', 'minf', 'stbl', 'stsd'])[0];\n        if (stsd) {\n          var sampleDescriptions = stsd.subarray(8); // gives the codec type string\n\n          track.codec = parseType$1(sampleDescriptions.subarray(4, 8));\n          var codecBox = findBox(sampleDescriptions, [track.codec])[0];\n          var codecConfig, codecConfigType;\n          if (codecBox) {\n            // https://tools.ietf.org/html/rfc6381#section-3.3\n            if (/^[asm]vc[1-9]$/i.test(track.codec)) {\n              // we don't need anything but the \"config\" parameter of the\n              // avc1 codecBox\n              codecConfig = codecBox.subarray(78);\n              codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n              if (codecConfigType === 'avcC' && codecConfig.length > 11) {\n                track.codec += '.'; // left padded with zeroes for single digit hex\n                // profile idc\n\n                track.codec += toHexString(codecConfig[9]); // the byte containing the constraint_set flags\n\n                track.codec += toHexString(codecConfig[10]); // level idc\n\n                track.codec += toHexString(codecConfig[11]);\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'avc1.4d400d';\n              }\n            } else if (/^mp4[a,v]$/i.test(track.codec)) {\n              // we do not need anything but the streamDescriptor of the mp4a codecBox\n              codecConfig = codecBox.subarray(28);\n              codecConfigType = parseType$1(codecConfig.subarray(4, 8));\n              if (codecConfigType === 'esds' && codecConfig.length > 20 && codecConfig[19] !== 0) {\n                track.codec += '.' + toHexString(codecConfig[19]); // this value is only a single digit\n\n                track.codec += '.' + toHexString(codecConfig[20] >>> 2 & 0x3f).replace(/^0/, '');\n              } else {\n                // TODO: show a warning that we couldn't parse the codec\n                // and are using the default\n                track.codec = 'mp4a.40.2';\n              }\n            } else {\n              // flac, opus, etc\n              track.codec = track.codec.toLowerCase();\n            }\n          }\n        }\n        var mdhd = findBox(trak, ['mdia', 'mdhd'])[0];\n        if (mdhd) {\n          track.timescale = getTimescaleFromMediaHeader(mdhd);\n        }\n        tracks.push(track);\n      });\n      return tracks;\n    };\n    var probe$2 = {\n      // export mp4 inspector's findBox and parseType for backwards compatibility\n      findBox: findBox,\n      parseType: parseType$1,\n      timescale: timescale,\n      startTime: startTime,\n      compositionStartTime: compositionStartTime,\n      videoTrackIds: getVideoTrackIds,\n      tracks: getTracks,\n      getTimescaleFromMediaHeader: getTimescaleFromMediaHeader\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Utilities to detect basic properties and metadata about TS Segments.\n     */\n\n    var StreamTypes$1 = streamTypes;\n    var parsePid = function (packet) {\n      var pid = packet[1] & 0x1f;\n      pid <<= 8;\n      pid |= packet[2];\n      return pid;\n    };\n    var parsePayloadUnitStartIndicator = function (packet) {\n      return !!(packet[1] & 0x40);\n    };\n    var parseAdaptionField = function (packet) {\n      var offset = 0; // if an adaption field is present, its length is specified by the\n      // fifth byte of the TS packet header. The adaptation field is\n      // used to add stuffing to PES packets that don't fill a complete\n      // TS packet, and to specify some forms of timing and control data\n      // that we do not currently use.\n\n      if ((packet[3] & 0x30) >>> 4 > 0x01) {\n        offset += packet[4] + 1;\n      }\n      return offset;\n    };\n    var parseType = function (packet, pmtPid) {\n      var pid = parsePid(packet);\n      if (pid === 0) {\n        return 'pat';\n      } else if (pid === pmtPid) {\n        return 'pmt';\n      } else if (pmtPid) {\n        return 'pes';\n      }\n      return null;\n    };\n    var parsePat = function (packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var offset = 4 + parseAdaptionField(packet);\n      if (pusi) {\n        offset += packet[offset] + 1;\n      }\n      return (packet[offset + 10] & 0x1f) << 8 | packet[offset + 11];\n    };\n    var parsePmt = function (packet) {\n      var programMapTable = {};\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      var payloadOffset = 4 + parseAdaptionField(packet);\n      if (pusi) {\n        payloadOffset += packet[payloadOffset] + 1;\n      } // PMTs can be sent ahead of the time when they should actually\n      // take effect. We don't believe this should ever be the case\n      // for HLS but we'll ignore \"forward\" PMT declarations if we see\n      // them. Future PMT declarations have the current_next_indicator\n      // set to zero.\n\n      if (!(packet[payloadOffset + 5] & 0x01)) {\n        return;\n      }\n      var sectionLength, tableEnd, programInfoLength; // the mapping table ends at the end of the current section\n\n      sectionLength = (packet[payloadOffset + 1] & 0x0f) << 8 | packet[payloadOffset + 2];\n      tableEnd = 3 + sectionLength - 4; // to determine where the table is, we have to figure out how\n      // long the program info descriptors are\n\n      programInfoLength = (packet[payloadOffset + 10] & 0x0f) << 8 | packet[payloadOffset + 11]; // advance the offset to the first entry in the mapping table\n\n      var offset = 12 + programInfoLength;\n      while (offset < tableEnd) {\n        var i = payloadOffset + offset; // add an entry that maps the elementary_pid to the stream_type\n\n        programMapTable[(packet[i + 1] & 0x1F) << 8 | packet[i + 2]] = packet[i]; // move to the next table entry\n        // skip past the elementary stream descriptors, if present\n\n        offset += ((packet[i + 3] & 0x0F) << 8 | packet[i + 4]) + 5;\n      }\n      return programMapTable;\n    };\n    var parsePesType = function (packet, programMapTable) {\n      var pid = parsePid(packet);\n      var type = programMapTable[pid];\n      switch (type) {\n        case StreamTypes$1.H264_STREAM_TYPE:\n          return 'video';\n        case StreamTypes$1.ADTS_STREAM_TYPE:\n          return 'audio';\n        case StreamTypes$1.METADATA_STREAM_TYPE:\n          return 'timed-metadata';\n        default:\n          return null;\n      }\n    };\n    var parsePesTime = function (packet) {\n      var pusi = parsePayloadUnitStartIndicator(packet);\n      if (!pusi) {\n        return null;\n      }\n      var offset = 4 + parseAdaptionField(packet);\n      if (offset >= packet.byteLength) {\n        // From the H 222.0 MPEG-TS spec\n        // \"For transport stream packets carrying PES packets, stuffing is needed when there\n        //  is insufficient PES packet data to completely fill the transport stream packet\n        //  payload bytes. Stuffing is accomplished by defining an adaptation field longer than\n        //  the sum of the lengths of the data elements in it, so that the payload bytes\n        //  remaining after the adaptation field exactly accommodates the available PES packet\n        //  data.\"\n        //\n        // If the offset is >= the length of the packet, then the packet contains no data\n        // and instead is just adaption field stuffing bytes\n        return null;\n      }\n      var pes = null;\n      var ptsDtsFlags; // PES packets may be annotated with a PTS value, or a PTS value\n      // and a DTS value. Determine what combination of values is\n      // available to work with.\n\n      ptsDtsFlags = packet[offset + 7]; // PTS and DTS are normally stored as a 33-bit number.  Javascript\n      // performs all bitwise operations on 32-bit integers but javascript\n      // supports a much greater range (52-bits) of integer using standard\n      // mathematical operations.\n      // We construct a 31-bit value using bitwise operators over the 31\n      // most significant bits and then multiply by 4 (equal to a left-shift\n      // of 2) before we add the final 2 least significant bits of the\n      // timestamp (equal to an OR.)\n\n      if (ptsDtsFlags & 0xC0) {\n        pes = {}; // the PTS and DTS are not written out directly. For information\n        // on how they are encoded, see\n        // http://dvd.sourceforge.net/dvdinfo/pes-hdr.html\n\n        pes.pts = (packet[offset + 9] & 0x0E) << 27 | (packet[offset + 10] & 0xFF) << 20 | (packet[offset + 11] & 0xFE) << 12 | (packet[offset + 12] & 0xFF) << 5 | (packet[offset + 13] & 0xFE) >>> 3;\n        pes.pts *= 4; // Left shift by 2\n\n        pes.pts += (packet[offset + 13] & 0x06) >>> 1; // OR by the two LSBs\n\n        pes.dts = pes.pts;\n        if (ptsDtsFlags & 0x40) {\n          pes.dts = (packet[offset + 14] & 0x0E) << 27 | (packet[offset + 15] & 0xFF) << 20 | (packet[offset + 16] & 0xFE) << 12 | (packet[offset + 17] & 0xFF) << 5 | (packet[offset + 18] & 0xFE) >>> 3;\n          pes.dts *= 4; // Left shift by 2\n\n          pes.dts += (packet[offset + 18] & 0x06) >>> 1; // OR by the two LSBs\n        }\n      }\n\n      return pes;\n    };\n    var parseNalUnitType = function (type) {\n      switch (type) {\n        case 0x05:\n          return 'slice_layer_without_partitioning_rbsp_idr';\n        case 0x06:\n          return 'sei_rbsp';\n        case 0x07:\n          return 'seq_parameter_set_rbsp';\n        case 0x08:\n          return 'pic_parameter_set_rbsp';\n        case 0x09:\n          return 'access_unit_delimiter_rbsp';\n        default:\n          return null;\n      }\n    };\n    var videoPacketContainsKeyFrame = function (packet) {\n      var offset = 4 + parseAdaptionField(packet);\n      var frameBuffer = packet.subarray(offset);\n      var frameI = 0;\n      var frameSyncPoint = 0;\n      var foundKeyFrame = false;\n      var nalType; // advance the sync point to a NAL start, if necessary\n\n      for (; frameSyncPoint < frameBuffer.byteLength - 3; frameSyncPoint++) {\n        if (frameBuffer[frameSyncPoint + 2] === 1) {\n          // the sync point is properly aligned\n          frameI = frameSyncPoint + 5;\n          break;\n        }\n      }\n      while (frameI < frameBuffer.byteLength) {\n        // look at the current byte to determine if we've hit the end of\n        // a NAL unit boundary\n        switch (frameBuffer[frameI]) {\n          case 0:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0) {\n              frameI += 2;\n              break;\n            } else if (frameBuffer[frameI - 2] !== 0) {\n              frameI++;\n              break;\n            }\n            if (frameSyncPoint + 3 !== frameI - 2) {\n              nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n              if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n                foundKeyFrame = true;\n              }\n            } // drop trailing zeroes\n\n            do {\n              frameI++;\n            } while (frameBuffer[frameI] !== 1 && frameI < frameBuffer.length);\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n          case 1:\n            // skip past non-sync sequences\n            if (frameBuffer[frameI - 1] !== 0 || frameBuffer[frameI - 2] !== 0) {\n              frameI += 3;\n              break;\n            }\n            nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n            if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n              foundKeyFrame = true;\n            }\n            frameSyncPoint = frameI - 2;\n            frameI += 3;\n            break;\n          default:\n            // the current byte isn't a one or zero, so it cannot be part\n            // of a sync sequence\n            frameI += 3;\n            break;\n        }\n      }\n      frameBuffer = frameBuffer.subarray(frameSyncPoint);\n      frameI -= frameSyncPoint;\n      frameSyncPoint = 0; // parse the final nal\n\n      if (frameBuffer && frameBuffer.byteLength > 3) {\n        nalType = parseNalUnitType(frameBuffer[frameSyncPoint + 3] & 0x1f);\n        if (nalType === 'slice_layer_without_partitioning_rbsp_idr') {\n          foundKeyFrame = true;\n        }\n      }\n      return foundKeyFrame;\n    };\n    var probe$1 = {\n      parseType: parseType,\n      parsePat: parsePat,\n      parsePmt: parsePmt,\n      parsePayloadUnitStartIndicator: parsePayloadUnitStartIndicator,\n      parsePesType: parsePesType,\n      parsePesTime: parsePesTime,\n      videoPacketContainsKeyFrame: videoPacketContainsKeyFrame\n    };\n    /**\n     * mux.js\n     *\n     * Copyright (c) Brightcove\n     * Licensed Apache-2.0 https://github.com/videojs/mux.js/blob/master/LICENSE\n     *\n     * Parse mpeg2 transport stream packets to extract basic timing information\n     */\n\n    var StreamTypes = streamTypes;\n    var handleRollover = timestampRolloverStream.handleRollover;\n    var probe = {};\n    probe.ts = probe$1;\n    probe.aac = utils;\n    var ONE_SECOND_IN_TS = clock$2.ONE_SECOND_IN_TS;\n    var MP2T_PACKET_LENGTH = 188,\n      // bytes\n      SYNC_BYTE = 0x47;\n    /**\n     * walks through segment data looking for pat and pmt packets to parse out\n     * program map table information\n     */\n\n    var parsePsi_ = function (bytes, pmt) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type;\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pat':\n              pmt.pid = probe.ts.parsePat(packet);\n              break;\n            case 'pmt':\n              var table = probe.ts.parsePmt(packet);\n              pmt.table = pmt.table || {};\n              Object.keys(table).forEach(function (key) {\n                pmt.table[key] = table[key];\n              });\n              break;\n          }\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last audio pes packets\n     */\n\n    var parseAudioPes_ = function (bytes, pmt, result) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed;\n      var endLoop = false; // Start walking from start of segment to get first audio packet\n\n      while (endIndex <= bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n              break;\n          }\n          if (endLoop) {\n            break;\n          }\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last audio packet\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && (bytes[endIndex] === SYNC_BYTE || endIndex === bytes.byteLength)) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'audio' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'audio';\n                  result.audio.push(parsed);\n                  endLoop = true;\n                }\n              }\n              break;\n          }\n          if (endLoop) {\n            break;\n          }\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * walks through the segment data from the start and end to get timing information\n     * for the first and last video pes packets as well as timing information for the first\n     * key frame.\n     */\n\n    var parseVideoPes_ = function (bytes, pmt, result) {\n      var startIndex = 0,\n        endIndex = MP2T_PACKET_LENGTH,\n        packet,\n        type,\n        pesType,\n        pusi,\n        parsed,\n        frame,\n        i,\n        pes;\n      var endLoop = false;\n      var currentFrame = {\n        data: [],\n        size: 0\n      }; // Start walking from start of segment to get first video packet\n\n      while (endIndex < bytes.byteLength) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'video') {\n                if (pusi && !endLoop) {\n                  parsed = probe.ts.parsePesTime(packet);\n                  if (parsed) {\n                    parsed.type = 'video';\n                    result.video.push(parsed);\n                    endLoop = true;\n                  }\n                }\n                if (!result.firstKeyFrame) {\n                  if (pusi) {\n                    if (currentFrame.size !== 0) {\n                      frame = new Uint8Array(currentFrame.size);\n                      i = 0;\n                      while (currentFrame.data.length) {\n                        pes = currentFrame.data.shift();\n                        frame.set(pes, i);\n                        i += pes.byteLength;\n                      }\n                      if (probe.ts.videoPacketContainsKeyFrame(frame)) {\n                        var firstKeyFrame = probe.ts.parsePesTime(frame); // PTS/DTS may not be available. Simply *not* setting\n                        // the keyframe seems to work fine with HLS playback\n                        // and definitely preferable to a crash with TypeError...\n\n                        if (firstKeyFrame) {\n                          result.firstKeyFrame = firstKeyFrame;\n                          result.firstKeyFrame.type = 'video';\n                        } else {\n                          // eslint-disable-next-line\n                          console.warn('Failed to extract PTS/DTS from PES at first keyframe. ' + 'This could be an unusual TS segment, or else mux.js did not ' + 'parse your TS segment correctly. If you know your TS ' + 'segments do contain PTS/DTS on keyframes please file a bug ' + 'report! You can try ffprobe to double check for yourself.');\n                        }\n                      }\n                      currentFrame.size = 0;\n                    }\n                  }\n                  currentFrame.data.push(packet);\n                  currentFrame.size += packet.byteLength;\n                }\n              }\n              break;\n          }\n          if (endLoop && result.firstKeyFrame) {\n            break;\n          }\n          startIndex += MP2T_PACKET_LENGTH;\n          endIndex += MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex++;\n        endIndex++;\n      } // Start walking from end of segment to get last video packet\n\n      endIndex = bytes.byteLength;\n      startIndex = endIndex - MP2T_PACKET_LENGTH;\n      endLoop = false;\n      while (startIndex >= 0) {\n        // Look for a pair of start and end sync bytes in the data..\n        if (bytes[startIndex] === SYNC_BYTE && bytes[endIndex] === SYNC_BYTE) {\n          // We found a packet\n          packet = bytes.subarray(startIndex, endIndex);\n          type = probe.ts.parseType(packet, pmt.pid);\n          switch (type) {\n            case 'pes':\n              pesType = probe.ts.parsePesType(packet, pmt.table);\n              pusi = probe.ts.parsePayloadUnitStartIndicator(packet);\n              if (pesType === 'video' && pusi) {\n                parsed = probe.ts.parsePesTime(packet);\n                if (parsed) {\n                  parsed.type = 'video';\n                  result.video.push(parsed);\n                  endLoop = true;\n                }\n              }\n              break;\n          }\n          if (endLoop) {\n            break;\n          }\n          startIndex -= MP2T_PACKET_LENGTH;\n          endIndex -= MP2T_PACKET_LENGTH;\n          continue;\n        } // If we get here, we have somehow become de-synchronized and we need to step\n        // forward one byte at a time until we find a pair of sync bytes that denote\n        // a packet\n\n        startIndex--;\n        endIndex--;\n      }\n    };\n    /**\n     * Adjusts the timestamp information for the segment to account for\n     * rollover and convert to seconds based on pes packet timescale (90khz clock)\n     */\n\n    var adjustTimestamp_ = function (segmentInfo, baseTimestamp) {\n      if (segmentInfo.audio && segmentInfo.audio.length) {\n        var audioBaseTimestamp = baseTimestamp;\n        if (typeof audioBaseTimestamp === 'undefined' || isNaN(audioBaseTimestamp)) {\n          audioBaseTimestamp = segmentInfo.audio[0].dts;\n        }\n        segmentInfo.audio.forEach(function (info) {\n          info.dts = handleRollover(info.dts, audioBaseTimestamp);\n          info.pts = handleRollover(info.pts, audioBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n      }\n      if (segmentInfo.video && segmentInfo.video.length) {\n        var videoBaseTimestamp = baseTimestamp;\n        if (typeof videoBaseTimestamp === 'undefined' || isNaN(videoBaseTimestamp)) {\n          videoBaseTimestamp = segmentInfo.video[0].dts;\n        }\n        segmentInfo.video.forEach(function (info) {\n          info.dts = handleRollover(info.dts, videoBaseTimestamp);\n          info.pts = handleRollover(info.pts, videoBaseTimestamp); // time in seconds\n\n          info.dtsTime = info.dts / ONE_SECOND_IN_TS;\n          info.ptsTime = info.pts / ONE_SECOND_IN_TS;\n        });\n        if (segmentInfo.firstKeyFrame) {\n          var frame = segmentInfo.firstKeyFrame;\n          frame.dts = handleRollover(frame.dts, videoBaseTimestamp);\n          frame.pts = handleRollover(frame.pts, videoBaseTimestamp); // time in seconds\n\n          frame.dtsTime = frame.dts / ONE_SECOND_IN_TS;\n          frame.ptsTime = frame.pts / ONE_SECOND_IN_TS;\n        }\n      }\n    };\n    /**\n     * inspects the aac data stream for start and end time information\n     */\n\n    var inspectAac_ = function (bytes) {\n      var endLoop = false,\n        audioCount = 0,\n        sampleRate = null,\n        timestamp = null,\n        frameSize = 0,\n        byteIndex = 0,\n        packet;\n      while (bytes.length - byteIndex >= 3) {\n        var type = probe.aac.parseType(bytes, byteIndex);\n        switch (type) {\n          case 'timed-metadata':\n            // Exit early because we don't have enough to parse\n            // the ID3 tag header\n            if (bytes.length - byteIndex < 10) {\n              endLoop = true;\n              break;\n            }\n            frameSize = probe.aac.parseId3TagSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n            if (timestamp === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              timestamp = probe.aac.parseAacTimestamp(packet);\n            }\n            byteIndex += frameSize;\n            break;\n          case 'audio':\n            // Exit early because we don't have enough to parse\n            // the ADTS frame header\n            if (bytes.length - byteIndex < 7) {\n              endLoop = true;\n              break;\n            }\n            frameSize = probe.aac.parseAdtsSize(bytes, byteIndex); // Exit early if we don't have enough in the buffer\n            // to emit a full packet\n\n            if (frameSize > bytes.length) {\n              endLoop = true;\n              break;\n            }\n            if (sampleRate === null) {\n              packet = bytes.subarray(byteIndex, byteIndex + frameSize);\n              sampleRate = probe.aac.parseSampleRate(packet);\n            }\n            audioCount++;\n            byteIndex += frameSize;\n            break;\n          default:\n            byteIndex++;\n            break;\n        }\n        if (endLoop) {\n          return null;\n        }\n      }\n      if (sampleRate === null || timestamp === null) {\n        return null;\n      }\n      var audioTimescale = ONE_SECOND_IN_TS / sampleRate;\n      var result = {\n        audio: [{\n          type: 'audio',\n          dts: timestamp,\n          pts: timestamp\n        }, {\n          type: 'audio',\n          dts: timestamp + audioCount * 1024 * audioTimescale,\n          pts: timestamp + audioCount * 1024 * audioTimescale\n        }]\n      };\n      return result;\n    };\n    /**\n     * inspects the transport stream segment data for start and end time information\n     * of the audio and video tracks (when present) as well as the first key frame's\n     * start time.\n     */\n\n    var inspectTs_ = function (bytes) {\n      var pmt = {\n        pid: null,\n        table: null\n      };\n      var result = {};\n      parsePsi_(bytes, pmt);\n      for (var pid in pmt.table) {\n        if (pmt.table.hasOwnProperty(pid)) {\n          var type = pmt.table[pid];\n          switch (type) {\n            case StreamTypes.H264_STREAM_TYPE:\n              result.video = [];\n              parseVideoPes_(bytes, pmt, result);\n              if (result.video.length === 0) {\n                delete result.video;\n              }\n              break;\n            case StreamTypes.ADTS_STREAM_TYPE:\n              result.audio = [];\n              parseAudioPes_(bytes, pmt, result);\n              if (result.audio.length === 0) {\n                delete result.audio;\n              }\n              break;\n          }\n        }\n      }\n      return result;\n    };\n    /**\n     * Inspects segment byte data and returns an object with start and end timing information\n     *\n     * @param {Uint8Array} bytes The segment byte data\n     * @param {Number} baseTimestamp Relative reference timestamp used when adjusting frame\n     *  timestamps for rollover. This value must be in 90khz clock.\n     * @return {Object} Object containing start and end frame timing info of segment.\n     */\n\n    var inspect = function (bytes, baseTimestamp) {\n      var isAacData = probe.aac.isLikelyAacData(bytes);\n      var result;\n      if (isAacData) {\n        result = inspectAac_(bytes);\n      } else {\n        result = inspectTs_(bytes);\n      }\n      if (!result || !result.audio && !result.video) {\n        return null;\n      }\n      adjustTimestamp_(result, baseTimestamp);\n      return result;\n    };\n    var tsInspector = {\n      inspect: inspect,\n      parseAudioPes_: parseAudioPes_\n    };\n    /* global self */\n\n    /**\n     * Re-emits transmuxer events by converting them into messages to the\n     * world outside the worker.\n     *\n     * @param {Object} transmuxer the transmuxer to wire events on\n     * @private\n     */\n\n    const wireTransmuxerEvents = function (self, transmuxer) {\n      transmuxer.on('data', function (segment) {\n        // transfer ownership of the underlying ArrayBuffer\n        // instead of doing a copy to save memory\n        // ArrayBuffers are transferable but generic TypedArrays are not\n        // @link https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Using_web_workers#Passing_data_by_transferring_ownership_(transferable_objects)\n        const initArray = segment.initSegment;\n        segment.initSegment = {\n          data: initArray.buffer,\n          byteOffset: initArray.byteOffset,\n          byteLength: initArray.byteLength\n        };\n        const typedArray = segment.data;\n        segment.data = typedArray.buffer;\n        self.postMessage({\n          action: 'data',\n          segment,\n          byteOffset: typedArray.byteOffset,\n          byteLength: typedArray.byteLength\n        }, [segment.data]);\n      });\n      transmuxer.on('done', function (data) {\n        self.postMessage({\n          action: 'done'\n        });\n      });\n      transmuxer.on('gopInfo', function (gopInfo) {\n        self.postMessage({\n          action: 'gopInfo',\n          gopInfo\n        });\n      });\n      transmuxer.on('videoSegmentTimingInfo', function (timingInfo) {\n        const videoSegmentTimingInfo = {\n          start: {\n            decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n        if (timingInfo.prependedContentDuration) {\n          videoSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n        self.postMessage({\n          action: 'videoSegmentTimingInfo',\n          videoSegmentTimingInfo\n        });\n      });\n      transmuxer.on('audioSegmentTimingInfo', function (timingInfo) {\n        // Note that all times for [audio/video]SegmentTimingInfo events are in video clock\n        const audioSegmentTimingInfo = {\n          start: {\n            decode: clock$2.videoTsToSeconds(timingInfo.start.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.start.pts)\n          },\n          end: {\n            decode: clock$2.videoTsToSeconds(timingInfo.end.dts),\n            presentation: clock$2.videoTsToSeconds(timingInfo.end.pts)\n          },\n          baseMediaDecodeTime: clock$2.videoTsToSeconds(timingInfo.baseMediaDecodeTime)\n        };\n        if (timingInfo.prependedContentDuration) {\n          audioSegmentTimingInfo.prependedContentDuration = clock$2.videoTsToSeconds(timingInfo.prependedContentDuration);\n        }\n        self.postMessage({\n          action: 'audioSegmentTimingInfo',\n          audioSegmentTimingInfo\n        });\n      });\n      transmuxer.on('id3Frame', function (id3Frame) {\n        self.postMessage({\n          action: 'id3Frame',\n          id3Frame\n        });\n      });\n      transmuxer.on('caption', function (caption) {\n        self.postMessage({\n          action: 'caption',\n          caption\n        });\n      });\n      transmuxer.on('trackinfo', function (trackInfo) {\n        self.postMessage({\n          action: 'trackinfo',\n          trackInfo\n        });\n      });\n      transmuxer.on('audioTimingInfo', function (audioTimingInfo) {\n        // convert to video TS since we prioritize video time over audio\n        self.postMessage({\n          action: 'audioTimingInfo',\n          audioTimingInfo: {\n            start: clock$2.videoTsToSeconds(audioTimingInfo.start),\n            end: clock$2.videoTsToSeconds(audioTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('videoTimingInfo', function (videoTimingInfo) {\n        self.postMessage({\n          action: 'videoTimingInfo',\n          videoTimingInfo: {\n            start: clock$2.videoTsToSeconds(videoTimingInfo.start),\n            end: clock$2.videoTsToSeconds(videoTimingInfo.end)\n          }\n        });\n      });\n      transmuxer.on('log', function (log) {\n        self.postMessage({\n          action: 'log',\n          log\n        });\n      });\n    };\n    /**\n     * All incoming messages route through this hash. If no function exists\n     * to handle an incoming message, then we ignore the message.\n     *\n     * @class MessageHandlers\n     * @param {Object} options the options to initialize with\n     */\n\n    class MessageHandlers {\n      constructor(self, options) {\n        this.options = options || {};\n        this.self = self;\n        this.init();\n      }\n      /**\n       * initialize our web worker and wire all the events.\n       */\n\n      init() {\n        if (this.transmuxer) {\n          this.transmuxer.dispose();\n        }\n        this.transmuxer = new transmuxer.Transmuxer(this.options);\n        wireTransmuxerEvents(this.self, this.transmuxer);\n      }\n      pushMp4Captions(data) {\n        if (!this.captionParser) {\n          this.captionParser = new captionParser();\n          this.captionParser.init();\n        }\n        const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        const parsed = this.captionParser.parse(segment, data.trackIds, data.timescales);\n        this.self.postMessage({\n          action: 'mp4Captions',\n          captions: parsed && parsed.captions || [],\n          logs: parsed && parsed.logs || [],\n          data: segment.buffer\n        }, [segment.buffer]);\n      }\n      probeMp4StartTime({\n        timescales,\n        data\n      }) {\n        const startTime = probe$2.startTime(timescales, data);\n        this.self.postMessage({\n          action: 'probeMp4StartTime',\n          startTime,\n          data\n        }, [data.buffer]);\n      }\n      probeMp4Tracks({\n        data\n      }) {\n        const tracks = probe$2.tracks(data);\n        this.self.postMessage({\n          action: 'probeMp4Tracks',\n          tracks,\n          data\n        }, [data.buffer]);\n      }\n      /**\n       * Probe an mpeg2-ts segment to determine the start time of the segment in it's\n       * internal \"media time,\" as well as whether it contains video and/or audio.\n       *\n       * @private\n       * @param {Uint8Array} bytes - segment bytes\n       * @param {number} baseStartTime\n       *        Relative reference timestamp used when adjusting frame timestamps for rollover.\n       *        This value should be in seconds, as it's converted to a 90khz clock within the\n       *        function body.\n       * @return {Object} The start time of the current segment in \"media time\" as well as\n       *                  whether it contains video and/or audio\n       */\n\n      probeTs({\n        data,\n        baseStartTime\n      }) {\n        const tsStartTime = typeof baseStartTime === 'number' && !isNaN(baseStartTime) ? baseStartTime * clock$2.ONE_SECOND_IN_TS : void 0;\n        const timeInfo = tsInspector.inspect(data, tsStartTime);\n        let result = null;\n        if (timeInfo) {\n          result = {\n            // each type's time info comes back as an array of 2 times, start and end\n            hasVideo: timeInfo.video && timeInfo.video.length === 2 || false,\n            hasAudio: timeInfo.audio && timeInfo.audio.length === 2 || false\n          };\n          if (result.hasVideo) {\n            result.videoStart = timeInfo.video[0].ptsTime;\n          }\n          if (result.hasAudio) {\n            result.audioStart = timeInfo.audio[0].ptsTime;\n          }\n        }\n        this.self.postMessage({\n          action: 'probeTs',\n          result,\n          data\n        }, [data.buffer]);\n      }\n      clearAllMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearAllCaptions();\n        }\n      }\n      clearParsedMp4Captions() {\n        if (this.captionParser) {\n          this.captionParser.clearParsedCaptions();\n        }\n      }\n      /**\n       * Adds data (a ts segment) to the start of the transmuxer pipeline for\n       * processing.\n       *\n       * @param {ArrayBuffer} data data to push into the muxer\n       */\n\n      push(data) {\n        // Cast array buffer to correct type for transmuxer\n        const segment = new Uint8Array(data.data, data.byteOffset, data.byteLength);\n        this.transmuxer.push(segment);\n      }\n      /**\n       * Recreate the transmuxer so that the next segment added via `push`\n       * start with a fresh transmuxer.\n       */\n\n      reset() {\n        this.transmuxer.reset();\n      }\n      /**\n       * Set the value that will be used as the `baseMediaDecodeTime` time for the\n       * next segment pushed in. Subsequent segments will have their `baseMediaDecodeTime`\n       * set relative to the first based on the PTS values.\n       *\n       * @param {Object} data used to set the timestamp offset in the muxer\n       */\n\n      setTimestampOffset(data) {\n        const timestampOffset = data.timestampOffset || 0;\n        this.transmuxer.setBaseMediaDecodeTime(Math.round(clock$2.secondsToVideoTs(timestampOffset)));\n      }\n      setAudioAppendStart(data) {\n        this.transmuxer.setAudioAppendStart(Math.ceil(clock$2.secondsToVideoTs(data.appendStart)));\n      }\n      setRemux(data) {\n        this.transmuxer.setRemux(data.remux);\n      }\n      /**\n       * Forces the pipeline to finish processing the last segment and emit it's\n       * results.\n       *\n       * @param {Object} data event data, not really used\n       */\n\n      flush(data) {\n        this.transmuxer.flush(); // transmuxed done action is fired after both audio/video pipelines are flushed\n\n        self.postMessage({\n          action: 'done',\n          type: 'transmuxed'\n        });\n      }\n      endTimeline() {\n        this.transmuxer.endTimeline(); // transmuxed endedtimeline action is fired after both audio/video pipelines end their\n        // timelines\n\n        self.postMessage({\n          action: 'endedtimeline',\n          type: 'transmuxed'\n        });\n      }\n      alignGopsWith(data) {\n        this.transmuxer.alignGopsWith(data.gopsToAlignWith.slice());\n      }\n    }\n    /**\n     * Our web worker interface so that things can talk to mux.js\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     *\n     * @param {Object} self the scope for the web worker\n     */\n\n    self.onmessage = function (event) {\n      if (event.data.action === 'init' && event.data.options) {\n        this.messageHandlers = new MessageHandlers(self, event.data.options);\n        return;\n      }\n      if (!this.messageHandlers) {\n        this.messageHandlers = new MessageHandlers(self);\n      }\n      if (event.data && event.data.action && event.data.action !== 'init') {\n        if (this.messageHandlers[event.data.action]) {\n          this.messageHandlers[event.data.action](event.data);\n        }\n      }\n    };\n  }));\n  var TransmuxWorker = factory(workerCode$1);\n  /* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/transmuxer-worker.js */\n\n  const handleData_ = (event, transmuxedData, callback) => {\n    const {\n      type,\n      initSegment,\n      captions,\n      captionStreams,\n      metadata,\n      videoFrameDtsTime,\n      videoFramePtsTime\n    } = event.data.segment;\n    transmuxedData.buffer.push({\n      captions,\n      captionStreams,\n      metadata\n    });\n    const boxes = event.data.segment.boxes || {\n      data: event.data.segment.data\n    };\n    const result = {\n      type,\n      // cast ArrayBuffer to TypedArray\n      data: new Uint8Array(boxes.data, boxes.data.byteOffset, boxes.data.byteLength),\n      initSegment: new Uint8Array(initSegment.data, initSegment.byteOffset, initSegment.byteLength)\n    };\n    if (typeof videoFrameDtsTime !== 'undefined') {\n      result.videoFrameDtsTime = videoFrameDtsTime;\n    }\n    if (typeof videoFramePtsTime !== 'undefined') {\n      result.videoFramePtsTime = videoFramePtsTime;\n    }\n    callback(result);\n  };\n  const handleDone_ = ({\n    transmuxedData,\n    callback\n  }) => {\n    // Previously we only returned data on data events,\n    // not on done events. Clear out the buffer to keep that consistent.\n    transmuxedData.buffer = []; // all buffers should have been flushed from the muxer, so start processing anything we\n    // have received\n\n    callback(transmuxedData);\n  };\n  const handleGopInfo_ = (event, transmuxedData) => {\n    transmuxedData.gopInfo = event.data.gopInfo;\n  };\n  const processTransmux = options => {\n    const {\n      transmuxer,\n      bytes,\n      audioAppendStart,\n      gopsToAlignWith,\n      remux,\n      onData,\n      onTrackInfo,\n      onAudioTimingInfo,\n      onVideoTimingInfo,\n      onVideoSegmentTimingInfo,\n      onAudioSegmentTimingInfo,\n      onId3,\n      onCaptions,\n      onDone,\n      onEndedTimeline,\n      onTransmuxerLog,\n      isEndOfTimeline\n    } = options;\n    const transmuxedData = {\n      buffer: []\n    };\n    let waitForEndedTimelineEvent = isEndOfTimeline;\n    const handleMessage = event => {\n      if (transmuxer.currentTransmux !== options) {\n        // disposed\n        return;\n      }\n      if (event.data.action === 'data') {\n        handleData_(event, transmuxedData, onData);\n      }\n      if (event.data.action === 'trackinfo') {\n        onTrackInfo(event.data.trackInfo);\n      }\n      if (event.data.action === 'gopInfo') {\n        handleGopInfo_(event, transmuxedData);\n      }\n      if (event.data.action === 'audioTimingInfo') {\n        onAudioTimingInfo(event.data.audioTimingInfo);\n      }\n      if (event.data.action === 'videoTimingInfo') {\n        onVideoTimingInfo(event.data.videoTimingInfo);\n      }\n      if (event.data.action === 'videoSegmentTimingInfo') {\n        onVideoSegmentTimingInfo(event.data.videoSegmentTimingInfo);\n      }\n      if (event.data.action === 'audioSegmentTimingInfo') {\n        onAudioSegmentTimingInfo(event.data.audioSegmentTimingInfo);\n      }\n      if (event.data.action === 'id3Frame') {\n        onId3([event.data.id3Frame], event.data.id3Frame.dispatchType);\n      }\n      if (event.data.action === 'caption') {\n        onCaptions(event.data.caption);\n      }\n      if (event.data.action === 'endedtimeline') {\n        waitForEndedTimelineEvent = false;\n        onEndedTimeline();\n      }\n      if (event.data.action === 'log') {\n        onTransmuxerLog(event.data.log);\n      } // wait for the transmuxed event since we may have audio and video\n\n      if (event.data.type !== 'transmuxed') {\n        return;\n      } // If the \"endedtimeline\" event has not yet fired, and this segment represents the end\n      // of a timeline, that means there may still be data events before the segment\n      // processing can be considerred complete. In that case, the final event should be\n      // an \"endedtimeline\" event with the type \"transmuxed.\"\n\n      if (waitForEndedTimelineEvent) {\n        return;\n      }\n      transmuxer.onmessage = null;\n      handleDone_({\n        transmuxedData,\n        callback: onDone\n      });\n      /* eslint-disable no-use-before-define */\n\n      dequeue(transmuxer);\n      /* eslint-enable */\n    };\n\n    transmuxer.onmessage = handleMessage;\n    if (audioAppendStart) {\n      transmuxer.postMessage({\n        action: 'setAudioAppendStart',\n        appendStart: audioAppendStart\n      });\n    } // allow empty arrays to be passed to clear out GOPs\n\n    if (Array.isArray(gopsToAlignWith)) {\n      transmuxer.postMessage({\n        action: 'alignGopsWith',\n        gopsToAlignWith\n      });\n    }\n    if (typeof remux !== 'undefined') {\n      transmuxer.postMessage({\n        action: 'setRemux',\n        remux\n      });\n    }\n    if (bytes.byteLength) {\n      const buffer = bytes instanceof ArrayBuffer ? bytes : bytes.buffer;\n      const byteOffset = bytes instanceof ArrayBuffer ? 0 : bytes.byteOffset;\n      transmuxer.postMessage({\n        action: 'push',\n        // Send the typed-array of data as an ArrayBuffer so that\n        // it can be sent as a \"Transferable\" and avoid the costly\n        // memory copy\n        data: buffer,\n        // To recreate the original typed-array, we need information\n        // about what portion of the ArrayBuffer it was a view into\n        byteOffset,\n        byteLength: bytes.byteLength\n      }, [buffer]);\n    }\n    if (isEndOfTimeline) {\n      transmuxer.postMessage({\n        action: 'endTimeline'\n      });\n    } // even if we didn't push any bytes, we have to make sure we flush in case we reached\n    // the end of the segment\n\n    transmuxer.postMessage({\n      action: 'flush'\n    });\n  };\n  const dequeue = transmuxer => {\n    transmuxer.currentTransmux = null;\n    if (transmuxer.transmuxQueue.length) {\n      transmuxer.currentTransmux = transmuxer.transmuxQueue.shift();\n      if (typeof transmuxer.currentTransmux === 'function') {\n        transmuxer.currentTransmux();\n      } else {\n        processTransmux(transmuxer.currentTransmux);\n      }\n    }\n  };\n  const processAction = (transmuxer, action) => {\n    transmuxer.postMessage({\n      action\n    });\n    dequeue(transmuxer);\n  };\n  const enqueueAction = (action, transmuxer) => {\n    if (!transmuxer.currentTransmux) {\n      transmuxer.currentTransmux = action;\n      processAction(transmuxer, action);\n      return;\n    }\n    transmuxer.transmuxQueue.push(processAction.bind(null, transmuxer, action));\n  };\n  const reset = transmuxer => {\n    enqueueAction('reset', transmuxer);\n  };\n  const endTimeline = transmuxer => {\n    enqueueAction('endTimeline', transmuxer);\n  };\n  const transmux = options => {\n    if (!options.transmuxer.currentTransmux) {\n      options.transmuxer.currentTransmux = options;\n      processTransmux(options);\n      return;\n    }\n    options.transmuxer.transmuxQueue.push(options);\n  };\n  const createTransmuxer = options => {\n    const transmuxer = new TransmuxWorker();\n    transmuxer.currentTransmux = null;\n    transmuxer.transmuxQueue = [];\n    const term = transmuxer.terminate;\n    transmuxer.terminate = () => {\n      transmuxer.currentTransmux = null;\n      transmuxer.transmuxQueue.length = 0;\n      return term.call(transmuxer);\n    };\n    transmuxer.postMessage({\n      action: 'init',\n      options\n    });\n    return transmuxer;\n  };\n  var segmentTransmuxer = {\n    reset,\n    endTimeline,\n    transmux,\n    createTransmuxer\n  };\n  const workerCallback = function (options) {\n    const transmuxer = options.transmuxer;\n    const endAction = options.endAction || options.action;\n    const callback = options.callback;\n    const message = _extends$1({}, options, {\n      endAction: null,\n      transmuxer: null,\n      callback: null\n    });\n    const listenForEndEvent = event => {\n      if (event.data.action !== endAction) {\n        return;\n      }\n      transmuxer.removeEventListener('message', listenForEndEvent); // transfer ownership of bytes back to us.\n\n      if (event.data.data) {\n        event.data.data = new Uint8Array(event.data.data, options.byteOffset || 0, options.byteLength || event.data.data.byteLength);\n        if (options.data) {\n          options.data = event.data.data;\n        }\n      }\n      callback(event.data);\n    };\n    transmuxer.addEventListener('message', listenForEndEvent);\n    if (options.data) {\n      const isArrayBuffer = options.data instanceof ArrayBuffer;\n      message.byteOffset = isArrayBuffer ? 0 : options.data.byteOffset;\n      message.byteLength = options.data.byteLength;\n      const transfers = [isArrayBuffer ? options.data : options.data.buffer];\n      transmuxer.postMessage(message, transfers);\n    } else {\n      transmuxer.postMessage(message);\n    }\n  };\n  const REQUEST_ERRORS = {\n    FAILURE: 2,\n    TIMEOUT: -101,\n    ABORTED: -102\n  };\n  /**\n   * Abort all requests\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   */\n\n  const abortAll = activeXhrs => {\n    activeXhrs.forEach(xhr => {\n      xhr.abort();\n    });\n  };\n  /**\n   * Gather important bandwidth stats once a request has completed\n   *\n   * @param {Object} request - the XHR request from which to gather stats\n   */\n\n  const getRequestStats = request => {\n    return {\n      bandwidth: request.bandwidth,\n      bytesReceived: request.bytesReceived || 0,\n      roundTripTime: request.roundTripTime || 0\n    };\n  };\n  /**\n   * If possible gather bandwidth stats as a request is in\n   * progress\n   *\n   * @param {Event} progressEvent - an event object from an XHR's progress event\n   */\n\n  const getProgressStats = progressEvent => {\n    const request = progressEvent.target;\n    const roundTripTime = Date.now() - request.requestTime;\n    const stats = {\n      bandwidth: Infinity,\n      bytesReceived: 0,\n      roundTripTime: roundTripTime || 0\n    };\n    stats.bytesReceived = progressEvent.loaded; // This can result in Infinity if stats.roundTripTime is 0 but that is ok\n    // because we should only use bandwidth stats on progress to determine when\n    // abort a request early due to insufficient bandwidth\n\n    stats.bandwidth = Math.floor(stats.bytesReceived / stats.roundTripTime * 8 * 1000);\n    return stats;\n  };\n  /**\n   * Handle all error conditions in one place and return an object\n   * with all the information\n   *\n   * @param {Error|null} error - if non-null signals an error occured with the XHR\n   * @param {Object} request -  the XHR request that possibly generated the error\n   */\n\n  const handleErrors = (error, request) => {\n    if (request.timedout) {\n      return {\n        status: request.status,\n        message: 'HLS request timed-out at URL: ' + request.uri,\n        code: REQUEST_ERRORS.TIMEOUT,\n        xhr: request\n      };\n    }\n    if (request.aborted) {\n      return {\n        status: request.status,\n        message: 'HLS request aborted at URL: ' + request.uri,\n        code: REQUEST_ERRORS.ABORTED,\n        xhr: request\n      };\n    }\n    if (error) {\n      return {\n        status: request.status,\n        message: 'HLS request errored at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n    if (request.responseType === 'arraybuffer' && request.response.byteLength === 0) {\n      return {\n        status: request.status,\n        message: 'Empty HLS response at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      };\n    }\n    return null;\n  };\n  /**\n   * Handle responses for key data and convert the key data to the correct format\n   * for the decryption step later\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Array} objects - objects to add the key bytes to.\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n  const handleKeyResponse = (segment, objects, finishProcessingFn) => (error, request) => {\n    const response = request.response;\n    const errorObj = handleErrors(error, request);\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n    if (response.byteLength !== 16) {\n      return finishProcessingFn({\n        status: request.status,\n        message: 'Invalid HLS key at URL: ' + request.uri,\n        code: REQUEST_ERRORS.FAILURE,\n        xhr: request\n      }, segment);\n    }\n    const view = new DataView(response);\n    const bytes = new Uint32Array([view.getUint32(0), view.getUint32(4), view.getUint32(8), view.getUint32(12)]);\n    for (let i = 0; i < objects.length; i++) {\n      objects[i].bytes = bytes;\n    }\n    return finishProcessingFn(null, segment);\n  };\n  const parseInitSegment = (segment, callback) => {\n    const type = detectContainerForBytes(segment.map.bytes); // TODO: We should also handle ts init segments here, but we\n    // only know how to parse mp4 init segments at the moment\n\n    if (type !== 'mp4') {\n      const uri = segment.map.resolvedUri || segment.map.uri;\n      return callback({\n        internal: true,\n        message: `Found unsupported ${type || 'unknown'} container for initialization segment at URL: ${uri}`,\n        code: REQUEST_ERRORS.FAILURE\n      });\n    }\n    workerCallback({\n      action: 'probeMp4Tracks',\n      data: segment.map.bytes,\n      transmuxer: segment.transmuxer,\n      callback: ({\n        tracks,\n        data\n      }) => {\n        // transfer bytes back to us\n        segment.map.bytes = data;\n        tracks.forEach(function (track) {\n          segment.map.tracks = segment.map.tracks || {}; // only support one track of each type for now\n\n          if (segment.map.tracks[track.type]) {\n            return;\n          }\n          segment.map.tracks[track.type] = track;\n          if (typeof track.id === 'number' && track.timescale) {\n            segment.map.timescales = segment.map.timescales || {};\n            segment.map.timescales[track.id] = track.timescale;\n          }\n        });\n        return callback(null);\n      }\n    });\n  };\n  /**\n   * Handle init-segment responses\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n  const handleInitSegmentResponse = ({\n    segment,\n    finishProcessingFn\n  }) => (error, request) => {\n    const errorObj = handleErrors(error, request);\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n    const bytes = new Uint8Array(request.response); // init segment is encypted, we will have to wait\n    // until the key request is done to decrypt.\n\n    if (segment.map.key) {\n      segment.map.encryptedBytes = bytes;\n      return finishProcessingFn(null, segment);\n    }\n    segment.map.bytes = bytes;\n    parseInitSegment(segment, function (parseError) {\n      if (parseError) {\n        parseError.xhr = request;\n        parseError.status = request.status;\n        return finishProcessingFn(parseError, segment);\n      }\n      finishProcessingFn(null, segment);\n    });\n  };\n  /**\n   * Response handler for segment-requests being sure to set the correct\n   * property depending on whether the segment is encryped or not\n   * Also records and keeps track of stats that are used for ABR purposes\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} finishProcessingFn - a callback to execute to continue processing\n   *                                        this request\n   */\n\n  const handleSegmentResponse = ({\n    segment,\n    finishProcessingFn,\n    responseType\n  }) => (error, request) => {\n    const errorObj = handleErrors(error, request);\n    if (errorObj) {\n      return finishProcessingFn(errorObj, segment);\n    }\n    const newBytes =\n    // although responseText \"should\" exist, this guard serves to prevent an error being\n    // thrown for two primary cases:\n    // 1. the mime type override stops working, or is not implemented for a specific\n    //    browser\n    // 2. when using mock XHR libraries like sinon that do not allow the override behavior\n    responseType === 'arraybuffer' || !request.responseText ? request.response : stringToArrayBuffer(request.responseText.substring(segment.lastReachedChar || 0));\n    segment.stats = getRequestStats(request);\n    if (segment.key) {\n      segment.encryptedBytes = new Uint8Array(newBytes);\n    } else {\n      segment.bytes = new Uint8Array(newBytes);\n    }\n    return finishProcessingFn(null, segment);\n  };\n  const transmuxAndNotify = ({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }) => {\n    const fmp4Tracks = segment.map && segment.map.tracks || {};\n    const isMuxed = Boolean(fmp4Tracks.audio && fmp4Tracks.video); // Keep references to each function so we can null them out after we're done with them.\n    // One reason for this is that in the case of full segments, we want to trust start\n    // times from the probe, rather than the transmuxer.\n\n    let audioStartFn = timingInfoFn.bind(null, segment, 'audio', 'start');\n    const audioEndFn = timingInfoFn.bind(null, segment, 'audio', 'end');\n    let videoStartFn = timingInfoFn.bind(null, segment, 'video', 'start');\n    const videoEndFn = timingInfoFn.bind(null, segment, 'video', 'end');\n    const finish = () => transmux({\n      bytes,\n      transmuxer: segment.transmuxer,\n      audioAppendStart: segment.audioAppendStart,\n      gopsToAlignWith: segment.gopsToAlignWith,\n      remux: isMuxed,\n      onData: result => {\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        dataFn(segment, result);\n      },\n      onTrackInfo: trackInfo => {\n        if (trackInfoFn) {\n          if (isMuxed) {\n            trackInfo.isMuxed = true;\n          }\n          trackInfoFn(segment, trackInfo);\n        }\n      },\n      onAudioTimingInfo: audioTimingInfo => {\n        // we only want the first start value we encounter\n        if (audioStartFn && typeof audioTimingInfo.start !== 'undefined') {\n          audioStartFn(audioTimingInfo.start);\n          audioStartFn = null;\n        } // we want to continually update the end time\n\n        if (audioEndFn && typeof audioTimingInfo.end !== 'undefined') {\n          audioEndFn(audioTimingInfo.end);\n        }\n      },\n      onVideoTimingInfo: videoTimingInfo => {\n        // we only want the first start value we encounter\n        if (videoStartFn && typeof videoTimingInfo.start !== 'undefined') {\n          videoStartFn(videoTimingInfo.start);\n          videoStartFn = null;\n        } // we want to continually update the end time\n\n        if (videoEndFn && typeof videoTimingInfo.end !== 'undefined') {\n          videoEndFn(videoTimingInfo.end);\n        }\n      },\n      onVideoSegmentTimingInfo: videoSegmentTimingInfo => {\n        videoSegmentTimingInfoFn(videoSegmentTimingInfo);\n      },\n      onAudioSegmentTimingInfo: audioSegmentTimingInfo => {\n        audioSegmentTimingInfoFn(audioSegmentTimingInfo);\n      },\n      onId3: (id3Frames, dispatchType) => {\n        id3Fn(segment, id3Frames, dispatchType);\n      },\n      onCaptions: captions => {\n        captionsFn(segment, [captions]);\n      },\n      isEndOfTimeline,\n      onEndedTimeline: () => {\n        endedTimelineFn();\n      },\n      onTransmuxerLog,\n      onDone: result => {\n        if (!doneFn) {\n          return;\n        }\n        result.type = result.type === 'combined' ? 'video' : result.type;\n        doneFn(null, segment, result);\n      }\n    }); // In the transmuxer, we don't yet have the ability to extract a \"proper\" start time.\n    // Meaning cached frame data may corrupt our notion of where this segment\n    // really starts. To get around this, probe for the info needed.\n\n    workerCallback({\n      action: 'probeTs',\n      transmuxer: segment.transmuxer,\n      data: bytes,\n      baseStartTime: segment.baseStartTime,\n      callback: data => {\n        segment.bytes = bytes = data.data;\n        const probeResult = data.result;\n        if (probeResult) {\n          trackInfoFn(segment, {\n            hasAudio: probeResult.hasAudio,\n            hasVideo: probeResult.hasVideo,\n            isMuxed\n          });\n          trackInfoFn = null;\n          if (probeResult.hasAudio && !isMuxed) {\n            audioStartFn(probeResult.audioStart);\n          }\n          if (probeResult.hasVideo) {\n            videoStartFn(probeResult.videoStart);\n          }\n          audioStartFn = null;\n          videoStartFn = null;\n        }\n        finish();\n      }\n    });\n  };\n  const handleSegmentBytes = ({\n    segment,\n    bytes,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }) => {\n    let bytesAsUint8Array = new Uint8Array(bytes); // TODO:\n    // We should have a handler that fetches the number of bytes required\n    // to check if something is fmp4. This will allow us to save bandwidth\n    // because we can only exclude a playlist and abort requests\n    // by codec after trackinfo triggers.\n\n    if (isLikelyFmp4MediaSegment(bytesAsUint8Array)) {\n      segment.isFmp4 = true;\n      const {\n        tracks\n      } = segment.map;\n      const trackInfo = {\n        isFmp4: true,\n        hasVideo: !!tracks.video,\n        hasAudio: !!tracks.audio\n      }; // if we have a audio track, with a codec that is not set to\n      // encrypted audio\n\n      if (tracks.audio && tracks.audio.codec && tracks.audio.codec !== 'enca') {\n        trackInfo.audioCodec = tracks.audio.codec;\n      } // if we have a video track, with a codec that is not set to\n      // encrypted video\n\n      if (tracks.video && tracks.video.codec && tracks.video.codec !== 'encv') {\n        trackInfo.videoCodec = tracks.video.codec;\n      }\n      if (tracks.video && tracks.audio) {\n        trackInfo.isMuxed = true;\n      } // since we don't support appending fmp4 data on progress, we know we have the full\n      // segment here\n\n      trackInfoFn(segment, trackInfo); // The probe doesn't provide the segment end time, so only callback with the start\n      // time. The end time can be roughly calculated by the receiver using the duration.\n      //\n      // Note that the start time returned by the probe reflects the baseMediaDecodeTime, as\n      // that is the true start of the segment (where the playback engine should begin\n      // decoding).\n\n      const finishLoading = captions => {\n        // if the track still has audio at this point it is only possible\n        // for it to be audio only. See `tracks.video && tracks.audio` if statement\n        // above.\n        // we make sure to use segment.bytes here as that\n        dataFn(segment, {\n          data: bytesAsUint8Array,\n          type: trackInfo.hasAudio && !trackInfo.isMuxed ? 'audio' : 'video'\n        });\n        if (captions && captions.length) {\n          captionsFn(segment, captions);\n        }\n        doneFn(null, segment, {});\n      };\n      workerCallback({\n        action: 'probeMp4StartTime',\n        timescales: segment.map.timescales,\n        data: bytesAsUint8Array,\n        transmuxer: segment.transmuxer,\n        callback: ({\n          data,\n          startTime\n        }) => {\n          // transfer bytes back to us\n          bytes = data.buffer;\n          segment.bytes = bytesAsUint8Array = data;\n          if (trackInfo.hasAudio && !trackInfo.isMuxed) {\n            timingInfoFn(segment, 'audio', 'start', startTime);\n          }\n          if (trackInfo.hasVideo) {\n            timingInfoFn(segment, 'video', 'start', startTime);\n          } // Run through the CaptionParser in case there are captions.\n          // Initialize CaptionParser if it hasn't been yet\n\n          if (!tracks.video || !data.byteLength || !segment.transmuxer) {\n            finishLoading();\n            return;\n          }\n          workerCallback({\n            action: 'pushMp4Captions',\n            endAction: 'mp4Captions',\n            transmuxer: segment.transmuxer,\n            data: bytesAsUint8Array,\n            timescales: segment.map.timescales,\n            trackIds: [tracks.video.id],\n            callback: message => {\n              // transfer bytes back to us\n              bytes = message.data.buffer;\n              segment.bytes = bytesAsUint8Array = message.data;\n              message.logs.forEach(function (log) {\n                onTransmuxerLog(merge(log, {\n                  stream: 'mp4CaptionParser'\n                }));\n              });\n              finishLoading(message.captions);\n            }\n          });\n        }\n      });\n      return;\n    } // VTT or other segments that don't need processing\n\n    if (!segment.transmuxer) {\n      doneFn(null, segment, {});\n      return;\n    }\n    if (typeof segment.container === 'undefined') {\n      segment.container = detectContainerForBytes(bytesAsUint8Array);\n    }\n    if (segment.container !== 'ts' && segment.container !== 'aac') {\n      trackInfoFn(segment, {\n        hasAudio: false,\n        hasVideo: false\n      });\n      doneFn(null, segment, {});\n      return;\n    } // ts or aac\n\n    transmuxAndNotify({\n      segment,\n      bytes,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    });\n  };\n  const decrypt = function ({\n    id,\n    key,\n    encryptedBytes,\n    decryptionWorker\n  }, callback) {\n    const decryptionHandler = event => {\n      if (event.data.source === id) {\n        decryptionWorker.removeEventListener('message', decryptionHandler);\n        const decrypted = event.data.decrypted;\n        callback(new Uint8Array(decrypted.bytes, decrypted.byteOffset, decrypted.byteLength));\n      }\n    };\n    decryptionWorker.addEventListener('message', decryptionHandler);\n    let keyBytes;\n    if (key.bytes.slice) {\n      keyBytes = key.bytes.slice();\n    } else {\n      keyBytes = new Uint32Array(Array.prototype.slice.call(key.bytes));\n    } // incrementally decrypt the bytes\n\n    decryptionWorker.postMessage(createTransferableMessage({\n      source: id,\n      encrypted: encryptedBytes,\n      key: keyBytes,\n      iv: key.iv\n    }), [encryptedBytes.buffer, keyBytes.buffer]);\n  };\n  /**\n   * Decrypt the segment via the decryption web worker\n   *\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after decryption has completed\n   */\n\n  const decryptSegment = ({\n    decryptionWorker,\n    segment,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }) => {\n    decrypt({\n      id: segment.requestId,\n      key: segment.key,\n      encryptedBytes: segment.encryptedBytes,\n      decryptionWorker\n    }, decryptedBytes => {\n      segment.bytes = decryptedBytes;\n      handleSegmentBytes({\n        segment,\n        bytes: segment.bytes,\n        trackInfoFn,\n        timingInfoFn,\n        videoSegmentTimingInfoFn,\n        audioSegmentTimingInfoFn,\n        id3Fn,\n        captionsFn,\n        isEndOfTimeline,\n        endedTimelineFn,\n        dataFn,\n        doneFn,\n        onTransmuxerLog\n      });\n    });\n  };\n  /**\n   * This function waits for all XHRs to finish (with either success or failure)\n   * before continueing processing via it's callback. The function gathers errors\n   * from each request into a single errors array so that the error status for\n   * each request can be examined later.\n   *\n   * @param {Object} activeXhrs - an object that tracks all XHR requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128 decryption\n   *                                       routines\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Function} doneFn - a callback that is executed after all resources have been\n   *                            downloaded and any decryption completed\n   */\n\n  const waitForCompletion = ({\n    activeXhrs,\n    decryptionWorker,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }) => {\n    let count = 0;\n    let didError = false;\n    return (error, segment) => {\n      if (didError) {\n        return;\n      }\n      if (error) {\n        didError = true; // If there are errors, we have to abort any outstanding requests\n\n        abortAll(activeXhrs); // Even though the requests above are aborted, and in theory we could wait until we\n        // handle the aborted events from those requests, there are some cases where we may\n        // never get an aborted event. For instance, if the network connection is lost and\n        // there were two requests, the first may have triggered an error immediately, while\n        // the second request remains unsent. In that case, the aborted algorithm will not\n        // trigger an abort: see https://xhr.spec.whatwg.org/#the-abort()-method\n        //\n        // We also can't rely on the ready state of the XHR, since the request that\n        // triggered the connection error may also show as a ready state of 0 (unsent).\n        // Therefore, we have to finish this group of requests immediately after the first\n        // seen error.\n\n        return doneFn(error, segment);\n      }\n      count += 1;\n      if (count === activeXhrs.length) {\n        const segmentFinish = function () {\n          if (segment.encryptedBytes) {\n            return decryptSegment({\n              decryptionWorker,\n              segment,\n              trackInfoFn,\n              timingInfoFn,\n              videoSegmentTimingInfoFn,\n              audioSegmentTimingInfoFn,\n              id3Fn,\n              captionsFn,\n              isEndOfTimeline,\n              endedTimelineFn,\n              dataFn,\n              doneFn,\n              onTransmuxerLog\n            });\n          } // Otherwise, everything is ready just continue\n\n          handleSegmentBytes({\n            segment,\n            bytes: segment.bytes,\n            trackInfoFn,\n            timingInfoFn,\n            videoSegmentTimingInfoFn,\n            audioSegmentTimingInfoFn,\n            id3Fn,\n            captionsFn,\n            isEndOfTimeline,\n            endedTimelineFn,\n            dataFn,\n            doneFn,\n            onTransmuxerLog\n          });\n        }; // Keep track of when *all* of the requests have completed\n\n        segment.endOfAllRequests = Date.now();\n        if (segment.map && segment.map.encryptedBytes && !segment.map.bytes) {\n          return decrypt({\n            decryptionWorker,\n            // add -init to the \"id\" to differentiate between segment\n            // and init segment decryption, just in case they happen\n            // at the same time at some point in the future.\n            id: segment.requestId + '-init',\n            encryptedBytes: segment.map.encryptedBytes,\n            key: segment.map.key\n          }, decryptedBytes => {\n            segment.map.bytes = decryptedBytes;\n            parseInitSegment(segment, parseError => {\n              if (parseError) {\n                abortAll(activeXhrs);\n                return doneFn(parseError, segment);\n              }\n              segmentFinish();\n            });\n          });\n        }\n        segmentFinish();\n      }\n    };\n  };\n  /**\n   * Calls the abort callback if any request within the batch was aborted. Will only call\n   * the callback once per batch of requests, even if multiple were aborted.\n   *\n   * @param {Object} loadendState - state to check to see if the abort function was called\n   * @param {Function} abortFn - callback to call for abort\n   */\n\n  const handleLoadEnd = ({\n    loadendState,\n    abortFn\n  }) => event => {\n    const request = event.target;\n    if (request.aborted && abortFn && !loadendState.calledAbortFn) {\n      abortFn();\n      loadendState.calledAbortFn = true;\n    }\n  };\n  /**\n   * Simple progress event callback handler that gathers some stats before\n   * executing a provided callback with the `segment` object\n   *\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} progressFn - a callback that is executed each time a progress event\n   *                                is received\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that is executed when segment bytes are available\n   *                            and ready to use\n   * @param {Event} event - the progress event object from XMLHttpRequest\n   */\n\n  const handleProgress = ({\n    segment,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn\n  }) => event => {\n    const request = event.target;\n    if (request.aborted) {\n      return;\n    }\n    segment.stats = merge(segment.stats, getProgressStats(event)); // record the time that we receive the first byte of data\n\n    if (!segment.stats.firstBytesReceivedAt && segment.stats.bytesReceived) {\n      segment.stats.firstBytesReceivedAt = Date.now();\n    }\n    return progressFn(event, segment);\n  };\n  /**\n   * Load all resources and does any processing necessary for a media-segment\n   *\n   * Features:\n   *   decrypts the media-segment if it has a key uri and an iv\n   *   aborts *all* requests if *any* one request fails\n   *\n   * The segment object, at minimum, has the following format:\n   * {\n   *   resolvedUri: String,\n   *   [transmuxer]: Object,\n   *   [byterange]: {\n   *     offset: Number,\n   *     length: Number\n   *   },\n   *   [key]: {\n   *     resolvedUri: String\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     iv: {\n   *       bytes: Uint32Array\n   *     }\n   *   },\n   *   [map]: {\n   *     resolvedUri: String,\n   *     [byterange]: {\n   *       offset: Number,\n   *       length: Number\n   *     },\n   *     [bytes]: Uint8Array\n   *   }\n   * }\n   * ...where [name] denotes optional properties\n   *\n   * @param {Function} xhr - an instance of the xhr wrapper in xhr.js\n   * @param {Object} xhrOptions - the base options to provide to all xhr requests\n   * @param {WebWorker} decryptionWorker - a WebWorker interface to AES-128\n   *                                       decryption routines\n   * @param {Object} segment - a simplified copy of the segmentInfo object\n   *                           from SegmentLoader\n   * @param {Function} abortFn - a callback called (only once) if any piece of a request was\n   *                             aborted\n   * @param {Function} progressFn - a callback that receives progress events from the main\n   *                                segment's xhr request\n   * @param {Function} trackInfoFn - a callback that receives track info\n   * @param {Function} timingInfoFn - a callback that receives timing info\n   * @param {Function} videoSegmentTimingInfoFn\n   *                   a callback that receives video timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} audioSegmentTimingInfoFn\n   *                   a callback that receives audio timing info based on media times and\n   *                   any adjustments made by the transmuxer\n   * @param {Function} id3Fn - a callback that receives ID3 metadata\n   * @param {Function} captionsFn - a callback that receives captions\n   * @param {boolean}  isEndOfTimeline\n   *                   true if this segment represents the last segment in a timeline\n   * @param {Function} endedTimelineFn\n   *                   a callback made when a timeline is ended, will only be called if\n   *                   isEndOfTimeline is true\n   * @param {Function} dataFn - a callback that receives data from the main segment's xhr\n   *                            request, transmuxed if needed\n   * @param {Function} doneFn - a callback that is executed only once all requests have\n   *                            succeeded or failed\n   * @return {Function} a function that, when invoked, immediately aborts all\n   *                     outstanding requests\n   */\n\n  const mediaSegmentRequest = ({\n    xhr,\n    xhrOptions,\n    decryptionWorker,\n    segment,\n    abortFn,\n    progressFn,\n    trackInfoFn,\n    timingInfoFn,\n    videoSegmentTimingInfoFn,\n    audioSegmentTimingInfoFn,\n    id3Fn,\n    captionsFn,\n    isEndOfTimeline,\n    endedTimelineFn,\n    dataFn,\n    doneFn,\n    onTransmuxerLog\n  }) => {\n    const activeXhrs = [];\n    const finishProcessingFn = waitForCompletion({\n      activeXhrs,\n      decryptionWorker,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn,\n      doneFn,\n      onTransmuxerLog\n    }); // optionally, request the decryption key\n\n    if (segment.key && !segment.key.bytes) {\n      const objects = [segment.key];\n      if (segment.map && !segment.map.bytes && segment.map.key && segment.map.key.resolvedUri === segment.key.resolvedUri) {\n        objects.push(segment.map.key);\n      }\n      const keyRequestOptions = merge(xhrOptions, {\n        uri: segment.key.resolvedUri,\n        responseType: 'arraybuffer'\n      });\n      const keyRequestCallback = handleKeyResponse(segment, objects, finishProcessingFn);\n      const keyXhr = xhr(keyRequestOptions, keyRequestCallback);\n      activeXhrs.push(keyXhr);\n    } // optionally, request the associated media init segment\n\n    if (segment.map && !segment.map.bytes) {\n      const differentMapKey = segment.map.key && (!segment.key || segment.key.resolvedUri !== segment.map.key.resolvedUri);\n      if (differentMapKey) {\n        const mapKeyRequestOptions = merge(xhrOptions, {\n          uri: segment.map.key.resolvedUri,\n          responseType: 'arraybuffer'\n        });\n        const mapKeyRequestCallback = handleKeyResponse(segment, [segment.map.key], finishProcessingFn);\n        const mapKeyXhr = xhr(mapKeyRequestOptions, mapKeyRequestCallback);\n        activeXhrs.push(mapKeyXhr);\n      }\n      const initSegmentOptions = merge(xhrOptions, {\n        uri: segment.map.resolvedUri,\n        responseType: 'arraybuffer',\n        headers: segmentXhrHeaders(segment.map)\n      });\n      const initSegmentRequestCallback = handleInitSegmentResponse({\n        segment,\n        finishProcessingFn\n      });\n      const initSegmentXhr = xhr(initSegmentOptions, initSegmentRequestCallback);\n      activeXhrs.push(initSegmentXhr);\n    }\n    const segmentRequestOptions = merge(xhrOptions, {\n      uri: segment.part && segment.part.resolvedUri || segment.resolvedUri,\n      responseType: 'arraybuffer',\n      headers: segmentXhrHeaders(segment)\n    });\n    const segmentRequestCallback = handleSegmentResponse({\n      segment,\n      finishProcessingFn,\n      responseType: segmentRequestOptions.responseType\n    });\n    const segmentXhr = xhr(segmentRequestOptions, segmentRequestCallback);\n    segmentXhr.addEventListener('progress', handleProgress({\n      segment,\n      progressFn,\n      trackInfoFn,\n      timingInfoFn,\n      videoSegmentTimingInfoFn,\n      audioSegmentTimingInfoFn,\n      id3Fn,\n      captionsFn,\n      isEndOfTimeline,\n      endedTimelineFn,\n      dataFn\n    }));\n    activeXhrs.push(segmentXhr); // since all parts of the request must be considered, but should not make callbacks\n    // multiple times, provide a shared state object\n\n    const loadendState = {};\n    activeXhrs.forEach(activeXhr => {\n      activeXhr.addEventListener('loadend', handleLoadEnd({\n        loadendState,\n        abortFn\n      }));\n    });\n    return () => abortAll(activeXhrs);\n  };\n\n  /**\n   * @file - codecs.js - Handles tasks regarding codec strings such as translating them to\n   * codec strings, or translating codec strings into objects that can be examined.\n   */\n  const logFn$1 = logger('CodecUtils');\n  /**\n   * Returns a set of codec strings parsed from the playlist or the default\n   * codec strings if no codecs were specified in the playlist\n   *\n   * @param {Playlist} media the current media playlist\n   * @return {Object} an object with the video and audio codecs\n   */\n\n  const getCodecs = function (media) {\n    // if the codecs were explicitly specified, use them instead of the\n    // defaults\n    const mediaAttributes = media.attributes || {};\n    if (mediaAttributes.CODECS) {\n      return parseCodecs(mediaAttributes.CODECS);\n    }\n  };\n  const isMaat = (main, media) => {\n    const mediaAttributes = media.attributes || {};\n    return main && main.mediaGroups && main.mediaGroups.AUDIO && mediaAttributes.AUDIO && main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n  };\n  const isMuxed = (main, media) => {\n    if (!isMaat(main, media)) {\n      return true;\n    }\n    const mediaAttributes = media.attributes || {};\n    const audioGroup = main.mediaGroups.AUDIO[mediaAttributes.AUDIO];\n    for (const groupId in audioGroup) {\n      // If an audio group has a URI (the case for HLS, as HLS will use external playlists),\n      // or there are listed playlists (the case for DASH, as the manifest will have already\n      // provided all of the details necessary to generate the audio playlist, as opposed to\n      // HLS' externally requested playlists), then the content is demuxed.\n      if (!audioGroup[groupId].uri && !audioGroup[groupId].playlists) {\n        return true;\n      }\n    }\n    return false;\n  };\n  const unwrapCodecList = function (codecList) {\n    const codecs = {};\n    codecList.forEach(({\n      mediaType,\n      type,\n      details\n    }) => {\n      codecs[mediaType] = codecs[mediaType] || [];\n      codecs[mediaType].push(translateLegacyCodec(`${type}${details}`));\n    });\n    Object.keys(codecs).forEach(function (mediaType) {\n      if (codecs[mediaType].length > 1) {\n        logFn$1(`multiple ${mediaType} codecs found as attributes: ${codecs[mediaType].join(', ')}. Setting playlist codecs to null so that we wait for mux.js to probe segments for real codecs.`);\n        codecs[mediaType] = null;\n        return;\n      }\n      codecs[mediaType] = codecs[mediaType][0];\n    });\n    return codecs;\n  };\n  const codecCount = function (codecObj) {\n    let count = 0;\n    if (codecObj.audio) {\n      count++;\n    }\n    if (codecObj.video) {\n      count++;\n    }\n    return count;\n  };\n  /**\n   * Calculates the codec strings for a working configuration of\n   * SourceBuffers to play variant streams in a main playlist. If\n   * there is no possible working configuration, an empty object will be\n   * returned.\n   *\n   * @param main {Object} the m3u8 object for the main playlist\n   * @param media {Object} the m3u8 object for the variant playlist\n   * @return {Object} the codec strings.\n   *\n   * @private\n   */\n\n  const codecsForPlaylist = function (main, media) {\n    const mediaAttributes = media.attributes || {};\n    const codecInfo = unwrapCodecList(getCodecs(media) || []); // HLS with multiple-audio tracks must always get an audio codec.\n    // Put another way, there is no way to have a video-only multiple-audio HLS!\n\n    if (isMaat(main, media) && !codecInfo.audio) {\n      if (!isMuxed(main, media)) {\n        // It is possible for codecs to be specified on the audio media group playlist but\n        // not on the rendition playlist. This is mostly the case for DASH, where audio and\n        // video are always separate (and separately specified).\n        const defaultCodecs = unwrapCodecList(codecsFromDefault(main, mediaAttributes.AUDIO) || []);\n        if (defaultCodecs.audio) {\n          codecInfo.audio = defaultCodecs.audio;\n        }\n      }\n    }\n    return codecInfo;\n  };\n  const logFn = logger('PlaylistSelector');\n  const representationToString = function (representation) {\n    if (!representation || !representation.playlist) {\n      return;\n    }\n    const playlist = representation.playlist;\n    return JSON.stringify({\n      id: playlist.id,\n      bandwidth: representation.bandwidth,\n      width: representation.width,\n      height: representation.height,\n      codecs: playlist.attributes && playlist.attributes.CODECS || ''\n    });\n  }; // Utilities\n\n  /**\n   * Returns the CSS value for the specified property on an element\n   * using `getComputedStyle`. Firefox has a long-standing issue where\n   * getComputedStyle() may return null when running in an iframe with\n   * `display: none`.\n   *\n   * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n   * @param {HTMLElement} el the htmlelement to work on\n   * @param {string} the proprety to get the style for\n   */\n\n  const safeGetComputedStyle = function (el, property) {\n    if (!el) {\n      return '';\n    }\n    const result = window.getComputedStyle(el);\n    if (!result) {\n      return '';\n    }\n    return result[property];\n  };\n  /**\n   * Resuable stable sort function\n   *\n   * @param {Playlists} array\n   * @param {Function} sortFn Different comparators\n   * @function stableSort\n   */\n\n  const stableSort = function (array, sortFn) {\n    const newArray = array.slice();\n    array.sort(function (left, right) {\n      const cmp = sortFn(left, right);\n      if (cmp === 0) {\n        return newArray.indexOf(left) - newArray.indexOf(right);\n      }\n      return cmp;\n    });\n  };\n  /**\n   * A comparator function to sort two playlist object by bandwidth.\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the bandwidth attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the bandwidth of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n  const comparePlaylistBandwidth = function (left, right) {\n    let leftBandwidth;\n    let rightBandwidth;\n    if (left.attributes.BANDWIDTH) {\n      leftBandwidth = left.attributes.BANDWIDTH;\n    }\n    leftBandwidth = leftBandwidth || window.Number.MAX_VALUE;\n    if (right.attributes.BANDWIDTH) {\n      rightBandwidth = right.attributes.BANDWIDTH;\n    }\n    rightBandwidth = rightBandwidth || window.Number.MAX_VALUE;\n    return leftBandwidth - rightBandwidth;\n  };\n  /**\n   * A comparator function to sort two playlist object by resolution (width).\n   *\n   * @param {Object} left a media playlist object\n   * @param {Object} right a media playlist object\n   * @return {number} Greater than zero if the resolution.width attribute of\n   * left is greater than the corresponding attribute of right. Less\n   * than zero if the resolution.width of right is greater than left and\n   * exactly zero if the two are equal.\n   */\n\n  const comparePlaylistResolution = function (left, right) {\n    let leftWidth;\n    let rightWidth;\n    if (left.attributes.RESOLUTION && left.attributes.RESOLUTION.width) {\n      leftWidth = left.attributes.RESOLUTION.width;\n    }\n    leftWidth = leftWidth || window.Number.MAX_VALUE;\n    if (right.attributes.RESOLUTION && right.attributes.RESOLUTION.width) {\n      rightWidth = right.attributes.RESOLUTION.width;\n    }\n    rightWidth = rightWidth || window.Number.MAX_VALUE; // NOTE - Fallback to bandwidth sort as appropriate in cases where multiple renditions\n    // have the same media dimensions/ resolution\n\n    if (leftWidth === rightWidth && left.attributes.BANDWIDTH && right.attributes.BANDWIDTH) {\n      return left.attributes.BANDWIDTH - right.attributes.BANDWIDTH;\n    }\n    return leftWidth - rightWidth;\n  };\n  /**\n   * Chooses the appropriate media playlist based on bandwidth and player size\n   *\n   * @param {Object} main\n   *        Object representation of the main manifest\n   * @param {number} playerBandwidth\n   *        Current calculated bandwidth of the player\n   * @param {number} playerWidth\n   *        Current width of the player element (should account for the device pixel ratio)\n   * @param {number} playerHeight\n   *        Current height of the player element (should account for the device pixel ratio)\n   * @param {boolean} limitRenditionByPlayerDimensions\n   *        True if the player width and height should be used during the selection, false otherwise\n   * @param {Object} playlistController\n   *        the current playlistController object\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n  let simpleSelector = function (main, playerBandwidth, playerWidth, playerHeight, limitRenditionByPlayerDimensions, playlistController) {\n    // If we end up getting called before `main` is available, exit early\n    if (!main) {\n      return;\n    }\n    const options = {\n      bandwidth: playerBandwidth,\n      width: playerWidth,\n      height: playerHeight,\n      limitRenditionByPlayerDimensions\n    };\n    let playlists = main.playlists; // if playlist is audio only, select between currently active audio group playlists.\n\n    if (Playlist.isAudioOnly(main)) {\n      playlists = playlistController.getAudioTrackPlaylists_(); // add audioOnly to options so that we log audioOnly: true\n      // at the buttom of this function for debugging.\n\n      options.audioOnly = true;\n    } // convert the playlists to an intermediary representation to make comparisons easier\n\n    let sortedPlaylistReps = playlists.map(playlist => {\n      let bandwidth;\n      const width = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.width;\n      const height = playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height;\n      bandwidth = playlist.attributes && playlist.attributes.BANDWIDTH;\n      bandwidth = bandwidth || window.Number.MAX_VALUE;\n      return {\n        bandwidth,\n        width,\n        height,\n        playlist\n      };\n    });\n    stableSort(sortedPlaylistReps, (left, right) => left.bandwidth - right.bandwidth); // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    sortedPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isIncompatible(rep.playlist)); // filter out any playlists that have been disabled manually through the representations\n    // api or excluded temporarily due to playback errors.\n\n    let enabledPlaylistReps = sortedPlaylistReps.filter(rep => Playlist.isEnabled(rep.playlist));\n    if (!enabledPlaylistReps.length) {\n      // if there are no enabled playlists, then they have all been excluded or disabled\n      // by the user through the representations api. In this case, ignore exclusion and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylistReps = sortedPlaylistReps.filter(rep => !Playlist.isDisabled(rep.playlist));\n    } // filter out any variant that has greater effective bitrate\n    // than the current estimated bandwidth\n\n    const bandwidthPlaylistReps = enabledPlaylistReps.filter(rep => rep.bandwidth * Config.BANDWIDTH_VARIANCE < playerBandwidth);\n    let highestRemainingBandwidthRep = bandwidthPlaylistReps[bandwidthPlaylistReps.length - 1]; // get all of the renditions with the same (highest) bandwidth\n    // and then taking the very first element\n\n    const bandwidthBestRep = bandwidthPlaylistReps.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0]; // if we're not going to limit renditions by player size, make an early decision.\n\n    if (limitRenditionByPlayerDimensions === false) {\n      const chosenRep = bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n      if (chosenRep && chosenRep.playlist) {\n        let type = 'sortedPlaylistReps';\n        if (bandwidthBestRep) {\n          type = 'bandwidthBestRep';\n        }\n        if (enabledPlaylistReps[0]) {\n          type = 'enabledPlaylistReps';\n        }\n        logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n        return chosenRep.playlist;\n      }\n      logFn('could not choose a playlist with options', options);\n      return null;\n    } // filter out playlists without resolution information\n\n    const haveResolution = bandwidthPlaylistReps.filter(rep => rep.width && rep.height); // sort variants by resolution\n\n    stableSort(haveResolution, (left, right) => left.width - right.width); // if we have the exact resolution as the player use it\n\n    const resolutionBestRepList = haveResolution.filter(rep => rep.width === playerWidth && rep.height === playerHeight);\n    highestRemainingBandwidthRep = resolutionBestRepList[resolutionBestRepList.length - 1]; // ensure that we pick the highest bandwidth variant that have exact resolution\n\n    const resolutionBestRep = resolutionBestRepList.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n    let resolutionPlusOneList;\n    let resolutionPlusOneSmallest;\n    let resolutionPlusOneRep; // find the smallest variant that is larger than the player\n    // if there is no match of exact resolution\n\n    if (!resolutionBestRep) {\n      resolutionPlusOneList = haveResolution.filter(rep => rep.width > playerWidth || rep.height > playerHeight); // find all the variants have the same smallest resolution\n\n      resolutionPlusOneSmallest = resolutionPlusOneList.filter(rep => rep.width === resolutionPlusOneList[0].width && rep.height === resolutionPlusOneList[0].height); // ensure that we also pick the highest bandwidth variant that\n      // is just-larger-than the video player\n\n      highestRemainingBandwidthRep = resolutionPlusOneSmallest[resolutionPlusOneSmallest.length - 1];\n      resolutionPlusOneRep = resolutionPlusOneSmallest.filter(rep => rep.bandwidth === highestRemainingBandwidthRep.bandwidth)[0];\n    }\n    let leastPixelDiffRep; // If this selector proves to be better than others,\n    // resolutionPlusOneRep and resolutionBestRep and all\n    // the code involving them should be removed.\n\n    if (playlistController.leastPixelDiffSelector) {\n      // find the variant that is closest to the player's pixel size\n      const leastPixelDiffList = haveResolution.map(rep => {\n        rep.pixelDiff = Math.abs(rep.width - playerWidth) + Math.abs(rep.height - playerHeight);\n        return rep;\n      }); // get the highest bandwidth, closest resolution playlist\n\n      stableSort(leastPixelDiffList, (left, right) => {\n        // sort by highest bandwidth if pixelDiff is the same\n        if (left.pixelDiff === right.pixelDiff) {\n          return right.bandwidth - left.bandwidth;\n        }\n        return left.pixelDiff - right.pixelDiff;\n      });\n      leastPixelDiffRep = leastPixelDiffList[0];\n    } // fallback chain of variants\n\n    const chosenRep = leastPixelDiffRep || resolutionPlusOneRep || resolutionBestRep || bandwidthBestRep || enabledPlaylistReps[0] || sortedPlaylistReps[0];\n    if (chosenRep && chosenRep.playlist) {\n      let type = 'sortedPlaylistReps';\n      if (leastPixelDiffRep) {\n        type = 'leastPixelDiffRep';\n      } else if (resolutionPlusOneRep) {\n        type = 'resolutionPlusOneRep';\n      } else if (resolutionBestRep) {\n        type = 'resolutionBestRep';\n      } else if (bandwidthBestRep) {\n        type = 'bandwidthBestRep';\n      } else if (enabledPlaylistReps[0]) {\n        type = 'enabledPlaylistReps';\n      }\n      logFn(`choosing ${representationToString(chosenRep)} using ${type} with options`, options);\n      return chosenRep.playlist;\n    }\n    logFn('could not choose a playlist with options', options);\n    return null;\n  };\n\n  /**\n   * Chooses the appropriate media playlist based on the most recent\n   * bandwidth estimate and the player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Playlist} the highest bitrate playlist less than the\n   * currently detected bandwidth, accounting for some amount of\n   * bandwidth variance\n   */\n\n  const lastBandwidthSelector = function () {\n    const pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n    return simpleSelector(this.playlists.main, this.systemBandwidth, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n  };\n  /**\n   * Chooses the appropriate media playlist based on an\n   * exponential-weighted moving average of the bandwidth after\n   * filtering for player size.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @param {number} decay - a number between 0 and 1. Higher values of\n   * this parameter will cause previous bandwidth estimates to lose\n   * significance more quickly.\n   * @return {Function} a function which can be invoked to create a new\n   * playlist selector function.\n   * @see https://en.wikipedia.org/wiki/Moving_average#Exponential_moving_average\n   */\n\n  const movingAverageBandwidthSelector = function (decay) {\n    let average = -1;\n    let lastSystemBandwidth = -1;\n    if (decay < 0 || decay > 1) {\n      throw new Error('Moving average bandwidth decay must be between 0 and 1.');\n    }\n    return function () {\n      const pixelRatio = this.useDevicePixelRatio ? window.devicePixelRatio || 1 : 1;\n      if (average < 0) {\n        average = this.systemBandwidth;\n        lastSystemBandwidth = this.systemBandwidth;\n      } // stop the average value from decaying for every 250ms\n      // when the systemBandwidth is constant\n      // and\n      // stop average from setting to a very low value when the\n      // systemBandwidth becomes 0 in case of chunk cancellation\n\n      if (this.systemBandwidth > 0 && this.systemBandwidth !== lastSystemBandwidth) {\n        average = decay * this.systemBandwidth + (1 - decay) * average;\n        lastSystemBandwidth = this.systemBandwidth;\n      }\n      return simpleSelector(this.playlists.main, average, parseInt(safeGetComputedStyle(this.tech_.el(), 'width'), 10) * pixelRatio, parseInt(safeGetComputedStyle(this.tech_.el(), 'height'), 10) * pixelRatio, this.limitRenditionByPlayerDimensions, this.playlistController_);\n    };\n  };\n  /**\n   * Chooses the appropriate media playlist based on the potential to rebuffer\n   *\n   * @param {Object} settings\n   *        Object of information required to use this selector\n   * @param {Object} settings.main\n   *        Object representation of the main manifest\n   * @param {number} settings.currentTime\n   *        The current time of the player\n   * @param {number} settings.bandwidth\n   *        Current measured bandwidth\n   * @param {number} settings.duration\n   *        Duration of the media\n   * @param {number} settings.segmentDuration\n   *        Segment duration to be used in round trip time calculations\n   * @param {number} settings.timeUntilRebuffer\n   *        Time left in seconds until the player has to rebuffer\n   * @param {number} settings.currentTimeline\n   *        The current timeline segments are being loaded from\n   * @param {SyncController} settings.syncController\n   *        SyncController for determining if we have a sync point for a given playlist\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The highest bandwidth playlist with the least amount of rebuffering\n   *         {Number} return.rebufferingImpact\n   *         The amount of time in seconds switching to this playlist will rebuffer. A\n   *         negative value means that switching will cause zero rebuffering.\n   */\n\n  const minRebufferMaxBandwidthSelector = function (settings) {\n    const {\n      main,\n      currentTime,\n      bandwidth,\n      duration,\n      segmentDuration,\n      timeUntilRebuffer,\n      currentTimeline,\n      syncController\n    } = settings; // filter out any playlists that have been excluded due to\n    // incompatible configurations\n\n    const compatiblePlaylists = main.playlists.filter(playlist => !Playlist.isIncompatible(playlist)); // filter out any playlists that have been disabled manually through the representations\n    // api or excluded temporarily due to playback errors.\n\n    let enabledPlaylists = compatiblePlaylists.filter(Playlist.isEnabled);\n    if (!enabledPlaylists.length) {\n      // if there are no enabled playlists, then they have all been excluded or disabled\n      // by the user through the representations api. In this case, ignore exclusion and\n      // fallback to what the user wants by using playlists the user has not disabled.\n      enabledPlaylists = compatiblePlaylists.filter(playlist => !Playlist.isDisabled(playlist));\n    }\n    const bandwidthPlaylists = enabledPlaylists.filter(Playlist.hasAttribute.bind(null, 'BANDWIDTH'));\n    const rebufferingEstimates = bandwidthPlaylists.map(playlist => {\n      const syncPoint = syncController.getSyncPoint(playlist, duration, currentTimeline, currentTime); // If there is no sync point for this playlist, switching to it will require a\n      // sync request first. This will double the request time\n\n      const numRequests = syncPoint ? 1 : 2;\n      const requestTimeEstimate = Playlist.estimateSegmentRequestTime(segmentDuration, bandwidth, playlist);\n      const rebufferingImpact = requestTimeEstimate * numRequests - timeUntilRebuffer;\n      return {\n        playlist,\n        rebufferingImpact\n      };\n    });\n    const noRebufferingPlaylists = rebufferingEstimates.filter(estimate => estimate.rebufferingImpact <= 0); // Sort by bandwidth DESC\n\n    stableSort(noRebufferingPlaylists, (a, b) => comparePlaylistBandwidth(b.playlist, a.playlist));\n    if (noRebufferingPlaylists.length) {\n      return noRebufferingPlaylists[0];\n    }\n    stableSort(rebufferingEstimates, (a, b) => a.rebufferingImpact - b.rebufferingImpact);\n    return rebufferingEstimates[0] || null;\n  };\n  /**\n   * Chooses the appropriate media playlist, which in this case is the lowest bitrate\n   * one with video.  If no renditions with video exist, return the lowest audio rendition.\n   *\n   * Expects to be called within the context of an instance of VhsHandler\n   *\n   * @return {Object|null}\n   *         {Object} return.playlist\n   *         The lowest bitrate playlist that contains a video codec.  If no such rendition\n   *         exists pick the lowest audio rendition.\n   */\n\n  const lowestBitrateCompatibleVariantSelector = function () {\n    // filter out any playlists that have been excluded due to\n    // incompatible configurations or playback errors\n    const playlists = this.playlists.main.playlists.filter(Playlist.isEnabled); // Sort ascending by bitrate\n\n    stableSort(playlists, (a, b) => comparePlaylistBandwidth(a, b)); // Parse and assume that playlists with no video codec have no video\n    // (this is not necessarily true, although it is generally true).\n    //\n    // If an entire manifest has no valid videos everything will get filtered\n    // out.\n\n    const playlistsWithVideo = playlists.filter(playlist => !!codecsForPlaylist(this.playlists.main, playlist).video);\n    return playlistsWithVideo[0] || null;\n  };\n\n  /**\n   * Combine all segments into a single Uint8Array\n   *\n   * @param {Object} segmentObj\n   * @return {Uint8Array} concatenated bytes\n   * @private\n   */\n  const concatSegments = segmentObj => {\n    let offset = 0;\n    let tempBuffer;\n    if (segmentObj.bytes) {\n      tempBuffer = new Uint8Array(segmentObj.bytes); // combine the individual segments into one large typed-array\n\n      segmentObj.segments.forEach(segment => {\n        tempBuffer.set(segment, offset);\n        offset += segment.byteLength;\n      });\n    }\n    return tempBuffer;\n  };\n\n  /**\n   * @file text-tracks.js\n   */\n  /**\n   * Create captions text tracks on video.js if they do not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {Object} tech the video.js tech\n   * @param {Object} captionStream the caption stream to create\n   * @private\n   */\n\n  const createCaptionsTrackIfNotExists = function (inbandTextTracks, tech, captionStream) {\n    if (!inbandTextTracks[captionStream]) {\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-608'\n      });\n      let instreamId = captionStream; // we need to translate SERVICEn for 708 to how mux.js currently labels them\n\n      if (/^cc708_/.test(captionStream)) {\n        instreamId = 'SERVICE' + captionStream.split('_')[1];\n      }\n      const track = tech.textTracks().getTrackById(instreamId);\n      if (track) {\n        // Resuse an existing track with a CC# id because this was\n        // very likely created by videojs-contrib-hls from information\n        // in the m3u8 for us to use\n        inbandTextTracks[captionStream] = track;\n      } else {\n        // This section gets called when we have caption services that aren't specified in the manifest.\n        // Manifest level caption services are handled in media-groups.js under CLOSED-CAPTIONS.\n        const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n        let label = captionStream;\n        let language = captionStream;\n        let def = false;\n        const captionService = captionServices[instreamId];\n        if (captionService) {\n          label = captionService.label;\n          language = captionService.language;\n          def = captionService.default;\n        } // Otherwise, create a track with the default `CC#` label and\n        // without a language\n\n        inbandTextTracks[captionStream] = tech.addRemoteTextTrack({\n          kind: 'captions',\n          id: instreamId,\n          // TODO: investigate why this doesn't seem to turn the caption on by default\n          default: def,\n          label,\n          language\n        }, false).track;\n      }\n    }\n  };\n  /**\n   * Add caption text track data to a source handler given an array of captions\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {Array} captionArray an array of caption data\n   * @private\n   */\n\n  const addCaptionData = function ({\n    inbandTextTracks,\n    captionArray,\n    timestampOffset\n  }) {\n    if (!captionArray) {\n      return;\n    }\n    const Cue = window.WebKitDataCue || window.VTTCue;\n    captionArray.forEach(caption => {\n      const track = caption.stream;\n      inbandTextTracks[track].addCue(new Cue(caption.startTime + timestampOffset, caption.endTime + timestampOffset, caption.text));\n    });\n  };\n  /**\n   * Define properties on a cue for backwards compatability,\n   * but warn the user that the way that they are using it\n   * is depricated and will be removed at a later date.\n   *\n   * @param {Cue} cue the cue to add the properties on\n   * @private\n   */\n\n  const deprecateOldCue = function (cue) {\n    Object.defineProperties(cue.frame, {\n      id: {\n        get() {\n          videojs.log.warn('cue.frame.id is deprecated. Use cue.value.key instead.');\n          return cue.value.key;\n        }\n      },\n      value: {\n        get() {\n          videojs.log.warn('cue.frame.value is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      },\n      privateData: {\n        get() {\n          videojs.log.warn('cue.frame.privateData is deprecated. Use cue.value.data instead.');\n          return cue.value.data;\n        }\n      }\n    });\n  };\n  /**\n   * Add metadata text track data to a source handler given an array of metadata\n   *\n   * @param {Object}\n   *   @param {Object} inbandTextTracks the inband text tracks\n   *   @param {Array} metadataArray an array of meta data\n   *   @param {number} timestampOffset the timestamp offset of the source buffer\n   *   @param {number} videoDuration the duration of the video\n   * @private\n   */\n\n  const addMetadata = ({\n    inbandTextTracks,\n    metadataArray,\n    timestampOffset,\n    videoDuration\n  }) => {\n    if (!metadataArray) {\n      return;\n    }\n    const Cue = window.WebKitDataCue || window.VTTCue;\n    const metadataTrack = inbandTextTracks.metadataTrack_;\n    if (!metadataTrack) {\n      return;\n    }\n    metadataArray.forEach(metadata => {\n      const time = metadata.cueTime + timestampOffset; // if time isn't a finite number between 0 and Infinity, like NaN,\n      // ignore this bit of metadata.\n      // This likely occurs when you have an non-timed ID3 tag like TIT2,\n      // which is the \"Title/Songname/Content description\" frame\n\n      if (typeof time !== 'number' || window.isNaN(time) || time < 0 || !(time < Infinity)) {\n        return;\n      }\n      metadata.frames.forEach(frame => {\n        const cue = new Cue(time, time, frame.value || frame.url || frame.data || '');\n        cue.frame = frame;\n        cue.value = frame;\n        deprecateOldCue(cue);\n        metadataTrack.addCue(cue);\n      });\n    });\n    if (!metadataTrack.cues || !metadataTrack.cues.length) {\n      return;\n    } // Updating the metadeta cues so that\n    // the endTime of each cue is the startTime of the next cue\n    // the endTime of last cue is the duration of the video\n\n    const cues = metadataTrack.cues;\n    const cuesArray = []; // Create a copy of the TextTrackCueList...\n    // ...disregarding cues with a falsey value\n\n    for (let i = 0; i < cues.length; i++) {\n      if (cues[i]) {\n        cuesArray.push(cues[i]);\n      }\n    } // Group cues by their startTime value\n\n    const cuesGroupedByStartTime = cuesArray.reduce((obj, cue) => {\n      const timeSlot = obj[cue.startTime] || [];\n      timeSlot.push(cue);\n      obj[cue.startTime] = timeSlot;\n      return obj;\n    }, {}); // Sort startTimes by ascending order\n\n    const sortedStartTimes = Object.keys(cuesGroupedByStartTime).sort((a, b) => Number(a) - Number(b)); // Map each cue group's endTime to the next group's startTime\n\n    sortedStartTimes.forEach((startTime, idx) => {\n      const cueGroup = cuesGroupedByStartTime[startTime];\n      const nextTime = Number(sortedStartTimes[idx + 1]) || videoDuration; // Map each cue's endTime the next group's startTime\n\n      cueGroup.forEach(cue => {\n        cue.endTime = nextTime;\n      });\n    });\n  };\n  /**\n   * Create metadata text track on video.js if it does not exist\n   *\n   * @param {Object} inbandTextTracks a reference to current inbandTextTracks\n   * @param {string} dispatchType the inband metadata track dispatch type\n   * @param {Object} tech the video.js tech\n   * @private\n   */\n\n  const createMetadataTrackIfNotExists = (inbandTextTracks, dispatchType, tech) => {\n    if (inbandTextTracks.metadataTrack_) {\n      return;\n    }\n    inbandTextTracks.metadataTrack_ = tech.addRemoteTextTrack({\n      kind: 'metadata',\n      label: 'Timed Metadata'\n    }, false).track;\n    inbandTextTracks.metadataTrack_.inBandMetadataTrackDispatchType = dispatchType;\n  };\n  /**\n   * Remove cues from a track on video.js.\n   *\n   * @param {Double} start start of where we should remove the cue\n   * @param {Double} end end of where the we should remove the cue\n   * @param {Object} track the text track to remove the cues from\n   * @private\n   */\n\n  const removeCuesFromTrack = function (start, end, track) {\n    let i;\n    let cue;\n    if (!track) {\n      return;\n    }\n    if (!track.cues) {\n      return;\n    }\n    i = track.cues.length;\n    while (i--) {\n      cue = track.cues[i]; // Remove any cue within the provided start and end time\n\n      if (cue.startTime >= start && cue.endTime <= end) {\n        track.removeCue(cue);\n      }\n    }\n  };\n  /**\n   * Remove duplicate cues from a track on video.js (a cue is considered a\n   * duplicate if it has the same time interval and text as another)\n   *\n   * @param {Object} track the text track to remove the duplicate cues from\n   * @private\n   */\n\n  const removeDuplicateCuesFromTrack = function (track) {\n    const cues = track.cues;\n    if (!cues) {\n      return;\n    }\n    for (let i = 0; i < cues.length; i++) {\n      const duplicates = [];\n      let occurrences = 0;\n      for (let j = 0; j < cues.length; j++) {\n        if (cues[i].startTime === cues[j].startTime && cues[i].endTime === cues[j].endTime && cues[i].text === cues[j].text) {\n          occurrences++;\n          if (occurrences > 1) {\n            duplicates.push(cues[j]);\n          }\n        }\n      }\n      if (duplicates.length) {\n        duplicates.forEach(dupe => track.removeCue(dupe));\n      }\n    }\n  };\n\n  /**\n   * Returns a list of gops in the buffer that have a pts value of 3 seconds or more in\n   * front of current time.\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {number} currentTime\n   *        The current time\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   * @return {Array}\n   *         List of gops considered safe to append over\n   */\n\n  const gopsSafeToAlignWith = (buffer, currentTime, mapping) => {\n    if (typeof currentTime === 'undefined' || currentTime === null || !buffer.length) {\n      return [];\n    } // pts value for current time + 3 seconds to give a bit more wiggle room\n\n    const currentTimePts = Math.ceil((currentTime - mapping + 3) * clock_1);\n    let i;\n    for (i = 0; i < buffer.length; i++) {\n      if (buffer[i].pts > currentTimePts) {\n        break;\n      }\n    }\n    return buffer.slice(i);\n  };\n  /**\n   * Appends gop information (timing and byteLength) received by the transmuxer for the\n   * gops appended in the last call to appendBuffer\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Array} gops\n   *        List of new gop information\n   * @param {boolean} replace\n   *        If true, replace the buffer with the new gop information. If false, append the\n   *        new gop information to the buffer in the right location of time.\n   * @return {Array}\n   *         Updated list of gop information\n   */\n\n  const updateGopBuffer = (buffer, gops, replace) => {\n    if (!gops.length) {\n      return buffer;\n    }\n    if (replace) {\n      // If we are in safe append mode, then completely overwrite the gop buffer\n      // with the most recent appeneded data. This will make sure that when appending\n      // future segments, we only try to align with gops that are both ahead of current\n      // time and in the last segment appended.\n      return gops.slice();\n    }\n    const start = gops[0].pts;\n    let i = 0;\n    for (i; i < buffer.length; i++) {\n      if (buffer[i].pts >= start) {\n        break;\n      }\n    }\n    return buffer.slice(0, i).concat(gops);\n  };\n  /**\n   * Removes gop information in buffer that overlaps with provided start and end\n   *\n   * @param {Array} buffer\n   *        The current buffer of gop information\n   * @param {Double} start\n   *        position to start the remove at\n   * @param {Double} end\n   *        position to end the remove at\n   * @param {Double} mapping\n   *        Offset to map display time to stream presentation time\n   */\n\n  const removeGopBuffer = (buffer, start, end, mapping) => {\n    const startPts = Math.ceil((start - mapping) * clock_1);\n    const endPts = Math.ceil((end - mapping) * clock_1);\n    const updatedBuffer = buffer.slice();\n    let i = buffer.length;\n    while (i--) {\n      if (buffer[i].pts <= endPts) {\n        break;\n      }\n    }\n    if (i === -1) {\n      // no removal because end of remove range is before start of buffer\n      return updatedBuffer;\n    }\n    let j = i + 1;\n    while (j--) {\n      if (buffer[j].pts <= startPts) {\n        break;\n      }\n    } // clamp remove range start to 0 index\n\n    j = Math.max(j, 0);\n    updatedBuffer.splice(j, i - j + 1);\n    return updatedBuffer;\n  };\n  const shallowEqual = function (a, b) {\n    // if both are undefined\n    // or one or the other is undefined\n    // they are not equal\n    if (!a && !b || !a && b || a && !b) {\n      return false;\n    } // they are the same object and thus, equal\n\n    if (a === b) {\n      return true;\n    } // sort keys so we can make sure they have\n    // all the same keys later.\n\n    const akeys = Object.keys(a).sort();\n    const bkeys = Object.keys(b).sort(); // different number of keys, not equal\n\n    if (akeys.length !== bkeys.length) {\n      return false;\n    }\n    for (let i = 0; i < akeys.length; i++) {\n      const key = akeys[i]; // different sorted keys, not equal\n\n      if (key !== bkeys[i]) {\n        return false;\n      } // different values, not equal\n\n      if (a[key] !== b[key]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // https://www.w3.org/TR/WebIDL-1/#quotaexceedederror\n  const QUOTA_EXCEEDED_ERR = 22;\n\n  /**\n   * The segment loader has no recourse except to fetch a segment in the\n   * current playlist and use the internal timestamps in that segment to\n   * generate a syncPoint. This function returns a good candidate index\n   * for that process.\n   *\n   * @param {Array} segments - the segments array from a playlist.\n   * @return {number} An index of a segment from the playlist to load\n   */\n\n  const getSyncSegmentCandidate = function (currentTimeline, segments, targetTime) {\n    segments = segments || [];\n    const timelineSegments = [];\n    let time = 0;\n    for (let i = 0; i < segments.length; i++) {\n      const segment = segments[i];\n      if (currentTimeline === segment.timeline) {\n        timelineSegments.push(i);\n        time += segment.duration;\n        if (time > targetTime) {\n          return i;\n        }\n      }\n    }\n    if (timelineSegments.length === 0) {\n      return 0;\n    } // default to the last timeline segment\n\n    return timelineSegments[timelineSegments.length - 1];\n  }; // In the event of a quota exceeded error, keep at least one second of back buffer. This\n  // number was arbitrarily chosen and may be updated in the future, but seemed reasonable\n  // as a start to prevent any potential issues with removing content too close to the\n  // playhead.\n\n  const MIN_BACK_BUFFER = 1; // in ms\n\n  const CHECK_BUFFER_DELAY = 500;\n  const finite = num => typeof num === 'number' && isFinite(num); // With most content hovering around 30fps, if a segment has a duration less than a half\n  // frame at 30fps or one frame at 60fps, the bandwidth and throughput calculations will\n  // not accurately reflect the rest of the content.\n\n  const MIN_SEGMENT_DURATION_TO_SAVE_STATS = 1 / 60;\n  const illegalMediaSwitch = (loaderType, startingMedia, trackInfo) => {\n    // Although these checks should most likely cover non 'main' types, for now it narrows\n    // the scope of our checks.\n    if (loaderType !== 'main' || !startingMedia || !trackInfo) {\n      return null;\n    }\n    if (!trackInfo.hasAudio && !trackInfo.hasVideo) {\n      return 'Neither audio nor video found in segment.';\n    }\n    if (startingMedia.hasVideo && !trackInfo.hasVideo) {\n      return 'Only audio found in segment when we expected video.' + ' We can\\'t switch to audio only from a stream that had video.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n    if (!startingMedia.hasVideo && trackInfo.hasVideo) {\n      return 'Video found in segment when we expected only audio.' + ' We can\\'t switch to a stream with video from an audio only stream.' + ' To get rid of this message, please add codec information to the manifest.';\n    }\n    return null;\n  };\n  /**\n   * Calculates a time value that is safe to remove from the back buffer without interrupting\n   * playback.\n   *\n   * @param {TimeRange} seekable\n   *        The current seekable range\n   * @param {number} currentTime\n   *        The current time of the player\n   * @param {number} targetDuration\n   *        The target duration of the current playlist\n   * @return {number}\n   *         Time that is safe to remove from the back buffer without interrupting playback\n   */\n\n  const safeBackBufferTrimTime = (seekable, currentTime, targetDuration) => {\n    // 30 seconds before the playhead provides a safe default for trimming.\n    //\n    // Choosing a reasonable default is particularly important for high bitrate content and\n    // VOD videos/live streams with large windows, as the buffer may end up overfilled and\n    // throw an APPEND_BUFFER_ERR.\n    let trimTime = currentTime - Config.BACK_BUFFER_LENGTH;\n    if (seekable.length) {\n      // Some live playlists may have a shorter window of content than the full allowed back\n      // buffer. For these playlists, don't save content that's no longer within the window.\n      trimTime = Math.max(trimTime, seekable.start(0));\n    } // Don't remove within target duration of the current time to avoid the possibility of\n    // removing the GOP currently being played, as removing it can cause playback stalls.\n\n    const maxTrimTime = currentTime - targetDuration;\n    return Math.min(maxTrimTime, trimTime);\n  };\n  const segmentInfoString = segmentInfo => {\n    const {\n      startOfSegment,\n      duration,\n      segment,\n      part,\n      playlist: {\n        mediaSequence: seq,\n        id,\n        segments = []\n      },\n      mediaIndex: index,\n      partIndex,\n      timeline\n    } = segmentInfo;\n    const segmentLen = segments.length - 1;\n    let selection = 'mediaIndex/partIndex increment';\n    if (segmentInfo.getMediaInfoForTime) {\n      selection = `getMediaInfoForTime (${segmentInfo.getMediaInfoForTime})`;\n    } else if (segmentInfo.isSyncRequest) {\n      selection = 'getSyncSegmentCandidate (isSyncRequest)';\n    }\n    if (segmentInfo.independent) {\n      selection += ` with independent ${segmentInfo.independent}`;\n    }\n    const hasPartIndex = typeof partIndex === 'number';\n    const name = segmentInfo.segment.uri ? 'segment' : 'pre-segment';\n    const zeroBasedPartCount = hasPartIndex ? getKnownPartCount({\n      preloadSegment: segment\n    }) - 1 : 0;\n    return `${name} [${seq + index}/${seq + segmentLen}]` + (hasPartIndex ? ` part [${partIndex}/${zeroBasedPartCount}]` : '') + ` segment start/end [${segment.start} => ${segment.end}]` + (hasPartIndex ? ` part start/end [${part.start} => ${part.end}]` : '') + ` startOfSegment [${startOfSegment}]` + ` duration [${duration}]` + ` timeline [${timeline}]` + ` selected by [${selection}]` + ` playlist [${id}]`;\n  };\n  const timingInfoPropertyForMedia = mediaType => `${mediaType}TimingInfo`;\n  /**\n   * Returns the timestamp offset to use for the segment.\n   *\n   * @param {number} segmentTimeline\n   *        The timeline of the segment\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} startOfSegment\n   *        The estimated segment start\n   * @param {TimeRange[]} buffered\n   *        The loader's buffer\n   * @param {boolean} overrideCheck\n   *        If true, no checks are made to see if the timestamp offset value should be set,\n   *        but sets it directly to a value.\n   *\n   * @return {number|null}\n   *         Either a number representing a new timestamp offset, or null if the segment is\n   *         part of the same timeline\n   */\n\n  const timestampOffsetForSegment = ({\n    segmentTimeline,\n    currentTimeline,\n    startOfSegment,\n    buffered,\n    overrideCheck\n  }) => {\n    // Check to see if we are crossing a discontinuity to see if we need to set the\n    // timestamp offset on the transmuxer and source buffer.\n    //\n    // Previously, we changed the timestampOffset if the start of this segment was less than\n    // the currently set timestampOffset, but this isn't desirable as it can produce bad\n    // behavior, especially around long running live streams.\n    if (!overrideCheck && segmentTimeline === currentTimeline) {\n      return null;\n    } // When changing renditions, it's possible to request a segment on an older timeline. For\n    // instance, given two renditions with the following:\n    //\n    // #EXTINF:10\n    // segment1\n    // #EXT-X-DISCONTINUITY\n    // #EXTINF:10\n    // segment2\n    // #EXTINF:10\n    // segment3\n    //\n    // And the current player state:\n    //\n    // current time: 8\n    // buffer: 0 => 20\n    //\n    // The next segment on the current rendition would be segment3, filling the buffer from\n    // 20s onwards. However, if a rendition switch happens after segment2 was requested,\n    // then the next segment to be requested will be segment1 from the new rendition in\n    // order to fill time 8 and onwards. Using the buffered end would result in repeated\n    // content (since it would position segment1 of the new rendition starting at 20s). This\n    // case can be identified when the new segment's timeline is a prior value. Instead of\n    // using the buffered end, the startOfSegment can be used, which, hopefully, will be\n    // more accurate to the actual start time of the segment.\n\n    if (segmentTimeline < currentTimeline) {\n      return startOfSegment;\n    } // segmentInfo.startOfSegment used to be used as the timestamp offset, however, that\n    // value uses the end of the last segment if it is available. While this value\n    // should often be correct, it's better to rely on the buffered end, as the new\n    // content post discontinuity should line up with the buffered end as if it were\n    // time 0 for the new content.\n\n    return buffered.length ? buffered.end(buffered.length - 1) : startOfSegment;\n  };\n  /**\n   * Returns whether or not the loader should wait for a timeline change from the timeline\n   * change controller before processing the segment.\n   *\n   * Primary timing in VHS goes by video. This is different from most media players, as\n   * audio is more often used as the primary timing source. For the foreseeable future, VHS\n   * will continue to use video as the primary timing source, due to the current logic and\n   * expectations built around it.\n\n   * Since the timing follows video, in order to maintain sync, the video loader is\n   * responsible for setting both audio and video source buffer timestamp offsets.\n   *\n   * Setting different values for audio and video source buffers could lead to\n   * desyncing. The following examples demonstrate some of the situations where this\n   * distinction is important. Note that all of these cases involve demuxed content. When\n   * content is muxed, the audio and video are packaged together, therefore syncing\n   * separate media playlists is not an issue.\n   *\n   * CASE 1: Audio prepares to load a new timeline before video:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:                     ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader              ^\n   *\n   * In the above example, the audio loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the video loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the audio loader goes ahead and loads and appends the 6th segment before the video\n   * loader crosses the discontinuity, then when appended, the 6th audio segment will use\n   * the timestamp offset from timeline 0. This will likely lead to desyncing. In addition,\n   * the audio loader must provide the audioAppendStart value to trim the content in the\n   * transmuxer, and that value relies on the audio timestamp offset. Since the audio\n   * timestamp offset is set by the video (main) loader, the audio loader shouldn't load the\n   * segment until that value is provided.\n   *\n   * CASE 2: Video prepares to load a new timeline before audio:\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:             ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader                      ^\n   *\n   * In the above example, the video loader is preparing to load the 6th segment, the first\n   * after a discontinuity, while the audio loader is still loading the 5th segment, before\n   * the discontinuity.\n   *\n   * If the video loader goes ahead and loads and appends the 6th segment, then once the\n   * segment is loaded and processed, both the video and audio timestamp offsets will be\n   * set, since video is used as the primary timing source. This is to ensure content lines\n   * up appropriately, as any modifications to the video timing are reflected by audio when\n   * the video loader sets the audio and video timestamp offsets to the same value. However,\n   * setting the timestamp offset for audio before audio has had a chance to change\n   * timelines will likely lead to desyncing, as the audio loader will append segment 5 with\n   * a timestamp intended to apply to segments from timeline 1 rather than timeline 0.\n   *\n   * CASE 3: When seeking, audio prepares to load a new timeline before video\n   *\n   * Timeline:       0                 1\n   * Audio Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Audio Loader:           ^\n   * Video Segments: 0 1 2 3 4 5 DISCO 6 7 8 9\n   * Video Loader            ^\n   *\n   * In the above example, both audio and video loaders are loading segments from timeline\n   * 0, but imagine that the seek originated from timeline 1.\n   *\n   * When seeking to a new timeline, the timestamp offset will be set based on the expected\n   * segment start of the loaded video segment. In order to maintain sync, the audio loader\n   * must wait for the video loader to load its segment and update both the audio and video\n   * timestamp offsets before it may load and append its own segment. This is the case\n   * whether the seek results in a mismatched segment request (e.g., the audio loader\n   * chooses to load segment 3 and the video loader chooses to load segment 4) or the\n   * loaders choose to load the same segment index from each playlist, as the segments may\n   * not be aligned perfectly, even for matching segment indexes.\n   *\n   * @param {Object} timelinechangeController\n   * @param {number} currentTimeline\n   *        The timeline currently being followed by the loader\n   * @param {number} segmentTimeline\n   *        The timeline of the segment being loaded\n   * @param {('main'|'audio')} loaderType\n   *        The loader type\n   * @param {boolean} audioDisabled\n   *        Whether the audio is disabled for the loader. This should only be true when the\n   *        loader may have muxed audio in its segment, but should not append it, e.g., for\n   *        the main loader when an alternate audio playlist is active.\n   *\n   * @return {boolean}\n   *         Whether the loader should wait for a timeline change from the timeline change\n   *         controller before processing the segment\n   */\n\n  const shouldWaitForTimelineChange = ({\n    timelineChangeController,\n    currentTimeline,\n    segmentTimeline,\n    loaderType,\n    audioDisabled\n  }) => {\n    if (currentTimeline === segmentTimeline) {\n      return false;\n    }\n    if (loaderType === 'audio') {\n      const lastMainTimelineChange = timelineChangeController.lastTimelineChange({\n        type: 'main'\n      }); // Audio loader should wait if:\n      //\n      // * main hasn't had a timeline change yet (thus has not loaded its first segment)\n      // * main hasn't yet changed to the timeline audio is looking to load\n\n      return !lastMainTimelineChange || lastMainTimelineChange.to !== segmentTimeline;\n    } // The main loader only needs to wait for timeline changes if there's demuxed audio.\n    // Otherwise, there's nothing to wait for, since audio would be muxed into the main\n    // loader's segments (or the content is audio/video only and handled by the main\n    // loader).\n\n    if (loaderType === 'main' && audioDisabled) {\n      const pendingAudioTimelineChange = timelineChangeController.pendingTimelineChange({\n        type: 'audio'\n      }); // Main loader should wait for the audio loader if audio is not pending a timeline\n      // change to the current timeline.\n      //\n      // Since the main loader is responsible for setting the timestamp offset for both\n      // audio and video, the main loader must wait for audio to be about to change to its\n      // timeline before setting the offset, otherwise, if audio is behind in loading,\n      // segments from the previous timeline would be adjusted by the new timestamp offset.\n      //\n      // This requirement means that video will not cross a timeline until the audio is\n      // about to cross to it, so that way audio and video will always cross the timeline\n      // together.\n      //\n      // In addition to normal timeline changes, these rules also apply to the start of a\n      // stream (going from a non-existent timeline, -1, to timeline 0). It's important\n      // that these rules apply to the first timeline change because if they did not, it's\n      // possible that the main loader will cross two timelines before the audio loader has\n      // crossed one. Logic may be implemented to handle the startup as a special case, but\n      // it's easier to simply treat all timeline changes the same.\n\n      if (pendingAudioTimelineChange && pendingAudioTimelineChange.to === segmentTimeline) {\n        return false;\n      }\n      return true;\n    }\n    return false;\n  };\n  const mediaDuration = timingInfos => {\n    let maxDuration = 0;\n    ['video', 'audio'].forEach(function (type) {\n      const typeTimingInfo = timingInfos[`${type}TimingInfo`];\n      if (!typeTimingInfo) {\n        return;\n      }\n      const {\n        start,\n        end\n      } = typeTimingInfo;\n      let duration;\n      if (typeof start === 'bigint' || typeof end === 'bigint') {\n        duration = window.BigInt(end) - window.BigInt(start);\n      } else if (typeof start === 'number' && typeof end === 'number') {\n        duration = end - start;\n      }\n      if (typeof duration !== 'undefined' && duration > maxDuration) {\n        maxDuration = duration;\n      }\n    }); // convert back to a number if it is lower than MAX_SAFE_INTEGER\n    // as we only need BigInt when we are above that.\n\n    if (typeof maxDuration === 'bigint' && maxDuration < Number.MAX_SAFE_INTEGER) {\n      maxDuration = Number(maxDuration);\n    }\n    return maxDuration;\n  };\n  const segmentTooLong = ({\n    segmentDuration,\n    maxDuration\n  }) => {\n    // 0 duration segments are most likely due to metadata only segments or a lack of\n    // information.\n    if (!segmentDuration) {\n      return false;\n    } // For HLS:\n    //\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1\n    // The EXTINF duration of each Media Segment in the Playlist\n    // file, when rounded to the nearest integer, MUST be less than or equal\n    // to the target duration; longer segments can trigger playback stalls\n    // or other errors.\n    //\n    // For DASH, the mpd-parser uses the largest reported segment duration as the target\n    // duration. Although that reported duration is occasionally approximate (i.e., not\n    // exact), a strict check may report that a segment is too long more often in DASH.\n\n    return Math.round(segmentDuration) > maxDuration + TIME_FUDGE_FACTOR;\n  };\n  const getTroublesomeSegmentDurationMessage = (segmentInfo, sourceType) => {\n    // Right now we aren't following DASH's timing model exactly, so only perform\n    // this check for HLS content.\n    if (sourceType !== 'hls') {\n      return null;\n    }\n    const segmentDuration = mediaDuration({\n      audioTimingInfo: segmentInfo.audioTimingInfo,\n      videoTimingInfo: segmentInfo.videoTimingInfo\n    }); // Don't report if we lack information.\n    //\n    // If the segment has a duration of 0 it is either a lack of information or a\n    // metadata only segment and shouldn't be reported here.\n\n    if (!segmentDuration) {\n      return null;\n    }\n    const targetDuration = segmentInfo.playlist.targetDuration;\n    const isSegmentWayTooLong = segmentTooLong({\n      segmentDuration,\n      maxDuration: targetDuration * 2\n    });\n    const isSegmentSlightlyTooLong = segmentTooLong({\n      segmentDuration,\n      maxDuration: targetDuration\n    });\n    const segmentTooLongMessage = `Segment with index ${segmentInfo.mediaIndex} ` + `from playlist ${segmentInfo.playlist.id} ` + `has a duration of ${segmentDuration} ` + `when the reported duration is ${segmentInfo.duration} ` + `and the target duration is ${targetDuration}. ` + 'For HLS content, a duration in excess of the target duration may result in ' + 'playback issues. See the HLS specification section on EXT-X-TARGETDURATION for ' + 'more details: ' + 'https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.3.1';\n    if (isSegmentWayTooLong || isSegmentSlightlyTooLong) {\n      return {\n        severity: isSegmentWayTooLong ? 'warn' : 'info',\n        message: segmentTooLongMessage\n      };\n    }\n    return null;\n  };\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class SegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  class SegmentLoader extends videojs.EventTarget {\n    constructor(settings, options = {}) {\n      super(); // check pre-conditions\n\n      if (!settings) {\n        throw new TypeError('Initialization settings are required');\n      }\n      if (typeof settings.currentTime !== 'function') {\n        throw new TypeError('No currentTime getter specified');\n      }\n      if (!settings.mediaSource) {\n        throw new TypeError('No MediaSource specified');\n      } // public properties\n\n      this.bandwidth = settings.bandwidth;\n      this.throughput = {\n        rate: 0,\n        count: 0\n      };\n      this.roundTrip = NaN;\n      this.resetStats_();\n      this.mediaIndex = null;\n      this.partIndex = null; // private settings\n\n      this.hasPlayed_ = settings.hasPlayed;\n      this.currentTime_ = settings.currentTime;\n      this.seekable_ = settings.seekable;\n      this.seeking_ = settings.seeking;\n      this.duration_ = settings.duration;\n      this.mediaSource_ = settings.mediaSource;\n      this.vhs_ = settings.vhs;\n      this.loaderType_ = settings.loaderType;\n      this.currentMediaInfo_ = void 0;\n      this.startingMediaInfo_ = void 0;\n      this.segmentMetadataTrack_ = settings.segmentMetadataTrack;\n      this.goalBufferLength_ = settings.goalBufferLength;\n      this.sourceType_ = settings.sourceType;\n      this.sourceUpdater_ = settings.sourceUpdater;\n      this.inbandTextTracks_ = settings.inbandTextTracks;\n      this.state_ = 'INIT';\n      this.timelineChangeController_ = settings.timelineChangeController;\n      this.shouldSaveSegmentTimingInfo_ = true;\n      this.parse708captions_ = settings.parse708captions;\n      this.useDtsForTimestampOffset_ = settings.useDtsForTimestampOffset;\n      this.captionServices_ = settings.captionServices;\n      this.exactManifestTimings = settings.exactManifestTimings; // private instance variables\n\n      this.checkBufferTimeout_ = null;\n      this.error_ = void 0;\n      this.currentTimeline_ = -1;\n      this.pendingSegment_ = null;\n      this.xhrOptions_ = null;\n      this.pendingSegments_ = [];\n      this.audioDisabled_ = false;\n      this.isPendingTimestampOffset_ = false; // TODO possibly move gopBuffer and timeMapping info to a separate controller\n\n      this.gopBuffer_ = [];\n      this.timeMapping_ = 0;\n      this.safeAppend_ = videojs.browser.IE_VERSION >= 11;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.playlistOfLastInitSegment_ = {\n        audio: null,\n        video: null\n      };\n      this.callQueue_ = []; // If the segment loader prepares to load a segment, but does not have enough\n      // information yet to start the loading process (e.g., if the audio loader wants to\n      // load a segment from the next timeline but the main loader hasn't yet crossed that\n      // timeline), then the load call will be added to the queue until it is ready to be\n      // processed.\n\n      this.loadQueue_ = [];\n      this.metadataQueue_ = {\n        id3: [],\n        caption: []\n      };\n      this.waitingOnRemove_ = false;\n      this.quotaExceededErrorRetryTimeout_ = null; // Fragmented mp4 playback\n\n      this.activeInitSegmentId_ = null;\n      this.initSegments_ = {}; // HLSe playback\n\n      this.cacheEncryptionKeys_ = settings.cacheEncryptionKeys;\n      this.keyCache_ = {};\n      this.decrypter_ = settings.decrypter; // Manages the tracking and generation of sync-points, mappings\n      // between a time in the display time and a segment index within\n      // a playlist\n\n      this.syncController_ = settings.syncController;\n      this.syncPoint_ = {\n        segmentIndex: 0,\n        time: 0\n      };\n      this.transmuxer_ = this.createTransmuxer_();\n      this.triggerSyncInfoUpdate_ = () => this.trigger('syncinfoupdate');\n      this.syncController_.on('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      this.mediaSource_.addEventListener('sourceopen', () => {\n        if (!this.isEndOfStream_()) {\n          this.ended_ = false;\n        }\n      }); // ...for determining the fetch location\n\n      this.fetchAtBuffer_ = false;\n      this.logger_ = logger(`SegmentLoader[${this.loaderType_}]`);\n      Object.defineProperty(this, 'state', {\n        get() {\n          return this.state_;\n        },\n        set(newState) {\n          if (newState !== this.state_) {\n            this.logger_(`${this.state_} -> ${newState}`);\n            this.state_ = newState;\n            this.trigger('statechange');\n          }\n        }\n      });\n      this.sourceUpdater_.on('ready', () => {\n        if (this.hasEnoughInfoToAppend_()) {\n          this.processCallQueue_();\n        }\n      }); // Only the main loader needs to listen for pending timeline changes, as the main\n      // loader should wait for audio to be ready to change its timeline so that both main\n      // and audio timelines change together. For more details, see the\n      // shouldWaitForTimelineChange function.\n\n      if (this.loaderType_ === 'main') {\n        this.timelineChangeController_.on('pendingtimelinechange', () => {\n          if (this.hasEnoughInfoToAppend_()) {\n            this.processCallQueue_();\n          }\n        });\n      } // The main loader only listens on pending timeline changes, but the audio loader,\n      // since its loads follow main, needs to listen on timeline changes. For more details,\n      // see the shouldWaitForTimelineChange function.\n\n      if (this.loaderType_ === 'audio') {\n        this.timelineChangeController_.on('timelinechange', () => {\n          if (this.hasEnoughInfoToLoad_()) {\n            this.processLoadQueue_();\n          }\n          if (this.hasEnoughInfoToAppend_()) {\n            this.processCallQueue_();\n          }\n        });\n      }\n    }\n    createTransmuxer_() {\n      return segmentTransmuxer.createTransmuxer({\n        remux: false,\n        alignGopsAtEnd: this.safeAppend_,\n        keepOriginalTimestamps: true,\n        parse708captions: this.parse708captions_,\n        captionServices: this.captionServices_\n      });\n    }\n    /**\n     * reset all of our media stats\n     *\n     * @private\n     */\n\n    resetStats_() {\n      this.mediaBytesTransferred = 0;\n      this.mediaRequests = 0;\n      this.mediaRequestsAborted = 0;\n      this.mediaRequestsTimedout = 0;\n      this.mediaRequestsErrored = 0;\n      this.mediaTransferDuration = 0;\n      this.mediaSecondsLoaded = 0;\n      this.mediaAppends = 0;\n    }\n    /**\n     * dispose of the SegmentLoader and reset to the default state\n     */\n\n    dispose() {\n      this.trigger('dispose');\n      this.state = 'DISPOSED';\n      this.pause();\n      this.abort_();\n      if (this.transmuxer_) {\n        this.transmuxer_.terminate();\n      }\n      this.resetStats_();\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n      if (this.syncController_ && this.triggerSyncInfoUpdate_) {\n        this.syncController_.off('syncinfoupdate', this.triggerSyncInfoUpdate_);\n      }\n      this.off();\n    }\n    setAudio(enable) {\n      this.audioDisabled_ = !enable;\n      if (enable) {\n        this.appendInitSegment_.audio = true;\n      } else {\n        // remove current track audio if it gets disabled\n        this.sourceUpdater_.removeAudio(0, this.duration_());\n      }\n    }\n    /**\n     * abort anything that is currently doing on with the SegmentLoader\n     * and reset to a default state\n     */\n\n    abort() {\n      if (this.state !== 'WAITING') {\n        if (this.pendingSegment_) {\n          this.pendingSegment_ = null;\n        }\n        return;\n      }\n      this.abort_(); // We aborted the requests we were waiting on, so reset the loader's state to READY\n      // since we are no longer \"waiting\" on any requests. XHR callback is not always run\n      // when the request is aborted. This will prevent the loader from being stuck in the\n      // WAITING state indefinitely.\n\n      this.state = 'READY'; // don't wait for buffer check timeouts to begin fetching the\n      // next segment\n\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * abort all pending xhr requests and null any pending segements\n     *\n     * @private\n     */\n\n    abort_() {\n      if (this.pendingSegment_ && this.pendingSegment_.abortRequests) {\n        this.pendingSegment_.abortRequests();\n      } // clear out the segment being processed\n\n      this.pendingSegment_ = null;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.timelineChangeController_.clearPendingTimelineChange(this.loaderType_);\n      this.waitingOnRemove_ = false;\n      window.clearTimeout(this.quotaExceededErrorRetryTimeout_);\n      this.quotaExceededErrorRetryTimeout_ = null;\n    }\n    checkForAbort_(requestId) {\n      // If the state is APPENDING, then aborts will not modify the state, meaning the first\n      // callback that happens should reset the state to READY so that loading can continue.\n      if (this.state === 'APPENDING' && !this.pendingSegment_) {\n        this.state = 'READY';\n        return true;\n      }\n      if (!this.pendingSegment_ || this.pendingSegment_.requestId !== requestId) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * set an error on the segment loader and null out any pending segements\n     *\n     * @param {Error} error the error to set on the SegmentLoader\n     * @return {Error} the error that was set or that is currently set\n     */\n\n    error(error) {\n      if (typeof error !== 'undefined') {\n        this.logger_('error occurred:', error);\n        this.error_ = error;\n      }\n      this.pendingSegment_ = null;\n      return this.error_;\n    }\n    endOfStream() {\n      this.ended_ = true;\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n      this.gopBuffer_.length = 0;\n      this.pause();\n      this.trigger('ended');\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n    buffered_() {\n      const trackInfo = this.getMediaInfo_();\n      if (!this.sourceUpdater_ || !trackInfo) {\n        return createTimeRanges();\n      }\n      if (this.loaderType_ === 'main') {\n        const {\n          hasAudio,\n          hasVideo,\n          isMuxed\n        } = trackInfo;\n        if (hasVideo && hasAudio && !this.audioDisabled_ && !isMuxed) {\n          return this.sourceUpdater_.buffered();\n        }\n        if (hasVideo) {\n          return this.sourceUpdater_.videoBuffered();\n        }\n      } // One case that can be ignored for now is audio only with alt audio,\n      // as we don't yet have proper support for that.\n\n      return this.sourceUpdater_.audioBuffered();\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n    initSegmentForMap(map, set = false) {\n      if (!map) {\n        return null;\n      }\n      const id = initSegmentId(map);\n      let storedMap = this.initSegments_[id];\n      if (set && !storedMap && map.bytes) {\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: map.bytes,\n          tracks: map.tracks,\n          timescales: map.timescales\n        };\n      }\n      return storedMap || map;\n    }\n    /**\n     * Gets and sets key for the provided key\n     *\n     * @param {Object} key\n     *        The key object representing the key to get or set\n     * @param {boolean=} set\n     *        If true, the key for the provided key should be saved\n     * @return {Object}\n     *         Key object for desired key\n     */\n\n    segmentKey(key, set = false) {\n      if (!key) {\n        return null;\n      }\n      const id = segmentKeyId(key);\n      let storedKey = this.keyCache_[id]; // TODO: We should use the HTTP Expires header to invalidate our cache per\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-6.2.3\n\n      if (this.cacheEncryptionKeys_ && set && !storedKey && key.bytes) {\n        this.keyCache_[id] = storedKey = {\n          resolvedUri: key.resolvedUri,\n          bytes: key.bytes\n        };\n      }\n      const result = {\n        resolvedUri: (storedKey || key).resolvedUri\n      };\n      if (storedKey) {\n        result.bytes = storedKey.bytes;\n      }\n      return result;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n    couldBeginLoading_() {\n      return this.playlist_ && !this.paused();\n    }\n    /**\n     * load a playlist and start to fill the buffer\n     */\n\n    load() {\n      // un-pause\n      this.monitorBuffer_(); // if we don't have a playlist yet, keep waiting for one to be\n      // specified\n\n      if (!this.playlist_) {\n        return;\n      } // if all the configuration is ready, initialize and begin loading\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      } // if we're in the middle of processing a segment already, don't\n      // kick off an additional segment request\n\n      if (!this.couldBeginLoading_() || this.state !== 'READY' && this.state !== 'INIT') {\n        return;\n      }\n      this.state = 'READY';\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n    init_() {\n      this.state = 'READY'; // if this is the audio segment loader, and it hasn't been inited before, then any old\n      // audio data from the muxed content should be removed\n\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * set a playlist on the segment loader\n     *\n     * @param {PlaylistLoader} media the playlist to set on the segment loader\n     */\n\n    playlist(newPlaylist, options = {}) {\n      if (!newPlaylist) {\n        return;\n      }\n      const oldPlaylist = this.playlist_;\n      const segmentInfo = this.pendingSegment_;\n      this.playlist_ = newPlaylist;\n      this.xhrOptions_ = options; // when we haven't started playing yet, the start of a live playlist\n      // is always our zero-time so force a sync update each time the playlist\n      // is refreshed from the server\n      //\n      // Use the INIT state to determine if playback has started, as the playlist sync info\n      // should be fixed once requests begin (as sync points are generated based on sync\n      // info), but not before then.\n\n      if (this.state === 'INIT') {\n        newPlaylist.syncInfo = {\n          mediaSequence: newPlaylist.mediaSequence,\n          time: 0\n        }; // Setting the date time mapping means mapping the program date time (if available)\n        // to time 0 on the player's timeline. The playlist's syncInfo serves a similar\n        // purpose, mapping the initial mediaSequence to time zero. Since the syncInfo can\n        // be updated as the playlist is refreshed before the loader starts loading, the\n        // program date time mapping needs to be updated as well.\n        //\n        // This mapping is only done for the main loader because a program date time should\n        // map equivalently between playlists.\n\n        if (this.loaderType_ === 'main') {\n          this.syncController_.setDateTimeMappingForStart(newPlaylist);\n        }\n      }\n      let oldId = null;\n      if (oldPlaylist) {\n        if (oldPlaylist.id) {\n          oldId = oldPlaylist.id;\n        } else if (oldPlaylist.uri) {\n          oldId = oldPlaylist.uri;\n        }\n      }\n      this.logger_(`playlist update [${oldId} => ${newPlaylist.id || newPlaylist.uri}]`); // in VOD, this is always a rendition switch (or we updated our syncInfo above)\n      // in LIVE, we always want to update with new playlists (including refreshes)\n\n      this.trigger('syncinfoupdate'); // if we were unpaused but waiting for a playlist, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        return this.init_();\n      }\n      if (!oldPlaylist || oldPlaylist.uri !== newPlaylist.uri) {\n        if (this.mediaIndex !== null) {\n          // we must reset/resync the segment loader when we switch renditions and\n          // the segment loader is already synced to the previous rendition\n          // on playlist changes we want it to be possible to fetch\n          // at the buffer for vod but not for live. So we use resetLoader\n          // for live and resyncLoader for vod. We want this because\n          // if a playlist uses independent and non-independent segments/parts the\n          // buffer may not accurately reflect the next segment that we should try\n          // downloading.\n          if (!newPlaylist.endList) {\n            this.resetLoader();\n          } else {\n            this.resyncLoader();\n          }\n        }\n        this.currentMediaInfo_ = void 0;\n        this.trigger('playlistupdate'); // the rest of this function depends on `oldPlaylist` being defined\n\n        return;\n      } // we reloaded the same playlist so we are in a live scenario\n      // and we will likely need to adjust the mediaIndex\n\n      const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence;\n      this.logger_(`live window shift [${mediaSequenceDiff}]`); // update the mediaIndex on the SegmentLoader\n      // this is important because we can abort a request and this value must be\n      // equal to the last appended mediaIndex\n\n      if (this.mediaIndex !== null) {\n        this.mediaIndex -= mediaSequenceDiff; // this can happen if we are going to load the first segment, but get a playlist\n        // update during that. mediaIndex would go from 0 to -1 if mediaSequence in the\n        // new playlist was incremented by 1.\n\n        if (this.mediaIndex < 0) {\n          this.mediaIndex = null;\n          this.partIndex = null;\n        } else {\n          const segment = this.playlist_.segments[this.mediaIndex]; // partIndex should remain the same for the same segment\n          // unless parts fell off of the playlist for this segment.\n          // In that case we need to reset partIndex and resync\n\n          if (this.partIndex && (!segment.parts || !segment.parts.length || !segment.parts[this.partIndex])) {\n            const mediaIndex = this.mediaIndex;\n            this.logger_(`currently processing part (index ${this.partIndex}) no longer exists.`);\n            this.resetLoader(); // We want to throw away the partIndex and the data associated with it,\n            // as the part was dropped from our current playlists segment.\n            // The mediaIndex will still be valid so keep that around.\n\n            this.mediaIndex = mediaIndex;\n          }\n        }\n      } // update the mediaIndex on the SegmentInfo object\n      // this is important because we will update this.mediaIndex with this value\n      // in `handleAppendsDone_` after the segment has been successfully appended\n\n      if (segmentInfo) {\n        segmentInfo.mediaIndex -= mediaSequenceDiff;\n        if (segmentInfo.mediaIndex < 0) {\n          segmentInfo.mediaIndex = null;\n          segmentInfo.partIndex = null;\n        } else {\n          // we need to update the referenced segment so that timing information is\n          // saved for the new playlist's segment, however, if the segment fell off the\n          // playlist, we can leave the old reference and just lose the timing info\n          if (segmentInfo.mediaIndex >= 0) {\n            segmentInfo.segment = newPlaylist.segments[segmentInfo.mediaIndex];\n          }\n          if (segmentInfo.partIndex >= 0 && segmentInfo.segment.parts) {\n            segmentInfo.part = segmentInfo.segment.parts[segmentInfo.partIndex];\n          }\n        }\n      }\n      this.syncController_.saveExpiredSegmentInfo(oldPlaylist, newPlaylist);\n    }\n    /**\n     * Prevent the loader from fetching additional segments. If there\n     * is a segment request outstanding, it will finish processing\n     * before the loader halts. A segment loader can be unpaused by\n     * calling load().\n     */\n\n    pause() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n        this.checkBufferTimeout_ = null;\n      }\n    }\n    /**\n     * Returns whether the segment loader is fetching additional\n     * segments when given the opportunity. This property can be\n     * modified through calls to pause() and load().\n     */\n\n    paused() {\n      return this.checkBufferTimeout_ === null;\n    }\n    /**\n     * Delete all the buffered data and reset the SegmentLoader\n     *\n     * @param {Function} [done] an optional callback to be executed when the remove\n     * operation is complete\n     */\n\n    resetEverything(done) {\n      this.ended_ = false;\n      this.appendInitSegment_ = {\n        audio: true,\n        video: true\n      };\n      this.resetLoader(); // remove from 0, the earliest point, to Infinity, to signify removal of everything.\n      // VTT Segment Loader doesn't need to do anything but in the regular SegmentLoader,\n      // we then clamp the value to duration if necessary.\n\n      this.remove(0, Infinity, done); // clears fmp4 captions\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearAllMp4Captions'\n        }); // reset the cache in the transmuxer\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n      }\n    }\n    /**\n     * Force the SegmentLoader to resync and start loading around the currentTime instead\n     * of starting at the end of the buffer\n     *\n     * Useful for fast quality changes\n     */\n\n    resetLoader() {\n      this.fetchAtBuffer_ = false;\n      this.resyncLoader();\n    }\n    /**\n     * Force the SegmentLoader to restart synchronization and make a conservative guess\n     * before returning to the simple walk-forward method\n     */\n\n    resyncLoader() {\n      if (this.transmuxer_) {\n        // need to clear out any cached data to prepare for the new segment\n        segmentTransmuxer.reset(this.transmuxer_);\n      }\n      this.mediaIndex = null;\n      this.partIndex = null;\n      this.syncPoint_ = null;\n      this.isPendingTimestampOffset_ = false;\n      this.callQueue_ = [];\n      this.loadQueue_ = [];\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n      this.abort();\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     * @param {Function} [done] - an optional callback to be executed when the remove\n     * @param {boolean} force - force all remove operations to happen\n     * operation is complete\n     */\n\n    remove(start, end, done = () => {}, force = false) {\n      // clamp end to duration if we need to remove everything.\n      // This is due to a browser bug that causes issues if we remove to Infinity.\n      // videojs/videojs-contrib-hls#1225\n      if (end === Infinity) {\n        end = this.duration_();\n      } // skip removes that would throw an error\n      // commonly happens during a rendition switch at the start of a video\n      // from start 0 to end 0\n\n      if (end <= start) {\n        this.logger_('skipping remove because end ${end} is <= start ${start}');\n        return;\n      }\n      if (!this.sourceUpdater_ || !this.getMediaInfo_()) {\n        this.logger_('skipping remove because no source updater or starting media info'); // nothing to remove if we haven't processed any media\n\n        return;\n      } // set it to one to complete this function's removes\n\n      let removesRemaining = 1;\n      const removeFinished = () => {\n        removesRemaining--;\n        if (removesRemaining === 0) {\n          done();\n        }\n      };\n      if (force || !this.audioDisabled_) {\n        removesRemaining++;\n        this.sourceUpdater_.removeAudio(start, end, removeFinished);\n      } // While it would be better to only remove video if the main loader has video, this\n      // should be safe with audio only as removeVideo will call back even if there's no\n      // video buffer.\n      //\n      // In theory we can check to see if there's video before calling the remove, but in\n      // the event that we're switching between renditions and from video to audio only\n      // (when we add support for that), we may need to clear the video contents despite\n      // what the new media will contain.\n\n      if (force || this.loaderType_ === 'main') {\n        this.gopBuffer_ = removeGopBuffer(this.gopBuffer_, start, end, this.timeMapping_);\n        removesRemaining++;\n        this.sourceUpdater_.removeVideo(start, end, removeFinished);\n      } // remove any captions and ID3 tags\n\n      for (const track in this.inbandTextTracks_) {\n        removeCuesFromTrack(start, end, this.inbandTextTracks_[track]);\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_); // finished this function's removes\n\n      removeFinished();\n    }\n    /**\n     * (re-)schedule monitorBufferTick_ to run as soon as possible\n     *\n     * @private\n     */\n\n    monitorBuffer_() {\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), 1);\n    }\n    /**\n     * As long as the SegmentLoader is in the READY state, periodically\n     * invoke fillBuffer_().\n     *\n     * @private\n     */\n\n    monitorBufferTick_() {\n      if (this.state === 'READY') {\n        this.fillBuffer_();\n      }\n      if (this.checkBufferTimeout_) {\n        window.clearTimeout(this.checkBufferTimeout_);\n      }\n      this.checkBufferTimeout_ = window.setTimeout(this.monitorBufferTick_.bind(this), CHECK_BUFFER_DELAY);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n    fillBuffer_() {\n      // TODO since the source buffer maintains a queue, and we shouldn't call this function\n      // except when we're ready for the next segment, this check can most likely be removed\n      if (this.sourceUpdater_.updating()) {\n        return;\n      } // see if we need to begin loading immediately\n\n      const segmentInfo = this.chooseNextRequest_();\n      if (!segmentInfo) {\n        return;\n      }\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        this.isPendingTimestampOffset_ = false;\n        this.timelineChangeController_.pendingTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        });\n      }\n      this.loadSegment_(segmentInfo);\n    }\n    /**\n     * Determines if we should call endOfStream on the media source based\n     * on the state of the buffer or if appened segment was the final\n     * segment in the playlist.\n     *\n     * @param {number} [mediaIndex] the media index of segment we last appended\n     * @param {Object} [playlist] a media playlist object\n     * @return {boolean} do we need to call endOfStream on the MediaSource\n     */\n\n    isEndOfStream_(mediaIndex = this.mediaIndex, playlist = this.playlist_, partIndex = this.partIndex) {\n      if (!playlist || !this.mediaSource_) {\n        return false;\n      }\n      const segment = typeof mediaIndex === 'number' && playlist.segments[mediaIndex]; // mediaIndex is zero based but length is 1 based\n\n      const appendedLastSegment = mediaIndex + 1 === playlist.segments.length; // true if there are no parts, or this is the last part.\n\n      const appendedLastPart = !segment || !segment.parts || partIndex + 1 === segment.parts.length; // if we've buffered to the end of the video, we need to call endOfStream\n      // so that MediaSources can trigger the `ended` event when it runs out of\n      // buffered data instead of waiting for me\n\n      return playlist.endList && this.mediaSource_.readyState === 'open' && appendedLastSegment && appendedLastPart;\n    }\n    /**\n     * Determines what request should be made given current segment loader state.\n     *\n     * @return {Object} a request object that describes the segment/part to load\n     */\n\n    chooseNextRequest_() {\n      const buffered = this.buffered_();\n      const bufferedEnd = lastBufferedEnd(buffered) || 0;\n      const bufferedTime = timeAheadOf(buffered, this.currentTime_());\n      const preloaded = !this.hasPlayed_() && bufferedTime >= 1;\n      const haveEnoughBuffer = bufferedTime >= this.goalBufferLength_();\n      const segments = this.playlist_.segments; // return no segment if:\n      // 1. we don't have segments\n      // 2. The video has not yet played and we already downloaded a segment\n      // 3. we already have enough buffered time\n\n      if (!segments.length || preloaded || haveEnoughBuffer) {\n        return null;\n      }\n      this.syncPoint_ = this.syncPoint_ || this.syncController_.getSyncPoint(this.playlist_, this.duration_(), this.currentTimeline_, this.currentTime_());\n      const next = {\n        partIndex: null,\n        mediaIndex: null,\n        startOfSegment: null,\n        playlist: this.playlist_,\n        isSyncRequest: Boolean(!this.syncPoint_)\n      };\n      if (next.isSyncRequest) {\n        next.mediaIndex = getSyncSegmentCandidate(this.currentTimeline_, segments, bufferedEnd);\n      } else if (this.mediaIndex !== null) {\n        const segment = segments[this.mediaIndex];\n        const partIndex = typeof this.partIndex === 'number' ? this.partIndex : -1;\n        next.startOfSegment = segment.end ? segment.end : bufferedEnd;\n        if (segment.parts && segment.parts[partIndex + 1]) {\n          next.mediaIndex = this.mediaIndex;\n          next.partIndex = partIndex + 1;\n        } else {\n          next.mediaIndex = this.mediaIndex + 1;\n        }\n      } else {\n        // Find the segment containing the end of the buffer or current time.\n        const {\n          segmentIndex,\n          startTime,\n          partIndex\n        } = Playlist.getMediaInfoForTime({\n          exactManifestTimings: this.exactManifestTimings,\n          playlist: this.playlist_,\n          currentTime: this.fetchAtBuffer_ ? bufferedEnd : this.currentTime_(),\n          startingPartIndex: this.syncPoint_.partIndex,\n          startingSegmentIndex: this.syncPoint_.segmentIndex,\n          startTime: this.syncPoint_.time\n        });\n        next.getMediaInfoForTime = this.fetchAtBuffer_ ? `bufferedEnd ${bufferedEnd}` : `currentTime ${this.currentTime_()}`;\n        next.mediaIndex = segmentIndex;\n        next.startOfSegment = startTime;\n        next.partIndex = partIndex;\n      }\n      const nextSegment = segments[next.mediaIndex];\n      let nextPart = nextSegment && typeof next.partIndex === 'number' && nextSegment.parts && nextSegment.parts[next.partIndex]; // if the next segment index is invalid or\n      // the next partIndex is invalid do not choose a next segment.\n\n      if (!nextSegment || typeof next.partIndex === 'number' && !nextPart) {\n        return null;\n      } // if the next segment has parts, and we don't have a partIndex.\n      // Set partIndex to 0\n\n      if (typeof next.partIndex !== 'number' && nextSegment.parts) {\n        next.partIndex = 0;\n        nextPart = nextSegment.parts[0];\n      } // if we have no buffered data then we need to make sure\n      // that the next part we append is \"independent\" if possible.\n      // So we check if the previous part is independent, and request\n      // it if it is.\n\n      if (!bufferedTime && nextPart && !nextPart.independent) {\n        if (next.partIndex === 0) {\n          const lastSegment = segments[next.mediaIndex - 1];\n          const lastSegmentLastPart = lastSegment.parts && lastSegment.parts.length && lastSegment.parts[lastSegment.parts.length - 1];\n          if (lastSegmentLastPart && lastSegmentLastPart.independent) {\n            next.mediaIndex -= 1;\n            next.partIndex = lastSegment.parts.length - 1;\n            next.independent = 'previous segment';\n          }\n        } else if (nextSegment.parts[next.partIndex - 1].independent) {\n          next.partIndex -= 1;\n          next.independent = 'previous part';\n        }\n      }\n      const ended = this.mediaSource_ && this.mediaSource_.readyState === 'ended'; // do not choose a next segment if all of the following:\n      // 1. this is the last segment in the playlist\n      // 2. end of stream has been called on the media source already\n      // 3. the player is not seeking\n\n      if (next.mediaIndex >= segments.length - 1 && ended && !this.seeking_()) {\n        return null;\n      }\n      return this.generateSegmentInfo_(next);\n    }\n    generateSegmentInfo_(options) {\n      const {\n        independent,\n        playlist,\n        mediaIndex,\n        startOfSegment,\n        isSyncRequest,\n        partIndex,\n        forceTimestampOffset,\n        getMediaInfoForTime\n      } = options;\n      const segment = playlist.segments[mediaIndex];\n      const part = typeof partIndex === 'number' && segment.parts[partIndex];\n      const segmentInfo = {\n        requestId: 'segment-loader-' + Math.random(),\n        // resolve the segment URL relative to the playlist\n        uri: part && part.resolvedUri || segment.resolvedUri,\n        // the segment's mediaIndex at the time it was requested\n        mediaIndex,\n        partIndex: part ? partIndex : null,\n        // whether or not to update the SegmentLoader's state with this\n        // segment's mediaIndex\n        isSyncRequest,\n        startOfSegment,\n        // the segment's playlist\n        playlist,\n        // unencrypted bytes of the segment\n        bytes: null,\n        // when a key is defined for this segment, the encrypted bytes\n        encryptedBytes: null,\n        // The target timestampOffset for this segment when we append it\n        // to the source buffer\n        timestampOffset: null,\n        // The timeline that the segment is in\n        timeline: segment.timeline,\n        // The expected duration of the segment in seconds\n        duration: part && part.duration || segment.duration,\n        // retain the segment in case the playlist updates while doing an async process\n        segment,\n        part,\n        byteLength: 0,\n        transmuxer: this.transmuxer_,\n        // type of getMediaInfoForTime that was used to get this segment\n        getMediaInfoForTime,\n        independent\n      };\n      const overrideCheck = typeof forceTimestampOffset !== 'undefined' ? forceTimestampOffset : this.isPendingTimestampOffset_;\n      segmentInfo.timestampOffset = this.timestampOffsetForSegment_({\n        segmentTimeline: segment.timeline,\n        currentTimeline: this.currentTimeline_,\n        startOfSegment,\n        buffered: this.buffered_(),\n        overrideCheck\n      });\n      const audioBufferedEnd = lastBufferedEnd(this.sourceUpdater_.audioBuffered());\n      if (typeof audioBufferedEnd === 'number') {\n        // since the transmuxer is using the actual timing values, but the buffer is\n        // adjusted by the timestamp offset, we must adjust the value here\n        segmentInfo.audioAppendStart = audioBufferedEnd - this.sourceUpdater_.audioTimestampOffset();\n      }\n      if (this.sourceUpdater_.videoBuffered().length) {\n        segmentInfo.gopsToAlignWith = gopsSafeToAlignWith(this.gopBuffer_,\n        // since the transmuxer is using the actual timing values, but the time is\n        // adjusted by the timestmap offset, we must adjust the value here\n        this.currentTime_() - this.sourceUpdater_.videoTimestampOffset(), this.timeMapping_);\n      }\n      return segmentInfo;\n    } // get the timestampoffset for a segment,\n    // added so that vtt segment loader can override and prevent\n    // adding timestamp offsets.\n\n    timestampOffsetForSegment_(options) {\n      return timestampOffsetForSegment(options);\n    }\n    /**\n     * Determines if the network has enough bandwidth to complete the current segment\n     * request in a timely manner. If not, the request will be aborted early and bandwidth\n     * updated to trigger a playlist switch.\n     *\n     * @param {Object} stats\n     *        Object containing stats about the request timing and size\n     * @private\n     */\n\n    earlyAbortWhenNeeded_(stats) {\n      if (this.vhs_.tech_.paused() ||\n      // Don't abort if the current playlist is on the lowestEnabledRendition\n      // TODO: Replace using timeout with a boolean indicating whether this playlist is\n      //       the lowestEnabledRendition.\n      !this.xhrOptions_.timeout ||\n      // Don't abort if we have no bandwidth information to estimate segment sizes\n      !this.playlist_.attributes.BANDWIDTH) {\n        return;\n      } // Wait at least 1 second since the first byte of data has been received before\n      // using the calculated bandwidth from the progress event to allow the bitrate\n      // to stabilize\n\n      if (Date.now() - (stats.firstBytesReceivedAt || Date.now()) < 1000) {\n        return;\n      }\n      const currentTime = this.currentTime_();\n      const measuredBandwidth = stats.bandwidth;\n      const segmentDuration = this.pendingSegment_.duration;\n      const requestTimeRemaining = Playlist.estimateSegmentRequestTime(segmentDuration, measuredBandwidth, this.playlist_, stats.bytesReceived); // Subtract 1 from the timeUntilRebuffer so we still consider an early abort\n      // if we are only left with less than 1 second when the request completes.\n      // A negative timeUntilRebuffering indicates we are already rebuffering\n\n      const timeUntilRebuffer$1 = timeUntilRebuffer(this.buffered_(), currentTime, this.vhs_.tech_.playbackRate()) - 1; // Only consider aborting early if the estimated time to finish the download\n      // is larger than the estimated time until the player runs out of forward buffer\n\n      if (requestTimeRemaining <= timeUntilRebuffer$1) {\n        return;\n      }\n      const switchCandidate = minRebufferMaxBandwidthSelector({\n        main: this.vhs_.playlists.main,\n        currentTime,\n        bandwidth: measuredBandwidth,\n        duration: this.duration_(),\n        segmentDuration,\n        timeUntilRebuffer: timeUntilRebuffer$1,\n        currentTimeline: this.currentTimeline_,\n        syncController: this.syncController_\n      });\n      if (!switchCandidate) {\n        return;\n      }\n      const rebufferingImpact = requestTimeRemaining - timeUntilRebuffer$1;\n      const timeSavedBySwitching = rebufferingImpact - switchCandidate.rebufferingImpact;\n      let minimumTimeSaving = 0.5; // If we are already rebuffering, increase the amount of variance we add to the\n      // potential round trip time of the new request so that we are not too aggressive\n      // with switching to a playlist that might save us a fraction of a second.\n\n      if (timeUntilRebuffer$1 <= TIME_FUDGE_FACTOR) {\n        minimumTimeSaving = 1;\n      }\n      if (!switchCandidate.playlist || switchCandidate.playlist.uri === this.playlist_.uri || timeSavedBySwitching < minimumTimeSaving) {\n        return;\n      } // set the bandwidth to that of the desired playlist being sure to scale by\n      // BANDWIDTH_VARIANCE and add one so the playlist selector does not exclude it\n      // don't trigger a bandwidthupdate as the bandwidth is artifial\n\n      this.bandwidth = switchCandidate.playlist.attributes.BANDWIDTH * Config.BANDWIDTH_VARIANCE + 1;\n      this.trigger('earlyabort');\n    }\n    handleAbort_(segmentInfo) {\n      this.logger_(`Aborting ${segmentInfoString(segmentInfo)}`);\n      this.mediaRequestsAborted += 1;\n    }\n    /**\n     * XHR `progress` event handler\n     *\n     * @param {Event}\n     *        The XHR `progress` event\n     * @param {Object} simpleSegment\n     *        A simplified segment object copy\n     * @private\n     */\n\n    handleProgress_(event, simpleSegment) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      this.trigger('progress');\n    }\n    handleTrackInfo_(simpleSegment, trackInfo) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      if (this.checkForIllegalMediaSwitch(trackInfo)) {\n        return;\n      }\n      trackInfo = trackInfo || {}; // When we have track info, determine what media types this loader is dealing with.\n      // Guard against cases where we're not getting track info at all until we are\n      // certain that all streams will provide it.\n\n      if (!shallowEqual(this.currentMediaInfo_, trackInfo)) {\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n        this.startingMediaInfo_ = trackInfo;\n        this.currentMediaInfo_ = trackInfo;\n        this.logger_('trackinfo update', trackInfo);\n        this.trigger('trackinfo');\n      } // trackinfo may cause an abort if the trackinfo\n      // causes a codec change to an unsupported codec.\n\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // set trackinfo on the pending segment so that\n      // it can append.\n\n      this.pendingSegment_.trackInfo = trackInfo; // check if any calls were waiting on the track info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }\n    handleTimingInfo_(simpleSegment, mediaType, timeType, time) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      const segmentInfo = this.pendingSegment_;\n      const timingInfoProperty = timingInfoPropertyForMedia(mediaType);\n      segmentInfo[timingInfoProperty] = segmentInfo[timingInfoProperty] || {};\n      segmentInfo[timingInfoProperty][timeType] = time;\n      this.logger_(`timinginfo: ${mediaType} - ${timeType} - ${time}`); // check if any calls were waiting on the timing info\n\n      if (this.hasEnoughInfoToAppend_()) {\n        this.processCallQueue_();\n      }\n    }\n    handleCaptions_(simpleSegment, captionData) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // This could only happen with fmp4 segments, but\n      // should still not happen in general\n\n      if (captionData.length === 0) {\n        this.logger_('SegmentLoader received no captions from a caption event');\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // Wait until we have some video data so that caption timing\n      // can be adjusted by the timestamp offset\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.caption.push(this.handleCaptions_.bind(this, simpleSegment, captionData));\n        return;\n      }\n      const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset();\n      const captionTracks = {}; // get total start/end and captions for each track/stream\n\n      captionData.forEach(caption => {\n        // caption.stream is actually a track name...\n        // set to the existing values in tracks or default values\n        captionTracks[caption.stream] = captionTracks[caption.stream] || {\n          // Infinity, as any other value will be less than this\n          startTime: Infinity,\n          captions: [],\n          // 0 as an other value will be more than this\n          endTime: 0\n        };\n        const captionTrack = captionTracks[caption.stream];\n        captionTrack.startTime = Math.min(captionTrack.startTime, caption.startTime + timestampOffset);\n        captionTrack.endTime = Math.max(captionTrack.endTime, caption.endTime + timestampOffset);\n        captionTrack.captions.push(caption);\n      });\n      Object.keys(captionTracks).forEach(trackName => {\n        const {\n          startTime,\n          endTime,\n          captions\n        } = captionTracks[trackName];\n        const inbandTextTracks = this.inbandTextTracks_;\n        this.logger_(`adding cues from ${startTime} -> ${endTime} for ${trackName}`);\n        createCaptionsTrackIfNotExists(inbandTextTracks, this.vhs_.tech_, trackName); // clear out any cues that start and end at the same time period for the same track.\n        // We do this because a rendition change that also changes the timescale for captions\n        // will result in captions being re-parsed for certain segments. If we add them again\n        // without clearing we will have two of the same captions visible.\n\n        removeCuesFromTrack(startTime, endTime, inbandTextTracks[trackName]);\n        addCaptionData({\n          captionArray: captions,\n          inbandTextTracks,\n          timestampOffset\n        });\n      }); // Reset stored captions since we added parsed\n      // captions to a text track at this point\n\n      if (this.transmuxer_) {\n        this.transmuxer_.postMessage({\n          action: 'clearParsedMp4Captions'\n        });\n      }\n    }\n    handleId3_(simpleSegment, id3Frames, dispatchType) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // we need to have appended data in order for the timestamp offset to be set\n\n      if (!segmentInfo.hasAppendedData_) {\n        this.metadataQueue_.id3.push(this.handleId3_.bind(this, simpleSegment, id3Frames, dispatchType));\n        return;\n      }\n      const timestampOffset = this.sourceUpdater_.videoTimestampOffset() === null ? this.sourceUpdater_.audioTimestampOffset() : this.sourceUpdater_.videoTimestampOffset(); // There's potentially an issue where we could double add metadata if there's a muxed\n      // audio/video source with a metadata track, and an alt audio with a metadata track.\n      // However, this probably won't happen, and if it does it can be handled then.\n\n      createMetadataTrackIfNotExists(this.inbandTextTracks_, dispatchType, this.vhs_.tech_);\n      addMetadata({\n        inbandTextTracks: this.inbandTextTracks_,\n        metadataArray: id3Frames,\n        timestampOffset,\n        videoDuration: this.duration_()\n      });\n    }\n    processMetadataQueue_() {\n      this.metadataQueue_.id3.forEach(fn => fn());\n      this.metadataQueue_.caption.forEach(fn => fn());\n      this.metadataQueue_.id3 = [];\n      this.metadataQueue_.caption = [];\n    }\n    processCallQueue_() {\n      const callQueue = this.callQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.callQueue_ = [];\n      callQueue.forEach(fun => fun());\n    }\n    processLoadQueue_() {\n      const loadQueue = this.loadQueue_; // Clear out the queue before the queued functions are run, since some of the\n      // functions may check the length of the load queue and default to pushing themselves\n      // back onto the queue.\n\n      this.loadQueue_ = [];\n      loadQueue.forEach(fun => fun());\n    }\n    /**\n     * Determines whether the loader has enough info to load the next segment.\n     *\n     * @return {boolean}\n     *         Whether or not the loader has enough info to load the next segment\n     */\n\n    hasEnoughInfoToLoad_() {\n      // Since primary timing goes by video, only the audio loader potentially needs to wait\n      // to load.\n      if (this.loaderType_ !== 'audio') {\n        return true;\n      }\n      const segmentInfo = this.pendingSegment_; // A fill buffer must have already run to establish a pending segment before there's\n      // enough info to load.\n\n      if (!segmentInfo) {\n        return false;\n      } // The first segment can and should be loaded immediately so that source buffers are\n      // created together (before appending). Source buffer creation uses the presence of\n      // audio and video data to determine whether to create audio/video source buffers, and\n      // uses processed (transmuxed or parsed) media to determine the types required.\n\n      if (!this.getCurrentMediaInfo_()) {\n        return true;\n      }\n      if (\n      // Technically, instead of waiting to load a segment on timeline changes, a segment\n      // can be requested and downloaded and only wait before it is transmuxed or parsed.\n      // But in practice, there are a few reasons why it is better to wait until a loader\n      // is ready to append that segment before requesting and downloading:\n      //\n      // 1. Because audio and main loaders cross discontinuities together, if this loader\n      //    is waiting for the other to catch up, then instead of requesting another\n      //    segment and using up more bandwidth, by not yet loading, more bandwidth is\n      //    allotted to the loader currently behind.\n      // 2. media-segment-request doesn't have to have logic to consider whether a segment\n      // is ready to be processed or not, isolating the queueing behavior to the loader.\n      // 3. The audio loader bases some of its segment properties on timing information\n      //    provided by the main loader, meaning that, if the logic for waiting on\n      //    processing was in media-segment-request, then it would also need to know how\n      //    to re-generate the segment information after the main loader caught up.\n      shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n      return true;\n    }\n    getCurrentMediaInfo_(segmentInfo = this.pendingSegment_) {\n      return segmentInfo && segmentInfo.trackInfo || this.currentMediaInfo_;\n    }\n    getMediaInfo_(segmentInfo = this.pendingSegment_) {\n      return this.getCurrentMediaInfo_(segmentInfo) || this.startingMediaInfo_;\n    }\n    hasEnoughInfoToAppend_() {\n      if (!this.sourceUpdater_.ready()) {\n        return false;\n      } // If content needs to be removed or the loader is waiting on an append reattempt,\n      // then no additional content should be appended until the prior append is resolved.\n\n      if (this.waitingOnRemove_ || this.quotaExceededErrorRetryTimeout_) {\n        return false;\n      }\n      const segmentInfo = this.pendingSegment_;\n      const trackInfo = this.getCurrentMediaInfo_(); // no segment to append any data for or\n      // we do not have information on this specific\n      // segment yet\n\n      if (!segmentInfo || !trackInfo) {\n        return false;\n      }\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      if (hasVideo && !segmentInfo.videoTimingInfo) {\n        return false;\n      } // muxed content only relies on video timing information for now.\n\n      if (hasAudio && !this.audioDisabled_ && !isMuxed && !segmentInfo.audioTimingInfo) {\n        return false;\n      }\n      if (shouldWaitForTimelineChange({\n        timelineChangeController: this.timelineChangeController_,\n        currentTimeline: this.currentTimeline_,\n        segmentTimeline: segmentInfo.timeline,\n        loaderType: this.loaderType_,\n        audioDisabled: this.audioDisabled_\n      })) {\n        return false;\n      }\n      return true;\n    }\n    handleData_(simpleSegment, result) {\n      this.earlyAbortWhenNeeded_(simpleSegment.stats);\n      if (this.checkForAbort_(simpleSegment.requestId)) {\n        return;\n      } // If there's anything in the call queue, then this data came later and should be\n      // executed after the calls currently queued.\n\n      if (this.callQueue_.length || !this.hasEnoughInfoToAppend_()) {\n        this.callQueue_.push(this.handleData_.bind(this, simpleSegment, result));\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // update the time mapping so we can translate from display time to media time\n\n      this.setTimeMapping_(segmentInfo.timeline); // for tracking overall stats\n\n      this.updateMediaSecondsLoaded_(segmentInfo.part || segmentInfo.segment); // Note that the state isn't changed from loading to appending. This is because abort\n      // logic may change behavior depending on the state, and changing state too early may\n      // inflate our estimates of bandwidth. In the future this should be re-examined to\n      // note more granular states.\n      // don't process and append data if the mediaSource is closed\n\n      if (this.mediaSource_.readyState === 'closed') {\n        return;\n      } // if this request included an initialization segment, save that data\n      // to the initSegment cache\n\n      if (simpleSegment.map) {\n        simpleSegment.map = this.initSegmentForMap(simpleSegment.map, true); // move over init segment properties to media request\n\n        segmentInfo.segment.map = simpleSegment.map;\n      } // if this request included a segment key, save that data in the cache\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n      segmentInfo.isFmp4 = simpleSegment.isFmp4;\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      if (segmentInfo.isFmp4) {\n        this.trigger('fmp4');\n        segmentInfo.timingInfo.start = segmentInfo[timingInfoPropertyForMedia(result.type)].start;\n      } else {\n        const trackInfo = this.getCurrentMediaInfo_();\n        const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n        let firstVideoFrameTimeForData;\n        if (useVideoTimingInfo) {\n          firstVideoFrameTimeForData = segmentInfo.videoTimingInfo.start;\n        } // Segment loader knows more about segment timing than the transmuxer (in certain\n        // aspects), so make any changes required for a more accurate start time.\n        // Don't set the end time yet, as the segment may not be finished processing.\n\n        segmentInfo.timingInfo.start = this.trueSegmentStart_({\n          currentStart: segmentInfo.timingInfo.start,\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex,\n          currentVideoTimestampOffset: this.sourceUpdater_.videoTimestampOffset(),\n          useVideoTimingInfo,\n          firstVideoFrameTimeForData,\n          videoTimingInfo: segmentInfo.videoTimingInfo,\n          audioTimingInfo: segmentInfo.audioTimingInfo\n        });\n      } // Init segments for audio and video only need to be appended in certain cases. Now\n      // that data is about to be appended, we can check the final cases to determine\n      // whether we should append an init segment.\n\n      this.updateAppendInitSegmentStatus(segmentInfo, result.type); // Timestamp offset should be updated once we get new data and have its timing info,\n      // as we use the start of the segment to offset the best guess (playlist provided)\n      // timestamp offset.\n\n      this.updateSourceBufferTimestampOffset_(segmentInfo); // if this is a sync request we need to determine whether it should\n      // be appended or not.\n\n      if (segmentInfo.isSyncRequest) {\n        // first save/update our timing info for this segment.\n        // this is what allows us to choose an accurate segment\n        // and the main reason we make a sync request.\n        this.updateTimingInfoEnd_(segmentInfo);\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n        const next = this.chooseNextRequest_(); // If the sync request isn't the segment that would be requested next\n        // after taking into account its timing info, do not append it.\n\n        if (next.mediaIndex !== segmentInfo.mediaIndex || next.partIndex !== segmentInfo.partIndex) {\n          this.logger_('sync segment was incorrect, not appending');\n          return;\n        } // otherwise append it like any other segment as our guess was correct.\n\n        this.logger_('sync segment was correct, appending');\n      } // Save some state so that in the future anything waiting on first append (and/or\n      // timestamp offset(s)) can process immediately. While the extra state isn't optimal,\n      // we need some notion of whether the timestamp offset or other relevant information\n      // has had a chance to be set.\n\n      segmentInfo.hasAppendedData_ = true; // Now that the timestamp offset should be set, we can append any waiting ID3 tags.\n\n      this.processMetadataQueue_();\n      this.appendData_(segmentInfo, result);\n    }\n    updateAppendInitSegmentStatus(segmentInfo, type) {\n      // alt audio doesn't manage timestamp offset\n      if (this.loaderType_ === 'main' && typeof segmentInfo.timestampOffset === 'number' &&\n      // in the case that we're handling partial data, we don't want to append an init\n      // segment for each chunk\n      !segmentInfo.changedTimestampOffset) {\n        // if the timestamp offset changed, the timeline may have changed, so we have to re-\n        // append init segments\n        this.appendInitSegment_ = {\n          audio: true,\n          video: true\n        };\n      }\n      if (this.playlistOfLastInitSegment_[type] !== segmentInfo.playlist) {\n        // make sure we append init segment on playlist changes, in case the media config\n        // changed\n        this.appendInitSegment_[type] = true;\n      }\n    }\n    getInitSegmentAndUpdateState_({\n      type,\n      initSegment,\n      map,\n      playlist\n    }) {\n      // \"The EXT-X-MAP tag specifies how to obtain the Media Initialization Section\n      // (Section 3) required to parse the applicable Media Segments.  It applies to every\n      // Media Segment that appears after it in the Playlist until the next EXT-X-MAP tag\n      // or until the end of the playlist.\"\n      // https://tools.ietf.org/html/draft-pantos-http-live-streaming-23#section-4.3.2.5\n      if (map) {\n        const id = initSegmentId(map);\n        if (this.activeInitSegmentId_ === id) {\n          // don't need to re-append the init segment if the ID matches\n          return null;\n        } // a map-specified init segment takes priority over any transmuxed (or otherwise\n        // obtained) init segment\n        //\n        // this also caches the init segment for later use\n\n        initSegment = this.initSegmentForMap(map, true).bytes;\n        this.activeInitSegmentId_ = id;\n      } // We used to always prepend init segments for video, however, that shouldn't be\n      // necessary. Instead, we should only append on changes, similar to what we've always\n      // done for audio. This is more important (though may not be that important) for\n      // frame-by-frame appending for LHLS, simply because of the increased quantity of\n      // appends.\n\n      if (initSegment && this.appendInitSegment_[type]) {\n        // Make sure we track the playlist that we last used for the init segment, so that\n        // we can re-append the init segment in the event that we get data from a new\n        // playlist. Discontinuities and track changes are handled in other sections.\n        this.playlistOfLastInitSegment_[type] = playlist; // Disable future init segment appends for this type. Until a change is necessary.\n\n        this.appendInitSegment_[type] = false; // we need to clear out the fmp4 active init segment id, since\n        // we are appending the muxer init segment\n\n        this.activeInitSegmentId_ = null;\n        return initSegment;\n      }\n      return null;\n    }\n    handleQuotaExceededError_({\n      segmentInfo,\n      type,\n      bytes\n    }, error) {\n      const audioBuffered = this.sourceUpdater_.audioBuffered();\n      const videoBuffered = this.sourceUpdater_.videoBuffered(); // For now we're ignoring any notion of gaps in the buffer, but they, in theory,\n      // should be cleared out during the buffer removals. However, log in case it helps\n      // debug.\n\n      if (audioBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the audio buffer: ' + timeRangesToArray(audioBuffered).join(', '));\n      }\n      if (videoBuffered.length > 1) {\n        this.logger_('On QUOTA_EXCEEDED_ERR, found gaps in the video buffer: ' + timeRangesToArray(videoBuffered).join(', '));\n      }\n      const audioBufferStart = audioBuffered.length ? audioBuffered.start(0) : 0;\n      const audioBufferEnd = audioBuffered.length ? audioBuffered.end(audioBuffered.length - 1) : 0;\n      const videoBufferStart = videoBuffered.length ? videoBuffered.start(0) : 0;\n      const videoBufferEnd = videoBuffered.length ? videoBuffered.end(videoBuffered.length - 1) : 0;\n      if (audioBufferEnd - audioBufferStart <= MIN_BACK_BUFFER && videoBufferEnd - videoBufferStart <= MIN_BACK_BUFFER) {\n        // Can't remove enough buffer to make room for new segment (or the browser doesn't\n        // allow for appends of segments this size). In the future, it may be possible to\n        // split up the segment and append in pieces, but for now, error out this playlist\n        // in an attempt to switch to a more manageable rendition.\n        this.logger_('On QUOTA_EXCEEDED_ERR, single segment too large to append to ' + 'buffer, triggering an error. ' + `Appended byte length: ${bytes.byteLength}, ` + `audio buffer: ${timeRangesToArray(audioBuffered).join(', ')}, ` + `video buffer: ${timeRangesToArray(videoBuffered).join(', ')}, `);\n        this.error({\n          message: 'Quota exceeded error with append of a single segment of content',\n          excludeUntil: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // To try to resolve the quota exceeded error, clear back buffer and retry. This means\n      // that the segment-loader should block on future events until this one is handled, so\n      // that it doesn't keep moving onto further segments. Adding the call to the call\n      // queue will prevent further appends until waitingOnRemove_ and\n      // quotaExceededErrorRetryTimeout_ are cleared.\n      //\n      // Note that this will only block the current loader. In the case of demuxed content,\n      // the other load may keep filling as fast as possible. In practice, this should be\n      // OK, as it is a rare case when either audio has a high enough bitrate to fill up a\n      // source buffer, or video fills without enough room for audio to append (and without\n      // the availability of clearing out seconds of back buffer to make room for audio).\n      // But it might still be good to handle this case in the future as a TODO.\n\n      this.waitingOnRemove_ = true;\n      this.callQueue_.push(this.appendToSourceBuffer_.bind(this, {\n        segmentInfo,\n        type,\n        bytes\n      }));\n      const currentTime = this.currentTime_(); // Try to remove as much audio and video as possible to make room for new content\n      // before retrying.\n\n      const timeToRemoveUntil = currentTime - MIN_BACK_BUFFER;\n      this.logger_(`On QUOTA_EXCEEDED_ERR, removing audio/video from 0 to ${timeToRemoveUntil}`);\n      this.remove(0, timeToRemoveUntil, () => {\n        this.logger_(`On QUOTA_EXCEEDED_ERR, retrying append in ${MIN_BACK_BUFFER}s`);\n        this.waitingOnRemove_ = false; // wait the length of time alotted in the back buffer to prevent wasted\n        // attempts (since we can't clear less than the minimum)\n\n        this.quotaExceededErrorRetryTimeout_ = window.setTimeout(() => {\n          this.logger_('On QUOTA_EXCEEDED_ERR, re-processing call queue');\n          this.quotaExceededErrorRetryTimeout_ = null;\n          this.processCallQueue_();\n        }, MIN_BACK_BUFFER * 1000);\n      }, true);\n    }\n    handleAppendError_({\n      segmentInfo,\n      type,\n      bytes\n    }, error) {\n      // if there's no error, nothing to do\n      if (!error) {\n        return;\n      }\n      if (error.code === QUOTA_EXCEEDED_ERR) {\n        this.handleQuotaExceededError_({\n          segmentInfo,\n          type,\n          bytes\n        }); // A quota exceeded error should be recoverable with a future re-append, so no need\n        // to trigger an append error.\n\n        return;\n      }\n      this.logger_('Received non QUOTA_EXCEEDED_ERR on append', error);\n      this.error(`${type} append of ${bytes.length}b failed for segment ` + `#${segmentInfo.mediaIndex} in playlist ${segmentInfo.playlist.id}`); // If an append errors, we often can't recover.\n      // (see https://w3c.github.io/media-source/#sourcebuffer-append-error).\n      //\n      // Trigger a special error so that it can be handled separately from normal,\n      // recoverable errors.\n\n      this.trigger('appenderror');\n    }\n    appendToSourceBuffer_({\n      segmentInfo,\n      type,\n      initSegment,\n      data,\n      bytes\n    }) {\n      // If this is a re-append, bytes were already created and don't need to be recreated\n      if (!bytes) {\n        const segments = [data];\n        let byteLength = data.byteLength;\n        if (initSegment) {\n          // if the media initialization segment is changing, append it before the content\n          // segment\n          segments.unshift(initSegment);\n          byteLength += initSegment.byteLength;\n        } // Technically we should be OK appending the init segment separately, however, we\n        // haven't yet tested that, and prepending is how we have always done things.\n\n        bytes = concatSegments({\n          bytes: byteLength,\n          segments\n        });\n      }\n      this.sourceUpdater_.appendBuffer({\n        segmentInfo,\n        type,\n        bytes\n      }, this.handleAppendError_.bind(this, {\n        segmentInfo,\n        type,\n        bytes\n      }));\n    }\n    handleSegmentTimingInfo_(type, requestId, segmentTimingInfo) {\n      if (!this.pendingSegment_ || requestId !== this.pendingSegment_.requestId) {\n        return;\n      }\n      const segment = this.pendingSegment_.segment;\n      const timingInfoProperty = `${type}TimingInfo`;\n      if (!segment[timingInfoProperty]) {\n        segment[timingInfoProperty] = {};\n      }\n      segment[timingInfoProperty].transmuxerPrependedSeconds = segmentTimingInfo.prependedContentDuration || 0;\n      segment[timingInfoProperty].transmuxedPresentationStart = segmentTimingInfo.start.presentation;\n      segment[timingInfoProperty].transmuxedDecodeStart = segmentTimingInfo.start.decode;\n      segment[timingInfoProperty].transmuxedPresentationEnd = segmentTimingInfo.end.presentation;\n      segment[timingInfoProperty].transmuxedDecodeEnd = segmentTimingInfo.end.decode; // mainly used as a reference for debugging\n\n      segment[timingInfoProperty].baseMediaDecodeTime = segmentTimingInfo.baseMediaDecodeTime;\n    }\n    appendData_(segmentInfo, result) {\n      const {\n        type,\n        data\n      } = result;\n      if (!data || !data.byteLength) {\n        return;\n      }\n      if (type === 'audio' && this.audioDisabled_) {\n        return;\n      }\n      const initSegment = this.getInitSegmentAndUpdateState_({\n        type,\n        initSegment: result.initSegment,\n        playlist: segmentInfo.playlist,\n        map: segmentInfo.isFmp4 ? segmentInfo.segment.map : null\n      });\n      this.appendToSourceBuffer_({\n        segmentInfo,\n        type,\n        initSegment,\n        data\n      });\n    }\n    /**\n     * load a specific segment from a request into the buffer\n     *\n     * @private\n     */\n\n    loadSegment_(segmentInfo) {\n      this.state = 'WAITING';\n      this.pendingSegment_ = segmentInfo;\n      this.trimBackBuffer_(segmentInfo);\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        if (this.transmuxer_) {\n          this.transmuxer_.postMessage({\n            action: 'clearAllMp4Captions'\n          });\n        }\n      }\n      if (!this.hasEnoughInfoToLoad_()) {\n        this.loadQueue_.push(() => {\n          // regenerate the audioAppendStart, timestampOffset, etc as they\n          // may have changed since this function was added to the queue.\n          const options = _extends$1({}, segmentInfo, {\n            forceTimestampOffset: true\n          });\n          _extends$1(segmentInfo, this.generateSegmentInfo_(options));\n          this.isPendingTimestampOffset_ = false;\n          this.updateTransmuxerAndRequestSegment_(segmentInfo);\n        });\n        return;\n      }\n      this.updateTransmuxerAndRequestSegment_(segmentInfo);\n    }\n    updateTransmuxerAndRequestSegment_(segmentInfo) {\n      // We'll update the source buffer's timestamp offset once we have transmuxed data, but\n      // the transmuxer still needs to be updated before then.\n      //\n      // Even though keepOriginalTimestamps is set to true for the transmuxer, timestamp\n      // offset must be passed to the transmuxer for stream correcting adjustments.\n      if (this.shouldUpdateTransmuxerTimestampOffset_(segmentInfo.timestampOffset)) {\n        this.gopBuffer_.length = 0; // gopsToAlignWith was set before the GOP buffer was cleared\n\n        segmentInfo.gopsToAlignWith = [];\n        this.timeMapping_ = 0; // reset values in the transmuxer since a discontinuity should start fresh\n\n        this.transmuxer_.postMessage({\n          action: 'reset'\n        });\n        this.transmuxer_.postMessage({\n          action: 'setTimestampOffset',\n          timestampOffset: segmentInfo.timestampOffset\n        });\n      }\n      const simpleSegment = this.createSimplifiedSegmentObj_(segmentInfo);\n      const isEndOfStream = this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex);\n      const isWalkingForward = this.mediaIndex !== null;\n      const isDiscontinuity = segmentInfo.timeline !== this.currentTimeline_ &&\n      // currentTimeline starts at -1, so we shouldn't end the timeline switching to 0,\n      // the first timeline\n      segmentInfo.timeline > 0;\n      const isEndOfTimeline = isEndOfStream || isWalkingForward && isDiscontinuity;\n      this.logger_(`Requesting ${segmentInfoString(segmentInfo)}`); // If there's an init segment associated with this segment, but it is not cached (identified by a lack of bytes),\n      // then this init segment has never been seen before and should be appended.\n      //\n      // At this point the content type (audio/video or both) is not yet known, but it should be safe to set\n      // both to true and leave the decision of whether to append the init segment to append time.\n\n      if (simpleSegment.map && !simpleSegment.map.bytes) {\n        this.logger_('going to request init segment.');\n        this.appendInitSegment_ = {\n          video: true,\n          audio: true\n        };\n      }\n      segmentInfo.abortRequests = mediaSegmentRequest({\n        xhr: this.vhs_.xhr,\n        xhrOptions: this.xhrOptions_,\n        decryptionWorker: this.decrypter_,\n        segment: simpleSegment,\n        abortFn: this.handleAbort_.bind(this, segmentInfo),\n        progressFn: this.handleProgress_.bind(this),\n        trackInfoFn: this.handleTrackInfo_.bind(this),\n        timingInfoFn: this.handleTimingInfo_.bind(this),\n        videoSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'video', segmentInfo.requestId),\n        audioSegmentTimingInfoFn: this.handleSegmentTimingInfo_.bind(this, 'audio', segmentInfo.requestId),\n        captionsFn: this.handleCaptions_.bind(this),\n        isEndOfTimeline,\n        endedTimelineFn: () => {\n          this.logger_('received endedtimeline callback');\n        },\n        id3Fn: this.handleId3_.bind(this),\n        dataFn: this.handleData_.bind(this),\n        doneFn: this.segmentRequestFinished_.bind(this),\n        onTransmuxerLog: ({\n          message,\n          level,\n          stream\n        }) => {\n          this.logger_(`${segmentInfoString(segmentInfo)} logged from transmuxer stream ${stream} as a ${level}: ${message}`);\n        }\n      });\n    }\n    /**\n     * trim the back buffer so that we don't have too much data\n     * in the source buffer\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     */\n\n    trimBackBuffer_(segmentInfo) {\n      const removeToTime = safeBackBufferTrimTime(this.seekable_(), this.currentTime_(), this.playlist_.targetDuration || 10); // Chrome has a hard limit of 150MB of\n      // buffer and a very conservative \"garbage collector\"\n      // We manually clear out the old buffer to ensure\n      // we don't trigger the QuotaExceeded error\n      // on the source buffer during subsequent appends\n\n      if (removeToTime > 0) {\n        this.remove(0, removeToTime);\n      }\n    }\n    /**\n     * created a simplified copy of the segment object with just the\n     * information necessary to perform the XHR and decryption\n     *\n     * @private\n     *\n     * @param {Object} segmentInfo - the current segment\n     * @return {Object} a simplified segment object copy\n     */\n\n    createSimplifiedSegmentObj_(segmentInfo) {\n      const segment = segmentInfo.segment;\n      const part = segmentInfo.part;\n      const simpleSegment = {\n        resolvedUri: part ? part.resolvedUri : segment.resolvedUri,\n        byterange: part ? part.byterange : segment.byterange,\n        requestId: segmentInfo.requestId,\n        transmuxer: segmentInfo.transmuxer,\n        audioAppendStart: segmentInfo.audioAppendStart,\n        gopsToAlignWith: segmentInfo.gopsToAlignWith,\n        part: segmentInfo.part\n      };\n      const previousSegment = segmentInfo.playlist.segments[segmentInfo.mediaIndex - 1];\n      if (previousSegment && previousSegment.timeline === segment.timeline) {\n        // The baseStartTime of a segment is used to handle rollover when probing the TS\n        // segment to retrieve timing information. Since the probe only looks at the media's\n        // times (e.g., PTS and DTS values of the segment), and doesn't consider the\n        // player's time (e.g., player.currentTime()), baseStartTime should reflect the\n        // media time as well. transmuxedDecodeEnd represents the end time of a segment, in\n        // seconds of media time, so should be used here. The previous segment is used since\n        // the end of the previous segment should represent the beginning of the current\n        // segment, so long as they are on the same timeline.\n        if (previousSegment.videoTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.videoTimingInfo.transmuxedDecodeEnd;\n        } else if (previousSegment.audioTimingInfo) {\n          simpleSegment.baseStartTime = previousSegment.audioTimingInfo.transmuxedDecodeEnd;\n        }\n      }\n      if (segment.key) {\n        // if the media sequence is greater than 2^32, the IV will be incorrect\n        // assuming 10s segments, that would be about 1300 years\n        const iv = segment.key.iv || new Uint32Array([0, 0, 0, segmentInfo.mediaIndex + segmentInfo.playlist.mediaSequence]);\n        simpleSegment.key = this.segmentKey(segment.key);\n        simpleSegment.key.iv = iv;\n      }\n      if (segment.map) {\n        simpleSegment.map = this.initSegmentForMap(segment.map);\n      }\n      return simpleSegment;\n    }\n    saveTransferStats_(stats) {\n      // every request counts as a media request even if it has been aborted\n      // or canceled due to a timeout\n      this.mediaRequests += 1;\n      if (stats) {\n        this.mediaBytesTransferred += stats.bytesReceived;\n        this.mediaTransferDuration += stats.roundTripTime;\n      }\n    }\n    saveBandwidthRelatedStats_(duration, stats) {\n      // byteLength will be used for throughput, and should be based on bytes receieved,\n      // which we only know at the end of the request and should reflect total bytes\n      // downloaded rather than just bytes processed from components of the segment\n      this.pendingSegment_.byteLength = stats.bytesReceived;\n      if (duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(`Ignoring segment's bandwidth because its duration of ${duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n        return;\n      }\n      this.bandwidth = stats.bandwidth;\n      this.roundTrip = stats.roundTripTime;\n    }\n    handleTimeout_() {\n      // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functinality between segment loaders\n      this.mediaRequestsTimedout += 1;\n      this.bandwidth = 1;\n      this.roundTrip = NaN;\n      this.trigger('bandwidthupdate');\n      this.trigger('timeout');\n    }\n    /**\n     * Handle the callback from the segmentRequest function and set the\n     * associated SegmentLoader state and errors if necessary\n     *\n     * @private\n     */\n\n    segmentRequestFinished_(error, simpleSegment, result) {\n      // TODO handle special cases, e.g., muxed audio/video but only audio in the segment\n      // check the call queue directly since this function doesn't need to deal with any\n      // data, and can continue even if the source buffers are not set up and we didn't get\n      // any data from the segment\n      if (this.callQueue_.length) {\n        this.callQueue_.push(this.segmentRequestFinished_.bind(this, error, simpleSegment, result));\n        return;\n      }\n      this.saveTransferStats_(simpleSegment.stats); // The request was aborted and the SegmentLoader has already been reset\n\n      if (!this.pendingSegment_) {\n        return;\n      } // the request was aborted and the SegmentLoader has already started\n      // another request. this can happen when the timeout for an aborted\n      // request triggers due to a limitation in the XHR library\n      // do not count this as any sort of request or we risk double-counting\n\n      if (simpleSegment.requestId !== this.pendingSegment_.requestId) {\n        return;\n      } // an error occurred from the active pendingSegment_ so reset everything\n\n      if (error) {\n        this.pendingSegment_ = null;\n        this.state = 'READY'; // aborts are not a true error condition and nothing corrective needs to be done\n\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          return;\n        }\n        this.pause(); // the error is really just that at least one of the requests timed-out\n        // set the bandwidth to a very low value and trigger an ABR switch to\n        // take emergency action\n\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n          return;\n        } // if control-flow has arrived here, then the error is real\n        // emit an error event to exclude the current playlist\n\n        this.mediaRequestsErrored += 1;\n        this.error(error);\n        this.trigger('error');\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // the response was a success so set any bandwidth stats the request\n      // generated for ABR purposes\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats);\n      segmentInfo.endOfAllRequests = simpleSegment.endOfAllRequests;\n      if (result.gopInfo) {\n        this.gopBuffer_ = updateGopBuffer(this.gopBuffer_, result.gopInfo, this.safeAppend_);\n      } // Although we may have already started appending on progress, we shouldn't switch the\n      // state away from loading until we are officially done loading the segment data.\n\n      this.state = 'APPENDING'; // used for testing\n\n      this.trigger('appending');\n      this.waitForAppendsToComplete_(segmentInfo);\n    }\n    setTimeMapping_(timeline) {\n      const timelineMapping = this.syncController_.mappingForTimeline(timeline);\n      if (timelineMapping !== null) {\n        this.timeMapping_ = timelineMapping;\n      }\n    }\n    updateMediaSecondsLoaded_(segment) {\n      if (typeof segment.start === 'number' && typeof segment.end === 'number') {\n        this.mediaSecondsLoaded += segment.end - segment.start;\n      } else {\n        this.mediaSecondsLoaded += segment.duration;\n      }\n    }\n    shouldUpdateTransmuxerTimestampOffset_(timestampOffset) {\n      if (timestampOffset === null) {\n        return false;\n      } // note that we're potentially using the same timestamp offset for both video and\n      // audio\n\n      if (this.loaderType_ === 'main' && timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        return true;\n      }\n      if (!this.audioDisabled_ && timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        return true;\n      }\n      return false;\n    }\n    trueSegmentStart_({\n      currentStart,\n      playlist,\n      mediaIndex,\n      firstVideoFrameTimeForData,\n      currentVideoTimestampOffset,\n      useVideoTimingInfo,\n      videoTimingInfo,\n      audioTimingInfo\n    }) {\n      if (typeof currentStart !== 'undefined') {\n        // if start was set once, keep using it\n        return currentStart;\n      }\n      if (!useVideoTimingInfo) {\n        return audioTimingInfo.start;\n      }\n      const previousSegment = playlist.segments[mediaIndex - 1]; // The start of a segment should be the start of the first full frame contained\n      // within that segment. Since the transmuxer maintains a cache of incomplete data\n      // from and/or the last frame seen, the start time may reflect a frame that starts\n      // in the previous segment. Check for that case and ensure the start time is\n      // accurate for the segment.\n\n      if (mediaIndex === 0 || !previousSegment || typeof previousSegment.start === 'undefined' || previousSegment.end !== firstVideoFrameTimeForData + currentVideoTimestampOffset) {\n        return firstVideoFrameTimeForData;\n      }\n      return videoTimingInfo.start;\n    }\n    waitForAppendsToComplete_(segmentInfo) {\n      const trackInfo = this.getCurrentMediaInfo_(segmentInfo);\n      if (!trackInfo) {\n        this.error({\n          message: 'No starting media returned, likely due to an unsupported media format.',\n          playlistExclusionDuration: Infinity\n        });\n        this.trigger('error');\n        return;\n      } // Although transmuxing is done, appends may not yet be finished. Throw a marker\n      // on each queue this loader is responsible for to ensure that the appends are\n      // complete.\n\n      const {\n        hasAudio,\n        hasVideo,\n        isMuxed\n      } = trackInfo;\n      const waitForVideo = this.loaderType_ === 'main' && hasVideo;\n      const waitForAudio = !this.audioDisabled_ && hasAudio && !isMuxed;\n      segmentInfo.waitingOnAppends = 0; // segments with no data\n\n      if (!segmentInfo.hasAppendedData_) {\n        if (!segmentInfo.timingInfo && typeof segmentInfo.timestampOffset === 'number') {\n          // When there's no audio or video data in the segment, there's no audio or video\n          // timing information.\n          //\n          // If there's no audio or video timing information, then the timestamp offset\n          // can't be adjusted to the appropriate value for the transmuxer and source\n          // buffers.\n          //\n          // Therefore, the next segment should be used to set the timestamp offset.\n          this.isPendingTimestampOffset_ = true;\n        } // override settings for metadata only segments\n\n        segmentInfo.timingInfo = {\n          start: 0\n        };\n        segmentInfo.waitingOnAppends++;\n        if (!this.isPendingTimestampOffset_) {\n          // update the timestampoffset\n          this.updateSourceBufferTimestampOffset_(segmentInfo); // make sure the metadata queue is processed even though we have\n          // no video/audio data.\n\n          this.processMetadataQueue_();\n        } // append is \"done\" instantly with no data.\n\n        this.checkAppendsDone_(segmentInfo);\n        return;\n      } // Since source updater could call back synchronously, do the increments first.\n\n      if (waitForVideo) {\n        segmentInfo.waitingOnAppends++;\n      }\n      if (waitForAudio) {\n        segmentInfo.waitingOnAppends++;\n      }\n      if (waitForVideo) {\n        this.sourceUpdater_.videoQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n      if (waitForAudio) {\n        this.sourceUpdater_.audioQueueCallback(this.checkAppendsDone_.bind(this, segmentInfo));\n      }\n    }\n    checkAppendsDone_(segmentInfo) {\n      if (this.checkForAbort_(segmentInfo.requestId)) {\n        return;\n      }\n      segmentInfo.waitingOnAppends--;\n      if (segmentInfo.waitingOnAppends === 0) {\n        this.handleAppendsDone_();\n      }\n    }\n    checkForIllegalMediaSwitch(trackInfo) {\n      const illegalMediaSwitchError = illegalMediaSwitch(this.loaderType_, this.getCurrentMediaInfo_(), trackInfo);\n      if (illegalMediaSwitchError) {\n        this.error({\n          message: illegalMediaSwitchError,\n          playlistExclusionDuration: Infinity\n        });\n        this.trigger('error');\n        return true;\n      }\n      return false;\n    }\n    updateSourceBufferTimestampOffset_(segmentInfo) {\n      if (segmentInfo.timestampOffset === null ||\n      // we don't yet have the start for whatever media type (video or audio) has\n      // priority, timing-wise, so we must wait\n      typeof segmentInfo.timingInfo.start !== 'number' ||\n      // already updated the timestamp offset for this segment\n      segmentInfo.changedTimestampOffset ||\n      // the alt audio loader should not be responsible for setting the timestamp offset\n      this.loaderType_ !== 'main') {\n        return;\n      }\n      let didChange = false; // Primary timing goes by video, and audio is trimmed in the transmuxer, meaning that\n      // the timing info here comes from video. In the event that the audio is longer than\n      // the video, this will trim the start of the audio.\n      // This also trims any offset from 0 at the beginning of the media\n\n      segmentInfo.timestampOffset -= this.getSegmentStartTimeForTimestampOffsetCalculation_({\n        videoTimingInfo: segmentInfo.segment.videoTimingInfo,\n        audioTimingInfo: segmentInfo.segment.audioTimingInfo,\n        timingInfo: segmentInfo.timingInfo\n      }); // In the event that there are part segment downloads, each will try to update the\n      // timestamp offset. Retaining this bit of state prevents us from updating in the\n      // future (within the same segment), however, there may be a better way to handle it.\n\n      segmentInfo.changedTimestampOffset = true;\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.videoTimestampOffset()) {\n        this.sourceUpdater_.videoTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n      if (segmentInfo.timestampOffset !== this.sourceUpdater_.audioTimestampOffset()) {\n        this.sourceUpdater_.audioTimestampOffset(segmentInfo.timestampOffset);\n        didChange = true;\n      }\n      if (didChange) {\n        this.trigger('timestampoffset');\n      }\n    }\n    getSegmentStartTimeForTimestampOffsetCalculation_({\n      videoTimingInfo,\n      audioTimingInfo,\n      timingInfo\n    }) {\n      if (!this.useDtsForTimestampOffset_) {\n        return timingInfo.start;\n      }\n      if (videoTimingInfo && typeof videoTimingInfo.transmuxedDecodeStart === 'number') {\n        return videoTimingInfo.transmuxedDecodeStart;\n      } // handle audio only\n\n      if (audioTimingInfo && typeof audioTimingInfo.transmuxedDecodeStart === 'number') {\n        return audioTimingInfo.transmuxedDecodeStart;\n      } // handle content not transmuxed (e.g., MP4)\n\n      return timingInfo.start;\n    }\n    updateTimingInfoEnd_(segmentInfo) {\n      segmentInfo.timingInfo = segmentInfo.timingInfo || {};\n      const trackInfo = this.getMediaInfo_();\n      const useVideoTimingInfo = this.loaderType_ === 'main' && trackInfo && trackInfo.hasVideo;\n      const prioritizedTimingInfo = useVideoTimingInfo && segmentInfo.videoTimingInfo ? segmentInfo.videoTimingInfo : segmentInfo.audioTimingInfo;\n      if (!prioritizedTimingInfo) {\n        return;\n      }\n      segmentInfo.timingInfo.end = typeof prioritizedTimingInfo.end === 'number' ?\n      // End time may not exist in a case where we aren't parsing the full segment (one\n      // current example is the case of fmp4), so use the rough duration to calculate an\n      // end time.\n      prioritizedTimingInfo.end : prioritizedTimingInfo.start + segmentInfo.duration;\n    }\n    /**\n     * callback to run when appendBuffer is finished. detects if we are\n     * in a good state to do things with the data we got, or if we need\n     * to wait for more\n     *\n     * @private\n     */\n\n    handleAppendsDone_() {\n      // appendsdone can cause an abort\n      if (this.pendingSegment_) {\n        this.trigger('appendsdone');\n      }\n      if (!this.pendingSegment_) {\n        this.state = 'READY'; // TODO should this move into this.checkForAbort to speed up requests post abort in\n        // all appending cases?\n\n        if (!this.paused()) {\n          this.monitorBuffer_();\n        }\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // Now that the end of the segment has been reached, we can set the end time. It's\n      // best to wait until all appends are done so we're sure that the primary media is\n      // finished (and we have its end time).\n\n      this.updateTimingInfoEnd_(segmentInfo);\n      if (this.shouldSaveSegmentTimingInfo_) {\n        // Timeline mappings should only be saved for the main loader. This is for multiple\n        // reasons:\n        //\n        // 1) Only one mapping is saved per timeline, meaning that if both the audio loader\n        //    and the main loader try to save the timeline mapping, whichever comes later\n        //    will overwrite the first. In theory this is OK, as the mappings should be the\n        //    same, however, it breaks for (2)\n        // 2) In the event of a live stream, the initial live point will make for a somewhat\n        //    arbitrary mapping. If audio and video streams are not perfectly in-sync, then\n        //    the mapping will be off for one of the streams, dependent on which one was\n        //    first saved (see (1)).\n        // 3) Primary timing goes by video in VHS, so the mapping should be video.\n        //\n        // Since the audio loader will wait for the main loader to load the first segment,\n        // the main loader will save the first timeline mapping, and ensure that there won't\n        // be a case where audio loads two segments without saving a mapping (thus leading\n        // to missing segment timing info).\n        this.syncController_.saveSegmentTimingInfo({\n          segmentInfo,\n          shouldSaveTimelineMapping: this.loaderType_ === 'main'\n        });\n      }\n      const segmentDurationMessage = getTroublesomeSegmentDurationMessage(segmentInfo, this.sourceType_);\n      if (segmentDurationMessage) {\n        if (segmentDurationMessage.severity === 'warn') {\n          videojs.log.warn(segmentDurationMessage.message);\n        } else {\n          this.logger_(segmentDurationMessage.message);\n        }\n      }\n      this.recordThroughput_(segmentInfo);\n      this.pendingSegment_ = null;\n      this.state = 'READY';\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate'); // if the sync request was not appended\n        // then it was not the correct segment.\n        // throw it away and use the data it gave us\n        // to get the correct one.\n\n        if (!segmentInfo.hasAppendedData_) {\n          this.logger_(`Throwing away un-appended sync request ${segmentInfoString(segmentInfo)}`);\n          return;\n        }\n      }\n      this.logger_(`Appended ${segmentInfoString(segmentInfo)}`);\n      this.addSegmentMetadataCue_(segmentInfo);\n      this.fetchAtBuffer_ = true;\n      if (this.currentTimeline_ !== segmentInfo.timeline) {\n        this.timelineChangeController_.lastTimelineChange({\n          type: this.loaderType_,\n          from: this.currentTimeline_,\n          to: segmentInfo.timeline\n        }); // If audio is not disabled, the main segment loader is responsible for updating\n        // the audio timeline as well. If the content is video only, this won't have any\n        // impact.\n\n        if (this.loaderType_ === 'main' && !this.audioDisabled_) {\n          this.timelineChangeController_.lastTimelineChange({\n            type: 'audio',\n            from: this.currentTimeline_,\n            to: segmentInfo.timeline\n          });\n        }\n      }\n      this.currentTimeline_ = segmentInfo.timeline; // We must update the syncinfo to recalculate the seekable range before\n      // the following conditional otherwise it may consider this a bad \"guess\"\n      // and attempt to resync when the post-update seekable window and live\n      // point would mean that this was the perfect segment to fetch\n\n      this.trigger('syncinfoupdate');\n      const segment = segmentInfo.segment;\n      const part = segmentInfo.part;\n      const badSegmentGuess = segment.end && this.currentTime_() - segment.end > segmentInfo.playlist.targetDuration * 3;\n      const badPartGuess = part && part.end && this.currentTime_() - part.end > segmentInfo.playlist.partTargetDuration * 3; // If we previously appended a segment/part that ends more than 3 part/targetDurations before\n      // the currentTime_ that means that our conservative guess was too conservative.\n      // In that case, reset the loader state so that we try to use any information gained\n      // from the previous request to create a new, more accurate, sync-point.\n\n      if (badSegmentGuess || badPartGuess) {\n        this.logger_(`bad ${badSegmentGuess ? 'segment' : 'part'} ${segmentInfoString(segmentInfo)}`);\n        this.resetEverything();\n        return;\n      }\n      const isWalkingForward = this.mediaIndex !== null; // Don't do a rendition switch unless we have enough time to get a sync segment\n      // and conservatively guess\n\n      if (isWalkingForward) {\n        this.trigger('bandwidthupdate');\n      }\n      this.trigger('progress');\n      this.mediaIndex = segmentInfo.mediaIndex;\n      this.partIndex = segmentInfo.partIndex; // any time an update finishes and the last segment is in the\n      // buffer, end the stream. this ensures the \"ended\" event will\n      // fire if playback reaches that point.\n\n      if (this.isEndOfStream_(segmentInfo.mediaIndex, segmentInfo.playlist, segmentInfo.partIndex)) {\n        this.endOfStream();\n      } // used for testing\n\n      this.trigger('appended');\n      if (segmentInfo.hasAppendedData_) {\n        this.mediaAppends++;\n      }\n      if (!this.paused()) {\n        this.monitorBuffer_();\n      }\n    }\n    /**\n     * Records the current throughput of the decrypt, transmux, and append\n     * portion of the semgment pipeline. `throughput.rate` is a the cumulative\n     * moving average of the throughput. `throughput.count` is the number of\n     * data points in the average.\n     *\n     * @private\n     * @param {Object} segmentInfo the object returned by loadSegment\n     */\n\n    recordThroughput_(segmentInfo) {\n      if (segmentInfo.duration < MIN_SEGMENT_DURATION_TO_SAVE_STATS) {\n        this.logger_(`Ignoring segment's throughput because its duration of ${segmentInfo.duration}` + ` is less than the min to record ${MIN_SEGMENT_DURATION_TO_SAVE_STATS}`);\n        return;\n      }\n      const rate = this.throughput.rate; // Add one to the time to ensure that we don't accidentally attempt to divide\n      // by zero in the case where the throughput is ridiculously high\n\n      const segmentProcessingTime = Date.now() - segmentInfo.endOfAllRequests + 1; // Multiply by 8000 to convert from bytes/millisecond to bits/second\n\n      const segmentProcessingThroughput = Math.floor(segmentInfo.byteLength / segmentProcessingTime * 8 * 1000); // This is just a cumulative moving average calculation:\n      //   newAvg = oldAvg + (sample - oldAvg) / (sampleCount + 1)\n\n      this.throughput.rate += (segmentProcessingThroughput - rate) / ++this.throughput.count;\n    }\n    /**\n     * Adds a cue to the segment-metadata track with some metadata information about the\n     * segment\n     *\n     * @private\n     * @param {Object} segmentInfo\n     *        the object returned by loadSegment\n     * @method addSegmentMetadataCue_\n     */\n\n    addSegmentMetadataCue_(segmentInfo) {\n      if (!this.segmentMetadataTrack_) {\n        return;\n      }\n      const segment = segmentInfo.segment;\n      const start = segment.start;\n      const end = segment.end; // Do not try adding the cue if the start and end times are invalid.\n\n      if (!finite(start) || !finite(end)) {\n        return;\n      }\n      removeCuesFromTrack(start, end, this.segmentMetadataTrack_);\n      const Cue = window.WebKitDataCue || window.VTTCue;\n      const value = {\n        custom: segment.custom,\n        dateTimeObject: segment.dateTimeObject,\n        dateTimeString: segment.dateTimeString,\n        bandwidth: segmentInfo.playlist.attributes.BANDWIDTH,\n        resolution: segmentInfo.playlist.attributes.RESOLUTION,\n        codecs: segmentInfo.playlist.attributes.CODECS,\n        byteLength: segmentInfo.byteLength,\n        uri: segmentInfo.uri,\n        timeline: segmentInfo.timeline,\n        playlist: segmentInfo.playlist.id,\n        start,\n        end\n      };\n      const data = JSON.stringify(value);\n      const cue = new Cue(start, end, data); // Attach the metadata to the value property of the cue to keep consistency between\n      // the differences of WebKitDataCue in safari and VTTCue in other browsers\n\n      cue.value = value;\n      this.segmentMetadataTrack_.addCue(cue);\n    }\n  }\n  function noop() {}\n  const toTitleCase = function (string) {\n    if (typeof string !== 'string') {\n      return string;\n    }\n    return string.replace(/./, w => w.toUpperCase());\n  };\n\n  /**\n   * @file source-updater.js\n   */\n  const bufferTypes = ['video', 'audio'];\n  const updating = (type, sourceUpdater) => {\n    const sourceBuffer = sourceUpdater[`${type}Buffer`];\n    return sourceBuffer && sourceBuffer.updating || sourceUpdater.queuePending[type];\n  };\n  const nextQueueIndexOfType = (type, queue) => {\n    for (let i = 0; i < queue.length; i++) {\n      const queueEntry = queue[i];\n      if (queueEntry.type === 'mediaSource') {\n        // If the next entry is a media source entry (uses multiple source buffers), block\n        // processing to allow it to go through first.\n        return null;\n      }\n      if (queueEntry.type === type) {\n        return i;\n      }\n    }\n    return null;\n  };\n  const shiftQueue = (type, sourceUpdater) => {\n    if (sourceUpdater.queue.length === 0) {\n      return;\n    }\n    let queueIndex = 0;\n    let queueEntry = sourceUpdater.queue[queueIndex];\n    if (queueEntry.type === 'mediaSource') {\n      if (!sourceUpdater.updating() && sourceUpdater.mediaSource.readyState !== 'closed') {\n        sourceUpdater.queue.shift();\n        queueEntry.action(sourceUpdater);\n        if (queueEntry.doneFn) {\n          queueEntry.doneFn();\n        } // Only specific source buffer actions must wait for async updateend events. Media\n        // Source actions process synchronously. Therefore, both audio and video source\n        // buffers are now clear to process the next queue entries.\n\n        shiftQueue('audio', sourceUpdater);\n        shiftQueue('video', sourceUpdater);\n      } // Media Source actions require both source buffers, so if the media source action\n      // couldn't process yet (because one or both source buffers are busy), block other\n      // queue actions until both are available and the media source action can process.\n\n      return;\n    }\n    if (type === 'mediaSource') {\n      // If the queue was shifted by a media source action (this happens when pushing a\n      // media source action onto the queue), then it wasn't from an updateend event from an\n      // audio or video source buffer, so there's no change from previous state, and no\n      // processing should be done.\n      return;\n    } // Media source queue entries don't need to consider whether the source updater is\n    // started (i.e., source buffers are created) as they don't need the source buffers, but\n    // source buffer queue entries do.\n\n    if (!sourceUpdater.ready() || sourceUpdater.mediaSource.readyState === 'closed' || updating(type, sourceUpdater)) {\n      return;\n    }\n    if (queueEntry.type !== type) {\n      queueIndex = nextQueueIndexOfType(type, sourceUpdater.queue);\n      if (queueIndex === null) {\n        // Either there's no queue entry that uses this source buffer type in the queue, or\n        // there's a media source queue entry before the next entry of this type, in which\n        // case wait for that action to process first.\n        return;\n      }\n      queueEntry = sourceUpdater.queue[queueIndex];\n    }\n    sourceUpdater.queue.splice(queueIndex, 1); // Keep a record that this source buffer type is in use.\n    //\n    // The queue pending operation must be set before the action is performed in the event\n    // that the action results in a synchronous event that is acted upon. For instance, if\n    // an exception is thrown that can be handled, it's possible that new actions will be\n    // appended to an empty queue and immediately executed, but would not have the correct\n    // pending information if this property was set after the action was performed.\n\n    sourceUpdater.queuePending[type] = queueEntry;\n    queueEntry.action(type, sourceUpdater);\n    if (!queueEntry.doneFn) {\n      // synchronous operation, process next entry\n      sourceUpdater.queuePending[type] = null;\n      shiftQueue(type, sourceUpdater);\n      return;\n    }\n  };\n  const cleanupBuffer = (type, sourceUpdater) => {\n    const buffer = sourceUpdater[`${type}Buffer`];\n    const titleType = toTitleCase(type);\n    if (!buffer) {\n      return;\n    }\n    buffer.removeEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n    buffer.removeEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n    sourceUpdater.codecs[type] = null;\n    sourceUpdater[`${type}Buffer`] = null;\n  };\n  const inSourceBuffers = (mediaSource, sourceBuffer) => mediaSource && sourceBuffer && Array.prototype.indexOf.call(mediaSource.sourceBuffers, sourceBuffer) !== -1;\n  const actions = {\n    appendBuffer: (bytes, segmentInfo, onError) => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Appending segment ${segmentInfo.mediaIndex}'s ${bytes.length} bytes to ${type}Buffer`);\n      try {\n        sourceBuffer.appendBuffer(bytes);\n      } catch (e) {\n        sourceUpdater.logger_(`Error with code ${e.code} ` + (e.code === QUOTA_EXCEEDED_ERR ? '(QUOTA_EXCEEDED_ERR) ' : '') + `when appending segment ${segmentInfo.mediaIndex} to ${type}Buffer`);\n        sourceUpdater.queuePending[type] = null;\n        onError(e);\n      }\n    },\n    remove: (start, end) => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Removing ${start} to ${end} from ${type}Buffer`);\n      try {\n        sourceBuffer.remove(start, end);\n      } catch (e) {\n        sourceUpdater.logger_(`Remove ${start} to ${end} from ${type}Buffer failed`);\n      }\n    },\n    timestampOffset: offset => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Setting ${type}timestampOffset to ${offset}`);\n      sourceBuffer.timestampOffset = offset;\n    },\n    callback: callback => (type, sourceUpdater) => {\n      callback();\n    },\n    endOfStream: error => sourceUpdater => {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n      sourceUpdater.logger_(`Calling mediaSource endOfStream(${error || ''})`);\n      try {\n        sourceUpdater.mediaSource.endOfStream(error);\n      } catch (e) {\n        videojs.log.warn('Failed to call media source endOfStream', e);\n      }\n    },\n    duration: duration => sourceUpdater => {\n      sourceUpdater.logger_(`Setting mediaSource duration to ${duration}`);\n      try {\n        sourceUpdater.mediaSource.duration = duration;\n      } catch (e) {\n        videojs.log.warn('Failed to set media source duration', e);\n      }\n    },\n    abort: () => (type, sourceUpdater) => {\n      if (sourceUpdater.mediaSource.readyState !== 'open') {\n        return;\n      }\n      const sourceBuffer = sourceUpdater[`${type}Buffer`]; // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`calling abort on ${type}Buffer`);\n      try {\n        sourceBuffer.abort();\n      } catch (e) {\n        videojs.log.warn(`Failed to abort on ${type}Buffer`, e);\n      }\n    },\n    addSourceBuffer: (type, codec) => sourceUpdater => {\n      const titleType = toTitleCase(type);\n      const mime = getMimeForCodec(codec);\n      sourceUpdater.logger_(`Adding ${type}Buffer with codec ${codec} to mediaSource`);\n      const sourceBuffer = sourceUpdater.mediaSource.addSourceBuffer(mime);\n      sourceBuffer.addEventListener('updateend', sourceUpdater[`on${titleType}UpdateEnd_`]);\n      sourceBuffer.addEventListener('error', sourceUpdater[`on${titleType}Error_`]);\n      sourceUpdater.codecs[type] = codec;\n      sourceUpdater[`${type}Buffer`] = sourceBuffer;\n    },\n    removeSourceBuffer: type => sourceUpdater => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`];\n      cleanupBuffer(type, sourceUpdater); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      }\n      sourceUpdater.logger_(`Removing ${type}Buffer with codec ${sourceUpdater.codecs[type]} from mediaSource`);\n      try {\n        sourceUpdater.mediaSource.removeSourceBuffer(sourceBuffer);\n      } catch (e) {\n        videojs.log.warn(`Failed to removeSourceBuffer ${type}Buffer`, e);\n      }\n    },\n    changeType: codec => (type, sourceUpdater) => {\n      const sourceBuffer = sourceUpdater[`${type}Buffer`];\n      const mime = getMimeForCodec(codec); // can't do anything if the media source / source buffer is null\n      // or the media source does not contain this source buffer.\n\n      if (!inSourceBuffers(sourceUpdater.mediaSource, sourceBuffer)) {\n        return;\n      } // do not update codec if we don't need to.\n\n      if (sourceUpdater.codecs[type] === codec) {\n        return;\n      }\n      sourceUpdater.logger_(`changing ${type}Buffer codec from ${sourceUpdater.codecs[type]} to ${codec}`);\n      sourceBuffer.changeType(mime);\n      sourceUpdater.codecs[type] = codec;\n    }\n  };\n  const pushQueue = ({\n    type,\n    sourceUpdater,\n    action,\n    doneFn,\n    name\n  }) => {\n    sourceUpdater.queue.push({\n      type,\n      action,\n      doneFn,\n      name\n    });\n    shiftQueue(type, sourceUpdater);\n  };\n  const onUpdateend = (type, sourceUpdater) => e => {\n    // Although there should, in theory, be a pending action for any updateend receieved,\n    // there are some actions that may trigger updateend events without set definitions in\n    // the w3c spec. For instance, setting the duration on the media source may trigger\n    // updateend events on source buffers. This does not appear to be in the spec. As such,\n    // if we encounter an updateend without a corresponding pending action from our queue\n    // for that source buffer type, process the next action.\n    if (sourceUpdater.queuePending[type]) {\n      const doneFn = sourceUpdater.queuePending[type].doneFn;\n      sourceUpdater.queuePending[type] = null;\n      if (doneFn) {\n        // if there's an error, report it\n        doneFn(sourceUpdater[`${type}Error_`]);\n      }\n    }\n    shiftQueue(type, sourceUpdater);\n  };\n  /**\n   * A queue of callbacks to be serialized and applied when a\n   * MediaSource and its associated SourceBuffers are not in the\n   * updating state. It is used by the segment loader to update the\n   * underlying SourceBuffers when new data is loaded, for instance.\n   *\n   * @class SourceUpdater\n   * @param {MediaSource} mediaSource the MediaSource to create the SourceBuffer from\n   * @param {string} mimeType the desired MIME type of the underlying SourceBuffer\n   */\n\n  class SourceUpdater extends videojs.EventTarget {\n    constructor(mediaSource) {\n      super();\n      this.mediaSource = mediaSource;\n      this.sourceopenListener_ = () => shiftQueue('mediaSource', this);\n      this.mediaSource.addEventListener('sourceopen', this.sourceopenListener_);\n      this.logger_ = logger('SourceUpdater'); // initial timestamp offset is 0\n\n      this.audioTimestampOffset_ = 0;\n      this.videoTimestampOffset_ = 0;\n      this.queue = [];\n      this.queuePending = {\n        audio: null,\n        video: null\n      };\n      this.delayedAudioAppendQueue_ = [];\n      this.videoAppendQueued_ = false;\n      this.codecs = {};\n      this.onVideoUpdateEnd_ = onUpdateend('video', this);\n      this.onAudioUpdateEnd_ = onUpdateend('audio', this);\n      this.onVideoError_ = e => {\n        // used for debugging\n        this.videoError_ = e;\n      };\n      this.onAudioError_ = e => {\n        // used for debugging\n        this.audioError_ = e;\n      };\n      this.createdSourceBuffers_ = false;\n      this.initializedEme_ = false;\n      this.triggeredReady_ = false;\n    }\n    initializedEme() {\n      this.initializedEme_ = true;\n      this.triggerReady();\n    }\n    hasCreatedSourceBuffers() {\n      // if false, likely waiting on one of the segment loaders to get enough data to create\n      // source buffers\n      return this.createdSourceBuffers_;\n    }\n    hasInitializedAnyEme() {\n      return this.initializedEme_;\n    }\n    ready() {\n      return this.hasCreatedSourceBuffers() && this.hasInitializedAnyEme();\n    }\n    createSourceBuffers(codecs) {\n      if (this.hasCreatedSourceBuffers()) {\n        // already created them before\n        return;\n      } // the intial addOrChangeSourceBuffers will always be\n      // two add buffers.\n\n      this.addOrChangeSourceBuffers(codecs);\n      this.createdSourceBuffers_ = true;\n      this.trigger('createdsourcebuffers');\n      this.triggerReady();\n    }\n    triggerReady() {\n      // only allow ready to be triggered once, this prevents the case\n      // where:\n      // 1. we trigger createdsourcebuffers\n      // 2. ie 11 synchronously initializates eme\n      // 3. the synchronous initialization causes us to trigger ready\n      // 4. We go back to the ready check in createSourceBuffers and ready is triggered again.\n      if (this.ready() && !this.triggeredReady_) {\n        this.triggeredReady_ = true;\n        this.trigger('ready');\n      }\n    }\n    /**\n     * Add a type of source buffer to the media source.\n     *\n     * @param {string} type\n     *        The type of source buffer to add.\n     *\n     * @param {string} codec\n     *        The codec to add the source buffer with.\n     */\n\n    addSourceBuffer(type, codec) {\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.addSourceBuffer(type, codec),\n        name: 'addSourceBuffer'\n      });\n    }\n    /**\n     * call abort on a source buffer.\n     *\n     * @param {string} type\n     *        The type of source buffer to call abort on.\n     */\n\n    abort(type) {\n      pushQueue({\n        type,\n        sourceUpdater: this,\n        action: actions.abort(type),\n        name: 'abort'\n      });\n    }\n    /**\n     * Call removeSourceBuffer and remove a specific type\n     * of source buffer on the mediaSource.\n     *\n     * @param {string} type\n     *        The type of source buffer to remove.\n     */\n\n    removeSourceBuffer(type) {\n      if (!this.canRemoveSourceBuffer()) {\n        videojs.log.error('removeSourceBuffer is not supported!');\n        return;\n      }\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.removeSourceBuffer(type),\n        name: 'removeSourceBuffer'\n      });\n    }\n    /**\n     * Whether or not the removeSourceBuffer function is supported\n     * on the mediaSource.\n     *\n     * @return {boolean}\n     *          if removeSourceBuffer can be called.\n     */\n\n    canRemoveSourceBuffer() {\n      // IE reports that it supports removeSourceBuffer, but often throws\n      // errors when attempting to use the function. So we report that it\n      // does not support removeSourceBuffer. As of Firefox 83 removeSourceBuffer\n      // throws errors, so we report that it does not support this as well.\n      return !videojs.browser.IE_VERSION && !videojs.browser.IS_FIREFOX && window.MediaSource && window.MediaSource.prototype && typeof window.MediaSource.prototype.removeSourceBuffer === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n\n    static canChangeType() {\n      return window.SourceBuffer && window.SourceBuffer.prototype && typeof window.SourceBuffer.prototype.changeType === 'function';\n    }\n    /**\n     * Whether or not the changeType function is supported\n     * on our SourceBuffers.\n     *\n     * @return {boolean}\n     *         if changeType can be called.\n     */\n\n    canChangeType() {\n      return this.constructor.canChangeType();\n    }\n    /**\n     * Call the changeType function on a source buffer, given the code and type.\n     *\n     * @param {string} type\n     *        The type of source buffer to call changeType on.\n     *\n     * @param {string} codec\n     *        The codec string to change type with on the source buffer.\n     */\n\n    changeType(type, codec) {\n      if (!this.canChangeType()) {\n        videojs.log.error('changeType is not supported!');\n        return;\n      }\n      pushQueue({\n        type,\n        sourceUpdater: this,\n        action: actions.changeType(codec),\n        name: 'changeType'\n      });\n    }\n    /**\n     * Add source buffers with a codec or, if they are already created,\n     * call changeType on source buffers using changeType.\n     *\n     * @param {Object} codecs\n     *        Codecs to switch to\n     */\n\n    addOrChangeSourceBuffers(codecs) {\n      if (!codecs || typeof codecs !== 'object' || Object.keys(codecs).length === 0) {\n        throw new Error('Cannot addOrChangeSourceBuffers to undefined codecs');\n      }\n      Object.keys(codecs).forEach(type => {\n        const codec = codecs[type];\n        if (!this.hasCreatedSourceBuffers()) {\n          return this.addSourceBuffer(type, codec);\n        }\n        if (this.canChangeType()) {\n          this.changeType(type, codec);\n        }\n      });\n    }\n    /**\n     * Queue an update to append an ArrayBuffer.\n     *\n     * @param {MediaObject} object containing audioBytes and/or videoBytes\n     * @param {Function} done the function to call when done\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-appendBuffer-void-ArrayBuffer-data\n     */\n\n    appendBuffer(options, doneFn) {\n      const {\n        segmentInfo,\n        type,\n        bytes\n      } = options;\n      this.processedAppend_ = true;\n      if (type === 'audio' && this.videoBuffer && !this.videoAppendQueued_) {\n        this.delayedAudioAppendQueue_.push([options, doneFn]);\n        this.logger_(`delayed audio append of ${bytes.length} until video append`);\n        return;\n      } // In the case of certain errors, for instance, QUOTA_EXCEEDED_ERR, updateend will\n      // not be fired. This means that the queue will be blocked until the next action\n      // taken by the segment-loader. Provide a mechanism for segment-loader to handle\n      // these errors by calling the doneFn with the specific error.\n\n      const onError = doneFn;\n      pushQueue({\n        type,\n        sourceUpdater: this,\n        action: actions.appendBuffer(bytes, segmentInfo || {\n          mediaIndex: -1\n        }, onError),\n        doneFn,\n        name: 'appendBuffer'\n      });\n      if (type === 'video') {\n        this.videoAppendQueued_ = true;\n        if (!this.delayedAudioAppendQueue_.length) {\n          return;\n        }\n        const queue = this.delayedAudioAppendQueue_.slice();\n        this.logger_(`queuing delayed audio ${queue.length} appendBuffers`);\n        this.delayedAudioAppendQueue_.length = 0;\n        queue.forEach(que => {\n          this.appendBuffer.apply(this, que);\n        });\n      }\n    }\n    /**\n     * Get the audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The audio buffer's buffered time range\n     */\n\n    audioBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.audioBuffer)) {\n        return createTimeRanges();\n      }\n      return this.audioBuffer.buffered ? this.audioBuffer.buffered : createTimeRanges();\n    }\n    /**\n     * Get the video buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         The video buffer's buffered time range\n     */\n\n    videoBuffered() {\n      // no media source/source buffer or it isn't in the media sources\n      // source buffer list\n      if (!inSourceBuffers(this.mediaSource, this.videoBuffer)) {\n        return createTimeRanges();\n      }\n      return this.videoBuffer.buffered ? this.videoBuffer.buffered : createTimeRanges();\n    }\n    /**\n     * Get a combined video/audio buffer's buffered timerange.\n     *\n     * @return {TimeRange}\n     *         the combined time range\n     */\n\n    buffered() {\n      const video = inSourceBuffers(this.mediaSource, this.videoBuffer) ? this.videoBuffer : null;\n      const audio = inSourceBuffers(this.mediaSource, this.audioBuffer) ? this.audioBuffer : null;\n      if (audio && !video) {\n        return this.audioBuffered();\n      }\n      if (video && !audio) {\n        return this.videoBuffered();\n      }\n      return bufferIntersection(this.audioBuffered(), this.videoBuffered());\n    }\n    /**\n     * Add a callback to the queue that will set duration on the mediaSource.\n     *\n     * @param {number} duration\n     *        The duration to set\n     *\n     * @param {Function} [doneFn]\n     *        function to run after duration has been set.\n     */\n\n    setDuration(duration, doneFn = noop) {\n      // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.duration(duration),\n        name: 'duration',\n        doneFn\n      });\n    }\n    /**\n     * Add a mediaSource endOfStream call to the queue\n     *\n     * @param {Error} [error]\n     *        Call endOfStream with an error\n     *\n     * @param {Function} [doneFn]\n     *        A function that should be called when the\n     *        endOfStream call has finished.\n     */\n\n    endOfStream(error = null, doneFn = noop) {\n      if (typeof error !== 'string') {\n        error = undefined;\n      } // In order to set the duration on the media source, it's necessary to wait for all\n      // source buffers to no longer be updating. \"If the updating attribute equals true on\n      // any SourceBuffer in sourceBuffers, then throw an InvalidStateError exception and\n      // abort these steps.\" (source: https://www.w3.org/TR/media-source/#attributes).\n\n      pushQueue({\n        type: 'mediaSource',\n        sourceUpdater: this,\n        action: actions.endOfStream(error),\n        name: 'endOfStream',\n        doneFn\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n    removeAudio(start, end, done = noop) {\n      if (!this.audioBuffered().length || this.audioBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Queue an update to remove a time range from the buffer.\n     *\n     * @param {number} start where to start the removal\n     * @param {number} end where to end the removal\n     * @param {Function} [done=noop] optional callback to be executed when the remove\n     * operation is complete\n     * @see http://www.w3.org/TR/media-source/#widl-SourceBuffer-remove-void-double-start-unrestricted-double-end\n     */\n\n    removeVideo(start, end, done = noop) {\n      if (!this.videoBuffered().length || this.videoBuffered().end(0) === 0) {\n        done();\n        return;\n      }\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.remove(start, end),\n        doneFn: done,\n        name: 'remove'\n      });\n    }\n    /**\n     * Whether the underlying sourceBuffer is updating or not\n     *\n     * @return {boolean} the updating status of the SourceBuffer\n     */\n\n    updating() {\n      // the audio/video source buffer is updating\n      if (updating('audio', this) || updating('video', this)) {\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Set/get the timestampoffset on the audio SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n\n    audioTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.audioBuffer &&\n      // no point in updating if it's the same\n      this.audioTimestampOffset_ !== offset) {\n        pushQueue({\n          type: 'audio',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.audioTimestampOffset_ = offset;\n      }\n      return this.audioTimestampOffset_;\n    }\n    /**\n     * Set/get the timestampoffset on the video SourceBuffer\n     *\n     * @return {number} the timestamp offset\n     */\n\n    videoTimestampOffset(offset) {\n      if (typeof offset !== 'undefined' && this.videoBuffer &&\n      // no point in updating if it's the same\n      this.videoTimestampOffset !== offset) {\n        pushQueue({\n          type: 'video',\n          sourceUpdater: this,\n          action: actions.timestampOffset(offset),\n          name: 'timestampOffset'\n        });\n        this.videoTimestampOffset_ = offset;\n      }\n      return this.videoTimestampOffset_;\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the audio queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n\n    audioQueueCallback(callback) {\n      if (!this.audioBuffer) {\n        return;\n      }\n      pushQueue({\n        type: 'audio',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * Add a function to the queue that will be called\n     * when it is its turn to run in the video queue.\n     *\n     * @param {Function} callback\n     *        The callback to queue.\n     */\n\n    videoQueueCallback(callback) {\n      if (!this.videoBuffer) {\n        return;\n      }\n      pushQueue({\n        type: 'video',\n        sourceUpdater: this,\n        action: actions.callback(callback),\n        name: 'callback'\n      });\n    }\n    /**\n     * dispose of the source updater and the underlying sourceBuffer\n     */\n\n    dispose() {\n      this.trigger('dispose');\n      bufferTypes.forEach(type => {\n        this.abort(type);\n        if (this.canRemoveSourceBuffer()) {\n          this.removeSourceBuffer(type);\n        } else {\n          this[`${type}QueueCallback`](() => cleanupBuffer(type, this));\n        }\n      });\n      this.videoAppendQueued_ = false;\n      this.delayedAudioAppendQueue_.length = 0;\n      if (this.sourceopenListener_) {\n        this.mediaSource.removeEventListener('sourceopen', this.sourceopenListener_);\n      }\n      this.off();\n    }\n  }\n  const uint8ToUtf8 = uintArray => decodeURIComponent(escape(String.fromCharCode.apply(null, uintArray)));\n\n  /**\n   * @file vtt-segment-loader.js\n   */\n  const VTT_LINE_TERMINATORS = new Uint8Array('\\n\\n'.split('').map(char => char.charCodeAt(0)));\n  /**\n   * An object that manages segment loading and appending.\n   *\n   * @class VTTSegmentLoader\n   * @param {Object} options required and optional options\n   * @extends videojs.EventTarget\n   */\n\n  class VTTSegmentLoader extends SegmentLoader {\n    constructor(settings, options = {}) {\n      super(settings, options); // SegmentLoader requires a MediaSource be specified or it will throw an error;\n      // however, VTTSegmentLoader has no need of a media source, so delete the reference\n\n      this.mediaSource_ = null;\n      this.subtitlesTrack_ = null;\n      this.loaderType_ = 'subtitle';\n      this.featuresNativeTextTracks_ = settings.featuresNativeTextTracks; // The VTT segment will have its own time mappings. Saving VTT segment timing info in\n      // the sync controller leads to improper behavior.\n\n      this.shouldSaveSegmentTimingInfo_ = false;\n    }\n    createTransmuxer_() {\n      // don't need to transmux any subtitles\n      return null;\n    }\n    /**\n     * Indicates which time ranges are buffered\n     *\n     * @return {TimeRange}\n     *         TimeRange object representing the current buffered ranges\n     */\n\n    buffered_() {\n      if (!this.subtitlesTrack_ || !this.subtitlesTrack_.cues || !this.subtitlesTrack_.cues.length) {\n        return createTimeRanges();\n      }\n      const cues = this.subtitlesTrack_.cues;\n      const start = cues[0].startTime;\n      const end = cues[cues.length - 1].startTime;\n      return createTimeRanges([[start, end]]);\n    }\n    /**\n     * Gets and sets init segment for the provided map\n     *\n     * @param {Object} map\n     *        The map object representing the init segment to get or set\n     * @param {boolean=} set\n     *        If true, the init segment for the provided map should be saved\n     * @return {Object}\n     *         map object for desired init segment\n     */\n\n    initSegmentForMap(map, set = false) {\n      if (!map) {\n        return null;\n      }\n      const id = initSegmentId(map);\n      let storedMap = this.initSegments_[id];\n      if (set && !storedMap && map.bytes) {\n        // append WebVTT line terminators to the media initialization segment if it exists\n        // to follow the WebVTT spec (https://w3c.github.io/webvtt/#file-structure) that\n        // requires two or more WebVTT line terminators between the WebVTT header and the\n        // rest of the file\n        const combinedByteLength = VTT_LINE_TERMINATORS.byteLength + map.bytes.byteLength;\n        const combinedSegment = new Uint8Array(combinedByteLength);\n        combinedSegment.set(map.bytes);\n        combinedSegment.set(VTT_LINE_TERMINATORS, map.bytes.byteLength);\n        this.initSegments_[id] = storedMap = {\n          resolvedUri: map.resolvedUri,\n          byterange: map.byterange,\n          bytes: combinedSegment\n        };\n      }\n      return storedMap || map;\n    }\n    /**\n     * Returns true if all configuration required for loading is present, otherwise false.\n     *\n     * @return {boolean} True if the all configuration is ready for loading\n     * @private\n     */\n\n    couldBeginLoading_() {\n      return this.playlist_ && this.subtitlesTrack_ && !this.paused();\n    }\n    /**\n     * Once all the starting parameters have been specified, begin\n     * operation. This method should only be invoked from the INIT\n     * state.\n     *\n     * @private\n     */\n\n    init_() {\n      this.state = 'READY';\n      this.resetEverything();\n      return this.monitorBuffer_();\n    }\n    /**\n     * Set a subtitle track on the segment loader to add subtitles to\n     *\n     * @param {TextTrack=} track\n     *        The text track to add loaded subtitles to\n     * @return {TextTrack}\n     *        Returns the subtitles track\n     */\n\n    track(track) {\n      if (typeof track === 'undefined') {\n        return this.subtitlesTrack_;\n      }\n      this.subtitlesTrack_ = track; // if we were unpaused but waiting for a sourceUpdater, start\n      // buffering now\n\n      if (this.state === 'INIT' && this.couldBeginLoading_()) {\n        this.init_();\n      }\n      return this.subtitlesTrack_;\n    }\n    /**\n     * Remove any data in the source buffer between start and end times\n     *\n     * @param {number} start - the start time of the region to remove from the buffer\n     * @param {number} end - the end time of the region to remove from the buffer\n     */\n\n    remove(start, end) {\n      removeCuesFromTrack(start, end, this.subtitlesTrack_);\n    }\n    /**\n     * fill the buffer with segements unless the sourceBuffers are\n     * currently updating\n     *\n     * Note: this function should only ever be called by monitorBuffer_\n     * and never directly\n     *\n     * @private\n     */\n\n    fillBuffer_() {\n      // see if we need to begin loading immediately\n      const segmentInfo = this.chooseNextRequest_();\n      if (!segmentInfo) {\n        return;\n      }\n      if (this.syncController_.timestampOffsetForTimeline(segmentInfo.timeline) === null) {\n        // We don't have the timestamp offset that we need to sync subtitles.\n        // Rerun on a timestamp offset or user interaction.\n        const checkTimestampOffset = () => {\n          this.state = 'READY';\n          if (!this.paused()) {\n            // if not paused, queue a buffer check as soon as possible\n            this.monitorBuffer_();\n          }\n        };\n        this.syncController_.one('timestampoffset', checkTimestampOffset);\n        this.state = 'WAITING_ON_TIMELINE';\n        return;\n      }\n      this.loadSegment_(segmentInfo);\n    } // never set a timestamp offset for vtt segments.\n\n    timestampOffsetForSegment_() {\n      return null;\n    }\n    chooseNextRequest_() {\n      return this.skipEmptySegments_(super.chooseNextRequest_());\n    }\n    /**\n     * Prevents the segment loader from requesting segments we know contain no subtitles\n     * by walking forward until we find the next segment that we don't know whether it is\n     * empty or not.\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @return {Object}\n     *         a segment info object that describes the current segment\n     */\n\n    skipEmptySegments_(segmentInfo) {\n      while (segmentInfo && segmentInfo.segment.empty) {\n        // stop at the last possible segmentInfo\n        if (segmentInfo.mediaIndex + 1 >= segmentInfo.playlist.segments.length) {\n          segmentInfo = null;\n          break;\n        }\n        segmentInfo = this.generateSegmentInfo_({\n          playlist: segmentInfo.playlist,\n          mediaIndex: segmentInfo.mediaIndex + 1,\n          startOfSegment: segmentInfo.startOfSegment + segmentInfo.duration,\n          isSyncRequest: segmentInfo.isSyncRequest\n        });\n      }\n      return segmentInfo;\n    }\n    stopForError(error) {\n      this.error(error);\n      this.state = 'READY';\n      this.pause();\n      this.trigger('error');\n    }\n    /**\n     * append a decrypted segement to the SourceBuffer through a SourceUpdater\n     *\n     * @private\n     */\n\n    segmentRequestFinished_(error, simpleSegment, result) {\n      if (!this.subtitlesTrack_) {\n        this.state = 'READY';\n        return;\n      }\n      this.saveTransferStats_(simpleSegment.stats); // the request was aborted\n\n      if (!this.pendingSegment_) {\n        this.state = 'READY';\n        this.mediaRequestsAborted += 1;\n        return;\n      }\n      if (error) {\n        if (error.code === REQUEST_ERRORS.TIMEOUT) {\n          this.handleTimeout_();\n        }\n        if (error.code === REQUEST_ERRORS.ABORTED) {\n          this.mediaRequestsAborted += 1;\n        } else {\n          this.mediaRequestsErrored += 1;\n        }\n        this.stopForError(error);\n        return;\n      }\n      const segmentInfo = this.pendingSegment_; // although the VTT segment loader bandwidth isn't really used, it's good to\n      // maintain functionality between segment loaders\n\n      this.saveBandwidthRelatedStats_(segmentInfo.duration, simpleSegment.stats); // if this request included a segment key, save that data in the cache\n\n      if (simpleSegment.key) {\n        this.segmentKey(simpleSegment.key, true);\n      }\n      this.state = 'APPENDING'; // used for tests\n\n      this.trigger('appending');\n      const segment = segmentInfo.segment;\n      if (segment.map) {\n        segment.map.bytes = simpleSegment.map.bytes;\n      }\n      segmentInfo.bytes = simpleSegment.bytes; // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n\n      if (typeof window.WebVTT !== 'function' && this.subtitlesTrack_ && this.subtitlesTrack_.tech_) {\n        let loadHandler;\n        const errorHandler = () => {\n          this.subtitlesTrack_.tech_.off('vttjsloaded', loadHandler);\n          this.stopForError({\n            message: 'Error loading vtt.js'\n          });\n          return;\n        };\n        loadHandler = () => {\n          this.subtitlesTrack_.tech_.off('vttjserror', errorHandler);\n          this.segmentRequestFinished_(error, simpleSegment, result);\n        };\n        this.state = 'WAITING_ON_VTTJS';\n        this.subtitlesTrack_.tech_.one('vttjsloaded', loadHandler);\n        this.subtitlesTrack_.tech_.one('vttjserror', errorHandler);\n        return;\n      }\n      segment.requested = true;\n      try {\n        this.parseVTTCues_(segmentInfo);\n      } catch (e) {\n        this.stopForError({\n          message: e.message\n        });\n        return;\n      }\n      this.updateTimeMapping_(segmentInfo, this.syncController_.timelines[segmentInfo.timeline], this.playlist_);\n      if (segmentInfo.cues.length) {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.cues[0].startTime,\n          end: segmentInfo.cues[segmentInfo.cues.length - 1].endTime\n        };\n      } else {\n        segmentInfo.timingInfo = {\n          start: segmentInfo.startOfSegment,\n          end: segmentInfo.startOfSegment + segmentInfo.duration\n        };\n      }\n      if (segmentInfo.isSyncRequest) {\n        this.trigger('syncinfoupdate');\n        this.pendingSegment_ = null;\n        this.state = 'READY';\n        return;\n      }\n      segmentInfo.byteLength = segmentInfo.bytes.byteLength;\n      this.mediaSecondsLoaded += segment.duration; // Create VTTCue instances for each cue in the new segment and add them to\n      // the subtitle track\n\n      segmentInfo.cues.forEach(cue => {\n        this.subtitlesTrack_.addCue(this.featuresNativeTextTracks_ ? new window.VTTCue(cue.startTime, cue.endTime, cue.text) : cue);\n      }); // Remove any duplicate cues from the subtitle track. The WebVTT spec allows\n      // cues to have identical time-intervals, but if the text is also identical\n      // we can safely assume it is a duplicate that can be removed (ex. when a cue\n      // \"overlaps\" VTT segments)\n\n      removeDuplicateCuesFromTrack(this.subtitlesTrack_);\n      this.handleAppendsDone_();\n    }\n    handleData_() {// noop as we shouldn't be getting video/audio data captions\n      // that we do not support here.\n    }\n    updateTimingInfoEnd_() {// noop\n    }\n    /**\n     * Uses the WebVTT parser to parse the segment response\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @private\n     */\n\n    parseVTTCues_(segmentInfo) {\n      let decoder;\n      let decodeBytesToString = false;\n      if (typeof window.TextDecoder === 'function') {\n        decoder = new window.TextDecoder('utf8');\n      } else {\n        decoder = window.WebVTT.StringDecoder();\n        decodeBytesToString = true;\n      }\n      const parser = new window.WebVTT.Parser(window, window.vttjs, decoder);\n      segmentInfo.cues = [];\n      segmentInfo.timestampmap = {\n        MPEGTS: 0,\n        LOCAL: 0\n      };\n      parser.oncue = segmentInfo.cues.push.bind(segmentInfo.cues);\n      parser.ontimestampmap = map => {\n        segmentInfo.timestampmap = map;\n      };\n      parser.onparsingerror = error => {\n        videojs.log.warn('Error encountered when parsing cues: ' + error.message);\n      };\n      if (segmentInfo.segment.map) {\n        let mapData = segmentInfo.segment.map.bytes;\n        if (decodeBytesToString) {\n          mapData = uint8ToUtf8(mapData);\n        }\n        parser.parse(mapData);\n      }\n      let segmentData = segmentInfo.bytes;\n      if (decodeBytesToString) {\n        segmentData = uint8ToUtf8(segmentData);\n      }\n      parser.parse(segmentData);\n      parser.flush();\n    }\n    /**\n     * Updates the start and end times of any cues parsed by the WebVTT parser using\n     * the information parsed from the X-TIMESTAMP-MAP header and a TS to media time mapping\n     * from the SyncController\n     *\n     * @param {Object} segmentInfo\n     *        a segment info object that describes the current segment\n     * @param {Object} mappingObj\n     *        object containing a mapping from TS to media time\n     * @param {Object} playlist\n     *        the playlist object containing the segment\n     * @private\n     */\n\n    updateTimeMapping_(segmentInfo, mappingObj, playlist) {\n      const segment = segmentInfo.segment;\n      if (!mappingObj) {\n        // If the sync controller does not have a mapping of TS to Media Time for the\n        // timeline, then we don't have enough information to update the cue\n        // start/end times\n        return;\n      }\n      if (!segmentInfo.cues.length) {\n        // If there are no cues, we also do not have enough information to figure out\n        // segment timing. Mark that the segment contains no cues so we don't re-request\n        // an empty segment.\n        segment.empty = true;\n        return;\n      }\n      const timestampmap = segmentInfo.timestampmap;\n      const diff = timestampmap.MPEGTS / clock_1 - timestampmap.LOCAL + mappingObj.mapping;\n      segmentInfo.cues.forEach(cue => {\n        // First convert cue time to TS time using the timestamp-map provided within the vtt\n        cue.startTime += diff;\n        cue.endTime += diff;\n      });\n      if (!playlist.syncInfo) {\n        const firstStart = segmentInfo.cues[0].startTime;\n        const lastStart = segmentInfo.cues[segmentInfo.cues.length - 1].startTime;\n        playlist.syncInfo = {\n          mediaSequence: playlist.mediaSequence + segmentInfo.mediaIndex,\n          time: Math.min(firstStart, lastStart - segment.duration)\n        };\n      }\n    }\n  }\n\n  /**\n   * @file ad-cue-tags.js\n   */\n  /**\n   * Searches for an ad cue that overlaps with the given mediaTime\n   *\n   * @param {Object} track\n   *        the track to find the cue for\n   *\n   * @param {number} mediaTime\n   *        the time to find the cue at\n   *\n   * @return {Object|null}\n   *         the found cue or null\n   */\n\n  const findAdCue = function (track, mediaTime) {\n    const cues = track.cues;\n    for (let i = 0; i < cues.length; i++) {\n      const cue = cues[i];\n      if (mediaTime >= cue.adStartTime && mediaTime <= cue.adEndTime) {\n        return cue;\n      }\n    }\n    return null;\n  };\n  const updateAdCues = function (media, track, offset = 0) {\n    if (!media.segments) {\n      return;\n    }\n    let mediaTime = offset;\n    let cue;\n    for (let i = 0; i < media.segments.length; i++) {\n      const segment = media.segments[i];\n      if (!cue) {\n        // Since the cues will span for at least the segment duration, adding a fudge\n        // factor of half segment duration will prevent duplicate cues from being\n        // created when timing info is not exact (e.g. cue start time initialized\n        // at 10.006677, but next call mediaTime is 10.003332 )\n        cue = findAdCue(track, mediaTime + segment.duration / 2);\n      }\n      if (cue) {\n        if ('cueIn' in segment) {\n          // Found a CUE-IN so end the cue\n          cue.endTime = mediaTime;\n          cue.adEndTime = mediaTime;\n          mediaTime += segment.duration;\n          cue = null;\n          continue;\n        }\n        if (mediaTime < cue.endTime) {\n          // Already processed this mediaTime for this cue\n          mediaTime += segment.duration;\n          continue;\n        } // otherwise extend cue until a CUE-IN is found\n\n        cue.endTime += segment.duration;\n      } else {\n        if ('cueOut' in segment) {\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, segment.cueOut);\n          cue.adStartTime = mediaTime; // Assumes tag format to be\n          // #EXT-X-CUE-OUT:30\n\n          cue.adEndTime = mediaTime + parseFloat(segment.cueOut);\n          track.addCue(cue);\n        }\n        if ('cueOutCont' in segment) {\n          // Entered into the middle of an ad cue\n          // Assumes tag formate to be\n          // #EXT-X-CUE-OUT-CONT:10/30\n          const [adOffset, adTotal] = segment.cueOutCont.split('/').map(parseFloat);\n          cue = new window.VTTCue(mediaTime, mediaTime + segment.duration, '');\n          cue.adStartTime = mediaTime - adOffset;\n          cue.adEndTime = cue.adStartTime + adTotal;\n          track.addCue(cue);\n        }\n      }\n      mediaTime += segment.duration;\n    }\n  };\n\n  /**\n   * @file sync-controller.js\n   */\n  // synchronize expired playlist segments.\n  // the max media sequence diff is 48 hours of live stream\n  // content with two second segments. Anything larger than that\n  // will likely be invalid.\n\n  const MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC = 86400;\n  const syncPointStrategies = [\n  // Stategy \"VOD\": Handle the VOD-case where the sync-point is *always*\n  //                the equivalence display-time 0 === segment-index 0\n  {\n    name: 'VOD',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      if (duration !== Infinity) {\n        const syncPoint = {\n          time: 0,\n          segmentIndex: 0,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n      return null;\n    }\n  },\n  // Stategy \"ProgramDateTime\": We have a program-date-time tag in this playlist\n  {\n    name: 'ProgramDateTime',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      if (!Object.keys(syncController.timelineToDatetimeMappings).length) {\n        return null;\n      }\n      let syncPoint = null;\n      let lastDistance = null;\n      const partsAndSegments = getPartsAndSegments(playlist);\n      currentTime = currentTime || 0;\n      for (let i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        const partAndSegment = partsAndSegments[index];\n        const segment = partAndSegment.segment;\n        const datetimeMapping = syncController.timelineToDatetimeMappings[segment.timeline];\n        if (!datetimeMapping || !segment.dateTimeObject) {\n          continue;\n        }\n        const segmentTime = segment.dateTimeObject.getTime() / 1000;\n        let start = segmentTime + datetimeMapping; // take part duration into account.\n\n        if (segment.parts && typeof partAndSegment.partIndex === 'number') {\n          for (let z = 0; z < partAndSegment.partIndex; z++) {\n            start += segment.parts[z].duration;\n          }\n        }\n        const distance = Math.abs(currentTime - start); // Once the distance begins to increase, or if distance is 0, we have passed\n        // currentTime and can stop looking for better candidates\n\n        if (lastDistance !== null && (distance === 0 || lastDistance < distance)) {\n          break;\n        }\n        lastDistance = distance;\n        syncPoint = {\n          time: start,\n          segmentIndex: partAndSegment.segmentIndex,\n          partIndex: partAndSegment.partIndex\n        };\n      }\n      return syncPoint;\n    }\n  },\n  // Stategy \"Segment\": We have a known time mapping for a timeline and a\n  //                    segment in the current timeline with timing data\n  {\n    name: 'Segment',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      let syncPoint = null;\n      let lastDistance = null;\n      currentTime = currentTime || 0;\n      const partsAndSegments = getPartsAndSegments(playlist);\n      for (let i = 0; i < partsAndSegments.length; i++) {\n        // start from the end and loop backwards for live\n        // or start from the front and loop forwards for non-live\n        const index = playlist.endList || currentTime === 0 ? i : partsAndSegments.length - (i + 1);\n        const partAndSegment = partsAndSegments[index];\n        const segment = partAndSegment.segment;\n        const start = partAndSegment.part && partAndSegment.part.start || segment && segment.start;\n        if (segment.timeline === currentTimeline && typeof start !== 'undefined') {\n          const distance = Math.abs(currentTime - start); // Once the distance begins to increase, we have passed\n          // currentTime and can stop looking for better candidates\n\n          if (lastDistance !== null && lastDistance < distance) {\n            break;\n          }\n          if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n            lastDistance = distance;\n            syncPoint = {\n              time: start,\n              segmentIndex: partAndSegment.segmentIndex,\n              partIndex: partAndSegment.partIndex\n            };\n          }\n        }\n      }\n      return syncPoint;\n    }\n  },\n  // Stategy \"Discontinuity\": We have a discontinuity with a known\n  //                          display-time\n  {\n    name: 'Discontinuity',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      let syncPoint = null;\n      currentTime = currentTime || 0;\n      if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        let lastDistance = null;\n        for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n          const segmentIndex = playlist.discontinuityStarts[i];\n          const discontinuity = playlist.discontinuitySequence + i + 1;\n          const discontinuitySync = syncController.discontinuities[discontinuity];\n          if (discontinuitySync) {\n            const distance = Math.abs(currentTime - discontinuitySync.time); // Once the distance begins to increase, we have passed\n            // currentTime and can stop looking for better candidates\n\n            if (lastDistance !== null && lastDistance < distance) {\n              break;\n            }\n            if (!syncPoint || lastDistance === null || lastDistance >= distance) {\n              lastDistance = distance;\n              syncPoint = {\n                time: discontinuitySync.time,\n                segmentIndex,\n                partIndex: null\n              };\n            }\n          }\n        }\n      }\n      return syncPoint;\n    }\n  },\n  // Stategy \"Playlist\": We have a playlist with a known mapping of\n  //                     segment index to display time\n  {\n    name: 'Playlist',\n    run: (syncController, playlist, duration, currentTimeline, currentTime) => {\n      if (playlist.syncInfo) {\n        const syncPoint = {\n          time: playlist.syncInfo.time,\n          segmentIndex: playlist.syncInfo.mediaSequence - playlist.mediaSequence,\n          partIndex: null\n        };\n        return syncPoint;\n      }\n      return null;\n    }\n  }];\n  class SyncController extends videojs.EventTarget {\n    constructor(options = {}) {\n      super(); // ...for synching across variants\n\n      this.timelines = [];\n      this.discontinuities = [];\n      this.timelineToDatetimeMappings = {};\n      this.logger_ = logger('SyncController');\n    }\n    /**\n     * Find a sync-point for the playlist specified\n     *\n     * A sync-point is defined as a known mapping from display-time to\n     * a segment-index in the current playlist.\n     *\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinite if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Object}\n     *          A sync-point object\n     */\n\n    getSyncPoint(playlist, duration, currentTimeline, currentTime) {\n      const syncPoints = this.runStrategies_(playlist, duration, currentTimeline, currentTime);\n      if (!syncPoints.length) {\n        // Signal that we need to attempt to get a sync-point manually\n        // by fetching a segment in the playlist and constructing\n        // a sync-point from that information\n        return null;\n      } // Now find the sync-point that is closest to the currentTime because\n      // that should result in the most accurate guess about which segment\n      // to fetch\n\n      return this.selectSyncPoint_(syncPoints, {\n        key: 'time',\n        value: currentTime\n      });\n    }\n    /**\n     * Calculate the amount of time that has expired off the playlist during playback\n     *\n     * @param {Playlist} playlist\n     *        Playlist object to calculate expired from\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playling a live source)\n     * @return {number|null}\n     *          The amount of time that has expired off the playlist during playback. Null\n     *          if no sync-points for the playlist can be found.\n     */\n\n    getExpiredTime(playlist, duration) {\n      if (!playlist || !playlist.segments) {\n        return null;\n      }\n      const syncPoints = this.runStrategies_(playlist, duration, playlist.discontinuitySequence, 0); // Without sync-points, there is not enough information to determine the expired time\n\n      if (!syncPoints.length) {\n        return null;\n      }\n      const syncPoint = this.selectSyncPoint_(syncPoints, {\n        key: 'segmentIndex',\n        value: 0\n      }); // If the sync-point is beyond the start of the playlist, we want to subtract the\n      // duration from index 0 to syncPoint.segmentIndex instead of adding.\n\n      if (syncPoint.segmentIndex > 0) {\n        syncPoint.time *= -1;\n      }\n      return Math.abs(syncPoint.time + sumDurations({\n        defaultDuration: playlist.targetDuration,\n        durationList: playlist.segments,\n        startIndex: syncPoint.segmentIndex,\n        endIndex: 0\n      }));\n    }\n    /**\n     * Runs each sync-point strategy and returns a list of sync-points returned by the\n     * strategies\n     *\n     * @private\n     * @param {Playlist} playlist\n     *        The playlist that needs a sync-point\n     * @param {number} duration\n     *        Duration of the MediaSource (Infinity if playing a live source)\n     * @param {number} currentTimeline\n     *        The last timeline from which a segment was loaded\n     * @return {Array}\n     *          A list of sync-point objects\n     */\n\n    runStrategies_(playlist, duration, currentTimeline, currentTime) {\n      const syncPoints = []; // Try to find a sync-point in by utilizing various strategies...\n\n      for (let i = 0; i < syncPointStrategies.length; i++) {\n        const strategy = syncPointStrategies[i];\n        const syncPoint = strategy.run(this, playlist, duration, currentTimeline, currentTime);\n        if (syncPoint) {\n          syncPoint.strategy = strategy.name;\n          syncPoints.push({\n            strategy: strategy.name,\n            syncPoint\n          });\n        }\n      }\n      return syncPoints;\n    }\n    /**\n     * Selects the sync-point nearest the specified target\n     *\n     * @private\n     * @param {Array} syncPoints\n     *        List of sync-points to select from\n     * @param {Object} target\n     *        Object specifying the property and value we are targeting\n     * @param {string} target.key\n     *        Specifies the property to target. Must be either 'time' or 'segmentIndex'\n     * @param {number} target.value\n     *        The value to target for the specified key.\n     * @return {Object}\n     *          The sync-point nearest the target\n     */\n\n    selectSyncPoint_(syncPoints, target) {\n      let bestSyncPoint = syncPoints[0].syncPoint;\n      let bestDistance = Math.abs(syncPoints[0].syncPoint[target.key] - target.value);\n      let bestStrategy = syncPoints[0].strategy;\n      for (let i = 1; i < syncPoints.length; i++) {\n        const newDistance = Math.abs(syncPoints[i].syncPoint[target.key] - target.value);\n        if (newDistance < bestDistance) {\n          bestDistance = newDistance;\n          bestSyncPoint = syncPoints[i].syncPoint;\n          bestStrategy = syncPoints[i].strategy;\n        }\n      }\n      this.logger_(`syncPoint for [${target.key}: ${target.value}] chosen with strategy` + ` [${bestStrategy}]: [time:${bestSyncPoint.time},` + ` segmentIndex:${bestSyncPoint.segmentIndex}` + (typeof bestSyncPoint.partIndex === 'number' ? `,partIndex:${bestSyncPoint.partIndex}` : '') + ']');\n      return bestSyncPoint;\n    }\n    /**\n     * Save any meta-data present on the segments when segments leave\n     * the live window to the playlist to allow for synchronization at the\n     * playlist level later.\n     *\n     * @param {Playlist} oldPlaylist - The previous active playlist\n     * @param {Playlist} newPlaylist - The updated and most current playlist\n     */\n\n    saveExpiredSegmentInfo(oldPlaylist, newPlaylist) {\n      const mediaSequenceDiff = newPlaylist.mediaSequence - oldPlaylist.mediaSequence; // Ignore large media sequence gaps\n\n      if (mediaSequenceDiff > MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC) {\n        videojs.log.warn(`Not saving expired segment info. Media sequence gap ${mediaSequenceDiff} is too large.`);\n        return;\n      } // When a segment expires from the playlist and it has a start time\n      // save that information as a possible sync-point reference in future\n\n      for (let i = mediaSequenceDiff - 1; i >= 0; i--) {\n        const lastRemovedSegment = oldPlaylist.segments[i];\n        if (lastRemovedSegment && typeof lastRemovedSegment.start !== 'undefined') {\n          newPlaylist.syncInfo = {\n            mediaSequence: oldPlaylist.mediaSequence + i,\n            time: lastRemovedSegment.start\n          };\n          this.logger_(`playlist refresh sync: [time:${newPlaylist.syncInfo.time},` + ` mediaSequence: ${newPlaylist.syncInfo.mediaSequence}]`);\n          this.trigger('syncinfoupdate');\n          break;\n        }\n      }\n    }\n    /**\n     * Save the mapping from playlist's ProgramDateTime to display. This should only happen\n     * before segments start to load.\n     *\n     * @param {Playlist} playlist - The currently active playlist\n     */\n\n    setDateTimeMappingForStart(playlist) {\n      // It's possible for the playlist to be updated before playback starts, meaning time\n      // zero is not yet set. If, during these playlist refreshes, a discontinuity is\n      // crossed, then the old time zero mapping (for the prior timeline) would be retained\n      // unless the mappings are cleared.\n      this.timelineToDatetimeMappings = {};\n      if (playlist.segments && playlist.segments.length && playlist.segments[0].dateTimeObject) {\n        const firstSegment = playlist.segments[0];\n        const playlistTimestamp = firstSegment.dateTimeObject.getTime() / 1000;\n        this.timelineToDatetimeMappings[firstSegment.timeline] = -playlistTimestamp;\n      }\n    }\n    /**\n     * Calculates and saves timeline mappings, playlist sync info, and segment timing values\n     * based on the latest timing information.\n     *\n     * @param {Object} options\n     *        Options object\n     * @param {SegmentInfo} options.segmentInfo\n     *        The current active request information\n     * @param {boolean} options.shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved for timeline mapping and program date time mappings.\n     */\n\n    saveSegmentTimingInfo({\n      segmentInfo,\n      shouldSaveTimelineMapping\n    }) {\n      const didCalculateSegmentTimeMapping = this.calculateSegmentTimeMapping_(segmentInfo, segmentInfo.timingInfo, shouldSaveTimelineMapping);\n      const segment = segmentInfo.segment;\n      if (didCalculateSegmentTimeMapping) {\n        this.saveDiscontinuitySyncInfo_(segmentInfo); // If the playlist does not have sync information yet, record that information\n        // now with segment timing information\n\n        if (!segmentInfo.playlist.syncInfo) {\n          segmentInfo.playlist.syncInfo = {\n            mediaSequence: segmentInfo.playlist.mediaSequence + segmentInfo.mediaIndex,\n            time: segment.start\n          };\n        }\n      }\n      const dateTime = segment.dateTimeObject;\n      if (segment.discontinuity && shouldSaveTimelineMapping && dateTime) {\n        this.timelineToDatetimeMappings[segment.timeline] = -(dateTime.getTime() / 1000);\n      }\n    }\n    timestampOffsetForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].time;\n    }\n    mappingForTimeline(timeline) {\n      if (typeof this.timelines[timeline] === 'undefined') {\n        return null;\n      }\n      return this.timelines[timeline].mapping;\n    }\n    /**\n     * Use the \"media time\" for a segment to generate a mapping to \"display time\" and\n     * save that display time to the segment.\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo\n     *        The current active request information\n     * @param {Object} timingInfo\n     *        The start and end time of the current segment in \"media time\"\n     * @param {boolean} shouldSaveTimelineMapping\n     *        If there's a timeline change, determines if the timeline mapping should be\n     *        saved in timelines.\n     * @return {boolean}\n     *          Returns false if segment time mapping could not be calculated\n     */\n\n    calculateSegmentTimeMapping_(segmentInfo, timingInfo, shouldSaveTimelineMapping) {\n      // TODO: remove side effects\n      const segment = segmentInfo.segment;\n      const part = segmentInfo.part;\n      let mappingObj = this.timelines[segmentInfo.timeline];\n      let start;\n      let end;\n      if (typeof segmentInfo.timestampOffset === 'number') {\n        mappingObj = {\n          time: segmentInfo.startOfSegment,\n          mapping: segmentInfo.startOfSegment - timingInfo.start\n        };\n        if (shouldSaveTimelineMapping) {\n          this.timelines[segmentInfo.timeline] = mappingObj;\n          this.trigger('timestampoffset');\n          this.logger_(`time mapping for timeline ${segmentInfo.timeline}: ` + `[time: ${mappingObj.time}] [mapping: ${mappingObj.mapping}]`);\n        }\n        start = segmentInfo.startOfSegment;\n        end = timingInfo.end + mappingObj.mapping;\n      } else if (mappingObj) {\n        start = timingInfo.start + mappingObj.mapping;\n        end = timingInfo.end + mappingObj.mapping;\n      } else {\n        return false;\n      }\n      if (part) {\n        part.start = start;\n        part.end = end;\n      } // If we don't have a segment start yet or the start value we got\n      // is less than our current segment.start value, save a new start value.\n      // We have to do this because parts will have segment timing info saved\n      // multiple times and we want segment start to be the earliest part start\n      // value for that segment.\n\n      if (!segment.start || start < segment.start) {\n        segment.start = start;\n      }\n      segment.end = end;\n      return true;\n    }\n    /**\n     * Each time we have discontinuity in the playlist, attempt to calculate the location\n     * in display of the start of the discontinuity and save that. We also save an accuracy\n     * value so that we save values with the most accuracy (closest to 0.)\n     *\n     * @private\n     * @param {SegmentInfo} segmentInfo - The current active request information\n     */\n\n    saveDiscontinuitySyncInfo_(segmentInfo) {\n      const playlist = segmentInfo.playlist;\n      const segment = segmentInfo.segment; // If the current segment is a discontinuity then we know exactly where\n      // the start of the range and it's accuracy is 0 (greater accuracy values\n      // mean more approximation)\n\n      if (segment.discontinuity) {\n        this.discontinuities[segment.timeline] = {\n          time: segment.start,\n          accuracy: 0\n        };\n      } else if (playlist.discontinuityStarts && playlist.discontinuityStarts.length) {\n        // Search for future discontinuities that we can provide better timing\n        // information for and save that information for sync purposes\n        for (let i = 0; i < playlist.discontinuityStarts.length; i++) {\n          const segmentIndex = playlist.discontinuityStarts[i];\n          const discontinuity = playlist.discontinuitySequence + i + 1;\n          const mediaIndexDiff = segmentIndex - segmentInfo.mediaIndex;\n          const accuracy = Math.abs(mediaIndexDiff);\n          if (!this.discontinuities[discontinuity] || this.discontinuities[discontinuity].accuracy > accuracy) {\n            let time;\n            if (mediaIndexDiff < 0) {\n              time = segment.start - sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex,\n                endIndex: segmentIndex\n              });\n            } else {\n              time = segment.end + sumDurations({\n                defaultDuration: playlist.targetDuration,\n                durationList: playlist.segments,\n                startIndex: segmentInfo.mediaIndex + 1,\n                endIndex: segmentIndex\n              });\n            }\n            this.discontinuities[discontinuity] = {\n              time,\n              accuracy\n            };\n          }\n        }\n      }\n    }\n    dispose() {\n      this.trigger('dispose');\n      this.off();\n    }\n  }\n\n  /**\n   * The TimelineChangeController acts as a source for segment loaders to listen for and\n   * keep track of latest and pending timeline changes. This is useful to ensure proper\n   * sync, as each loader may need to make a consideration for what timeline the other\n   * loader is on before making changes which could impact the other loader's media.\n   *\n   * @class TimelineChangeController\n   * @extends videojs.EventTarget\n   */\n\n  class TimelineChangeController extends videojs.EventTarget {\n    constructor() {\n      super();\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n    }\n    clearPendingTimelineChange(type) {\n      this.pendingTimelineChanges_[type] = null;\n      this.trigger('pendingtimelinechange');\n    }\n    pendingTimelineChange({\n      type,\n      from,\n      to\n    }) {\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.pendingTimelineChanges_[type] = {\n          type,\n          from,\n          to\n        };\n        this.trigger('pendingtimelinechange');\n      }\n      return this.pendingTimelineChanges_[type];\n    }\n    lastTimelineChange({\n      type,\n      from,\n      to\n    }) {\n      if (typeof from === 'number' && typeof to === 'number') {\n        this.lastTimelineChanges_[type] = {\n          type,\n          from,\n          to\n        };\n        delete this.pendingTimelineChanges_[type];\n        this.trigger('timelinechange');\n      }\n      return this.lastTimelineChanges_[type];\n    }\n    dispose() {\n      this.trigger('dispose');\n      this.pendingTimelineChanges_ = {};\n      this.lastTimelineChanges_ = {};\n      this.off();\n    }\n  }\n\n  /* rollup-plugin-worker-factory start for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\n  const workerCode = transform(getWorkerString(function () {\n    /**\n     * @file stream.js\n     */\n\n    /**\n     * A lightweight readable stream implemention that handles event dispatching.\n     *\n     * @class Stream\n     */\n\n    var Stream = /*#__PURE__*/function () {\n      function Stream() {\n        this.listeners = {};\n      }\n      /**\n       * Add a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener the callback to be invoked when an event of\n       * the specified type occurs\n       */\n\n      var _proto = Stream.prototype;\n      _proto.on = function on(type, listener) {\n        if (!this.listeners[type]) {\n          this.listeners[type] = [];\n        }\n        this.listeners[type].push(listener);\n      }\n      /**\n       * Remove a listener for a specified event type.\n       *\n       * @param {string} type the event name\n       * @param {Function} listener  a function previously registered for this\n       * type of event through `on`\n       * @return {boolean} if we could turn it off or not\n       */;\n\n      _proto.off = function off(type, listener) {\n        if (!this.listeners[type]) {\n          return false;\n        }\n        var index = this.listeners[type].indexOf(listener); // TODO: which is better?\n        // In Video.js we slice listener functions\n        // on trigger so that it does not mess up the order\n        // while we loop through.\n        //\n        // Here we slice on off so that the loop in trigger\n        // can continue using it's old reference to loop without\n        // messing up the order.\n\n        this.listeners[type] = this.listeners[type].slice(0);\n        this.listeners[type].splice(index, 1);\n        return index > -1;\n      }\n      /**\n       * Trigger an event of the specified type on this stream. Any additional\n       * arguments to this function are passed as parameters to event listeners.\n       *\n       * @param {string} type the event name\n       */;\n\n      _proto.trigger = function trigger(type) {\n        var callbacks = this.listeners[type];\n        if (!callbacks) {\n          return;\n        } // Slicing the arguments on every invocation of this method\n        // can add a significant amount of overhead. Avoid the\n        // intermediate object creation for the common case of a\n        // single callback argument\n\n        if (arguments.length === 2) {\n          var length = callbacks.length;\n          for (var i = 0; i < length; ++i) {\n            callbacks[i].call(this, arguments[1]);\n          }\n        } else {\n          var args = Array.prototype.slice.call(arguments, 1);\n          var _length = callbacks.length;\n          for (var _i = 0; _i < _length; ++_i) {\n            callbacks[_i].apply(this, args);\n          }\n        }\n      }\n      /**\n       * Destroys the stream and cleans up.\n       */;\n\n      _proto.dispose = function dispose() {\n        this.listeners = {};\n      }\n      /**\n       * Forwards all `data` events on this stream to the destination stream. The\n       * destination stream should provide a method `push` to receive the data\n       * events as they arrive.\n       *\n       * @param {Stream} destination the stream that will receive all `data` events\n       * @see http://nodejs.org/api/stream.html#stream_readable_pipe_destination_options\n       */;\n\n      _proto.pipe = function pipe(destination) {\n        this.on('data', function (data) {\n          destination.push(data);\n        });\n      };\n      return Stream;\n    }();\n    /*! @name pkcs7 @version 1.0.4 @license Apache-2.0 */\n\n    /**\n     * Returns the subarray of a Uint8Array without PKCS#7 padding.\n     *\n     * @param padded {Uint8Array} unencrypted bytes that have been padded\n     * @return {Uint8Array} the unpadded bytes\n     * @see http://tools.ietf.org/html/rfc5652\n     */\n\n    function unpad(padded) {\n      return padded.subarray(0, padded.byteLength - padded[padded.byteLength - 1]);\n    }\n    /*! @name aes-decrypter @version 4.0.1 @license Apache-2.0 */\n\n    /**\n     * @file aes.js\n     *\n     * This file contains an adaptation of the AES decryption algorithm\n     * from the Standford Javascript Cryptography Library. That work is\n     * covered by the following copyright and permissions notice:\n     *\n     * Copyright 2009-2010 Emily Stark, Mike Hamburg, Dan Boneh.\n     * All rights reserved.\n     *\n     * Redistribution and use in source and binary forms, with or without\n     * modification, are permitted provided that the following conditions are\n     * met:\n     *\n     * 1. Redistributions of source code must retain the above copyright\n     *    notice, this list of conditions and the following disclaimer.\n     *\n     * 2. Redistributions in binary form must reproduce the above\n     *    copyright notice, this list of conditions and the following\n     *    disclaimer in the documentation and/or other materials provided\n     *    with the distribution.\n     *\n     * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR\n     * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n     * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n     * DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> OR CONTRIBUTORS BE\n     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR\n     * BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\n     * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE\n     * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN\n     * IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n     *\n     * The views and conclusions contained in the software and documentation\n     * are those of the authors and should not be interpreted as representing\n     * official policies, either expressed or implied, of the authors.\n     */\n\n    /**\n     * Expand the S-box tables.\n     *\n     * @private\n     */\n\n    const precompute = function () {\n      const tables = [[[], [], [], [], []], [[], [], [], [], []]];\n      const encTable = tables[0];\n      const decTable = tables[1];\n      const sbox = encTable[4];\n      const sboxInv = decTable[4];\n      let i;\n      let x;\n      let xInv;\n      const d = [];\n      const th = [];\n      let x2;\n      let x4;\n      let x8;\n      let s;\n      let tEnc;\n      let tDec; // Compute double and third tables\n\n      for (i = 0; i < 256; i++) {\n        th[(d[i] = i << 1 ^ (i >> 7) * 283) ^ i] = i;\n      }\n      for (x = xInv = 0; !sbox[x]; x ^= x2 || 1, xInv = th[xInv] || 1) {\n        // Compute sbox\n        s = xInv ^ xInv << 1 ^ xInv << 2 ^ xInv << 3 ^ xInv << 4;\n        s = s >> 8 ^ s & 255 ^ 99;\n        sbox[x] = s;\n        sboxInv[s] = x; // Compute MixColumns\n\n        x8 = d[x4 = d[x2 = d[x]]];\n        tDec = x8 * 0x1010101 ^ x4 * 0x10001 ^ x2 * 0x101 ^ x * 0x1010100;\n        tEnc = d[s] * 0x101 ^ s * 0x1010100;\n        for (i = 0; i < 4; i++) {\n          encTable[i][x] = tEnc = tEnc << 24 ^ tEnc >>> 8;\n          decTable[i][s] = tDec = tDec << 24 ^ tDec >>> 8;\n        }\n      } // Compactify. Considerable speedup on Firefox.\n\n      for (i = 0; i < 5; i++) {\n        encTable[i] = encTable[i].slice(0);\n        decTable[i] = decTable[i].slice(0);\n      }\n      return tables;\n    };\n    let aesTables = null;\n    /**\n     * Schedule out an AES key for both encryption and decryption. This\n     * is a low-level class. Use a cipher mode to do bulk encryption.\n     *\n     * @class AES\n     * @param key {Array} The key as an array of 4, 6 or 8 words.\n     */\n\n    class AES {\n      constructor(key) {\n        /**\n        * The expanded S-box and inverse S-box tables. These will be computed\n        * on the client so that we don't have to send them down the wire.\n        *\n        * There are two tables, _tables[0] is for encryption and\n        * _tables[1] is for decryption.\n        *\n        * The first 4 sub-tables are the expanded S-box with MixColumns. The\n        * last (_tables[01][4]) is the S-box itself.\n        *\n        * @private\n        */\n        // if we have yet to precompute the S-box tables\n        // do so now\n        if (!aesTables) {\n          aesTables = precompute();\n        } // then make a copy of that object for use\n\n        this._tables = [[aesTables[0][0].slice(), aesTables[0][1].slice(), aesTables[0][2].slice(), aesTables[0][3].slice(), aesTables[0][4].slice()], [aesTables[1][0].slice(), aesTables[1][1].slice(), aesTables[1][2].slice(), aesTables[1][3].slice(), aesTables[1][4].slice()]];\n        let i;\n        let j;\n        let tmp;\n        const sbox = this._tables[0][4];\n        const decTable = this._tables[1];\n        const keyLen = key.length;\n        let rcon = 1;\n        if (keyLen !== 4 && keyLen !== 6 && keyLen !== 8) {\n          throw new Error('Invalid aes key size');\n        }\n        const encKey = key.slice(0);\n        const decKey = [];\n        this._key = [encKey, decKey]; // schedule encryption keys\n\n        for (i = keyLen; i < 4 * keyLen + 28; i++) {\n          tmp = encKey[i - 1]; // apply sbox\n\n          if (i % keyLen === 0 || keyLen === 8 && i % keyLen === 4) {\n            tmp = sbox[tmp >>> 24] << 24 ^ sbox[tmp >> 16 & 255] << 16 ^ sbox[tmp >> 8 & 255] << 8 ^ sbox[tmp & 255]; // shift rows and add rcon\n\n            if (i % keyLen === 0) {\n              tmp = tmp << 8 ^ tmp >>> 24 ^ rcon << 24;\n              rcon = rcon << 1 ^ (rcon >> 7) * 283;\n            }\n          }\n          encKey[i] = encKey[i - keyLen] ^ tmp;\n        } // schedule decryption keys\n\n        for (j = 0; i; j++, i--) {\n          tmp = encKey[j & 3 ? i : i - 4];\n          if (i <= 4 || j < 4) {\n            decKey[j] = tmp;\n          } else {\n            decKey[j] = decTable[0][sbox[tmp >>> 24]] ^ decTable[1][sbox[tmp >> 16 & 255]] ^ decTable[2][sbox[tmp >> 8 & 255]] ^ decTable[3][sbox[tmp & 255]];\n          }\n        }\n      }\n      /**\n       * Decrypt 16 bytes, specified as four 32-bit words.\n       *\n       * @param {number} encrypted0 the first word to decrypt\n       * @param {number} encrypted1 the second word to decrypt\n       * @param {number} encrypted2 the third word to decrypt\n       * @param {number} encrypted3 the fourth word to decrypt\n       * @param {Int32Array} out the array to write the decrypted words\n       * into\n       * @param {number} offset the offset into the output array to start\n       * writing results\n       * @return {Array} The plaintext.\n       */\n\n      decrypt(encrypted0, encrypted1, encrypted2, encrypted3, out, offset) {\n        const key = this._key[1]; // state variables a,b,c,d are loaded with pre-whitened data\n\n        let a = encrypted0 ^ key[0];\n        let b = encrypted3 ^ key[1];\n        let c = encrypted2 ^ key[2];\n        let d = encrypted1 ^ key[3];\n        let a2;\n        let b2;\n        let c2; // key.length === 2 ?\n\n        const nInnerRounds = key.length / 4 - 2;\n        let i;\n        let kIndex = 4;\n        const table = this._tables[1]; // load up the tables\n\n        const table0 = table[0];\n        const table1 = table[1];\n        const table2 = table[2];\n        const table3 = table[3];\n        const sbox = table[4]; // Inner rounds. Cribbed from OpenSSL.\n\n        for (i = 0; i < nInnerRounds; i++) {\n          a2 = table0[a >>> 24] ^ table1[b >> 16 & 255] ^ table2[c >> 8 & 255] ^ table3[d & 255] ^ key[kIndex];\n          b2 = table0[b >>> 24] ^ table1[c >> 16 & 255] ^ table2[d >> 8 & 255] ^ table3[a & 255] ^ key[kIndex + 1];\n          c2 = table0[c >>> 24] ^ table1[d >> 16 & 255] ^ table2[a >> 8 & 255] ^ table3[b & 255] ^ key[kIndex + 2];\n          d = table0[d >>> 24] ^ table1[a >> 16 & 255] ^ table2[b >> 8 & 255] ^ table3[c & 255] ^ key[kIndex + 3];\n          kIndex += 4;\n          a = a2;\n          b = b2;\n          c = c2;\n        } // Last round.\n\n        for (i = 0; i < 4; i++) {\n          out[(3 & -i) + offset] = sbox[a >>> 24] << 24 ^ sbox[b >> 16 & 255] << 16 ^ sbox[c >> 8 & 255] << 8 ^ sbox[d & 255] ^ key[kIndex++];\n          a2 = a;\n          a = b;\n          b = c;\n          c = d;\n          d = a2;\n        }\n      }\n    }\n    /**\n     * @file async-stream.js\n     */\n\n    /**\n     * A wrapper around the Stream class to use setTimeout\n     * and run stream \"jobs\" Asynchronously\n     *\n     * @class AsyncStream\n     * @extends Stream\n     */\n\n    class AsyncStream extends Stream {\n      constructor() {\n        super(Stream);\n        this.jobs = [];\n        this.delay = 1;\n        this.timeout_ = null;\n      }\n      /**\n       * process an async job\n       *\n       * @private\n       */\n\n      processJob_() {\n        this.jobs.shift()();\n        if (this.jobs.length) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        } else {\n          this.timeout_ = null;\n        }\n      }\n      /**\n       * push a job into the stream\n       *\n       * @param {Function} job the job to push into the stream\n       */\n\n      push(job) {\n        this.jobs.push(job);\n        if (!this.timeout_) {\n          this.timeout_ = setTimeout(this.processJob_.bind(this), this.delay);\n        }\n      }\n    }\n    /**\n     * @file decrypter.js\n     *\n     * An asynchronous implementation of AES-128 CBC decryption with\n     * PKCS#7 padding.\n     */\n\n    /**\n     * Convert network-order (big-endian) bytes into their little-endian\n     * representation.\n     */\n\n    const ntoh = function (word) {\n      return word << 24 | (word & 0xff00) << 8 | (word & 0xff0000) >> 8 | word >>> 24;\n    };\n    /**\n     * Decrypt bytes using AES-128 with CBC and PKCS#7 padding.\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * use for the first round of CBC.\n     * @return {Uint8Array} the decrypted bytes\n     *\n     * @see http://en.wikipedia.org/wiki/Advanced_Encryption_Standard\n     * @see http://en.wikipedia.org/wiki/Block_cipher_mode_of_operation#Cipher_Block_Chaining_.28CBC.29\n     * @see https://tools.ietf.org/html/rfc2315\n     */\n\n    const decrypt = function (encrypted, key, initVector) {\n      // word-level access to the encrypted bytes\n      const encrypted32 = new Int32Array(encrypted.buffer, encrypted.byteOffset, encrypted.byteLength >> 2);\n      const decipher = new AES(Array.prototype.slice.call(key)); // byte and word-level access for the decrypted output\n\n      const decrypted = new Uint8Array(encrypted.byteLength);\n      const decrypted32 = new Int32Array(decrypted.buffer); // temporary variables for working with the IV, encrypted, and\n      // decrypted data\n\n      let init0;\n      let init1;\n      let init2;\n      let init3;\n      let encrypted0;\n      let encrypted1;\n      let encrypted2;\n      let encrypted3; // iteration variable\n\n      let wordIx; // pull out the words of the IV to ensure we don't modify the\n      // passed-in reference and easier access\n\n      init0 = initVector[0];\n      init1 = initVector[1];\n      init2 = initVector[2];\n      init3 = initVector[3]; // decrypt four word sequences, applying cipher-block chaining (CBC)\n      // to each decrypted block\n\n      for (wordIx = 0; wordIx < encrypted32.length; wordIx += 4) {\n        // convert big-endian (network order) words into little-endian\n        // (javascript order)\n        encrypted0 = ntoh(encrypted32[wordIx]);\n        encrypted1 = ntoh(encrypted32[wordIx + 1]);\n        encrypted2 = ntoh(encrypted32[wordIx + 2]);\n        encrypted3 = ntoh(encrypted32[wordIx + 3]); // decrypt the block\n\n        decipher.decrypt(encrypted0, encrypted1, encrypted2, encrypted3, decrypted32, wordIx); // XOR with the IV, and restore network byte-order to obtain the\n        // plaintext\n\n        decrypted32[wordIx] = ntoh(decrypted32[wordIx] ^ init0);\n        decrypted32[wordIx + 1] = ntoh(decrypted32[wordIx + 1] ^ init1);\n        decrypted32[wordIx + 2] = ntoh(decrypted32[wordIx + 2] ^ init2);\n        decrypted32[wordIx + 3] = ntoh(decrypted32[wordIx + 3] ^ init3); // setup the IV for the next round\n\n        init0 = encrypted0;\n        init1 = encrypted1;\n        init2 = encrypted2;\n        init3 = encrypted3;\n      }\n      return decrypted;\n    };\n    /**\n     * The `Decrypter` class that manages decryption of AES\n     * data through `AsyncStream` objects and the `decrypt`\n     * function\n     *\n     * @param {Uint8Array} encrypted the encrypted bytes\n     * @param {Uint32Array} key the bytes of the decryption key\n     * @param {Uint32Array} initVector the initialization vector (IV) to\n     * @param {Function} done the function to run when done\n     * @class Decrypter\n     */\n\n    class Decrypter {\n      constructor(encrypted, key, initVector, done) {\n        const step = Decrypter.STEP;\n        const encrypted32 = new Int32Array(encrypted.buffer);\n        const decrypted = new Uint8Array(encrypted.byteLength);\n        let i = 0;\n        this.asyncStream_ = new AsyncStream(); // split up the encryption job and do the individual chunks asynchronously\n\n        this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        for (i = step; i < encrypted32.length; i += step) {\n          initVector = new Uint32Array([ntoh(encrypted32[i - 4]), ntoh(encrypted32[i - 3]), ntoh(encrypted32[i - 2]), ntoh(encrypted32[i - 1])]);\n          this.asyncStream_.push(this.decryptChunk_(encrypted32.subarray(i, i + step), key, initVector, decrypted));\n        } // invoke the done() callback when everything is finished\n\n        this.asyncStream_.push(function () {\n          // remove pkcs#7 padding from the decrypted bytes\n          done(null, unpad(decrypted));\n        });\n      }\n      /**\n       * a getter for step the maximum number of bytes to process at one time\n       *\n       * @return {number} the value of step 32000\n       */\n\n      static get STEP() {\n        // 4 * 8000;\n        return 32000;\n      }\n      /**\n       * @private\n       */\n\n      decryptChunk_(encrypted, key, initVector, decrypted) {\n        return function () {\n          const bytes = decrypt(encrypted, key, initVector);\n          decrypted.set(bytes, encrypted.byteOffset);\n        };\n      }\n    }\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n    var win;\n    if (typeof window !== \"undefined\") {\n      win = window;\n    } else if (typeof commonjsGlobal !== \"undefined\") {\n      win = commonjsGlobal;\n    } else if (typeof self !== \"undefined\") {\n      win = self;\n    } else {\n      win = {};\n    }\n    var window_1 = win;\n    var isArrayBufferView = function isArrayBufferView(obj) {\n      if (ArrayBuffer.isView === 'function') {\n        return ArrayBuffer.isView(obj);\n      }\n      return obj && obj.buffer instanceof ArrayBuffer;\n    };\n    var BigInt = window_1.BigInt || Number;\n    [BigInt('0x1'), BigInt('0x100'), BigInt('0x10000'), BigInt('0x1000000'), BigInt('0x100000000'), BigInt('0x10000000000'), BigInt('0x1000000000000'), BigInt('0x100000000000000'), BigInt('0x10000000000000000')];\n    (function () {\n      var a = new Uint16Array([0xFFCC]);\n      var b = new Uint8Array(a.buffer, a.byteOffset, a.byteLength);\n      if (b[0] === 0xFF) {\n        return 'big';\n      }\n      if (b[0] === 0xCC) {\n        return 'little';\n      }\n      return 'unknown';\n    })();\n    /**\n     * Creates an object for sending to a web worker modifying properties that are TypedArrays\n     * into a new object with seperated properties for the buffer, byteOffset, and byteLength.\n     *\n     * @param {Object} message\n     *        Object of properties and values to send to the web worker\n     * @return {Object}\n     *         Modified message with TypedArray values expanded\n     * @function createTransferableMessage\n     */\n\n    const createTransferableMessage = function (message) {\n      const transferable = {};\n      Object.keys(message).forEach(key => {\n        const value = message[key];\n        if (isArrayBufferView(value)) {\n          transferable[key] = {\n            bytes: value.buffer,\n            byteOffset: value.byteOffset,\n            byteLength: value.byteLength\n          };\n        } else {\n          transferable[key] = value;\n        }\n      });\n      return transferable;\n    };\n    /* global self */\n\n    /**\n     * Our web worker interface so that things can talk to aes-decrypter\n     * that will be running in a web worker. the scope is passed to this by\n     * webworkify.\n     */\n\n    self.onmessage = function (event) {\n      const data = event.data;\n      const encrypted = new Uint8Array(data.encrypted.bytes, data.encrypted.byteOffset, data.encrypted.byteLength);\n      const key = new Uint32Array(data.key.bytes, data.key.byteOffset, data.key.byteLength / 4);\n      const iv = new Uint32Array(data.iv.bytes, data.iv.byteOffset, data.iv.byteLength / 4);\n      /* eslint-disable no-new, handle-callback-err */\n\n      new Decrypter(encrypted, key, iv, function (err, bytes) {\n        self.postMessage(createTransferableMessage({\n          source: data.source,\n          decrypted: bytes\n        }), [bytes.buffer]);\n      });\n      /* eslint-enable */\n    };\n  }));\n\n  var Decrypter = factory(workerCode);\n  /* rollup-plugin-worker-factory end for worker!/Users/poneill/dev/http-streaming/src/decrypter-worker.js */\n\n  /**\n   * Convert the properties of an HLS track into an audioTrackKind.\n   *\n   * @private\n   */\n\n  const audioTrackKind_ = properties => {\n    let kind = properties.default ? 'main' : 'alternative';\n    if (properties.characteristics && properties.characteristics.indexOf('public.accessibility.describes-video') >= 0) {\n      kind = 'main-desc';\n    }\n    return kind;\n  };\n  /**\n   * Pause provided segment loader and playlist loader if active\n   *\n   * @param {SegmentLoader} segmentLoader\n   *        SegmentLoader to pause\n   * @param {Object} mediaType\n   *        Active media type\n   * @function stopLoaders\n   */\n\n  const stopLoaders = (segmentLoader, mediaType) => {\n    segmentLoader.abort();\n    segmentLoader.pause();\n    if (mediaType && mediaType.activePlaylistLoader) {\n      mediaType.activePlaylistLoader.pause();\n      mediaType.activePlaylistLoader = null;\n    }\n  };\n  /**\n   * Start loading provided segment loader and playlist loader\n   *\n   * @param {PlaylistLoader} playlistLoader\n   *        PlaylistLoader to start loading\n   * @param {Object} mediaType\n   *        Active media type\n   * @function startLoaders\n   */\n\n  const startLoaders = (playlistLoader, mediaType) => {\n    // Segment loader will be started after `loadedmetadata` or `loadedplaylist` from the\n    // playlist loader\n    mediaType.activePlaylistLoader = playlistLoader;\n    playlistLoader.load();\n  };\n  /**\n   * Returns a function to be called when the media group changes. It performs a\n   * non-destructive (preserve the buffer) resync of the SegmentLoader. This is because a\n   * change of group is merely a rendition switch of the same content at another encoding,\n   * rather than a change of content, such as switching audio from English to Spanish.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a non-destructive resync of SegmentLoader when the active media\n   *         group changes.\n   * @function onGroupChanged\n   */\n\n  const onGroupChanged = (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader,\n        main: mainSegmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.getActiveGroup();\n    const previousActiveLoader = mediaType.activePlaylistLoader;\n    const lastGroup = mediaType.lastGroup_; // the group did not change do nothing\n\n    if (activeGroup && lastGroup && activeGroup.id === lastGroup.id) {\n      return;\n    }\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n    if (!activeGroup || activeGroup.isMainPlaylist) {\n      // there is no group active or active group is a main playlist and won't change\n      return;\n    }\n    if (!activeGroup.playlistLoader) {\n      if (previousActiveLoader) {\n        // The previous group had a playlist loader but the new active group does not\n        // this means we are switching from demuxed to muxed audio. In this case we want to\n        // do a destructive reset of the main segment loader and not restart the audio\n        // loaders.\n        mainSegmentLoader.resetEverything();\n      }\n      return;\n    } // Non-destructive resync\n\n    segmentLoader.resyncLoader();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n  const onGroupChanging = (type, settings) => () => {\n    const {\n      segmentLoaders: {\n        [type]: segmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    mediaType.lastGroup_ = null;\n    segmentLoader.abort();\n    segmentLoader.pause();\n  };\n  /**\n   * Returns a function to be called when the media track changes. It performs a\n   * destructive reset of the SegmentLoader to ensure we start loading as close to\n   * currentTime as possible.\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Handler for a destructive reset of SegmentLoader when the active media\n   *         track changes.\n   * @function onTrackChanged\n   */\n\n  const onTrackChanged = (type, settings) => () => {\n    const {\n      mainPlaylistLoader,\n      segmentLoaders: {\n        [type]: segmentLoader,\n        main: mainSegmentLoader\n      },\n      mediaTypes: {\n        [type]: mediaType\n      }\n    } = settings;\n    const activeTrack = mediaType.activeTrack();\n    const activeGroup = mediaType.getActiveGroup();\n    const previousActiveLoader = mediaType.activePlaylistLoader;\n    const lastTrack = mediaType.lastTrack_; // track did not change, do nothing\n\n    if (lastTrack && activeTrack && lastTrack.id === activeTrack.id) {\n      return;\n    }\n    mediaType.lastGroup_ = activeGroup;\n    mediaType.lastTrack_ = activeTrack;\n    stopLoaders(segmentLoader, mediaType);\n    if (!activeGroup) {\n      // there is no group active so we do not want to restart loaders\n      return;\n    }\n    if (activeGroup.isMainPlaylist) {\n      // track did not change, do nothing\n      if (!activeTrack || !lastTrack || activeTrack.id === lastTrack.id) {\n        return;\n      }\n      const pc = settings.vhs.playlistController_;\n      const newPlaylist = pc.selectPlaylist(); // media will not change do nothing\n\n      if (pc.media() === newPlaylist) {\n        return;\n      }\n      mediaType.logger_(`track change. Switching main audio from ${lastTrack.id} to ${activeTrack.id}`);\n      mainPlaylistLoader.pause();\n      mainSegmentLoader.resetEverything();\n      pc.fastQualityChange_(newPlaylist);\n      return;\n    }\n    if (type === 'AUDIO') {\n      if (!activeGroup.playlistLoader) {\n        // when switching from demuxed audio/video to muxed audio/video (noted by no\n        // playlist loader for the audio group), we want to do a destructive reset of the\n        // main segment loader and not restart the audio loaders\n        mainSegmentLoader.setAudio(true); // don't have to worry about disabling the audio of the audio segment loader since\n        // it should be stopped\n\n        mainSegmentLoader.resetEverything();\n        return;\n      } // although the segment loader is an audio segment loader, call the setAudio\n      // function to ensure it is prepared to re-append the init segment (or handle other\n      // config changes)\n\n      segmentLoader.setAudio(true);\n      mainSegmentLoader.setAudio(false);\n    }\n    if (previousActiveLoader === activeGroup.playlistLoader) {\n      // Nothing has actually changed. This can happen because track change events can fire\n      // multiple times for a \"single\" change. One for enabling the new active track, and\n      // one for disabling the track that was active\n      startLoaders(activeGroup.playlistLoader, mediaType);\n      return;\n    }\n    if (segmentLoader.track) {\n      // For WebVTT, set the new text track in the segmentloader\n      segmentLoader.track(activeTrack);\n    } // destructive reset\n\n    segmentLoader.resetEverything();\n    startLoaders(activeGroup.playlistLoader, mediaType);\n  };\n  const onError = {\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning (or error if the playlist is excluded) to\n     *         console and switches back to default audio track.\n     * @function onError.AUDIO\n     */\n    AUDIO: (type, settings) => () => {\n      const {\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        mediaTypes: {\n          [type]: mediaType\n        },\n        excludePlaylist\n      } = settings;\n      stopLoaders(segmentLoader, mediaType); // switch back to default audio track\n\n      const activeTrack = mediaType.activeTrack();\n      const activeGroup = mediaType.activeGroup();\n      const id = (activeGroup.filter(group => group.default)[0] || activeGroup[0]).id;\n      const defaultTrack = mediaType.tracks[id];\n      if (activeTrack === defaultTrack) {\n        // Default track encountered an error. All we can do now is exclude the current\n        // rendition and hope another will switch audio groups\n        excludePlaylist({\n          error: {\n            message: 'Problem encountered loading the default audio track.'\n          }\n        });\n        return;\n      }\n      videojs.log.warn('Problem encountered loading the alternate audio track.' + 'Switching back to default.');\n      for (const trackId in mediaType.tracks) {\n        mediaType.tracks[trackId].enabled = mediaType.tracks[trackId] === defaultTrack;\n      }\n      mediaType.onTrackChanged();\n    },\n    /**\n     * Returns a function to be called when a SegmentLoader or PlaylistLoader encounters\n     * an error.\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Error handler. Logs warning to console and disables the active subtitle track\n     * @function onError.SUBTITLES\n     */\n    SUBTITLES: (type, settings) => () => {\n      const {\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        mediaTypes: {\n          [type]: mediaType\n        }\n      } = settings;\n      videojs.log.warn('Problem encountered loading the subtitle track.' + 'Disabling subtitle track.');\n      stopLoaders(segmentLoader, mediaType);\n      const track = mediaType.activeTrack();\n      if (track) {\n        track.mode = 'disabled';\n      }\n      mediaType.onTrackChanged();\n    }\n  };\n  const setupListeners = {\n    /**\n     * Setup event listeners for audio playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.AUDIO\n     */\n    AUDIO: (type, playlistLoader, settings) => {\n      if (!playlistLoader) {\n        // no playlist loader means audio will be muxed with the video\n        return;\n      }\n      const {\n        tech,\n        requestOptions,\n        segmentLoaders: {\n          [type]: segmentLoader\n        }\n      } = settings;\n      playlistLoader.on('loadedmetadata', () => {\n        const media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', () => {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    },\n    /**\n     * Setup event listeners for subtitle playlist loader\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {PlaylistLoader|null} playlistLoader\n     *        PlaylistLoader to register listeners on\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function setupListeners.SUBTITLES\n     */\n    SUBTITLES: (type, playlistLoader, settings) => {\n      const {\n        tech,\n        requestOptions,\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        mediaTypes: {\n          [type]: mediaType\n        }\n      } = settings;\n      playlistLoader.on('loadedmetadata', () => {\n        const media = playlistLoader.media();\n        segmentLoader.playlist(media, requestOptions);\n        segmentLoader.track(mediaType.activeTrack()); // if the video is already playing, or if this isn't a live video and preload\n        // permits, start downloading segments\n\n        if (!tech.paused() || media.endList && tech.preload() !== 'none') {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('loadedplaylist', () => {\n        segmentLoader.playlist(playlistLoader.media(), requestOptions); // If the player isn't paused, ensure that the segment loader is running\n\n        if (!tech.paused()) {\n          segmentLoader.load();\n        }\n      });\n      playlistLoader.on('error', onError[type](type, settings));\n    }\n  };\n  const initialize = {\n    /**\n     * Setup PlaylistLoaders and AudioTracks for the audio groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.AUDIO\n     */\n    'AUDIO': (type, settings) => {\n      const {\n        vhs,\n        sourceType,\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        requestOptions,\n        main: {\n          mediaGroups\n        },\n        mediaTypes: {\n          [type]: {\n            groups,\n            tracks,\n            logger_\n          }\n        },\n        mainPlaylistLoader\n      } = settings;\n      const audioOnlyMain = isAudioOnly(mainPlaylistLoader.main); // force a default if we have none\n\n      if (!mediaGroups[type] || Object.keys(mediaGroups[type]).length === 0) {\n        mediaGroups[type] = {\n          main: {\n            default: {\n              default: true\n            }\n          }\n        };\n        if (audioOnlyMain) {\n          mediaGroups[type].main.default.playlists = mainPlaylistLoader.main.playlists;\n        }\n      }\n      for (const groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n        for (const variantLabel in mediaGroups[type][groupId]) {\n          let properties = mediaGroups[type][groupId][variantLabel];\n          let playlistLoader;\n          if (audioOnlyMain) {\n            logger_(`AUDIO group '${groupId}' label '${variantLabel}' is a main playlist`);\n            properties.isMainPlaylist = true;\n            playlistLoader = null; // if vhs-json was provided as the source, and the media playlist was resolved,\n            // use the resolved media playlist object\n          } else if (sourceType === 'vhs-json' && properties.playlists) {\n            playlistLoader = new PlaylistLoader(properties.playlists[0], vhs, requestOptions);\n          } else if (properties.resolvedUri) {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions); // TODO: dash isn't the only type with properties.playlists\n            // should we even have properties.playlists in this check.\n          } else if (properties.playlists && sourceType === 'dash') {\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n          } else {\n            // no resolvedUri means the audio is muxed with the video when using this\n            // audio track\n            playlistLoader = null;\n          }\n          properties = merge({\n            id: variantLabel,\n            playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n          if (typeof tracks[variantLabel] === 'undefined') {\n            const track = new videojs.AudioTrack({\n              id: variantLabel,\n              kind: audioTrackKind_(properties),\n              enabled: false,\n              language: properties.language,\n              default: properties.default,\n              label: variantLabel\n            });\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n    /**\n     * Setup PlaylistLoaders and TextTracks for the subtitle groups\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize.SUBTITLES\n     */\n    'SUBTITLES': (type, settings) => {\n      const {\n        tech,\n        vhs,\n        sourceType,\n        segmentLoaders: {\n          [type]: segmentLoader\n        },\n        requestOptions,\n        main: {\n          mediaGroups\n        },\n        mediaTypes: {\n          [type]: {\n            groups,\n            tracks\n          }\n        },\n        mainPlaylistLoader\n      } = settings;\n      for (const groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n        for (const variantLabel in mediaGroups[type][groupId]) {\n          if (mediaGroups[type][groupId][variantLabel].forced) {\n            // Subtitle playlists with the forced attribute are not selectable in Safari.\n            // According to Apple's HLS Authoring Specification:\n            //   If content has forced subtitles and regular subtitles in a given language,\n            //   the regular subtitles track in that language MUST contain both the forced\n            //   subtitles and the regular subtitles for that language.\n            // Because of this requirement and that Safari does not add forced subtitles,\n            // forced subtitles are skipped here to maintain consistent experience across\n            // all platforms\n            continue;\n          }\n          let properties = mediaGroups[type][groupId][variantLabel];\n          let playlistLoader;\n          if (sourceType === 'hls') {\n            playlistLoader = new PlaylistLoader(properties.resolvedUri, vhs, requestOptions);\n          } else if (sourceType === 'dash') {\n            const playlists = properties.playlists.filter(p => p.excludeUntil !== Infinity);\n            if (!playlists.length) {\n              return;\n            }\n            playlistLoader = new DashPlaylistLoader(properties.playlists[0], vhs, requestOptions, mainPlaylistLoader);\n          } else if (sourceType === 'vhs-json') {\n            playlistLoader = new PlaylistLoader(\n            // if the vhs-json object included the media playlist, use the media playlist\n            // as provided, otherwise use the resolved URI to load the playlist\n            properties.playlists ? properties.playlists[0] : properties.resolvedUri, vhs, requestOptions);\n          }\n          properties = merge({\n            id: variantLabel,\n            playlistLoader\n          }, properties);\n          setupListeners[type](type, properties.playlistLoader, settings);\n          groups[groupId].push(properties);\n          if (typeof tracks[variantLabel] === 'undefined') {\n            const track = tech.addRemoteTextTrack({\n              id: variantLabel,\n              kind: 'subtitles',\n              default: properties.default && properties.autoselect,\n              language: properties.language,\n              label: variantLabel\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      } // setup single error event handler for the segment loader\n\n      segmentLoader.on('error', onError[type](type, settings));\n    },\n    /**\n     * Setup TextTracks for the closed-caption groups\n     *\n     * @param {String} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @function initialize['CLOSED-CAPTIONS']\n     */\n    'CLOSED-CAPTIONS': (type, settings) => {\n      const {\n        tech,\n        main: {\n          mediaGroups\n        },\n        mediaTypes: {\n          [type]: {\n            groups,\n            tracks\n          }\n        }\n      } = settings;\n      for (const groupId in mediaGroups[type]) {\n        if (!groups[groupId]) {\n          groups[groupId] = [];\n        }\n        for (const variantLabel in mediaGroups[type][groupId]) {\n          const properties = mediaGroups[type][groupId][variantLabel]; // Look for either 608 (CCn) or 708 (SERVICEn) caption services\n\n          if (!/^(?:CC|SERVICE)/.test(properties.instreamId)) {\n            continue;\n          }\n          const captionServices = tech.options_.vhs && tech.options_.vhs.captionServices || {};\n          let newProps = {\n            label: variantLabel,\n            language: properties.language,\n            instreamId: properties.instreamId,\n            default: properties.default && properties.autoselect\n          };\n          if (captionServices[newProps.instreamId]) {\n            newProps = merge(newProps, captionServices[newProps.instreamId]);\n          }\n          if (newProps.default === undefined) {\n            delete newProps.default;\n          } // No PlaylistLoader is required for Closed-Captions because the captions are\n          // embedded within the video stream\n\n          groups[groupId].push(merge({\n            id: variantLabel\n          }, properties));\n          if (typeof tracks[variantLabel] === 'undefined') {\n            const track = tech.addRemoteTextTrack({\n              id: newProps.instreamId,\n              kind: 'captions',\n              default: newProps.default,\n              language: newProps.language,\n              label: newProps.label\n            }, false).track;\n            tracks[variantLabel] = track;\n          }\n        }\n      }\n    }\n  };\n  const groupMatch = (list, media) => {\n    for (let i = 0; i < list.length; i++) {\n      if (playlistMatch(media, list[i])) {\n        return true;\n      }\n      if (list[i].playlists && groupMatch(list[i].playlists, media)) {\n        return true;\n      }\n    }\n    return false;\n  };\n  /**\n   * Returns a function used to get the active group of the provided type\n   *\n   * @param {string} type\n   *        MediaGroup type\n   * @param {Object} settings\n   *        Object containing required information for media groups\n   * @return {Function}\n   *         Function that returns the active media group for the provided type. Takes an\n   *         optional parameter {TextTrack} track. If no track is provided, a list of all\n   *         variants in the group, otherwise the variant corresponding to the provided\n   *         track is returned.\n   * @function activeGroup\n   */\n\n  const activeGroup = (type, settings) => track => {\n    const {\n      mainPlaylistLoader,\n      mediaTypes: {\n        [type]: {\n          groups\n        }\n      }\n    } = settings;\n    const media = mainPlaylistLoader.media();\n    if (!media) {\n      return null;\n    }\n    let variants = null; // set to variants to main media active group\n\n    if (media.attributes[type]) {\n      variants = groups[media.attributes[type]];\n    }\n    const groupKeys = Object.keys(groups);\n    if (!variants) {\n      // find the mainPlaylistLoader media\n      // that is in a media group if we are dealing\n      // with audio only\n      if (type === 'AUDIO' && groupKeys.length > 1 && isAudioOnly(settings.main)) {\n        for (let i = 0; i < groupKeys.length; i++) {\n          const groupPropertyList = groups[groupKeys[i]];\n          if (groupMatch(groupPropertyList, media)) {\n            variants = groupPropertyList;\n            break;\n          }\n        } // use the main group if it exists\n      } else if (groups.main) {\n        variants = groups.main; // only one group, use that one\n      } else if (groupKeys.length === 1) {\n        variants = groups[groupKeys[0]];\n      }\n    }\n    if (typeof track === 'undefined') {\n      return variants;\n    }\n    if (track === null || !variants) {\n      // An active track was specified so a corresponding group is expected. track === null\n      // means no track is currently active so there is no corresponding group\n      return null;\n    }\n    return variants.filter(props => props.id === track.id)[0] || null;\n  };\n  const activeTrack = {\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.AUDIO\n     */\n    AUDIO: (type, settings) => () => {\n      const {\n        mediaTypes: {\n          [type]: {\n            tracks\n          }\n        }\n      } = settings;\n      for (const id in tracks) {\n        if (tracks[id].enabled) {\n          return tracks[id];\n        }\n      }\n      return null;\n    },\n    /**\n     * Returns a function used to get the active track of type provided\n     *\n     * @param {string} type\n     *        MediaGroup type\n     * @param {Object} settings\n     *        Object containing required information for media groups\n     * @return {Function}\n     *         Function that returns the active media track for the provided type. Returns\n     *         null if no track is active\n     * @function activeTrack.SUBTITLES\n     */\n    SUBTITLES: (type, settings) => () => {\n      const {\n        mediaTypes: {\n          [type]: {\n            tracks\n          }\n        }\n      } = settings;\n      for (const id in tracks) {\n        if (tracks[id].mode === 'showing' || tracks[id].mode === 'hidden') {\n          return tracks[id];\n        }\n      }\n      return null;\n    }\n  };\n  const getActiveGroup = (type, {\n    mediaTypes\n  }) => () => {\n    const activeTrack_ = mediaTypes[type].activeTrack();\n    if (!activeTrack_) {\n      return null;\n    }\n    return mediaTypes[type].activeGroup(activeTrack_);\n  };\n  /**\n   * Setup PlaylistLoaders and Tracks for media groups (Audio, Subtitles,\n   * Closed-Captions) specified in the main manifest.\n   *\n   * @param {Object} settings\n   *        Object containing required information for setting up the media groups\n   * @param {Tech} settings.tech\n   *        The tech of the player\n   * @param {Object} settings.requestOptions\n   *        XHR request options used by the segment loaders\n   * @param {PlaylistLoader} settings.mainPlaylistLoader\n   *        PlaylistLoader for the main source\n   * @param {VhsHandler} settings.vhs\n   *        VHS SourceHandler\n   * @param {Object} settings.main\n   *        The parsed main manifest\n   * @param {Object} settings.mediaTypes\n   *        Object to store the loaders, tracks, and utility methods for each media type\n   * @param {Function} settings.excludePlaylist\n   *        Excludes the current rendition and forces a rendition switch.\n   * @function setupMediaGroups\n   */\n\n  const setupMediaGroups = settings => {\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      initialize[type](type, settings);\n    });\n    const {\n      mediaTypes,\n      mainPlaylistLoader,\n      tech,\n      vhs,\n      segmentLoaders: {\n        ['AUDIO']: audioSegmentLoader,\n        main: mainSegmentLoader\n      }\n    } = settings; // setup active group and track getters and change event handlers\n\n    ['AUDIO', 'SUBTITLES'].forEach(type => {\n      mediaTypes[type].activeGroup = activeGroup(type, settings);\n      mediaTypes[type].activeTrack = activeTrack[type](type, settings);\n      mediaTypes[type].onGroupChanged = onGroupChanged(type, settings);\n      mediaTypes[type].onGroupChanging = onGroupChanging(type, settings);\n      mediaTypes[type].onTrackChanged = onTrackChanged(type, settings);\n      mediaTypes[type].getActiveGroup = getActiveGroup(type, settings);\n    }); // DO NOT enable the default subtitle or caption track.\n    // DO enable the default audio track\n\n    const audioGroup = mediaTypes.AUDIO.activeGroup();\n    if (audioGroup) {\n      const groupId = (audioGroup.filter(group => group.default)[0] || audioGroup[0]).id;\n      mediaTypes.AUDIO.tracks[groupId].enabled = true;\n      mediaTypes.AUDIO.onGroupChanged();\n      mediaTypes.AUDIO.onTrackChanged();\n      const activeAudioGroup = mediaTypes.AUDIO.getActiveGroup(); // a similar check for handling setAudio on each loader is run again each time the\n      // track is changed, but needs to be handled here since the track may not be considered\n      // changed on the first call to onTrackChanged\n\n      if (!activeAudioGroup.playlistLoader) {\n        // either audio is muxed with video or the stream is audio only\n        mainSegmentLoader.setAudio(true);\n      } else {\n        // audio is demuxed\n        mainSegmentLoader.setAudio(false);\n        audioSegmentLoader.setAudio(true);\n      }\n    }\n    mainPlaylistLoader.on('mediachange', () => {\n      ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanged());\n    });\n    mainPlaylistLoader.on('mediachanging', () => {\n      ['AUDIO', 'SUBTITLES'].forEach(type => mediaTypes[type].onGroupChanging());\n    }); // custom audio track change event handler for usage event\n\n    const onAudioTrackChanged = () => {\n      mediaTypes.AUDIO.onTrackChanged();\n      tech.trigger({\n        type: 'usage',\n        name: 'vhs-audio-change'\n      });\n    };\n    tech.audioTracks().addEventListener('change', onAudioTrackChanged);\n    tech.remoteTextTracks().addEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    vhs.on('dispose', () => {\n      tech.audioTracks().removeEventListener('change', onAudioTrackChanged);\n      tech.remoteTextTracks().removeEventListener('change', mediaTypes.SUBTITLES.onTrackChanged);\n    }); // clear existing audio tracks and add the ones we just created\n\n    tech.clearTracks('audio');\n    for (const id in mediaTypes.AUDIO.tracks) {\n      tech.audioTracks().addTrack(mediaTypes.AUDIO.tracks[id]);\n    }\n  };\n  /**\n   * Creates skeleton object used to store the loaders, tracks, and utility methods for each\n   * media type\n   *\n   * @return {Object}\n   *         Object to store the loaders, tracks, and utility methods for each media type\n   * @function createMediaTypes\n   */\n\n  const createMediaTypes = () => {\n    const mediaTypes = {};\n    ['AUDIO', 'SUBTITLES', 'CLOSED-CAPTIONS'].forEach(type => {\n      mediaTypes[type] = {\n        groups: {},\n        tracks: {},\n        activePlaylistLoader: null,\n        activeGroup: noop,\n        activeTrack: noop,\n        getActiveGroup: noop,\n        onGroupChanged: noop,\n        onTrackChanged: noop,\n        lastTrack_: null,\n        logger_: logger(`MediaGroups[${type}]`)\n      };\n    });\n    return mediaTypes;\n  };\n\n  /**\n   * @file playlist-controller.js\n   */\n  const ABORT_EARLY_EXCLUSION_SECONDS = 60 * 2;\n  let Vhs$1; // SegmentLoader stats that need to have each loader's\n  // values summed to calculate the final value\n\n  const loaderStats = ['mediaRequests', 'mediaRequestsAborted', 'mediaRequestsTimedout', 'mediaRequestsErrored', 'mediaTransferDuration', 'mediaBytesTransferred', 'mediaAppends'];\n  const sumLoaderStat = function (stat) {\n    return this.audioSegmentLoader_[stat] + this.mainSegmentLoader_[stat];\n  };\n  const shouldSwitchToMedia = function ({\n    currentPlaylist,\n    buffered,\n    currentTime,\n    nextPlaylist,\n    bufferLowWaterLine,\n    bufferHighWaterLine,\n    duration,\n    bufferBasedABR,\n    log\n  }) {\n    // we have no other playlist to switch to\n    if (!nextPlaylist) {\n      videojs.log.warn('We received no playlist to switch to. Please check your stream.');\n      return false;\n    }\n    const sharedLogLine = `allowing switch ${currentPlaylist && currentPlaylist.id || 'null'} -> ${nextPlaylist.id}`;\n    if (!currentPlaylist) {\n      log(`${sharedLogLine} as current playlist is not set`);\n      return true;\n    } // no need to switch if playlist is the same\n\n    if (nextPlaylist.id === currentPlaylist.id) {\n      return false;\n    } // determine if current time is in a buffered range.\n\n    const isBuffered = Boolean(findRange(buffered, currentTime).length); // If the playlist is live, then we want to not take low water line into account.\n    // This is because in LIVE, the player plays 3 segments from the end of the\n    // playlist, and if `BUFFER_LOW_WATER_LINE` is greater than the duration availble\n    // in those segments, a viewer will never experience a rendition upswitch.\n\n    if (!currentPlaylist.endList) {\n      // For LLHLS live streams, don't switch renditions before playback has started, as it almost\n      // doubles the time to first playback.\n      if (!isBuffered && typeof currentPlaylist.partTargetDuration === 'number') {\n        log(`not ${sharedLogLine} as current playlist is live llhls, but currentTime isn't in buffered.`);\n        return false;\n      }\n      log(`${sharedLogLine} as current playlist is live`);\n      return true;\n    }\n    const forwardBuffer = timeAheadOf(buffered, currentTime);\n    const maxBufferLowWaterLine = bufferBasedABR ? Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE : Config.MAX_BUFFER_LOW_WATER_LINE; // For the same reason as LIVE, we ignore the low water line when the VOD\n    // duration is below the max potential low water line\n\n    if (duration < maxBufferLowWaterLine) {\n      log(`${sharedLogLine} as duration < max low water line (${duration} < ${maxBufferLowWaterLine})`);\n      return true;\n    }\n    const nextBandwidth = nextPlaylist.attributes.BANDWIDTH;\n    const currBandwidth = currentPlaylist.attributes.BANDWIDTH; // when switching down, if our buffer is lower than the high water line,\n    // we can switch down\n\n    if (nextBandwidth < currBandwidth && (!bufferBasedABR || forwardBuffer < bufferHighWaterLine)) {\n      let logLine = `${sharedLogLine} as next bandwidth < current bandwidth (${nextBandwidth} < ${currBandwidth})`;\n      if (bufferBasedABR) {\n        logLine += ` and forwardBuffer < bufferHighWaterLine (${forwardBuffer} < ${bufferHighWaterLine})`;\n      }\n      log(logLine);\n      return true;\n    } // and if our buffer is higher than the low water line,\n    // we can switch up\n\n    if ((!bufferBasedABR || nextBandwidth > currBandwidth) && forwardBuffer >= bufferLowWaterLine) {\n      let logLine = `${sharedLogLine} as forwardBuffer >= bufferLowWaterLine (${forwardBuffer} >= ${bufferLowWaterLine})`;\n      if (bufferBasedABR) {\n        logLine += ` and next bandwidth > current bandwidth (${nextBandwidth} > ${currBandwidth})`;\n      }\n      log(logLine);\n      return true;\n    }\n    log(`not ${sharedLogLine} as no switching criteria met`);\n    return false;\n  };\n  /**\n   * the main playlist controller controller all interactons\n   * between playlists and segmentloaders. At this time this mainly\n   * involves a main playlist and a series of audio playlists\n   * if they are available\n   *\n   * @class PlaylistController\n   * @extends videojs.EventTarget\n   */\n\n  class PlaylistController extends videojs.EventTarget {\n    constructor(options) {\n      super();\n      const {\n        src,\n        withCredentials,\n        tech,\n        bandwidth,\n        externVhs,\n        useCueTags,\n        playlistExclusionDuration,\n        enableLowInitialPlaylist,\n        sourceType,\n        cacheEncryptionKeys,\n        bufferBasedABR,\n        leastPixelDiffSelector,\n        captionServices\n      } = options;\n      if (!src) {\n        throw new Error('A non-empty playlist URL or JSON manifest string is required');\n      }\n      let {\n        maxPlaylistRetries\n      } = options;\n      if (maxPlaylistRetries === null || typeof maxPlaylistRetries === 'undefined') {\n        maxPlaylistRetries = Infinity;\n      }\n      Vhs$1 = externVhs;\n      this.bufferBasedABR = Boolean(bufferBasedABR);\n      this.leastPixelDiffSelector = Boolean(leastPixelDiffSelector);\n      this.withCredentials = withCredentials;\n      this.tech_ = tech;\n      this.vhs_ = tech.vhs;\n      this.sourceType_ = sourceType;\n      this.useCueTags_ = useCueTags;\n      this.playlistExclusionDuration = playlistExclusionDuration;\n      this.maxPlaylistRetries = maxPlaylistRetries;\n      this.enableLowInitialPlaylist = enableLowInitialPlaylist;\n      if (this.useCueTags_) {\n        this.cueTagsTrack_ = this.tech_.addTextTrack('metadata', 'ad-cues');\n        this.cueTagsTrack_.inBandMetadataTrackDispatchType = '';\n      }\n      this.requestOptions_ = {\n        withCredentials,\n        maxPlaylistRetries,\n        timeout: null\n      };\n      this.on('error', this.pauseLoading);\n      this.mediaTypes_ = createMediaTypes();\n      this.mediaSource = new window.MediaSource();\n      this.handleDurationChange_ = this.handleDurationChange_.bind(this);\n      this.handleSourceOpen_ = this.handleSourceOpen_.bind(this);\n      this.handleSourceEnded_ = this.handleSourceEnded_.bind(this);\n      this.mediaSource.addEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.addEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.addEventListener('sourceended', this.handleSourceEnded_); // we don't have to handle sourceclose since dispose will handle termination of\n      // everything, and the MediaSource should not be detached without a proper disposal\n\n      this.seekable_ = createTimeRanges();\n      this.hasPlayed_ = false;\n      this.syncController_ = new SyncController(options);\n      this.segmentMetadataTrack_ = tech.addRemoteTextTrack({\n        kind: 'metadata',\n        label: 'segment-metadata'\n      }, false).track;\n      this.decrypter_ = new Decrypter();\n      this.sourceUpdater_ = new SourceUpdater(this.mediaSource);\n      this.inbandTextTracks_ = {};\n      this.timelineChangeController_ = new TimelineChangeController();\n      const segmentLoaderSettings = {\n        vhs: this.vhs_,\n        parse708captions: options.parse708captions,\n        useDtsForTimestampOffset: options.useDtsForTimestampOffset,\n        captionServices,\n        mediaSource: this.mediaSource,\n        currentTime: this.tech_.currentTime.bind(this.tech_),\n        seekable: () => this.seekable(),\n        seeking: () => this.tech_.seeking(),\n        duration: () => this.duration(),\n        hasPlayed: () => this.hasPlayed_,\n        goalBufferLength: () => this.goalBufferLength(),\n        bandwidth,\n        syncController: this.syncController_,\n        decrypter: this.decrypter_,\n        sourceType: this.sourceType_,\n        inbandTextTracks: this.inbandTextTracks_,\n        cacheEncryptionKeys,\n        sourceUpdater: this.sourceUpdater_,\n        timelineChangeController: this.timelineChangeController_,\n        exactManifestTimings: options.exactManifestTimings\n      }; // The source type check not only determines whether a special DASH playlist loader\n      // should be used, but also covers the case where the provided src is a vhs-json\n      // manifest object (instead of a URL). In the case of vhs-json, the default\n      // PlaylistLoader should be used.\n\n      this.mainPlaylistLoader_ = this.sourceType_ === 'dash' ? new DashPlaylistLoader(src, this.vhs_, this.requestOptions_) : new PlaylistLoader(src, this.vhs_, this.requestOptions_);\n      this.setupMainPlaylistLoaderListeners_(); // setup segment loaders\n      // combined audio/video or just video when alternate audio track is selected\n\n      this.mainSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n        segmentMetadataTrack: this.segmentMetadataTrack_,\n        loaderType: 'main'\n      }), options); // alternate audio track\n\n      this.audioSegmentLoader_ = new SegmentLoader(merge(segmentLoaderSettings, {\n        loaderType: 'audio'\n      }), options);\n      this.subtitleSegmentLoader_ = new VTTSegmentLoader(merge(segmentLoaderSettings, {\n        loaderType: 'vtt',\n        featuresNativeTextTracks: this.tech_.featuresNativeTextTracks\n      }), options);\n      this.setupSegmentLoaderListeners_();\n      if (this.bufferBasedABR) {\n        this.mainPlaylistLoader_.one('loadedplaylist', () => this.startABRTimer_());\n        this.tech_.on('pause', () => this.stopABRTimer_());\n        this.tech_.on('play', () => this.startABRTimer_());\n      } // Create SegmentLoader stat-getters\n      // mediaRequests_\n      // mediaRequestsAborted_\n      // mediaRequestsTimedout_\n      // mediaRequestsErrored_\n      // mediaTransferDuration_\n      // mediaBytesTransferred_\n      // mediaAppends_\n\n      loaderStats.forEach(stat => {\n        this[stat + '_'] = sumLoaderStat.bind(this, stat);\n      });\n      this.logger_ = logger('pc');\n      this.triggeredFmp4Usage = false;\n      if (this.tech_.preload() === 'none') {\n        this.loadOnPlay_ = () => {\n          this.loadOnPlay_ = null;\n          this.mainPlaylistLoader_.load();\n        };\n        this.tech_.one('play', this.loadOnPlay_);\n      } else {\n        this.mainPlaylistLoader_.load();\n      }\n      this.timeToLoadedData__ = -1;\n      this.mainAppendsToLoadedData__ = -1;\n      this.audioAppendsToLoadedData__ = -1;\n      const event = this.tech_.preload() === 'none' ? 'play' : 'loadstart'; // start the first frame timer on loadstart or play (for preload none)\n\n      this.tech_.one(event, () => {\n        const timeToLoadedDataStart = Date.now();\n        this.tech_.one('loadeddata', () => {\n          this.timeToLoadedData__ = Date.now() - timeToLoadedDataStart;\n          this.mainAppendsToLoadedData__ = this.mainSegmentLoader_.mediaAppends;\n          this.audioAppendsToLoadedData__ = this.audioSegmentLoader_.mediaAppends;\n        });\n      });\n    }\n    mainAppendsToLoadedData_() {\n      return this.mainAppendsToLoadedData__;\n    }\n    audioAppendsToLoadedData_() {\n      return this.audioAppendsToLoadedData__;\n    }\n    appendsToLoadedData_() {\n      const main = this.mainAppendsToLoadedData_();\n      const audio = this.audioAppendsToLoadedData_();\n      if (main === -1 || audio === -1) {\n        return -1;\n      }\n      return main + audio;\n    }\n    timeToLoadedData_() {\n      return this.timeToLoadedData__;\n    }\n    /**\n     * Run selectPlaylist and switch to the new playlist if we should\n     *\n     * @param {string} [reason=abr] a reason for why the ABR check is made\n     * @private\n     */\n\n    checkABR_(reason = 'abr') {\n      const nextPlaylist = this.selectPlaylist();\n      if (nextPlaylist && this.shouldSwitchToMedia_(nextPlaylist)) {\n        this.switchMedia_(nextPlaylist, reason);\n      }\n    }\n    switchMedia_(playlist, cause, delay) {\n      const oldMedia = this.media();\n      const oldId = oldMedia && (oldMedia.id || oldMedia.uri);\n      const newId = playlist.id || playlist.uri;\n      if (oldId && oldId !== newId) {\n        this.logger_(`switch media ${oldId} -> ${newId} from ${cause}`);\n        this.tech_.trigger({\n          type: 'usage',\n          name: `vhs-rendition-change-${cause}`\n        });\n      }\n      this.mainPlaylistLoader_.media(playlist, delay);\n    }\n    /**\n     * Start a timer that periodically calls checkABR_\n     *\n     * @private\n     */\n\n    startABRTimer_() {\n      this.stopABRTimer_();\n      this.abrTimer_ = window.setInterval(() => this.checkABR_(), 250);\n    }\n    /**\n     * Stop the timer that periodically calls checkABR_\n     *\n     * @private\n     */\n\n    stopABRTimer_() {\n      // if we're scrubbing, we don't need to pause.\n      // This getter will be added to Video.js in version 7.11.\n      if (this.tech_.scrubbing && this.tech_.scrubbing()) {\n        return;\n      }\n      window.clearInterval(this.abrTimer_);\n      this.abrTimer_ = null;\n    }\n    /**\n     * Get a list of playlists for the currently selected audio playlist\n     *\n     * @return {Array} the array of audio playlists\n     */\n\n    getAudioTrackPlaylists_() {\n      const main = this.main();\n      const defaultPlaylists = main && main.playlists || []; // if we don't have any audio groups then we can only\n      // assume that the audio tracks are contained in main\n      // playlist array, use that or an empty array.\n\n      if (!main || !main.mediaGroups || !main.mediaGroups.AUDIO) {\n        return defaultPlaylists;\n      }\n      const AUDIO = main.mediaGroups.AUDIO;\n      const groupKeys = Object.keys(AUDIO);\n      let track; // get the current active track\n\n      if (Object.keys(this.mediaTypes_.AUDIO.groups).length) {\n        track = this.mediaTypes_.AUDIO.activeTrack(); // or get the default track from main if mediaTypes_ isn't setup yet\n      } else {\n        // default group is `main` or just the first group.\n        const defaultGroup = AUDIO.main || groupKeys.length && AUDIO[groupKeys[0]];\n        for (const label in defaultGroup) {\n          if (defaultGroup[label].default) {\n            track = {\n              label\n            };\n            break;\n          }\n        }\n      } // no active track no playlists.\n\n      if (!track) {\n        return defaultPlaylists;\n      }\n      const playlists = []; // get all of the playlists that are possible for the\n      // active track.\n\n      for (const group in AUDIO) {\n        if (AUDIO[group][track.label]) {\n          const properties = AUDIO[group][track.label];\n          if (properties.playlists && properties.playlists.length) {\n            playlists.push.apply(playlists, properties.playlists);\n          } else if (properties.uri) {\n            playlists.push(properties);\n          } else if (main.playlists.length) {\n            // if an audio group does not have a uri\n            // see if we have main playlists that use it as a group.\n            // if we do then add those to the playlists list.\n            for (let i = 0; i < main.playlists.length; i++) {\n              const playlist = main.playlists[i];\n              if (playlist.attributes && playlist.attributes.AUDIO && playlist.attributes.AUDIO === group) {\n                playlists.push(playlist);\n              }\n            }\n          }\n        }\n      }\n      if (!playlists.length) {\n        return defaultPlaylists;\n      }\n      return playlists;\n    }\n    /**\n     * Register event handlers on the main playlist loader. A helper\n     * function for construction time.\n     *\n     * @private\n     */\n\n    setupMainPlaylistLoaderListeners_() {\n      this.mainPlaylistLoader_.on('loadedmetadata', () => {\n        const media = this.mainPlaylistLoader_.media();\n        const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n          this.requestOptions_.timeout = 0;\n        } else {\n          this.requestOptions_.timeout = requestTimeout;\n        } // if this isn't a live video and preload permits, start\n        // downloading segments\n\n        if (media.endList && this.tech_.preload() !== 'none') {\n          this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n          this.mainSegmentLoader_.load();\n        }\n        setupMediaGroups({\n          sourceType: this.sourceType_,\n          segmentLoaders: {\n            AUDIO: this.audioSegmentLoader_,\n            SUBTITLES: this.subtitleSegmentLoader_,\n            main: this.mainSegmentLoader_\n          },\n          tech: this.tech_,\n          requestOptions: this.requestOptions_,\n          mainPlaylistLoader: this.mainPlaylistLoader_,\n          vhs: this.vhs_,\n          main: this.main(),\n          mediaTypes: this.mediaTypes_,\n          excludePlaylist: this.excludePlaylist.bind(this)\n        });\n        this.triggerPresenceUsage_(this.main(), media);\n        this.setupFirstPlay();\n        if (!this.mediaTypes_.AUDIO.activePlaylistLoader || this.mediaTypes_.AUDIO.activePlaylistLoader.media()) {\n          this.trigger('selectedinitialmedia');\n        } else {\n          // We must wait for the active audio playlist loader to\n          // finish setting up before triggering this event so the\n          // representations API and EME setup is correct\n          this.mediaTypes_.AUDIO.activePlaylistLoader.one('loadedmetadata', () => {\n            this.trigger('selectedinitialmedia');\n          });\n        }\n      });\n      this.mainPlaylistLoader_.on('loadedplaylist', () => {\n        if (this.loadOnPlay_) {\n          this.tech_.off('play', this.loadOnPlay_);\n        }\n        let updatedPlaylist = this.mainPlaylistLoader_.media();\n        if (!updatedPlaylist) {\n          // exclude any variants that are not supported by the browser before selecting\n          // an initial media as the playlist selectors do not consider browser support\n          this.excludeUnsupportedVariants_();\n          let selectedMedia;\n          if (this.enableLowInitialPlaylist) {\n            selectedMedia = this.selectInitialPlaylist();\n          }\n          if (!selectedMedia) {\n            selectedMedia = this.selectPlaylist();\n          }\n          if (!selectedMedia || !this.shouldSwitchToMedia_(selectedMedia)) {\n            return;\n          }\n          this.initialMedia_ = selectedMedia;\n          this.switchMedia_(this.initialMedia_, 'initial'); // Under the standard case where a source URL is provided, loadedplaylist will\n          // fire again since the playlist will be requested. In the case of vhs-json\n          // (where the manifest object is provided as the source), when the media\n          // playlist's `segments` list is already available, a media playlist won't be\n          // requested, and loadedplaylist won't fire again, so the playlist handler must be\n          // called on its own here.\n\n          const haveJsonSource = this.sourceType_ === 'vhs-json' && this.initialMedia_.segments;\n          if (!haveJsonSource) {\n            return;\n          }\n          updatedPlaylist = this.initialMedia_;\n        }\n        this.handleUpdatedMediaPlaylist(updatedPlaylist);\n      });\n      this.mainPlaylistLoader_.on('error', () => {\n        const error = this.mainPlaylistLoader_.error;\n        this.excludePlaylist({\n          playlistToExclude: error.playlist,\n          error\n        });\n      });\n      this.mainPlaylistLoader_.on('mediachanging', () => {\n        this.mainSegmentLoader_.abort();\n        this.mainSegmentLoader_.pause();\n      });\n      this.mainPlaylistLoader_.on('mediachange', () => {\n        const media = this.mainPlaylistLoader_.media();\n        const requestTimeout = media.targetDuration * 1.5 * 1000; // If we don't have any more available playlists, we don't want to\n        // timeout the request.\n\n        if (isLowestEnabledRendition(this.mainPlaylistLoader_.main, this.mainPlaylistLoader_.media())) {\n          this.requestOptions_.timeout = 0;\n        } else {\n          this.requestOptions_.timeout = requestTimeout;\n        }\n        this.mainPlaylistLoader_.load(); // TODO: Create a new event on the PlaylistLoader that signals\n        // that the segments have changed in some way and use that to\n        // update the SegmentLoader instead of doing it twice here and\n        // on `loadedplaylist`\n\n        this.mainSegmentLoader_.playlist(media, this.requestOptions_);\n        this.mainSegmentLoader_.load();\n        this.tech_.trigger({\n          type: 'mediachange',\n          bubbles: true\n        });\n      });\n      this.mainPlaylistLoader_.on('playlistunchanged', () => {\n        const updatedPlaylist = this.mainPlaylistLoader_.media(); // ignore unchanged playlists that have already been\n        // excluded for not-changing. We likely just have a really slowly updating\n        // playlist.\n\n        if (updatedPlaylist.lastExcludeReason_ === 'playlist-unchanged') {\n          return;\n        }\n        const playlistOutdated = this.stuckAtPlaylistEnd_(updatedPlaylist);\n        if (playlistOutdated) {\n          // Playlist has stopped updating and we're stuck at its end. Try to\n          // exclude it and switch to another playlist in the hope that that\n          // one is updating (and give the player a chance to re-adjust to the\n          // safe live point).\n          this.excludePlaylist({\n            error: {\n              message: 'Playlist no longer updating.',\n              reason: 'playlist-unchanged'\n            }\n          }); // useful for monitoring QoS\n\n          this.tech_.trigger('playliststuck');\n        }\n      });\n      this.mainPlaylistLoader_.on('renditiondisabled', () => {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-disabled'\n        });\n      });\n      this.mainPlaylistLoader_.on('renditionenabled', () => {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-rendition-enabled'\n        });\n      });\n    }\n    /**\n     * Given an updated media playlist (whether it was loaded for the first time, or\n     * refreshed for live playlists), update any relevant properties and state to reflect\n     * changes in the media that should be accounted for (e.g., cues and duration).\n     *\n     * @param {Object} updatedPlaylist the updated media playlist object\n     *\n     * @private\n     */\n\n    handleUpdatedMediaPlaylist(updatedPlaylist) {\n      if (this.useCueTags_) {\n        this.updateAdCues_(updatedPlaylist);\n      } // TODO: Create a new event on the PlaylistLoader that signals\n      // that the segments have changed in some way and use that to\n      // update the SegmentLoader instead of doing it twice here and\n      // on `mediachange`\n\n      this.mainSegmentLoader_.playlist(updatedPlaylist, this.requestOptions_);\n      this.updateDuration(!updatedPlaylist.endList); // If the player isn't paused, ensure that the segment loader is running,\n      // as it is possible that it was temporarily stopped while waiting for\n      // a playlist (e.g., in case the playlist errored and we re-requested it).\n\n      if (!this.tech_.paused()) {\n        this.mainSegmentLoader_.load();\n        if (this.audioSegmentLoader_) {\n          this.audioSegmentLoader_.load();\n        }\n      }\n    }\n    /**\n     * A helper function for triggerring presence usage events once per source\n     *\n     * @private\n     */\n\n    triggerPresenceUsage_(main, media) {\n      const mediaGroups = main.mediaGroups || {};\n      let defaultDemuxed = true;\n      const audioGroupKeys = Object.keys(mediaGroups.AUDIO);\n      for (const mediaGroup in mediaGroups.AUDIO) {\n        for (const label in mediaGroups.AUDIO[mediaGroup]) {\n          const properties = mediaGroups.AUDIO[mediaGroup][label];\n          if (!properties.uri) {\n            defaultDemuxed = false;\n          }\n        }\n      }\n      if (defaultDemuxed) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-demuxed'\n        });\n      }\n      if (Object.keys(mediaGroups.SUBTITLES).length) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-webvtt'\n        });\n      }\n      if (Vhs$1.Playlist.isAes(media)) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-aes'\n        });\n      }\n      if (audioGroupKeys.length && Object.keys(mediaGroups.AUDIO[audioGroupKeys[0]]).length > 1) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-alternate-audio'\n        });\n      }\n      if (this.useCueTags_) {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-playlist-cue-tags'\n        });\n      }\n    }\n    shouldSwitchToMedia_(nextPlaylist) {\n      const currentPlaylist = this.mainPlaylistLoader_.media() || this.mainPlaylistLoader_.pendingMedia_;\n      const currentTime = this.tech_.currentTime();\n      const bufferLowWaterLine = this.bufferLowWaterLine();\n      const bufferHighWaterLine = this.bufferHighWaterLine();\n      const buffered = this.tech_.buffered();\n      return shouldSwitchToMedia({\n        buffered,\n        currentTime,\n        currentPlaylist,\n        nextPlaylist,\n        bufferLowWaterLine,\n        bufferHighWaterLine,\n        duration: this.duration(),\n        bufferBasedABR: this.bufferBasedABR,\n        log: this.logger_\n      });\n    }\n    /**\n     * Register event handlers on the segment loaders. A helper function\n     * for construction time.\n     *\n     * @private\n     */\n\n    setupSegmentLoaderListeners_() {\n      this.mainSegmentLoader_.on('bandwidthupdate', () => {\n        // Whether or not buffer based ABR or another ABR is used, on a bandwidth change it's\n        // useful to check to see if a rendition switch should be made.\n        this.checkABR_('bandwidthupdate');\n        this.tech_.trigger('bandwidthupdate');\n      });\n      this.mainSegmentLoader_.on('timeout', () => {\n        if (this.bufferBasedABR) {\n          // If a rendition change is needed, then it would've be done on `bandwidthupdate`.\n          // Here the only consideration is that for buffer based ABR there's no guarantee\n          // of an immediate switch (since the bandwidth is averaged with a timeout\n          // bandwidth value of 1), so force a load on the segment loader to keep it going.\n          this.mainSegmentLoader_.load();\n        }\n      }); // `progress` events are not reliable enough of a bandwidth measure to trigger buffer\n      // based ABR.\n\n      if (!this.bufferBasedABR) {\n        this.mainSegmentLoader_.on('progress', () => {\n          this.trigger('progress');\n        });\n      }\n      this.mainSegmentLoader_.on('error', () => {\n        const error = this.mainSegmentLoader_.error();\n        this.excludePlaylist({\n          playlistToExclude: error.playlist,\n          error\n        });\n      });\n      this.mainSegmentLoader_.on('appenderror', () => {\n        this.error = this.mainSegmentLoader_.error_;\n        this.trigger('error');\n      });\n      this.mainSegmentLoader_.on('syncinfoupdate', () => {\n        this.onSyncInfoUpdate_();\n      });\n      this.mainSegmentLoader_.on('timestampoffset', () => {\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-timestamp-offset'\n        });\n      });\n      this.audioSegmentLoader_.on('syncinfoupdate', () => {\n        this.onSyncInfoUpdate_();\n      });\n      this.audioSegmentLoader_.on('appenderror', () => {\n        this.error = this.audioSegmentLoader_.error_;\n        this.trigger('error');\n      });\n      this.mainSegmentLoader_.on('ended', () => {\n        this.logger_('main segment loader ended');\n        this.onEndOfStream();\n      });\n      this.mainSegmentLoader_.on('earlyabort', event => {\n        // never try to early abort with the new ABR algorithm\n        if (this.bufferBasedABR) {\n          return;\n        }\n        this.delegateLoaders_('all', ['abort']);\n        this.excludePlaylist({\n          error: {\n            message: 'Aborted early because there isn\\'t enough bandwidth to complete ' + 'the request without rebuffering.'\n          },\n          playlistExclusionDuration: ABORT_EARLY_EXCLUSION_SECONDS\n        });\n      });\n      const updateCodecs = () => {\n        if (!this.sourceUpdater_.hasCreatedSourceBuffers()) {\n          return this.tryToCreateSourceBuffers_();\n        }\n        const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n        if (!codecs) {\n          return;\n        }\n        this.sourceUpdater_.addOrChangeSourceBuffers(codecs);\n      };\n      this.mainSegmentLoader_.on('trackinfo', updateCodecs);\n      this.audioSegmentLoader_.on('trackinfo', updateCodecs);\n      this.mainSegmentLoader_.on('fmp4', () => {\n        if (!this.triggeredFmp4Usage) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n          this.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('fmp4', () => {\n        if (!this.triggeredFmp4Usage) {\n          this.tech_.trigger({\n            type: 'usage',\n            name: 'vhs-fmp4'\n          });\n          this.triggeredFmp4Usage = true;\n        }\n      });\n      this.audioSegmentLoader_.on('ended', () => {\n        this.logger_('audioSegmentLoader ended');\n        this.onEndOfStream();\n      });\n    }\n    mediaSecondsLoaded_() {\n      return Math.max(this.audioSegmentLoader_.mediaSecondsLoaded + this.mainSegmentLoader_.mediaSecondsLoaded);\n    }\n    /**\n     * Call load on our SegmentLoaders\n     */\n\n    load() {\n      this.mainSegmentLoader_.load();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.load();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.load();\n      }\n    }\n    /**\n     * Re-tune playback quality level for the current player\n     * conditions. This method will perform destructive actions like removing\n     * already buffered content in order to readjust the currently active\n     * playlist quickly. This is good for manual quality changes\n     *\n     * @private\n     */\n\n    fastQualityChange_(media = this.selectPlaylist()) {\n      if (media === this.mainPlaylistLoader_.media()) {\n        this.logger_('skipping fastQualityChange because new media is same as old');\n        return;\n      }\n      this.switchMedia_(media, 'fast-quality'); // Delete all buffered data to allow an immediate quality switch, then seek to give\n      // the browser a kick to remove any cached frames from the previous rendtion (.04 seconds\n      // ahead is roughly the minimum that will accomplish this across a variety of content\n      // in IE and Edge, but seeking in place is sufficient on all other browsers)\n      // Edge/IE bug: https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/14600375/\n      // Chrome bug: https://bugs.chromium.org/p/chromium/issues/detail?id=651904\n\n      this.mainSegmentLoader_.resetEverything(() => {\n        // Since this is not a typical seek, we avoid the seekTo method which can cause segments\n        // from the previously enabled rendition to load before the new playlist has finished loading\n        if (videojs.browser.IE_VERSION || videojs.browser.IS_EDGE) {\n          this.tech_.setCurrentTime(this.tech_.currentTime() + 0.04);\n        } else {\n          this.tech_.setCurrentTime(this.tech_.currentTime());\n        }\n      }); // don't need to reset audio as it is reset when media changes\n    }\n    /**\n     * Begin playback.\n     */\n\n    play() {\n      if (this.setupFirstPlay()) {\n        return;\n      }\n      if (this.tech_.ended()) {\n        this.tech_.setCurrentTime(0);\n      }\n      if (this.hasPlayed_) {\n        this.load();\n      }\n      const seekable = this.tech_.seekable(); // if the viewer has paused and we fell out of the live window,\n      // seek forward to the live point\n\n      if (this.tech_.duration() === Infinity) {\n        if (this.tech_.currentTime() < seekable.start(0)) {\n          return this.tech_.setCurrentTime(seekable.end(seekable.length - 1));\n        }\n      }\n    }\n    /**\n     * Seek to the latest media position if this is a live video and the\n     * player and video are loaded and initialized.\n     */\n\n    setupFirstPlay() {\n      const media = this.mainPlaylistLoader_.media(); // Check that everything is ready to begin buffering for the first call to play\n      //  If 1) there is no active media\n      //     2) the player is paused\n      //     3) the first play has already been setup\n      // then exit early\n\n      if (!media || this.tech_.paused() || this.hasPlayed_) {\n        return false;\n      } // when the video is a live stream\n\n      if (!media.endList) {\n        const seekable = this.seekable();\n        if (!seekable.length) {\n          // without a seekable range, the player cannot seek to begin buffering at the live\n          // point\n          return false;\n        }\n        if (videojs.browser.IE_VERSION && this.tech_.readyState() === 0) {\n          // IE11 throws an InvalidStateError if you try to set currentTime while the\n          // readyState is 0, so it must be delayed until the tech fires loadedmetadata.\n          this.tech_.one('loadedmetadata', () => {\n            this.trigger('firstplay');\n            this.tech_.setCurrentTime(seekable.end(0));\n            this.hasPlayed_ = true;\n          });\n          return false;\n        } // trigger firstplay to inform the source handler to ignore the next seek event\n\n        this.trigger('firstplay'); // seek to the live point\n\n        this.tech_.setCurrentTime(seekable.end(0));\n      }\n      this.hasPlayed_ = true; // we can begin loading now that everything is ready\n\n      this.load();\n      return true;\n    }\n    /**\n     * handle the sourceopen event on the MediaSource\n     *\n     * @private\n     */\n\n    handleSourceOpen_() {\n      // Only attempt to create the source buffer if none already exist.\n      // handleSourceOpen is also called when we are \"re-opening\" a source buffer\n      // after `endOfStream` has been called (in response to a seek for instance)\n      this.tryToCreateSourceBuffers_(); // if autoplay is enabled, begin playback. This is duplicative of\n      // code in video.js but is required because play() must be invoked\n      // *after* the media source has opened.\n\n      if (this.tech_.autoplay()) {\n        const playPromise = this.tech_.play(); // Catch/silence error when a pause interrupts a play request\n        // on browsers which return a promise\n\n        if (typeof playPromise !== 'undefined' && typeof playPromise.then === 'function') {\n          playPromise.then(null, e => {});\n        }\n      }\n      this.trigger('sourceopen');\n    }\n    /**\n     * handle the sourceended event on the MediaSource\n     *\n     * @private\n     */\n\n    handleSourceEnded_() {\n      if (!this.inbandTextTracks_.metadataTrack_) {\n        return;\n      }\n      const cues = this.inbandTextTracks_.metadataTrack_.cues;\n      if (!cues || !cues.length) {\n        return;\n      }\n      const duration = this.duration();\n      cues[cues.length - 1].endTime = isNaN(duration) || Math.abs(duration) === Infinity ? Number.MAX_VALUE : duration;\n    }\n    /**\n     * handle the durationchange event on the MediaSource\n     *\n     * @private\n     */\n\n    handleDurationChange_() {\n      this.tech_.trigger('durationchange');\n    }\n    /**\n     * Calls endOfStream on the media source when all active stream types have called\n     * endOfStream\n     *\n     * @param {string} streamType\n     *        Stream type of the segment loader that called endOfStream\n     * @private\n     */\n\n    onEndOfStream() {\n      let isEndOfStream = this.mainSegmentLoader_.ended_;\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        const mainMediaInfo = this.mainSegmentLoader_.getCurrentMediaInfo_(); // if the audio playlist loader exists, then alternate audio is active\n\n        if (!mainMediaInfo || mainMediaInfo.hasVideo) {\n          // if we do not know if the main segment loader contains video yet or if we\n          // definitively know the main segment loader contains video, then we need to wait\n          // for both main and audio segment loaders to call endOfStream\n          isEndOfStream = isEndOfStream && this.audioSegmentLoader_.ended_;\n        } else {\n          // otherwise just rely on the audio loader\n          isEndOfStream = this.audioSegmentLoader_.ended_;\n        }\n      }\n      if (!isEndOfStream) {\n        return;\n      }\n      this.stopABRTimer_();\n      this.sourceUpdater_.endOfStream();\n    }\n    /**\n     * Check if a playlist has stopped being updated\n     *\n     * @param {Object} playlist the media playlist object\n     * @return {boolean} whether the playlist has stopped being updated or not\n     */\n\n    stuckAtPlaylistEnd_(playlist) {\n      const seekable = this.seekable();\n      if (!seekable.length) {\n        // playlist doesn't have enough information to determine whether we are stuck\n        return false;\n      }\n      const expired = this.syncController_.getExpiredTime(playlist, this.duration());\n      if (expired === null) {\n        return false;\n      } // does not use the safe live end to calculate playlist end, since we\n      // don't want to say we are stuck while there is still content\n\n      const absolutePlaylistEnd = Vhs$1.Playlist.playlistEnd(playlist, expired);\n      const currentTime = this.tech_.currentTime();\n      const buffered = this.tech_.buffered();\n      if (!buffered.length) {\n        // return true if the playhead reached the absolute end of the playlist\n        return absolutePlaylistEnd - currentTime <= SAFE_TIME_DELTA;\n      }\n      const bufferedEnd = buffered.end(buffered.length - 1); // return true if there is too little buffer left and buffer has reached absolute\n      // end of playlist\n\n      return bufferedEnd - currentTime <= SAFE_TIME_DELTA && absolutePlaylistEnd - bufferedEnd <= SAFE_TIME_DELTA;\n    }\n    /**\n     * Exclude a playlist for a set amount of time, making it unavailable for selection by\n     * the rendition selection algorithm, then force a new playlist (rendition) selection.\n     *\n     * @param {Object=} playlistToExclude\n     *                  the playlist to exclude, defaults to the currently selected playlist\n     * @param {Object=} error\n     *                  an optional error\n     * @param {number=} playlistExclusionDuration\n     *                  an optional number of seconds to exclude the playlist\n     */\n\n    excludePlaylist({\n      playlistToExclude = this.mainPlaylistLoader_.media(),\n      error = {},\n      playlistExclusionDuration\n    }) {\n      // If the `error` was generated by the playlist loader, it will contain\n      // the playlist we were trying to load (but failed) and that should be\n      // excluded instead of the currently selected playlist which is likely\n      // out-of-date in this scenario\n      playlistToExclude = playlistToExclude || this.mainPlaylistLoader_.media();\n      playlistExclusionDuration = playlistExclusionDuration || error.playlistExclusionDuration || this.playlistExclusionDuration; // If there is no current playlist, then an error occurred while we were\n      // trying to load the main OR while we were disposing of the tech\n\n      if (!playlistToExclude) {\n        this.error = error;\n        if (this.mediaSource.readyState !== 'open') {\n          this.trigger('error');\n        } else {\n          this.sourceUpdater_.endOfStream('network');\n        }\n        return;\n      }\n      playlistToExclude.playlistErrors_++;\n      const playlists = this.mainPlaylistLoader_.main.playlists;\n      const enabledPlaylists = playlists.filter(isEnabled);\n      const isFinalRendition = enabledPlaylists.length === 1 && enabledPlaylists[0] === playlistToExclude; // Don't exclude the only playlist unless it was excluded\n      // forever\n\n      if (playlists.length === 1 && playlistExclusionDuration !== Infinity) {\n        videojs.log.warn(`Problem encountered with playlist ${playlistToExclude.id}. ` + 'Trying again since it is the only playlist.');\n        this.tech_.trigger('retryplaylist'); // if this is a final rendition, we should delay\n\n        return this.mainPlaylistLoader_.load(isFinalRendition);\n      }\n      if (isFinalRendition) {\n        // Since we're on the final non-excluded playlist, and we're about to exclude\n        // it, instead of erring the player or retrying this playlist, clear out the current\n        // exclusion list. This allows other playlists to be attempted in case any have been\n        // fixed.\n        let reincluded = false;\n        playlists.forEach(playlist => {\n          // skip current playlist which is about to be excluded\n          if (playlist === playlistToExclude) {\n            return;\n          }\n          const excludeUntil = playlist.excludeUntil; // a playlist cannot be reincluded if it wasn't excluded to begin with.\n\n          if (typeof excludeUntil !== 'undefined' && excludeUntil !== Infinity) {\n            reincluded = true;\n            delete playlist.excludeUntil;\n          }\n        });\n        if (reincluded) {\n          videojs.log.warn('Removing other playlists from the exclusion list because the last ' + 'rendition is about to be excluded.'); // Technically we are retrying a playlist, in that we are simply retrying a previous\n          // playlist. This is needed for users relying on the retryplaylist event to catch a\n          // case where the player might be stuck and looping through \"dead\" playlists.\n\n          this.tech_.trigger('retryplaylist');\n        }\n      } // Exclude this playlist\n\n      let excludeUntil;\n      if (playlistToExclude.playlistErrors_ > this.maxPlaylistRetries) {\n        excludeUntil = Infinity;\n      } else {\n        excludeUntil = Date.now() + playlistExclusionDuration * 1000;\n      }\n      playlistToExclude.excludeUntil = excludeUntil;\n      if (error.reason) {\n        playlistToExclude.lastExcludeReason_ = error.reason;\n      }\n      this.tech_.trigger('excludeplaylist');\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-rendition-excluded'\n      }); // TODO: only load a new playlist if we're excluding the current playlist\n      // If this function was called with a playlist that's not the current active playlist\n      // (e.g., media().id !== playlistToExclude.id),\n      // then a new playlist should not be selected and loaded, as there's nothing wrong with the current playlist.\n\n      const nextPlaylist = this.selectPlaylist();\n      if (!nextPlaylist) {\n        this.error = 'Playback cannot continue. No available working or supported playlists.';\n        this.trigger('error');\n        return;\n      }\n      const logFn = error.internal ? this.logger_ : videojs.log.warn;\n      const errorMessage = error.message ? ' ' + error.message : '';\n      logFn(`${error.internal ? 'Internal problem' : 'Problem'} encountered with playlist ${playlistToExclude.id}.` + `${errorMessage} Switching to playlist ${nextPlaylist.id}.`); // if audio group changed reset audio loaders\n\n      if (nextPlaylist.attributes.AUDIO !== playlistToExclude.attributes.AUDIO) {\n        this.delegateLoaders_('audio', ['abort', 'pause']);\n      } // if subtitle group changed reset subtitle loaders\n\n      if (nextPlaylist.attributes.SUBTITLES !== playlistToExclude.attributes.SUBTITLES) {\n        this.delegateLoaders_('subtitle', ['abort', 'pause']);\n      }\n      this.delegateLoaders_('main', ['abort', 'pause']);\n      const delayDuration = nextPlaylist.targetDuration / 2 * 1000 || 5 * 1000;\n      const shouldDelay = typeof nextPlaylist.lastRequest === 'number' && Date.now() - nextPlaylist.lastRequest <= delayDuration; // delay if it's a final rendition or if the last refresh is sooner than half targetDuration\n\n      return this.switchMedia_(nextPlaylist, 'exclude', isFinalRendition || shouldDelay);\n    }\n    /**\n     * Pause all segment/playlist loaders\n     */\n\n    pauseLoading() {\n      this.delegateLoaders_('all', ['abort', 'pause']);\n      this.stopABRTimer_();\n    }\n    /**\n     * Call a set of functions in order on playlist loaders, segment loaders,\n     * or both types of loaders.\n     *\n     * @param {string} filter\n     *        Filter loaders that should call fnNames using a string. Can be:\n     *        * all - run on all loaders\n     *        * audio - run on all audio loaders\n     *        * subtitle - run on all subtitle loaders\n     *        * main - run on the main loaders\n     *\n     * @param {Array|string} fnNames\n     *        A string or array of function names to call.\n     */\n\n    delegateLoaders_(filter, fnNames) {\n      const loaders = [];\n      const dontFilterPlaylist = filter === 'all';\n      if (dontFilterPlaylist || filter === 'main') {\n        loaders.push(this.mainPlaylistLoader_);\n      }\n      const mediaTypes = [];\n      if (dontFilterPlaylist || filter === 'audio') {\n        mediaTypes.push('AUDIO');\n      }\n      if (dontFilterPlaylist || filter === 'subtitle') {\n        mediaTypes.push('CLOSED-CAPTIONS');\n        mediaTypes.push('SUBTITLES');\n      }\n      mediaTypes.forEach(mediaType => {\n        const loader = this.mediaTypes_[mediaType] && this.mediaTypes_[mediaType].activePlaylistLoader;\n        if (loader) {\n          loaders.push(loader);\n        }\n      });\n      ['main', 'audio', 'subtitle'].forEach(name => {\n        const loader = this[`${name}SegmentLoader_`];\n        if (loader && (filter === name || filter === 'all')) {\n          loaders.push(loader);\n        }\n      });\n      loaders.forEach(loader => fnNames.forEach(fnName => {\n        if (typeof loader[fnName] === 'function') {\n          loader[fnName]();\n        }\n      }));\n    }\n    /**\n     * set the current time on all segment loaders\n     *\n     * @param {TimeRange} currentTime the current time to set\n     * @return {TimeRange} the current time\n     */\n\n    setCurrentTime(currentTime) {\n      const buffered = findRange(this.tech_.buffered(), currentTime);\n      if (!(this.mainPlaylistLoader_ && this.mainPlaylistLoader_.media())) {\n        // return immediately if the metadata is not ready yet\n        return 0;\n      } // it's clearly an edge-case but don't thrown an error if asked to\n      // seek within an empty playlist\n\n      if (!this.mainPlaylistLoader_.media().segments) {\n        return 0;\n      } // if the seek location is already buffered, continue buffering as usual\n\n      if (buffered && buffered.length) {\n        return currentTime;\n      } // cancel outstanding requests so we begin buffering at the new\n      // location\n\n      this.mainSegmentLoader_.resetEverything();\n      this.mainSegmentLoader_.abort();\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        this.audioSegmentLoader_.resetEverything();\n        this.audioSegmentLoader_.abort();\n      }\n      if (this.mediaTypes_.SUBTITLES.activePlaylistLoader) {\n        this.subtitleSegmentLoader_.resetEverything();\n        this.subtitleSegmentLoader_.abort();\n      } // start segment loader loading in case they are paused\n\n      this.load();\n    }\n    /**\n     * get the current duration\n     *\n     * @return {TimeRange} the duration\n     */\n\n    duration() {\n      if (!this.mainPlaylistLoader_) {\n        return 0;\n      }\n      const media = this.mainPlaylistLoader_.media();\n      if (!media) {\n        // no playlists loaded yet, so can't determine a duration\n        return 0;\n      } // Don't rely on the media source for duration in the case of a live playlist since\n      // setting the native MediaSource's duration to infinity ends up with consequences to\n      // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n      //\n      // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n      // however, few browsers have support for setLiveSeekableRange()\n      // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n      //\n      // Until a time when the duration of the media source can be set to infinity, and a\n      // seekable range specified across browsers, just return Infinity.\n\n      if (!media.endList) {\n        return Infinity;\n      } // Since this is a VOD video, it is safe to rely on the media source's duration (if\n      // available). If it's not available, fall back to a playlist-calculated estimate.\n\n      if (this.mediaSource) {\n        return this.mediaSource.duration;\n      }\n      return Vhs$1.Playlist.duration(media);\n    }\n    /**\n     * check the seekable range\n     *\n     * @return {TimeRange} the seekable range\n     */\n\n    seekable() {\n      return this.seekable_;\n    }\n    onSyncInfoUpdate_() {\n      let audioSeekable; // TODO check for creation of both source buffers before updating seekable\n      //\n      // A fix was made to this function where a check for\n      // this.sourceUpdater_.hasCreatedSourceBuffers\n      // was added to ensure that both source buffers were created before seekable was\n      // updated. However, it originally had a bug where it was checking for a true and\n      // returning early instead of checking for false. Setting it to check for false to\n      // return early though created other issues. A call to play() would check for seekable\n      // end without verifying that a seekable range was present. In addition, even checking\n      // for that didn't solve some issues, as handleFirstPlay is sometimes worked around\n      // due to a media update calling load on the segment loaders, skipping a seek to live,\n      // thereby starting live streams at the beginning of the stream rather than at the end.\n      //\n      // This conditional should be fixed to wait for the creation of two source buffers at\n      // the same time as the other sections of code are fixed to properly seek to live and\n      // not throw an error due to checking for a seekable end when no seekable range exists.\n      //\n      // For now, fall back to the older behavior, with the understanding that the seekable\n      // range may not be completely correct, leading to a suboptimal initial live point.\n\n      if (!this.mainPlaylistLoader_) {\n        return;\n      }\n      let media = this.mainPlaylistLoader_.media();\n      if (!media) {\n        return;\n      }\n      let expired = this.syncController_.getExpiredTime(media, this.duration());\n      if (expired === null) {\n        // not enough information to update seekable\n        return;\n      }\n      const main = this.mainPlaylistLoader_.main;\n      const mainSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n      if (mainSeekable.length === 0) {\n        return;\n      }\n      if (this.mediaTypes_.AUDIO.activePlaylistLoader) {\n        media = this.mediaTypes_.AUDIO.activePlaylistLoader.media();\n        expired = this.syncController_.getExpiredTime(media, this.duration());\n        if (expired === null) {\n          return;\n        }\n        audioSeekable = Vhs$1.Playlist.seekable(media, expired, Vhs$1.Playlist.liveEdgeDelay(main, media));\n        if (audioSeekable.length === 0) {\n          return;\n        }\n      }\n      let oldEnd;\n      let oldStart;\n      if (this.seekable_ && this.seekable_.length) {\n        oldEnd = this.seekable_.end(0);\n        oldStart = this.seekable_.start(0);\n      }\n      if (!audioSeekable) {\n        // seekable has been calculated based on buffering video data so it\n        // can be returned directly\n        this.seekable_ = mainSeekable;\n      } else if (audioSeekable.start(0) > mainSeekable.end(0) || mainSeekable.start(0) > audioSeekable.end(0)) {\n        // seekables are pretty far off, rely on main\n        this.seekable_ = mainSeekable;\n      } else {\n        this.seekable_ = createTimeRanges([[audioSeekable.start(0) > mainSeekable.start(0) ? audioSeekable.start(0) : mainSeekable.start(0), audioSeekable.end(0) < mainSeekable.end(0) ? audioSeekable.end(0) : mainSeekable.end(0)]]);\n      } // seekable is the same as last time\n\n      if (this.seekable_ && this.seekable_.length) {\n        if (this.seekable_.end(0) === oldEnd && this.seekable_.start(0) === oldStart) {\n          return;\n        }\n      }\n      this.logger_(`seekable updated [${printableRange(this.seekable_)}]`);\n      this.tech_.trigger('seekablechanged');\n    }\n    /**\n     * Update the player duration\n     */\n\n    updateDuration(isLive) {\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n        this.updateDuration_ = null;\n      }\n      if (this.mediaSource.readyState !== 'open') {\n        this.updateDuration_ = this.updateDuration.bind(this, isLive);\n        this.mediaSource.addEventListener('sourceopen', this.updateDuration_);\n        return;\n      }\n      if (isLive) {\n        const seekable = this.seekable();\n        if (!seekable.length) {\n          return;\n        } // Even in the case of a live playlist, the native MediaSource's duration should not\n        // be set to Infinity (even though this would be expected for a live playlist), since\n        // setting the native MediaSource's duration to infinity ends up with consequences to\n        // seekable behavior. See https://github.com/w3c/media-source/issues/5 for details.\n        //\n        // This is resolved in the spec by https://github.com/w3c/media-source/pull/92,\n        // however, few browsers have support for setLiveSeekableRange()\n        // https://developer.mozilla.org/en-US/docs/Web/API/MediaSource/setLiveSeekableRange\n        //\n        // Until a time when the duration of the media source can be set to infinity, and a\n        // seekable range specified across browsers, the duration should be greater than or\n        // equal to the last possible seekable value.\n        // MediaSource duration starts as NaN\n        // It is possible (and probable) that this case will never be reached for many\n        // sources, since the MediaSource reports duration as the highest value without\n        // accounting for timestamp offset. For example, if the timestamp offset is -100 and\n        // we buffered times 0 to 100 with real times of 100 to 200, even though current\n        // time will be between 0 and 100, the native media source may report the duration\n        // as 200. However, since we report duration separate from the media source (as\n        // Infinity), and as long as the native media source duration value is greater than\n        // our reported seekable range, seeks will work as expected. The large number as\n        // duration for live is actually a strategy used by some players to work around the\n        // issue of live seekable ranges cited above.\n\n        if (isNaN(this.mediaSource.duration) || this.mediaSource.duration < seekable.end(seekable.length - 1)) {\n          this.sourceUpdater_.setDuration(seekable.end(seekable.length - 1));\n        }\n        return;\n      }\n      const buffered = this.tech_.buffered();\n      let duration = Vhs$1.Playlist.duration(this.mainPlaylistLoader_.media());\n      if (buffered.length > 0) {\n        duration = Math.max(duration, buffered.end(buffered.length - 1));\n      }\n      if (this.mediaSource.duration !== duration) {\n        this.sourceUpdater_.setDuration(duration);\n      }\n    }\n    /**\n     * dispose of the PlaylistController and everything\n     * that it controls\n     */\n\n    dispose() {\n      this.trigger('dispose');\n      this.decrypter_.terminate();\n      this.mainPlaylistLoader_.dispose();\n      this.mainSegmentLoader_.dispose();\n      if (this.loadOnPlay_) {\n        this.tech_.off('play', this.loadOnPlay_);\n      }\n      ['AUDIO', 'SUBTITLES'].forEach(type => {\n        const groups = this.mediaTypes_[type].groups;\n        for (const id in groups) {\n          groups[id].forEach(group => {\n            if (group.playlistLoader) {\n              group.playlistLoader.dispose();\n            }\n          });\n        }\n      });\n      this.audioSegmentLoader_.dispose();\n      this.subtitleSegmentLoader_.dispose();\n      this.sourceUpdater_.dispose();\n      this.timelineChangeController_.dispose();\n      this.stopABRTimer_();\n      if (this.updateDuration_) {\n        this.mediaSource.removeEventListener('sourceopen', this.updateDuration_);\n      }\n      this.mediaSource.removeEventListener('durationchange', this.handleDurationChange_); // load the media source into the player\n\n      this.mediaSource.removeEventListener('sourceopen', this.handleSourceOpen_);\n      this.mediaSource.removeEventListener('sourceended', this.handleSourceEnded_);\n      this.off();\n    }\n    /**\n     * return the main playlist object if we have one\n     *\n     * @return {Object} the main playlist object that we parsed\n     */\n\n    main() {\n      return this.mainPlaylistLoader_.main;\n    }\n    /**\n     * return the currently selected playlist\n     *\n     * @return {Object} the currently selected playlist object that we parsed\n     */\n\n    media() {\n      // playlist loader will not return media if it has not been fully loaded\n      return this.mainPlaylistLoader_.media() || this.initialMedia_;\n    }\n    areMediaTypesKnown_() {\n      const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      const hasMainMediaInfo = !!this.mainSegmentLoader_.getCurrentMediaInfo_(); // if we are not using an audio loader, then we have audio media info\n      // otherwise check on the segment loader.\n\n      const hasAudioMediaInfo = !usingAudioLoader ? true : !!this.audioSegmentLoader_.getCurrentMediaInfo_(); // one or both loaders has not loaded sufficently to get codecs\n\n      if (!hasMainMediaInfo || !hasAudioMediaInfo) {\n        return false;\n      }\n      return true;\n    }\n    getCodecsOrExclude_() {\n      const media = {\n        main: this.mainSegmentLoader_.getCurrentMediaInfo_() || {},\n        audio: this.audioSegmentLoader_.getCurrentMediaInfo_() || {}\n      }; // set \"main\" media equal to video\n\n      media.video = media.main;\n      const playlistCodecs = codecsForPlaylist(this.main(), this.media());\n      const codecs = {};\n      const usingAudioLoader = !!this.mediaTypes_.AUDIO.activePlaylistLoader;\n      if (media.main.hasVideo) {\n        codecs.video = playlistCodecs.video || media.main.videoCodec || DEFAULT_VIDEO_CODEC;\n      }\n      if (media.main.isMuxed) {\n        codecs.video += `,${playlistCodecs.audio || media.main.audioCodec || DEFAULT_AUDIO_CODEC}`;\n      }\n      if (media.main.hasAudio && !media.main.isMuxed || media.audio.hasAudio || usingAudioLoader) {\n        codecs.audio = playlistCodecs.audio || media.main.audioCodec || media.audio.audioCodec || DEFAULT_AUDIO_CODEC; // set audio isFmp4 so we use the correct \"supports\" function below\n\n        media.audio.isFmp4 = media.main.hasAudio && !media.main.isMuxed ? media.main.isFmp4 : media.audio.isFmp4;\n      } // no codecs, no playback.\n\n      if (!codecs.audio && !codecs.video) {\n        this.excludePlaylist({\n          playlistToExclude: this.media(),\n          error: {\n            message: 'Could not determine codecs for playlist.'\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      } // fmp4 relies on browser support, while ts relies on muxer support\n\n      const supportFunction = (isFmp4, codec) => isFmp4 ? browserSupportsCodec(codec) : muxerSupportsCodec(codec);\n      const unsupportedCodecs = {};\n      let unsupportedAudio;\n      ['video', 'audio'].forEach(function (type) {\n        if (codecs.hasOwnProperty(type) && !supportFunction(media[type].isFmp4, codecs[type])) {\n          const supporter = media[type].isFmp4 ? 'browser' : 'muxer';\n          unsupportedCodecs[supporter] = unsupportedCodecs[supporter] || [];\n          unsupportedCodecs[supporter].push(codecs[type]);\n          if (type === 'audio') {\n            unsupportedAudio = supporter;\n          }\n        }\n      });\n      if (usingAudioLoader && unsupportedAudio && this.media().attributes.AUDIO) {\n        const audioGroup = this.media().attributes.AUDIO;\n        this.main().playlists.forEach(variant => {\n          const variantAudioGroup = variant.attributes && variant.attributes.AUDIO;\n          if (variantAudioGroup === audioGroup && variant !== this.media()) {\n            variant.excludeUntil = Infinity;\n          }\n        });\n        this.logger_(`excluding audio group ${audioGroup} as ${unsupportedAudio} does not support codec(s): \"${codecs.audio}\"`);\n      } // if we have any unsupported codecs exclude this playlist.\n\n      if (Object.keys(unsupportedCodecs).length) {\n        const message = Object.keys(unsupportedCodecs).reduce((acc, supporter) => {\n          if (acc) {\n            acc += ', ';\n          }\n          acc += `${supporter} does not support codec(s): \"${unsupportedCodecs[supporter].join(',')}\"`;\n          return acc;\n        }, '') + '.';\n        this.excludePlaylist({\n          playlistToExclude: this.media(),\n          error: {\n            internal: true,\n            message\n          },\n          playlistExclusionDuration: Infinity\n        });\n        return;\n      } // check if codec switching is happening\n\n      if (this.sourceUpdater_.hasCreatedSourceBuffers() && !this.sourceUpdater_.canChangeType()) {\n        const switchMessages = [];\n        ['video', 'audio'].forEach(type => {\n          const newCodec = (parseCodecs(this.sourceUpdater_.codecs[type] || '')[0] || {}).type;\n          const oldCodec = (parseCodecs(codecs[type] || '')[0] || {}).type;\n          if (newCodec && oldCodec && newCodec.toLowerCase() !== oldCodec.toLowerCase()) {\n            switchMessages.push(`\"${this.sourceUpdater_.codecs[type]}\" -> \"${codecs[type]}\"`);\n          }\n        });\n        if (switchMessages.length) {\n          this.excludePlaylist({\n            playlistToExclude: this.media(),\n            error: {\n              message: `Codec switching not supported: ${switchMessages.join(', ')}.`,\n              internal: true\n            },\n            playlistExclusionDuration: Infinity\n          });\n          return;\n        }\n      } // TODO: when using the muxer shouldn't we just return\n      // the codecs that the muxer outputs?\n\n      return codecs;\n    }\n    /**\n     * Create source buffers and exlude any incompatible renditions.\n     *\n     * @private\n     */\n\n    tryToCreateSourceBuffers_() {\n      // media source is not ready yet or sourceBuffers are already\n      // created.\n      if (this.mediaSource.readyState !== 'open' || this.sourceUpdater_.hasCreatedSourceBuffers()) {\n        return;\n      }\n      if (!this.areMediaTypesKnown_()) {\n        return;\n      }\n      const codecs = this.getCodecsOrExclude_(); // no codecs means that the playlist was excluded\n\n      if (!codecs) {\n        return;\n      }\n      this.sourceUpdater_.createSourceBuffers(codecs);\n      const codecString = [codecs.video, codecs.audio].filter(Boolean).join(',');\n      this.excludeIncompatibleVariants_(codecString);\n    }\n    /**\n     * Excludes playlists with codecs that are unsupported by the muxer and browser.\n     */\n\n    excludeUnsupportedVariants_() {\n      const playlists = this.main().playlists;\n      const ids = []; // TODO: why don't we have a property to loop through all\n      // playlist? Why did we ever mix indexes and keys?\n\n      Object.keys(playlists).forEach(key => {\n        const variant = playlists[key]; // check if we already processed this playlist.\n\n        if (ids.indexOf(variant.id) !== -1) {\n          return;\n        }\n        ids.push(variant.id);\n        const codecs = codecsForPlaylist(this.main, variant);\n        const unsupported = [];\n        if (codecs.audio && !muxerSupportsCodec(codecs.audio) && !browserSupportsCodec(codecs.audio)) {\n          unsupported.push(`audio codec ${codecs.audio}`);\n        }\n        if (codecs.video && !muxerSupportsCodec(codecs.video) && !browserSupportsCodec(codecs.video)) {\n          unsupported.push(`video codec ${codecs.video}`);\n        }\n        if (codecs.text && codecs.text === 'stpp.ttml.im1t') {\n          unsupported.push(`text codec ${codecs.text}`);\n        }\n        if (unsupported.length) {\n          variant.excludeUntil = Infinity;\n          this.logger_(`excluding ${variant.id} for unsupported: ${unsupported.join(', ')}`);\n        }\n      });\n    }\n    /**\n     * Exclude playlists that are known to be codec or\n     * stream-incompatible with the SourceBuffer configuration. For\n     * instance, Media Source Extensions would cause the video element to\n     * stall waiting for video data if you switched from a variant with\n     * video and audio to an audio-only one.\n     *\n     * @param {Object} media a media playlist compatible with the current\n     * set of SourceBuffers. Variants in the current main playlist that\n     * do not appear to have compatible codec or stream configurations\n     * will be excluded from the default playlist selection algorithm\n     * indefinitely.\n     * @private\n     */\n\n    excludeIncompatibleVariants_(codecString) {\n      const ids = [];\n      const playlists = this.main().playlists;\n      const codecs = unwrapCodecList(parseCodecs(codecString));\n      const codecCount_ = codecCount(codecs);\n      const videoDetails = codecs.video && parseCodecs(codecs.video)[0] || null;\n      const audioDetails = codecs.audio && parseCodecs(codecs.audio)[0] || null;\n      Object.keys(playlists).forEach(key => {\n        const variant = playlists[key]; // check if we already processed this playlist.\n        // or it if it is already excluded forever.\n\n        if (ids.indexOf(variant.id) !== -1 || variant.excludeUntil === Infinity) {\n          return;\n        }\n        ids.push(variant.id);\n        const exclusionReasons = []; // get codecs from the playlist for this variant\n\n        const variantCodecs = codecsForPlaylist(this.mainPlaylistLoader_.main, variant);\n        const variantCodecCount = codecCount(variantCodecs); // if no codecs are listed, we cannot determine that this\n        // variant is incompatible. Wait for mux.js to probe\n\n        if (!variantCodecs.audio && !variantCodecs.video) {\n          return;\n        } // TODO: we can support this by removing the\n        // old media source and creating a new one, but it will take some work.\n        // The number of streams cannot change\n\n        if (variantCodecCount !== codecCount_) {\n          exclusionReasons.push(`codec count \"${variantCodecCount}\" !== \"${codecCount_}\"`);\n        } // only exclude playlists by codec change, if codecs cannot switch\n        // during playback.\n\n        if (!this.sourceUpdater_.canChangeType()) {\n          const variantVideoDetails = variantCodecs.video && parseCodecs(variantCodecs.video)[0] || null;\n          const variantAudioDetails = variantCodecs.audio && parseCodecs(variantCodecs.audio)[0] || null; // the video codec cannot change\n\n          if (variantVideoDetails && videoDetails && variantVideoDetails.type.toLowerCase() !== videoDetails.type.toLowerCase()) {\n            exclusionReasons.push(`video codec \"${variantVideoDetails.type}\" !== \"${videoDetails.type}\"`);\n          } // the audio codec cannot change\n\n          if (variantAudioDetails && audioDetails && variantAudioDetails.type.toLowerCase() !== audioDetails.type.toLowerCase()) {\n            exclusionReasons.push(`audio codec \"${variantAudioDetails.type}\" !== \"${audioDetails.type}\"`);\n          }\n        }\n        if (exclusionReasons.length) {\n          variant.excludeUntil = Infinity;\n          this.logger_(`excluding ${variant.id}: ${exclusionReasons.join(' && ')}`);\n        }\n      });\n    }\n    updateAdCues_(media) {\n      let offset = 0;\n      const seekable = this.seekable();\n      if (seekable.length) {\n        offset = seekable.start(0);\n      }\n      updateAdCues(media, this.cueTagsTrack_, offset);\n    }\n    /**\n     * Calculates the desired forward buffer length based on current time\n     *\n     * @return {number} Desired forward buffer length in seconds\n     */\n\n    goalBufferLength() {\n      const currentTime = this.tech_.currentTime();\n      const initial = Config.GOAL_BUFFER_LENGTH;\n      const rate = Config.GOAL_BUFFER_LENGTH_RATE;\n      const max = Math.max(initial, Config.MAX_GOAL_BUFFER_LENGTH);\n      return Math.min(initial + currentTime * rate, max);\n    }\n    /**\n     * Calculates the desired buffer low water line based on current time\n     *\n     * @return {number} Desired buffer low water line in seconds\n     */\n\n    bufferLowWaterLine() {\n      const currentTime = this.tech_.currentTime();\n      const initial = Config.BUFFER_LOW_WATER_LINE;\n      const rate = Config.BUFFER_LOW_WATER_LINE_RATE;\n      const max = Math.max(initial, Config.MAX_BUFFER_LOW_WATER_LINE);\n      const newMax = Math.max(initial, Config.EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE);\n      return Math.min(initial + currentTime * rate, this.bufferBasedABR ? newMax : max);\n    }\n    bufferHighWaterLine() {\n      return Config.BUFFER_HIGH_WATER_LINE;\n    }\n  }\n\n  /**\n   * Returns a function that acts as the Enable/disable playlist function.\n   *\n   * @param {PlaylistLoader} loader - The main playlist loader\n   * @param {string} playlistID - id of the playlist\n   * @param {Function} changePlaylistFn - A function to be called after a\n   * playlist's enabled-state has been changed. Will NOT be called if a\n   * playlist's enabled-state is unchanged\n   * @param {boolean=} enable - Value to set the playlist enabled-state to\n   * or if undefined returns the current enabled-state for the playlist\n   * @return {Function} Function for setting/getting enabled\n   */\n\n  const enableFunction = (loader, playlistID, changePlaylistFn) => enable => {\n    const playlist = loader.main.playlists[playlistID];\n    const incompatible = isIncompatible(playlist);\n    const currentlyEnabled = isEnabled(playlist);\n    if (typeof enable === 'undefined') {\n      return currentlyEnabled;\n    }\n    if (enable) {\n      delete playlist.disabled;\n    } else {\n      playlist.disabled = true;\n    }\n    if (enable !== currentlyEnabled && !incompatible) {\n      // Ensure the outside world knows about our changes\n      changePlaylistFn();\n      if (enable) {\n        loader.trigger('renditionenabled');\n      } else {\n        loader.trigger('renditiondisabled');\n      }\n    }\n    return enable;\n  };\n  /**\n   * The representation object encapsulates the publicly visible information\n   * in a media playlist along with a setter/getter-type function (enabled)\n   * for changing the enabled-state of a particular playlist entry\n   *\n   * @class Representation\n   */\n\n  class Representation {\n    constructor(vhsHandler, playlist, id) {\n      const {\n        playlistController_: pc\n      } = vhsHandler;\n      const qualityChangeFunction = pc.fastQualityChange_.bind(pc); // some playlist attributes are optional\n\n      if (playlist.attributes) {\n        const resolution = playlist.attributes.RESOLUTION;\n        this.width = resolution && resolution.width;\n        this.height = resolution && resolution.height;\n        this.bandwidth = playlist.attributes.BANDWIDTH;\n        this.frameRate = playlist.attributes['FRAME-RATE'];\n      }\n      this.codecs = codecsForPlaylist(pc.main(), playlist);\n      this.playlist = playlist; // The id is simply the ordinality of the media playlist\n      // within the main playlist\n\n      this.id = id; // Partially-apply the enableFunction to create a playlist-\n      // specific variant\n\n      this.enabled = enableFunction(vhsHandler.playlists, playlist.id, qualityChangeFunction);\n    }\n  }\n  /**\n   * A mixin function that adds the `representations` api to an instance\n   * of the VhsHandler class\n   *\n   * @param {VhsHandler} vhsHandler - An instance of VhsHandler to add the\n   * representation API into\n   */\n\n  const renditionSelectionMixin = function (vhsHandler) {\n    // Add a single API-specific function to the VhsHandler instance\n    vhsHandler.representations = () => {\n      const main = vhsHandler.playlistController_.main();\n      const playlists = isAudioOnly(main) ? vhsHandler.playlistController_.getAudioTrackPlaylists_() : main.playlists;\n      if (!playlists) {\n        return [];\n      }\n      return playlists.filter(media => !isIncompatible(media)).map((e, i) => new Representation(vhsHandler, e, e.id));\n    };\n  };\n\n  /**\n   * @file playback-watcher.js\n   *\n   * Playback starts, and now my watch begins. It shall not end until my death. I shall\n   * take no wait, hold no uncleared timeouts, father no bad seeks. I shall wear no crowns\n   * and win no glory. I shall live and die at my post. I am the corrector of the underflow.\n   * I am the watcher of gaps. I am the shield that guards the realms of seekable. I pledge\n   * my life and honor to the Playback Watch, for this Player and all the Players to come.\n   */\n\n  const timerCancelEvents = ['seeking', 'seeked', 'pause', 'playing', 'error'];\n  /**\n   * @class PlaybackWatcher\n   */\n\n  class PlaybackWatcher {\n    /**\n     * Represents an PlaybackWatcher object.\n     *\n     * @class\n     * @param {Object} options an object that includes the tech and settings\n     */\n    constructor(options) {\n      this.playlistController_ = options.playlistController;\n      this.tech_ = options.tech;\n      this.seekable = options.seekable;\n      this.allowSeeksWithinUnsafeLiveWindow = options.allowSeeksWithinUnsafeLiveWindow;\n      this.liveRangeSafeTimeDelta = options.liveRangeSafeTimeDelta;\n      this.media = options.media;\n      this.consecutiveUpdates = 0;\n      this.lastRecordedTime = null;\n      this.checkCurrentTimeTimeout_ = null;\n      this.logger_ = logger('PlaybackWatcher');\n      this.logger_('initialize');\n      const playHandler = () => this.monitorCurrentTime_();\n      const canPlayHandler = () => this.monitorCurrentTime_();\n      const waitingHandler = () => this.techWaiting_();\n      const cancelTimerHandler = () => this.resetTimeUpdate_();\n      const pc = this.playlistController_;\n      const loaderTypes = ['main', 'subtitle', 'audio'];\n      const loaderChecks = {};\n      loaderTypes.forEach(type => {\n        loaderChecks[type] = {\n          reset: () => this.resetSegmentDownloads_(type),\n          updateend: () => this.checkSegmentDownloads_(type)\n        };\n        pc[`${type}SegmentLoader_`].on('appendsdone', loaderChecks[type].updateend); // If a rendition switch happens during a playback stall where the buffer\n        // isn't changing we want to reset. We cannot assume that the new rendition\n        // will also be stalled, until after new appends.\n\n        pc[`${type}SegmentLoader_`].on('playlistupdate', loaderChecks[type].reset); // Playback stalls should not be detected right after seeking.\n        // This prevents one segment playlists (single vtt or single segment content)\n        // from being detected as stalling. As the buffer will not change in those cases, since\n        // the buffer is the entire video duration.\n\n        this.tech_.on(['seeked', 'seeking'], loaderChecks[type].reset);\n      });\n      /**\n       * We check if a seek was into a gap through the following steps:\n       * 1. We get a seeking event and we do not get a seeked event. This means that\n       *    a seek was attempted but not completed.\n       * 2. We run `fixesBadSeeks_` on segment loader appends. This means that we already\n       *    removed everything from our buffer and appended a segment, and should be ready\n       *    to check for gaps.\n       */\n\n      const setSeekingHandlers = fn => {\n        ['main', 'audio'].forEach(type => {\n          pc[`${type}SegmentLoader_`][fn]('appended', this.seekingAppendCheck_);\n        });\n      };\n      this.seekingAppendCheck_ = () => {\n        if (this.fixesBadSeeks_()) {\n          this.consecutiveUpdates = 0;\n          this.lastRecordedTime = this.tech_.currentTime();\n          setSeekingHandlers('off');\n        }\n      };\n      this.clearSeekingAppendCheck_ = () => setSeekingHandlers('off');\n      this.watchForBadSeeking_ = () => {\n        this.clearSeekingAppendCheck_();\n        setSeekingHandlers('on');\n      };\n      this.tech_.on('seeked', this.clearSeekingAppendCheck_);\n      this.tech_.on('seeking', this.watchForBadSeeking_);\n      this.tech_.on('waiting', waitingHandler);\n      this.tech_.on(timerCancelEvents, cancelTimerHandler);\n      this.tech_.on('canplay', canPlayHandler);\n      /*\n        An edge case exists that results in gaps not being skipped when they exist at the beginning of a stream. This case\n        is surfaced in one of two ways:\n         1)  The `waiting` event is fired before the player has buffered content, making it impossible\n            to find or skip the gap. The `waiting` event is followed by a `play` event. On first play\n            we can check if playback is stalled due to a gap, and skip the gap if necessary.\n        2)  A source with a gap at the beginning of the stream is loaded programatically while the player\n            is in a playing state. To catch this case, it's important that our one-time play listener is setup\n            even if the player is in a playing state\n      */\n\n      this.tech_.one('play', playHandler); // Define the dispose function to clean up our events\n\n      this.dispose = () => {\n        this.clearSeekingAppendCheck_();\n        this.logger_('dispose');\n        this.tech_.off('waiting', waitingHandler);\n        this.tech_.off(timerCancelEvents, cancelTimerHandler);\n        this.tech_.off('canplay', canPlayHandler);\n        this.tech_.off('play', playHandler);\n        this.tech_.off('seeking', this.watchForBadSeeking_);\n        this.tech_.off('seeked', this.clearSeekingAppendCheck_);\n        loaderTypes.forEach(type => {\n          pc[`${type}SegmentLoader_`].off('appendsdone', loaderChecks[type].updateend);\n          pc[`${type}SegmentLoader_`].off('playlistupdate', loaderChecks[type].reset);\n          this.tech_.off(['seeked', 'seeking'], loaderChecks[type].reset);\n        });\n        if (this.checkCurrentTimeTimeout_) {\n          window.clearTimeout(this.checkCurrentTimeTimeout_);\n        }\n        this.resetTimeUpdate_();\n      };\n    }\n    /**\n     * Periodically check current time to see if playback stopped\n     *\n     * @private\n     */\n\n    monitorCurrentTime_() {\n      this.checkCurrentTime_();\n      if (this.checkCurrentTimeTimeout_) {\n        window.clearTimeout(this.checkCurrentTimeTimeout_);\n      } // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n\n      this.checkCurrentTimeTimeout_ = window.setTimeout(this.monitorCurrentTime_.bind(this), 250);\n    }\n    /**\n     * Reset stalled download stats for a specific type of loader\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#playlistupdate\n     * @listens Tech#seeking\n     * @listens Tech#seeked\n     */\n\n    resetSegmentDownloads_(type) {\n      const loader = this.playlistController_[`${type}SegmentLoader_`];\n      if (this[`${type}StalledDownloads_`] > 0) {\n        this.logger_(`resetting possible stalled download count for ${type} loader`);\n      }\n      this[`${type}StalledDownloads_`] = 0;\n      this[`${type}Buffered_`] = loader.buffered_();\n    }\n    /**\n     * Checks on every segment `appendsdone` to see\n     * if segment appends are making progress. If they are not\n     * and we are still downloading bytes. We exclude the playlist.\n     *\n     * @param {string} type\n     *        The segment loader type to check.\n     *\n     * @listens SegmentLoader#appendsdone\n     */\n\n    checkSegmentDownloads_(type) {\n      const pc = this.playlistController_;\n      const loader = pc[`${type}SegmentLoader_`];\n      const buffered = loader.buffered_();\n      const isBufferedDifferent = isRangeDifferent(this[`${type}Buffered_`], buffered);\n      this[`${type}Buffered_`] = buffered; // if another watcher is going to fix the issue or\n      // the buffered value for this loader changed\n      // appends are working\n\n      if (isBufferedDifferent) {\n        this.resetSegmentDownloads_(type);\n        return;\n      }\n      this[`${type}StalledDownloads_`]++;\n      this.logger_(`found #${this[`${type}StalledDownloads_`]} ${type} appends that did not increase buffer (possible stalled download)`, {\n        playlistId: loader.playlist_ && loader.playlist_.id,\n        buffered: timeRangesToArray(buffered)\n      }); // after 10 possibly stalled appends with no reset, exclude\n\n      if (this[`${type}StalledDownloads_`] < 10) {\n        return;\n      }\n      this.logger_(`${type} loader stalled download exclusion`);\n      this.resetSegmentDownloads_(type);\n      this.tech_.trigger({\n        type: 'usage',\n        name: `vhs-${type}-download-exclusion`\n      });\n      if (type === 'subtitle') {\n        return;\n      } // TODO: should we exclude audio tracks rather than main tracks\n      // when type is audio?\n\n      pc.excludePlaylist({\n        error: {\n          message: `Excessive ${type} segment downloading detected.`\n        },\n        playlistExclusionDuration: Infinity\n      });\n    }\n    /**\n     * The purpose of this function is to emulate the \"waiting\" event on\n     * browsers that do not emit it when they are waiting for more\n     * data to continue playback\n     *\n     * @private\n     */\n\n    checkCurrentTime_() {\n      if (this.tech_.paused() || this.tech_.seeking()) {\n        return;\n      }\n      const currentTime = this.tech_.currentTime();\n      const buffered = this.tech_.buffered();\n      if (this.lastRecordedTime === currentTime && (!buffered.length || currentTime + SAFE_TIME_DELTA >= buffered.end(buffered.length - 1))) {\n        // If current time is at the end of the final buffered region, then any playback\n        // stall is most likely caused by buffering in a low bandwidth environment. The tech\n        // should fire a `waiting` event in this scenario, but due to browser and tech\n        // inconsistencies. Calling `techWaiting_` here allows us to simulate\n        // responding to a native `waiting` event when the tech fails to emit one.\n        return this.techWaiting_();\n      }\n      if (this.consecutiveUpdates >= 5 && currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n        this.waiting_();\n      } else if (currentTime === this.lastRecordedTime) {\n        this.consecutiveUpdates++;\n      } else {\n        this.consecutiveUpdates = 0;\n        this.lastRecordedTime = currentTime;\n      }\n    }\n    /**\n     * Resets the 'timeupdate' mechanism designed to detect that we are stalled\n     *\n     * @private\n     */\n\n    resetTimeUpdate_() {\n      this.consecutiveUpdates = 0;\n    }\n    /**\n     * Fixes situations where there's a bad seek\n     *\n     * @return {boolean} whether an action was taken to fix the seek\n     * @private\n     */\n\n    fixesBadSeeks_() {\n      const seeking = this.tech_.seeking();\n      if (!seeking) {\n        return false;\n      } // TODO: It's possible that these seekable checks should be moved out of this function\n      // and into a function that runs on seekablechange. It's also possible that we only need\n      // afterSeekableWindow as the buffered check at the bottom is good enough to handle before\n      // seekable range.\n\n      const seekable = this.seekable();\n      const currentTime = this.tech_.currentTime();\n      const isAfterSeekableRange = this.afterSeekableWindow_(seekable, currentTime, this.media(), this.allowSeeksWithinUnsafeLiveWindow);\n      let seekTo;\n      if (isAfterSeekableRange) {\n        const seekableEnd = seekable.end(seekable.length - 1); // sync to live point (if VOD, our seekable was updated and we're simply adjusting)\n\n        seekTo = seekableEnd;\n      }\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        const seekableStart = seekable.start(0); // sync to the beginning of the live window\n        // provide a buffer of .1 seconds to handle rounding/imprecise numbers\n\n        seekTo = seekableStart + (\n        // if the playlist is too short and the seekable range is an exact time (can\n        // happen in live with a 3 segment playlist), then don't use a time delta\n        seekableStart === seekable.end(0) ? 0 : SAFE_TIME_DELTA);\n      }\n      if (typeof seekTo !== 'undefined') {\n        this.logger_(`Trying to seek outside of seekable at time ${currentTime} with ` + `seekable range ${printableRange(seekable)}. Seeking to ` + `${seekTo}.`);\n        this.tech_.setCurrentTime(seekTo);\n        return true;\n      }\n      const sourceUpdater = this.playlistController_.sourceUpdater_;\n      const buffered = this.tech_.buffered();\n      const audioBuffered = sourceUpdater.audioBuffer ? sourceUpdater.audioBuffered() : null;\n      const videoBuffered = sourceUpdater.videoBuffer ? sourceUpdater.videoBuffered() : null;\n      const media = this.media(); // verify that at least two segment durations or one part duration have been\n      // appended before checking for a gap.\n\n      const minAppendedDuration = media.partTargetDuration ? media.partTargetDuration : (media.targetDuration - TIME_FUDGE_FACTOR) * 2; // verify that at least two segment durations have been\n      // appended before checking for a gap.\n\n      const bufferedToCheck = [audioBuffered, videoBuffered];\n      for (let i = 0; i < bufferedToCheck.length; i++) {\n        // skip null buffered\n        if (!bufferedToCheck[i]) {\n          continue;\n        }\n        const timeAhead = timeAheadOf(bufferedToCheck[i], currentTime); // if we are less than two video/audio segment durations or one part\n        // duration behind we haven't appended enough to call this a bad seek.\n\n        if (timeAhead < minAppendedDuration) {\n          return false;\n        }\n      }\n      const nextRange = findNextRange(buffered, currentTime); // we have appended enough content, but we don't have anything buffered\n      // to seek over the gap\n\n      if (nextRange.length === 0) {\n        return false;\n      }\n      seekTo = nextRange.start(0) + SAFE_TIME_DELTA;\n      this.logger_(`Buffered region starts (${nextRange.start(0)}) ` + ` just beyond seek point (${currentTime}). Seeking to ${seekTo}.`);\n      this.tech_.setCurrentTime(seekTo);\n      return true;\n    }\n    /**\n     * Handler for situations when we determine the player is waiting.\n     *\n     * @private\n     */\n\n    waiting_() {\n      if (this.techWaiting_()) {\n        return;\n      } // All tech waiting checks failed. Use last resort correction\n\n      const currentTime = this.tech_.currentTime();\n      const buffered = this.tech_.buffered();\n      const currentRange = findRange(buffered, currentTime); // Sometimes the player can stall for unknown reasons within a contiguous buffered\n      // region with no indication that anything is amiss (seen in Firefox). Seeking to\n      // currentTime is usually enough to kickstart the player. This checks that the player\n      // is currently within a buffered region before attempting a corrective seek.\n      // Chrome does not appear to continue `timeupdate` events after a `waiting` event\n      // until there is ~ 3 seconds of forward buffer available. PlaybackWatcher should also\n      // make sure there is ~3 seconds of forward buffer before taking any corrective action\n      // to avoid triggering an `unknownwaiting` event when the network is slow.\n\n      if (currentRange.length && currentTime + 3 <= currentRange.end(0)) {\n        this.resetTimeUpdate_();\n        this.tech_.setCurrentTime(currentTime);\n        this.logger_(`Stopped at ${currentTime} while inside a buffered region ` + `[${currentRange.start(0)} -> ${currentRange.end(0)}]. Attempting to resume ` + 'playback by seeking to the current time.'); // unknown waiting corrections may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-unknown-waiting'\n        });\n        return;\n      }\n    }\n    /**\n     * Handler for situations when the tech fires a `waiting` event\n     *\n     * @return {boolean}\n     *         True if an action (or none) was needed to correct the waiting. False if no\n     *         checks passed\n     * @private\n     */\n\n    techWaiting_() {\n      const seekable = this.seekable();\n      const currentTime = this.tech_.currentTime();\n      if (this.tech_.seeking()) {\n        // Tech is seeking or already waiting on another action, no action needed\n        return true;\n      }\n      if (this.beforeSeekableWindow_(seekable, currentTime)) {\n        const livePoint = seekable.end(seekable.length - 1);\n        this.logger_(`Fell out of live window at time ${currentTime}. Seeking to ` + `live point (seekable end) ${livePoint}`);\n        this.resetTimeUpdate_();\n        this.tech_.setCurrentTime(livePoint); // live window resyncs may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-live-resync'\n        });\n        return true;\n      }\n      const sourceUpdater = this.tech_.vhs.playlistController_.sourceUpdater_;\n      const buffered = this.tech_.buffered();\n      const videoUnderflow = this.videoUnderflow_({\n        audioBuffered: sourceUpdater.audioBuffered(),\n        videoBuffered: sourceUpdater.videoBuffered(),\n        currentTime\n      });\n      if (videoUnderflow) {\n        // Even though the video underflowed and was stuck in a gap, the audio overplayed\n        // the gap, leading currentTime into a buffered range. Seeking to currentTime\n        // allows the video to catch up to the audio position without losing any audio\n        // (only suffering ~3 seconds of frozen video and a pause in audio playback).\n        this.resetTimeUpdate_();\n        this.tech_.setCurrentTime(currentTime); // video underflow may be useful for monitoring QoS\n\n        this.tech_.trigger({\n          type: 'usage',\n          name: 'vhs-video-underflow'\n        });\n        return true;\n      }\n      const nextRange = findNextRange(buffered, currentTime); // check for gap\n\n      if (nextRange.length > 0) {\n        this.logger_(`Stopped at ${currentTime} and seeking to ${nextRange.start(0)}`);\n        this.resetTimeUpdate_();\n        this.skipTheGap_(currentTime);\n        return true;\n      } // All checks failed. Returning false to indicate failure to correct waiting\n\n      return false;\n    }\n    afterSeekableWindow_(seekable, currentTime, playlist, allowSeeksWithinUnsafeLiveWindow = false) {\n      if (!seekable.length) {\n        // we can't make a solid case if there's no seekable, default to false\n        return false;\n      }\n      let allowedEnd = seekable.end(seekable.length - 1) + SAFE_TIME_DELTA;\n      const isLive = !playlist.endList;\n      if (isLive && allowSeeksWithinUnsafeLiveWindow) {\n        allowedEnd = seekable.end(seekable.length - 1) + playlist.targetDuration * 3;\n      }\n      if (currentTime > allowedEnd) {\n        return true;\n      }\n      return false;\n    }\n    beforeSeekableWindow_(seekable, currentTime) {\n      if (seekable.length &&\n      // can't fall before 0 and 0 seekable start identifies VOD stream\n      seekable.start(0) > 0 && currentTime < seekable.start(0) - this.liveRangeSafeTimeDelta) {\n        return true;\n      }\n      return false;\n    }\n    videoUnderflow_({\n      videoBuffered,\n      audioBuffered,\n      currentTime\n    }) {\n      // audio only content will not have video underflow :)\n      if (!videoBuffered) {\n        return;\n      }\n      let gap; // find a gap in demuxed content.\n\n      if (videoBuffered.length && audioBuffered.length) {\n        // in Chrome audio will continue to play for ~3s when we run out of video\n        // so we have to check that the video buffer did have some buffer in the\n        // past.\n        const lastVideoRange = findRange(videoBuffered, currentTime - 3);\n        const videoRange = findRange(videoBuffered, currentTime);\n        const audioRange = findRange(audioBuffered, currentTime);\n        if (audioRange.length && !videoRange.length && lastVideoRange.length) {\n          gap = {\n            start: lastVideoRange.end(0),\n            end: audioRange.end(0)\n          };\n        } // find a gap in muxed content.\n      } else {\n        const nextRange = findNextRange(videoBuffered, currentTime); // Even if there is no available next range, there is still a possibility we are\n        // stuck in a gap due to video underflow.\n\n        if (!nextRange.length) {\n          gap = this.gapFromVideoUnderflow_(videoBuffered, currentTime);\n        }\n      }\n      if (gap) {\n        this.logger_(`Encountered a gap in video from ${gap.start} to ${gap.end}. ` + `Seeking to current time ${currentTime}`);\n        return true;\n      }\n      return false;\n    }\n    /**\n     * Timer callback. If playback still has not proceeded, then we seek\n     * to the start of the next buffered region.\n     *\n     * @private\n     */\n\n    skipTheGap_(scheduledCurrentTime) {\n      const buffered = this.tech_.buffered();\n      const currentTime = this.tech_.currentTime();\n      const nextRange = findNextRange(buffered, currentTime);\n      this.resetTimeUpdate_();\n      if (nextRange.length === 0 || currentTime !== scheduledCurrentTime) {\n        return;\n      }\n      this.logger_('skipTheGap_:', 'currentTime:', currentTime, 'scheduled currentTime:', scheduledCurrentTime, 'nextRange start:', nextRange.start(0)); // only seek if we still have not played\n\n      this.tech_.setCurrentTime(nextRange.start(0) + TIME_FUDGE_FACTOR);\n      this.tech_.trigger({\n        type: 'usage',\n        name: 'vhs-gap-skip'\n      });\n    }\n    gapFromVideoUnderflow_(buffered, currentTime) {\n      // At least in Chrome, if there is a gap in the video buffer, the audio will continue\n      // playing for ~3 seconds after the video gap starts. This is done to account for\n      // video buffer underflow/underrun (note that this is not done when there is audio\n      // buffer underflow/underrun -- in that case the video will stop as soon as it\n      // encounters the gap, as audio stalls are more noticeable/jarring to a user than\n      // video stalls). The player's time will reflect the playthrough of audio, so the\n      // time will appear as if we are in a buffered region, even if we are stuck in a\n      // \"gap.\"\n      //\n      // Example:\n      // video buffer:   0 => 10.1, 10.2 => 20\n      // audio buffer:   0 => 20\n      // overall buffer: 0 => 10.1, 10.2 => 20\n      // current time: 13\n      //\n      // Chrome's video froze at 10 seconds, where the video buffer encountered the gap,\n      // however, the audio continued playing until it reached ~3 seconds past the gap\n      // (13 seconds), at which point it stops as well. Since current time is past the\n      // gap, findNextRange will return no ranges.\n      //\n      // To check for this issue, we see if there is a gap that starts somewhere within\n      // a 3 second range (3 seconds +/- 1 second) back from our current time.\n      const gaps = findGaps(buffered);\n      for (let i = 0; i < gaps.length; i++) {\n        const start = gaps.start(i);\n        const end = gaps.end(i); // gap is starts no more than 4 seconds back\n\n        if (currentTime - start < 4 && currentTime - start > 2) {\n          return {\n            start,\n            end\n          };\n        }\n      }\n      return null;\n    }\n  }\n  const defaultOptions = {\n    errorInterval: 30,\n    getSource(next) {\n      const tech = this.tech({\n        IWillNotUseThisInPlugins: true\n      });\n      const sourceObj = tech.currentSource_ || this.currentSource();\n      return next(sourceObj);\n    }\n  };\n  /**\n   * Main entry point for the plugin\n   *\n   * @param {Player} player a reference to a videojs Player instance\n   * @param {Object} [options] an object with plugin options\n   * @private\n   */\n\n  const initPlugin = function (player, options) {\n    let lastCalled = 0;\n    let seekTo = 0;\n    const localOptions = merge(defaultOptions, options);\n    player.ready(() => {\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload-initialized'\n      });\n    });\n    /**\n     * Player modifications to perform that must wait until `loadedmetadata`\n     * has been triggered\n     *\n     * @private\n     */\n\n    const loadedMetadataHandler = function () {\n      if (seekTo) {\n        player.currentTime(seekTo);\n      }\n    };\n    /**\n     * Set the source on the player element, play, and seek if necessary\n     *\n     * @param {Object} sourceObj An object specifying the source url and mime-type to play\n     * @private\n     */\n\n    const setSource = function (sourceObj) {\n      if (sourceObj === null || sourceObj === undefined) {\n        return;\n      }\n      seekTo = player.duration() !== Infinity && player.currentTime() || 0;\n      player.one('loadedmetadata', loadedMetadataHandler);\n      player.src(sourceObj);\n      player.trigger({\n        type: 'usage',\n        name: 'vhs-error-reload'\n      });\n      player.play();\n    };\n    /**\n     * Attempt to get a source from either the built-in getSource function\n     * or a custom function provided via the options\n     *\n     * @private\n     */\n\n    const errorHandler = function () {\n      // Do not attempt to reload the source if a source-reload occurred before\n      // 'errorInterval' time has elapsed since the last source-reload\n      if (Date.now() - lastCalled < localOptions.errorInterval * 1000) {\n        player.trigger({\n          type: 'usage',\n          name: 'vhs-error-reload-canceled'\n        });\n        return;\n      }\n      if (!localOptions.getSource || typeof localOptions.getSource !== 'function') {\n        videojs.log.error('ERROR: reloadSourceOnError - The option getSource must be a function!');\n        return;\n      }\n      lastCalled = Date.now();\n      return localOptions.getSource.call(player, setSource);\n    };\n    /**\n     * Unbind any event handlers that were bound by the plugin\n     *\n     * @private\n     */\n\n    const cleanupEvents = function () {\n      player.off('loadedmetadata', loadedMetadataHandler);\n      player.off('error', errorHandler);\n      player.off('dispose', cleanupEvents);\n    };\n    /**\n     * Cleanup before re-initializing the plugin\n     *\n     * @param {Object} [newOptions] an object with plugin options\n     * @private\n     */\n\n    const reinitPlugin = function (newOptions) {\n      cleanupEvents();\n      initPlugin(player, newOptions);\n    };\n    player.on('error', errorHandler);\n    player.on('dispose', cleanupEvents); // Overwrite the plugin function so that we can correctly cleanup before\n    // initializing the plugin\n\n    player.reloadSourceOnError = reinitPlugin;\n  };\n  /**\n   * Reload the source when an error is detected as long as there\n   * wasn't an error previously within the last 30 seconds\n   *\n   * @param {Object} [options] an object with plugin options\n   */\n\n  const reloadSourceOnError = function (options) {\n    initPlugin(this, options);\n  };\n  var version$4 = \"3.0.0\";\n  var version$3 = \"6.2.0\";\n  var version$2 = \"1.0.1\";\n  var version$1 = \"6.0.0\";\n  var version = \"4.0.1\";\n\n  /**\n   * @file videojs-http-streaming.js\n   *\n   * The main file for the VHS project.\n   * License: https://github.com/videojs/videojs-http-streaming/blob/main/LICENSE\n   */\n  const Vhs = {\n    PlaylistLoader,\n    Playlist,\n    utils,\n    STANDARD_PLAYLIST_SELECTOR: lastBandwidthSelector,\n    INITIAL_PLAYLIST_SELECTOR: lowestBitrateCompatibleVariantSelector,\n    lastBandwidthSelector,\n    movingAverageBandwidthSelector,\n    comparePlaylistBandwidth,\n    comparePlaylistResolution,\n    xhr: xhrFactory()\n  }; // Define getter/setters for config properties\n\n  Object.keys(Config).forEach(prop => {\n    Object.defineProperty(Vhs, prop, {\n      get() {\n        videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n        return Config[prop];\n      },\n      set(value) {\n        videojs.log.warn(`using Vhs.${prop} is UNSAFE be sure you know what you are doing`);\n        if (typeof value !== 'number' || value < 0) {\n          videojs.log.warn(`value of Vhs.${prop} must be greater than or equal to 0`);\n          return;\n        }\n        Config[prop] = value;\n      }\n    });\n  });\n  const LOCAL_STORAGE_KEY = 'videojs-vhs';\n  /**\n   * Updates the selectedIndex of the QualityLevelList when a mediachange happens in vhs.\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to update.\n   * @param {PlaylistLoader} playlistLoader PlaylistLoader containing the new media info.\n   * @function handleVhsMediaChange\n   */\n\n  const handleVhsMediaChange = function (qualityLevels, playlistLoader) {\n    const newPlaylist = playlistLoader.media();\n    let selectedIndex = -1;\n    for (let i = 0; i < qualityLevels.length; i++) {\n      if (qualityLevels[i].id === newPlaylist.id) {\n        selectedIndex = i;\n        break;\n      }\n    }\n    qualityLevels.selectedIndex_ = selectedIndex;\n    qualityLevels.trigger({\n      selectedIndex,\n      type: 'change'\n    });\n  };\n  /**\n   * Adds quality levels to list once playlist metadata is available\n   *\n   * @param {QualityLevelList} qualityLevels The QualityLevelList to attach events to.\n   * @param {Object} vhs Vhs object to listen to for media events.\n   * @function handleVhsLoadedMetadata\n   */\n\n  const handleVhsLoadedMetadata = function (qualityLevels, vhs) {\n    vhs.representations().forEach(rep => {\n      qualityLevels.addQualityLevel(rep);\n    });\n    handleVhsMediaChange(qualityLevels, vhs.playlists);\n  }; // VHS is a source handler, not a tech. Make sure attempts to use it\n  // as one do not cause exceptions.\n\n  Vhs.canPlaySource = function () {\n    return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n  const emeKeySystems = (keySystemOptions, mainPlaylist, audioPlaylist) => {\n    if (!keySystemOptions) {\n      return keySystemOptions;\n    }\n    let codecs = {};\n    if (mainPlaylist && mainPlaylist.attributes && mainPlaylist.attributes.CODECS) {\n      codecs = unwrapCodecList(parseCodecs(mainPlaylist.attributes.CODECS));\n    }\n    if (audioPlaylist && audioPlaylist.attributes && audioPlaylist.attributes.CODECS) {\n      codecs.audio = audioPlaylist.attributes.CODECS;\n    }\n    const videoContentType = getMimeForCodec(codecs.video);\n    const audioContentType = getMimeForCodec(codecs.audio); // upsert the content types based on the selected playlist\n\n    const keySystemContentTypes = {};\n    for (const keySystem in keySystemOptions) {\n      keySystemContentTypes[keySystem] = {};\n      if (audioContentType) {\n        keySystemContentTypes[keySystem].audioContentType = audioContentType;\n      }\n      if (videoContentType) {\n        keySystemContentTypes[keySystem].videoContentType = videoContentType;\n      } // Default to using the video playlist's PSSH even though they may be different, as\n      // videojs-contrib-eme will only accept one in the options.\n      //\n      // This shouldn't be an issue for most cases as early intialization will handle all\n      // unique PSSH values, and if they aren't, then encrypted events should have the\n      // specific information needed for the unique license.\n\n      if (mainPlaylist.contentProtection && mainPlaylist.contentProtection[keySystem] && mainPlaylist.contentProtection[keySystem].pssh) {\n        keySystemContentTypes[keySystem].pssh = mainPlaylist.contentProtection[keySystem].pssh;\n      } // videojs-contrib-eme accepts the option of specifying: 'com.some.cdm': 'url'\n      // so we need to prevent overwriting the URL entirely\n\n      if (typeof keySystemOptions[keySystem] === 'string') {\n        keySystemContentTypes[keySystem].url = keySystemOptions[keySystem];\n      }\n    }\n    return merge(keySystemOptions, keySystemContentTypes);\n  };\n  /**\n   * @typedef {Object} KeySystems\n   *\n   * keySystems configuration for https://github.com/videojs/videojs-contrib-eme\n   * Note: not all options are listed here.\n   *\n   * @property {Uint8Array} [pssh]\n   *           Protection System Specific Header\n   */\n\n  /**\n   * Goes through all the playlists and collects an array of KeySystems options objects\n   * containing each playlist's keySystems and their pssh values, if available.\n   *\n   * @param {Object[]} playlists\n   *        The playlists to look through\n   * @param {string[]} keySystems\n   *        The keySystems to collect pssh values for\n   *\n   * @return {KeySystems[]}\n   *         An array of KeySystems objects containing available key systems and their\n   *         pssh values\n   */\n\n  const getAllPsshKeySystemsOptions = (playlists, keySystems) => {\n    return playlists.reduce((keySystemsArr, playlist) => {\n      if (!playlist.contentProtection) {\n        return keySystemsArr;\n      }\n      const keySystemsOptions = keySystems.reduce((keySystemsObj, keySystem) => {\n        const keySystemOptions = playlist.contentProtection[keySystem];\n        if (keySystemOptions && keySystemOptions.pssh) {\n          keySystemsObj[keySystem] = {\n            pssh: keySystemOptions.pssh\n          };\n        }\n        return keySystemsObj;\n      }, {});\n      if (Object.keys(keySystemsOptions).length) {\n        keySystemsArr.push(keySystemsOptions);\n      }\n      return keySystemsArr;\n    }, []);\n  };\n  /**\n   * Returns a promise that waits for the\n   * [eme plugin](https://github.com/videojs/videojs-contrib-eme) to create a key session.\n   *\n   * Works around https://bugs.chromium.org/p/chromium/issues/detail?id=895449 in non-IE11\n   * browsers.\n   *\n   * As per the above ticket, this is particularly important for Chrome, where, if\n   * unencrypted content is appended before encrypted content and the key session has not\n   * been created, a MEDIA_ERR_DECODE will be thrown once the encrypted content is reached\n   * during playback.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   * @param {Object[]} mainPlaylists\n   *        The playlists found on the main playlist object\n   *\n   * @return {Object}\n   *         Promise that resolves when the key session has been created\n   */\n\n  const waitForKeySessionCreation = ({\n    player,\n    sourceKeySystems,\n    audioMedia,\n    mainPlaylists\n  }) => {\n    if (!player.eme.initializeMediaKeys) {\n      return Promise.resolve();\n    } // TODO should all audio PSSH values be initialized for DRM?\n    //\n    // All unique video rendition pssh values are initialized for DRM, but here only\n    // the initial audio playlist license is initialized. In theory, an encrypted\n    // event should be fired if the user switches to an alternative audio playlist\n    // where a license is required, but this case hasn't yet been tested. In addition, there\n    // may be many alternate audio playlists unlikely to be used (e.g., multiple different\n    // languages).\n\n    const playlists = audioMedia ? mainPlaylists.concat([audioMedia]) : mainPlaylists;\n    const keySystemsOptionsArr = getAllPsshKeySystemsOptions(playlists, Object.keys(sourceKeySystems));\n    const initializationFinishedPromises = [];\n    const keySessionCreatedPromises = []; // Since PSSH values are interpreted as initData, EME will dedupe any duplicates. The\n    // only place where it should not be deduped is for ms-prefixed APIs, but the early\n    // return for IE11 above, and the existence of modern EME APIs in addition to\n    // ms-prefixed APIs on Edge should prevent this from being a concern.\n    // initializeMediaKeys also won't use the webkit-prefixed APIs.\n\n    keySystemsOptionsArr.forEach(keySystemsOptions => {\n      keySessionCreatedPromises.push(new Promise((resolve, reject) => {\n        player.tech_.one('keysessioncreated', resolve);\n      }));\n      initializationFinishedPromises.push(new Promise((resolve, reject) => {\n        player.eme.initializeMediaKeys({\n          keySystems: keySystemsOptions\n        }, err => {\n          if (err) {\n            reject(err);\n            return;\n          }\n          resolve();\n        });\n      }));\n    }); // The reasons Promise.race is chosen over Promise.any:\n    //\n    // * Promise.any is only available in Safari 14+.\n    // * None of these promises are expected to reject. If they do reject, it might be\n    //   better here for the race to surface the rejection, rather than mask it by using\n    //   Promise.any.\n\n    return Promise.race([\n    // If a session was previously created, these will all finish resolving without\n    // creating a new session, otherwise it will take until the end of all license\n    // requests, which is why the key session check is used (to make setup much faster).\n    Promise.all(initializationFinishedPromises),\n    // Once a single session is created, the browser knows DRM will be used.\n    Promise.race(keySessionCreatedPromises)]);\n  };\n  /**\n   * If the [eme](https://github.com/videojs/videojs-contrib-eme) plugin is available, and\n   * there are keySystems on the source, sets up source options to prepare the source for\n   * eme.\n   *\n   * @param {Object} player\n   *        The player instance\n   * @param {Object[]} sourceKeySystems\n   *        The key systems options from the player source\n   * @param {Object} media\n   *        The active media playlist\n   * @param {Object} [audioMedia]\n   *        The active audio media playlist (optional)\n   *\n   * @return {boolean}\n   *         Whether or not options were configured and EME is available\n   */\n\n  const setupEmeOptions = ({\n    player,\n    sourceKeySystems,\n    media,\n    audioMedia\n  }) => {\n    const sourceOptions = emeKeySystems(sourceKeySystems, media, audioMedia);\n    if (!sourceOptions) {\n      return false;\n    }\n    player.currentSource().keySystems = sourceOptions; // eme handles the rest of the setup, so if it is missing\n    // do nothing.\n\n    if (sourceOptions && !player.eme) {\n      videojs.log.warn('DRM encrypted source cannot be decrypted without a DRM plugin');\n      return false;\n    }\n    return true;\n  };\n  const getVhsLocalStorage = () => {\n    if (!window.localStorage) {\n      return null;\n    }\n    const storedObject = window.localStorage.getItem(LOCAL_STORAGE_KEY);\n    if (!storedObject) {\n      return null;\n    }\n    try {\n      return JSON.parse(storedObject);\n    } catch (e) {\n      // someone may have tampered with the value\n      return null;\n    }\n  };\n  const updateVhsLocalStorage = options => {\n    if (!window.localStorage) {\n      return false;\n    }\n    let objectToStore = getVhsLocalStorage();\n    objectToStore = objectToStore ? merge(objectToStore, options) : options;\n    try {\n      window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(objectToStore));\n    } catch (e) {\n      // Throws if storage is full (e.g., always on iOS 5+ Safari private mode, where\n      // storage is set to 0).\n      // https://developer.mozilla.org/en-US/docs/Web/API/Storage/setItem#Exceptions\n      // No need to perform any operation.\n      return false;\n    }\n    return objectToStore;\n  };\n  /**\n   * Parses VHS-supported media types from data URIs. See\n   * https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Data_URIs\n   * for information on data URIs.\n   *\n   * @param {string} dataUri\n   *        The data URI\n   *\n   * @return {string|Object}\n   *         The parsed object/string, or the original string if no supported media type\n   *         was found\n   */\n\n  const expandDataUri = dataUri => {\n    if (dataUri.toLowerCase().indexOf('data:application/vnd.videojs.vhs+json,') === 0) {\n      return JSON.parse(dataUri.substring(dataUri.indexOf(',') + 1));\n    } // no known case for this data URI, return the string as-is\n\n    return dataUri;\n  };\n  /**\n   * Whether the browser has built-in HLS support.\n   */\n\n  Vhs.supportsNativeHls = function () {\n    if (!document || !document.createElement) {\n      return false;\n    }\n    const video = document.createElement('video'); // native HLS is definitely not supported if HTML5 video isn't\n\n    if (!videojs.getTech('Html5').isSupported()) {\n      return false;\n    } // HLS manifests can go by many mime-types\n\n    const canPlay = [\n    // Apple santioned\n    'application/vnd.apple.mpegurl',\n    // Apple sanctioned for backwards compatibility\n    'audio/mpegurl',\n    // Very common\n    'audio/x-mpegurl',\n    // Very common\n    'application/x-mpegurl',\n    // Included for completeness\n    'video/x-mpegurl', 'video/mpegurl', 'application/mpegurl'];\n    return canPlay.some(function (canItPlay) {\n      return /maybe|probably/i.test(video.canPlayType(canItPlay));\n    });\n  }();\n  Vhs.supportsNativeDash = function () {\n    if (!document || !document.createElement || !videojs.getTech('Html5').isSupported()) {\n      return false;\n    }\n    return /maybe|probably/i.test(document.createElement('video').canPlayType('application/dash+xml'));\n  }();\n  Vhs.supportsTypeNatively = type => {\n    if (type === 'hls') {\n      return Vhs.supportsNativeHls;\n    }\n    if (type === 'dash') {\n      return Vhs.supportsNativeDash;\n    }\n    return false;\n  };\n  /**\n   * VHS is a source handler, not a tech. Make sure attempts to use it\n   * as one do not cause exceptions.\n   */\n\n  Vhs.isSupported = function () {\n    return videojs.log.warn('VHS is no longer a tech. Please remove it from ' + 'your player\\'s techOrder.');\n  };\n  const Component = videojs.getComponent('Component');\n  /**\n   * The Vhs Handler object, where we orchestrate all of the parts\n   * of VHS to interact with video.js\n   *\n   * @class VhsHandler\n   * @extends videojs.Component\n   * @param {Object} source the soruce object\n   * @param {Tech} tech the parent tech object\n   * @param {Object} options optional and required options\n   */\n\n  class VhsHandler extends Component {\n    constructor(source, tech, options) {\n      super(tech, options.vhs); // if a tech level `initialBandwidth` option was passed\n      // use that over the VHS level `bandwidth` option\n\n      if (typeof options.initialBandwidth === 'number') {\n        this.options_.bandwidth = options.initialBandwidth;\n      }\n      this.logger_ = logger('VhsHandler'); // we need access to the player in some cases,\n      // so, get it from Video.js via the `playerId`\n\n      if (tech.options_ && tech.options_.playerId) {\n        const _player = videojs.getPlayer(tech.options_.playerId);\n        this.player_ = _player;\n      }\n      this.tech_ = tech;\n      this.source_ = source;\n      this.stats = {};\n      this.ignoreNextSeekingEvent_ = false;\n      this.setOptions_();\n      if (this.options_.overrideNative && tech.overrideNativeAudioTracks && tech.overrideNativeVideoTracks) {\n        tech.overrideNativeAudioTracks(true);\n        tech.overrideNativeVideoTracks(true);\n      } else if (this.options_.overrideNative && (tech.featuresNativeVideoTracks || tech.featuresNativeAudioTracks)) {\n        // overriding native VHS only works if audio tracks have been emulated\n        // error early if we're misconfigured\n        throw new Error('Overriding native VHS requires emulated tracks. ' + 'See https://git.io/vMpjB');\n      } // listen for fullscreenchange events for this player so that we\n      // can adjust our quality selection quickly\n\n      this.on(document, ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'], event => {\n        const fullscreenElement = document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;\n        if (fullscreenElement && fullscreenElement.contains(this.tech_.el())) {\n          this.playlistController_.fastQualityChange_();\n        } else {\n          // When leaving fullscreen, since the in page pixel dimensions should be smaller\n          // than full screen, see if there should be a rendition switch down to preserve\n          // bandwidth.\n          this.playlistController_.checkABR_();\n        }\n      });\n      this.on(this.tech_, 'seeking', function () {\n        if (this.ignoreNextSeekingEvent_) {\n          this.ignoreNextSeekingEvent_ = false;\n          return;\n        }\n        this.setCurrentTime(this.tech_.currentTime());\n      });\n      this.on(this.tech_, 'error', function () {\n        // verify that the error was real and we are loaded\n        // enough to have pc loaded.\n        if (this.tech_.error() && this.playlistController_) {\n          this.playlistController_.pauseLoading();\n        }\n      });\n      this.on(this.tech_, 'play', this.play);\n    }\n    setOptions_() {\n      // defaults\n      this.options_.withCredentials = this.options_.withCredentials || false;\n      this.options_.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions === false ? false : true;\n      this.options_.useDevicePixelRatio = this.options_.useDevicePixelRatio || false;\n      this.options_.useBandwidthFromLocalStorage = typeof this.source_.useBandwidthFromLocalStorage !== 'undefined' ? this.source_.useBandwidthFromLocalStorage : this.options_.useBandwidthFromLocalStorage || false;\n      this.options_.useNetworkInformationApi = this.options_.useNetworkInformationApi || false;\n      this.options_.useDtsForTimestampOffset = this.options_.useDtsForTimestampOffset || false;\n      this.options_.customTagParsers = this.options_.customTagParsers || [];\n      this.options_.customTagMappers = this.options_.customTagMappers || [];\n      this.options_.cacheEncryptionKeys = this.options_.cacheEncryptionKeys || false;\n      this.options_.llhls = this.options_.llhls === false ? false : true;\n      this.options_.bufferBasedABR = this.options_.bufferBasedABR || false;\n      if (typeof this.options_.playlistExclusionDuration !== 'number') {\n        this.options_.playlistExclusionDuration = 5 * 60;\n      }\n      if (typeof this.options_.bandwidth !== 'number') {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          const storedObject = getVhsLocalStorage();\n          if (storedObject && storedObject.bandwidth) {\n            this.options_.bandwidth = storedObject.bandwidth;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-bandwidth-from-local-storage'\n            });\n          }\n          if (storedObject && storedObject.throughput) {\n            this.options_.throughput = storedObject.throughput;\n            this.tech_.trigger({\n              type: 'usage',\n              name: 'vhs-throughput-from-local-storage'\n            });\n          }\n        }\n      } // if bandwidth was not set by options or pulled from local storage, start playlist\n      // selection at a reasonable bandwidth\n\n      if (typeof this.options_.bandwidth !== 'number') {\n        this.options_.bandwidth = Config.INITIAL_BANDWIDTH;\n      } // If the bandwidth number is unchanged from the initial setting\n      // then this takes precedence over the enableLowInitialPlaylist option\n\n      this.options_.enableLowInitialPlaylist = this.options_.enableLowInitialPlaylist && this.options_.bandwidth === Config.INITIAL_BANDWIDTH; // grab options passed to player.src\n\n      ['withCredentials', 'useDevicePixelRatio', 'limitRenditionByPlayerDimensions', 'bandwidth', 'customTagParsers', 'customTagMappers', 'cacheEncryptionKeys', 'playlistSelector', 'initialPlaylistSelector', 'bufferBasedABR', 'liveRangeSafeTimeDelta', 'llhls', 'useNetworkInformationApi', 'useDtsForTimestampOffset', 'exactManifestTimings', 'leastPixelDiffSelector'].forEach(option => {\n        if (typeof this.source_[option] !== 'undefined') {\n          this.options_[option] = this.source_[option];\n        }\n      });\n      this.limitRenditionByPlayerDimensions = this.options_.limitRenditionByPlayerDimensions;\n      this.useDevicePixelRatio = this.options_.useDevicePixelRatio;\n    }\n    /**\n     * called when player.src gets called, handle a new source\n     *\n     * @param {Object} src the source object to handle\n     */\n\n    src(src, type) {\n      // do nothing if the src is falsey\n      if (!src) {\n        return;\n      }\n      this.setOptions_(); // add main playlist controller options\n\n      this.options_.src = expandDataUri(this.source_.src);\n      this.options_.tech = this.tech_;\n      this.options_.externVhs = Vhs;\n      this.options_.sourceType = simpleTypeFromSourceType(type); // Whenever we seek internally, we should update the tech\n\n      this.options_.seekTo = time => {\n        this.tech_.setCurrentTime(time);\n      };\n      this.playlistController_ = new PlaylistController(this.options_);\n      const playbackWatcherOptions = merge({\n        liveRangeSafeTimeDelta: SAFE_TIME_DELTA\n      }, this.options_, {\n        seekable: () => this.seekable(),\n        media: () => this.playlistController_.media(),\n        playlistController: this.playlistController_\n      });\n      this.playbackWatcher_ = new PlaybackWatcher(playbackWatcherOptions);\n      this.playlistController_.on('error', () => {\n        const player = videojs.players[this.tech_.options_.playerId];\n        let error = this.playlistController_.error;\n        if (typeof error === 'object' && !error.code) {\n          error.code = 3;\n        } else if (typeof error === 'string') {\n          error = {\n            message: error,\n            code: 3\n          };\n        }\n        player.error(error);\n      });\n      const defaultSelector = this.options_.bufferBasedABR ? Vhs.movingAverageBandwidthSelector(0.55) : Vhs.STANDARD_PLAYLIST_SELECTOR; // `this` in selectPlaylist should be the VhsHandler for backwards\n      // compatibility with < v2\n\n      this.playlistController_.selectPlaylist = this.selectPlaylist ? this.selectPlaylist.bind(this) : defaultSelector.bind(this);\n      this.playlistController_.selectInitialPlaylist = Vhs.INITIAL_PLAYLIST_SELECTOR.bind(this); // re-expose some internal objects for backwards compatibility with < v2\n\n      this.playlists = this.playlistController_.mainPlaylistLoader_;\n      this.mediaSource = this.playlistController_.mediaSource; // Proxy assignment of some properties to the main playlist\n      // controller. Using a custom property for backwards compatibility\n      // with < v2\n\n      Object.defineProperties(this, {\n        selectPlaylist: {\n          get() {\n            return this.playlistController_.selectPlaylist;\n          },\n          set(selectPlaylist) {\n            this.playlistController_.selectPlaylist = selectPlaylist.bind(this);\n          }\n        },\n        throughput: {\n          get() {\n            return this.playlistController_.mainSegmentLoader_.throughput.rate;\n          },\n          set(throughput) {\n            this.playlistController_.mainSegmentLoader_.throughput.rate = throughput; // By setting `count` to 1 the throughput value becomes the starting value\n            // for the cumulative average\n\n            this.playlistController_.mainSegmentLoader_.throughput.count = 1;\n          }\n        },\n        bandwidth: {\n          get() {\n            let playerBandwidthEst = this.playlistController_.mainSegmentLoader_.bandwidth;\n            const networkInformation = window.navigator.connection || window.navigator.mozConnection || window.navigator.webkitConnection;\n            const tenMbpsAsBitsPerSecond = 10e6;\n            if (this.options_.useNetworkInformationApi && networkInformation) {\n              // downlink returns Mbps\n              // https://developer.mozilla.org/en-US/docs/Web/API/NetworkInformation/downlink\n              const networkInfoBandwidthEstBitsPerSec = networkInformation.downlink * 1000 * 1000; // downlink maxes out at 10 Mbps. In the event that both networkInformationApi and the player\n              // estimate a bandwidth greater than 10 Mbps, use the larger of the two estimates to ensure that\n              // high quality streams are not filtered out.\n\n              if (networkInfoBandwidthEstBitsPerSec >= tenMbpsAsBitsPerSecond && playerBandwidthEst >= tenMbpsAsBitsPerSecond) {\n                playerBandwidthEst = Math.max(playerBandwidthEst, networkInfoBandwidthEstBitsPerSec);\n              } else {\n                playerBandwidthEst = networkInfoBandwidthEstBitsPerSec;\n              }\n            }\n            return playerBandwidthEst;\n          },\n          set(bandwidth) {\n            this.playlistController_.mainSegmentLoader_.bandwidth = bandwidth; // setting the bandwidth manually resets the throughput counter\n            // `count` is set to zero that current value of `rate` isn't included\n            // in the cumulative average\n\n            this.playlistController_.mainSegmentLoader_.throughput = {\n              rate: 0,\n              count: 0\n            };\n          }\n        },\n        /**\n         * `systemBandwidth` is a combination of two serial processes bit-rates. The first\n         * is the network bitrate provided by `bandwidth` and the second is the bitrate of\n         * the entire process after that - decryption, transmuxing, and appending - provided\n         * by `throughput`.\n         *\n         * Since the two process are serial, the overall system bandwidth is given by:\n         *   sysBandwidth = 1 / (1 / bandwidth + 1 / throughput)\n         */\n        systemBandwidth: {\n          get() {\n            const invBandwidth = 1 / (this.bandwidth || 1);\n            let invThroughput;\n            if (this.throughput > 0) {\n              invThroughput = 1 / this.throughput;\n            } else {\n              invThroughput = 0;\n            }\n            const systemBitrate = Math.floor(1 / (invBandwidth + invThroughput));\n            return systemBitrate;\n          },\n          set() {\n            videojs.log.error('The \"systemBandwidth\" property is read-only');\n          }\n        }\n      });\n      if (this.options_.bandwidth) {\n        this.bandwidth = this.options_.bandwidth;\n      }\n      if (this.options_.throughput) {\n        this.throughput = this.options_.throughput;\n      }\n      Object.defineProperties(this.stats, {\n        bandwidth: {\n          get: () => this.bandwidth || 0,\n          enumerable: true\n        },\n        mediaRequests: {\n          get: () => this.playlistController_.mediaRequests_() || 0,\n          enumerable: true\n        },\n        mediaRequestsAborted: {\n          get: () => this.playlistController_.mediaRequestsAborted_() || 0,\n          enumerable: true\n        },\n        mediaRequestsTimedout: {\n          get: () => this.playlistController_.mediaRequestsTimedout_() || 0,\n          enumerable: true\n        },\n        mediaRequestsErrored: {\n          get: () => this.playlistController_.mediaRequestsErrored_() || 0,\n          enumerable: true\n        },\n        mediaTransferDuration: {\n          get: () => this.playlistController_.mediaTransferDuration_() || 0,\n          enumerable: true\n        },\n        mediaBytesTransferred: {\n          get: () => this.playlistController_.mediaBytesTransferred_() || 0,\n          enumerable: true\n        },\n        mediaSecondsLoaded: {\n          get: () => this.playlistController_.mediaSecondsLoaded_() || 0,\n          enumerable: true\n        },\n        mediaAppends: {\n          get: () => this.playlistController_.mediaAppends_() || 0,\n          enumerable: true\n        },\n        mainAppendsToLoadedData: {\n          get: () => this.playlistController_.mainAppendsToLoadedData_() || 0,\n          enumerable: true\n        },\n        audioAppendsToLoadedData: {\n          get: () => this.playlistController_.audioAppendsToLoadedData_() || 0,\n          enumerable: true\n        },\n        appendsToLoadedData: {\n          get: () => this.playlistController_.appendsToLoadedData_() || 0,\n          enumerable: true\n        },\n        timeToLoadedData: {\n          get: () => this.playlistController_.timeToLoadedData_() || 0,\n          enumerable: true\n        },\n        buffered: {\n          get: () => timeRangesToArray(this.tech_.buffered()),\n          enumerable: true\n        },\n        currentTime: {\n          get: () => this.tech_.currentTime(),\n          enumerable: true\n        },\n        currentSource: {\n          get: () => this.tech_.currentSource_,\n          enumerable: true\n        },\n        currentTech: {\n          get: () => this.tech_.name_,\n          enumerable: true\n        },\n        duration: {\n          get: () => this.tech_.duration(),\n          enumerable: true\n        },\n        main: {\n          get: () => this.playlists.main,\n          enumerable: true\n        },\n        playerDimensions: {\n          get: () => this.tech_.currentDimensions(),\n          enumerable: true\n        },\n        seekable: {\n          get: () => timeRangesToArray(this.tech_.seekable()),\n          enumerable: true\n        },\n        timestamp: {\n          get: () => Date.now(),\n          enumerable: true\n        },\n        videoPlaybackQuality: {\n          get: () => this.tech_.getVideoPlaybackQuality(),\n          enumerable: true\n        }\n      });\n      this.tech_.one('canplay', this.playlistController_.setupFirstPlay.bind(this.playlistController_));\n      this.tech_.on('bandwidthupdate', () => {\n        if (this.options_.useBandwidthFromLocalStorage) {\n          updateVhsLocalStorage({\n            bandwidth: this.bandwidth,\n            throughput: Math.round(this.throughput)\n          });\n        }\n      });\n      this.playlistController_.on('selectedinitialmedia', () => {\n        // Add the manual rendition mix-in to VhsHandler\n        renditionSelectionMixin(this);\n      });\n      this.playlistController_.sourceUpdater_.on('createdsourcebuffers', () => {\n        this.setupEme_();\n      }); // the bandwidth of the primary segment loader is our best\n      // estimate of overall bandwidth\n\n      this.on(this.playlistController_, 'progress', function () {\n        this.tech_.trigger('progress');\n      }); // In the live case, we need to ignore the very first `seeking` event since\n      // that will be the result of the seek-to-live behavior\n\n      this.on(this.playlistController_, 'firstplay', function () {\n        this.ignoreNextSeekingEvent_ = true;\n      });\n      this.setupQualityLevels_(); // do nothing if the tech has been disposed already\n      // this can occur if someone sets the src in player.ready(), for instance\n\n      if (!this.tech_.el()) {\n        return;\n      }\n      this.mediaSourceUrl_ = window.URL.createObjectURL(this.playlistController_.mediaSource);\n      this.tech_.src(this.mediaSourceUrl_);\n    }\n    createKeySessions_() {\n      const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      this.logger_('waiting for EME key session creation');\n      waitForKeySessionCreation({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media(),\n        mainPlaylists: this.playlists.main.playlists\n      }).then(() => {\n        this.logger_('created EME key session');\n        this.playlistController_.sourceUpdater_.initializedEme();\n      }).catch(err => {\n        this.logger_('error while creating EME key session', err);\n        this.player_.error({\n          message: 'Failed to initialize media keys for EME',\n          code: 3\n        });\n      });\n    }\n    handleWaitingForKey_() {\n      // If waitingforkey is fired, it's possible that the data that's necessary to retrieve\n      // the key is in the manifest. While this should've happened on initial source load, it\n      // may happen again in live streams where the keys change, and the manifest info\n      // reflects the update.\n      //\n      // Because videojs-contrib-eme compares the PSSH data we send to that of PSSH data it's\n      // already requested keys for, we don't have to worry about this generating extraneous\n      // requests.\n      this.logger_('waitingforkey fired, attempting to create any new key sessions');\n      this.createKeySessions_();\n    }\n    /**\n     * If necessary and EME is available, sets up EME options and waits for key session\n     * creation.\n     *\n     * This function also updates the source updater so taht it can be used, as for some\n     * browsers, EME must be configured before content is appended (if appending unencrypted\n     * content before encrypted content).\n     */\n\n    setupEme_() {\n      const audioPlaylistLoader = this.playlistController_.mediaTypes_.AUDIO.activePlaylistLoader;\n      const didSetupEmeOptions = setupEmeOptions({\n        player: this.player_,\n        sourceKeySystems: this.source_.keySystems,\n        media: this.playlists.media(),\n        audioMedia: audioPlaylistLoader && audioPlaylistLoader.media()\n      });\n      this.player_.tech_.on('keystatuschange', e => {\n        if (e.status !== 'output-restricted') {\n          return;\n        }\n        const mainPlaylist = this.playlistController_.main();\n        if (!mainPlaylist || !mainPlaylist.playlists) {\n          return;\n        }\n        const excludedHDPlaylists = []; // Assume all HD streams are unplayable and exclude them from ABR selection\n\n        mainPlaylist.playlists.forEach(playlist => {\n          if (playlist && playlist.attributes && playlist.attributes.RESOLUTION && playlist.attributes.RESOLUTION.height >= 720) {\n            if (!playlist.excludeUntil || playlist.excludeUntil < Infinity) {\n              playlist.excludeUntil = Infinity;\n              excludedHDPlaylists.push(playlist);\n            }\n          }\n        });\n        if (excludedHDPlaylists.length) {\n          videojs.log.warn('DRM keystatus changed to \"output-restricted.\" Removing the following HD playlists ' + 'that will most likely fail to play and clearing the buffer. ' + 'This may be due to HDCP restrictions on the stream and the capabilities of the current device.', ...excludedHDPlaylists); // Clear the buffer before switching playlists, since it may already contain unplayable segments\n\n          this.playlistController_.fastQualityChange_();\n        }\n      });\n      this.handleWaitingForKey_ = this.handleWaitingForKey_.bind(this);\n      this.player_.tech_.on('waitingforkey', this.handleWaitingForKey_); // In IE11 this is too early to initialize media keys, and IE11 does not support\n      // promises.\n\n      if (videojs.browser.IE_VERSION === 11 || !didSetupEmeOptions) {\n        // If EME options were not set up, we've done all we could to initialize EME.\n        this.playlistController_.sourceUpdater_.initializedEme();\n        return;\n      }\n      this.createKeySessions_();\n    }\n    /**\n     * Initializes the quality levels and sets listeners to update them.\n     *\n     * @method setupQualityLevels_\n     * @private\n     */\n\n    setupQualityLevels_() {\n      const player = videojs.players[this.tech_.options_.playerId]; // if there isn't a player or there isn't a qualityLevels plugin\n      // or qualityLevels_ listeners have already been setup, do nothing.\n\n      if (!player || !player.qualityLevels || this.qualityLevels_) {\n        return;\n      }\n      this.qualityLevels_ = player.qualityLevels();\n      this.playlistController_.on('selectedinitialmedia', () => {\n        handleVhsLoadedMetadata(this.qualityLevels_, this);\n      });\n      this.playlists.on('mediachange', () => {\n        handleVhsMediaChange(this.qualityLevels_, this.playlists);\n      });\n    }\n    /**\n     * return the version\n     */\n\n    static version() {\n      return {\n        '@videojs/http-streaming': version$4,\n        'mux.js': version$3,\n        'mpd-parser': version$2,\n        'm3u8-parser': version$1,\n        'aes-decrypter': version\n      };\n    }\n    /**\n     * return the version\n     */\n\n    version() {\n      return this.constructor.version();\n    }\n    canChangeType() {\n      return SourceUpdater.canChangeType();\n    }\n    /**\n     * Begin playing the video.\n     */\n\n    play() {\n      this.playlistController_.play();\n    }\n    /**\n     * a wrapper around the function in PlaylistController\n     */\n\n    setCurrentTime(currentTime) {\n      this.playlistController_.setCurrentTime(currentTime);\n    }\n    /**\n     * a wrapper around the function in PlaylistController\n     */\n\n    duration() {\n      return this.playlistController_.duration();\n    }\n    /**\n     * a wrapper around the function in PlaylistController\n     */\n\n    seekable() {\n      return this.playlistController_.seekable();\n    }\n    /**\n     * Abort all outstanding work and cleanup.\n     */\n\n    dispose() {\n      if (this.playbackWatcher_) {\n        this.playbackWatcher_.dispose();\n      }\n      if (this.playlistController_) {\n        this.playlistController_.dispose();\n      }\n      if (this.qualityLevels_) {\n        this.qualityLevels_.dispose();\n      }\n      if (this.tech_ && this.tech_.vhs) {\n        delete this.tech_.vhs;\n      }\n      if (this.mediaSourceUrl_ && window.URL.revokeObjectURL) {\n        window.URL.revokeObjectURL(this.mediaSourceUrl_);\n        this.mediaSourceUrl_ = null;\n      }\n      if (this.tech_) {\n        this.tech_.off('waitingforkey', this.handleWaitingForKey_);\n      }\n      super.dispose();\n    }\n    convertToProgramTime(time, callback) {\n      return getProgramTime({\n        playlist: this.playlistController_.media(),\n        time,\n        callback\n      });\n    } // the player must be playing before calling this\n\n    seekToProgramTime(programTime, callback, pauseAfterSeek = true, retryCount = 2) {\n      return seekToProgramTime({\n        programTime,\n        playlist: this.playlistController_.media(),\n        retryCount,\n        pauseAfterSeek,\n        seekTo: this.options_.seekTo,\n        tech: this.options_.tech,\n        callback\n      });\n    }\n  }\n  /**\n   * The Source Handler object, which informs video.js what additional\n   * MIME types are supported and sets up playback. It is registered\n   * automatically to the appropriate tech based on the capabilities of\n   * the browser it is running in. It is not necessary to use or modify\n   * this object in normal usage.\n   */\n\n  const VhsSourceHandler = {\n    name: 'videojs-http-streaming',\n    VERSION: version$4,\n    canHandleSource(srcObj, options = {}) {\n      const localOptions = merge(videojs.options, options);\n      return VhsSourceHandler.canPlayType(srcObj.type, localOptions);\n    },\n    handleSource(source, tech, options = {}) {\n      const localOptions = merge(videojs.options, options);\n      tech.vhs = new VhsHandler(source, tech, localOptions);\n      tech.vhs.xhr = xhrFactory();\n      tech.vhs.src(source.src, source.type);\n      return tech.vhs;\n    },\n    canPlayType(type, options = {}) {\n      const {\n        vhs: {\n          overrideNative = !videojs.browser.IS_ANY_SAFARI\n        } = {}\n      } = merge(videojs.options, options);\n      const supportedType = simpleTypeFromSourceType(type);\n      const canUseMsePlayback = supportedType && (!Vhs.supportsTypeNatively(supportedType) || overrideNative);\n      return canUseMsePlayback ? 'maybe' : '';\n    }\n  };\n  /**\n   * Check to see if the native MediaSource object exists and supports\n   * an MP4 container with both H.264 video and AAC-LC audio.\n   *\n   * @return {boolean} if  native media sources are supported\n   */\n\n  const supportsNativeMediaSources = () => {\n    return browserSupportsCodec('avc1.4d400d,mp4a.40.2');\n  }; // register source handlers with the appropriate techs\n\n  if (supportsNativeMediaSources()) {\n    videojs.getTech('Html5').registerSourceHandler(VhsSourceHandler, 0);\n  }\n  videojs.VhsHandler = VhsHandler;\n  videojs.VhsSourceHandler = VhsSourceHandler;\n  videojs.Vhs = Vhs;\n  if (!videojs.use) {\n    videojs.registerComponent('Vhs', Vhs);\n  }\n  videojs.options.vhs = videojs.options.vhs || {};\n  if (!videojs.getPlugin || !videojs.getPlugin('reloadSourceOnError')) {\n    videojs.registerPlugin('reloadSourceOnError', reloadSourceOnError);\n  }\n\n  return videojs;\n\n}));\n","/* eslint-disable no-cond-assign */\r\n// @ts-nocheck\r\nimport videojs from 'video.js/dist/video.js' //\r\n// flv 插件 \r\nimport flvjs from 'flv.js';\r\n\r\n// videojs + flv.js 插件\r\nconst Html5 = videojs.getTech('Html5');\r\nconst mergeOptions = videojs.mergeOptions || videojs.util.mergeOptions;\r\nconst defaults = {\r\n    mediaDataSource: {},\r\n    config: {}\r\n};\r\n\r\nclass Flvjs extends Html5 {\r\n\r\n    /**\r\n     * Create an instance of this Tech.\r\n     *\r\n     * @param {Object} [options]\r\n     *        The key/value store of player options.\r\n     *\r\n     * @param {Component~ReadyCallback} ready\r\n     *        Callback function to call when the `Flvjs` Tech is ready.\r\n     */\r\n    constructor(options, ready) {\r\n        options = mergeOptions(defaults, options);\r\n        super(options, ready);\r\n    }\r\n\r\n    /**\r\n     * A getter/setter for the `Flvjs` Tech's source object.\r\n     *\r\n     * @param {Tech~SourceObject} [src]\r\n     *        The source object you want to set on the `Flvjs` techs.\r\n     *\r\n     * @return {Tech~SourceObject|undefined}\r\n     *         - The current source object when a source is not passed in.\r\n     *         - undefined when setting\r\n     */\r\n    setSrc(src) {\r\n        if (this.flvPlayer) {\r\n            // Is this necessary to change source?\r\n            this.flvPlayer.detachMediaElement();\r\n            this.flvPlayer.destroy();\r\n        }\r\n\r\n        const mediaDataSource = this.options_.mediaDataSource;\r\n        const config = this.options_.config;\r\n\r\n        mediaDataSource.type = mediaDataSource.type === undefined ? 'flv' : mediaDataSource.type;\r\n        mediaDataSource.url = src;\r\n        this.flvPlayer = flvjs.createPlayer(mediaDataSource, config);\r\n        this.flvPlayer.attachMediaElement(this.el_);\r\n        this.flvPlayer.load();\r\n    }\r\n\r\n    /**\r\n     * Dispose of flvjs.\r\n     */\r\n    dispose() {\r\n        if (this.flvPlayer) {\r\n            this.flvPlayer.detachMediaElement();\r\n            this.flvPlayer.destroy();\r\n        }\r\n        super.dispose();\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * Check if the Flvjs tech is currently supported.\r\n *\r\n * @return {boolean}\r\n *          - True if the Flvjs tech is supported.\r\n *          - False otherwise.\r\n */\r\nFlvjs.isSupported = function() {\r\n\r\n    return flvjs && flvjs.isSupported();\r\n};\r\n\r\n/**\r\n * Flvjs supported mime types.\r\n *\r\n * @constant {Object}\r\n */\r\nFlvjs.formats = {\r\n    'video/flv': 'FLV',\r\n    'video/x-flv': 'FLV'\r\n};\r\n\r\n/**\r\n * Check if the tech can support the given type\r\n *\r\n * @param {string} type\r\n *        The mimetype to check\r\n * @return {string} 'probably', 'maybe', or '' (empty string)\r\n */\r\nFlvjs.canPlayType = function(type) {\r\n    if (Flvjs.isSupported() && type in Flvjs.formats) {\r\n        return 'maybe';\r\n    }\r\n\r\n    return '';\r\n};\r\n\r\n/**\r\n * Check if the tech can support the given source\r\n * @param {Object} srcObj\r\n *        The source object\r\n * @param {Object} options\r\n *        The options passed to the tech\r\n * @return {string} 'probably', 'maybe', or '' (empty string)\r\n */\r\nFlvjs.canPlaySource = function(srcObj, options) {\r\n    return Flvjs.canPlayType(srcObj.type);\r\n};\r\n\r\n// Include the version number.\r\nFlvjs.VERSION = '__VERSION__';\r\n\r\nvideojs.registerTech('Flvjs', Flvjs);\r\n\r\n// rtc 类\r\nexport class RTC {\r\n    url;\r\n    defaultPath;\r\n    pc\r\n    onaddstream;\r\n    constructor(url) {\r\n        this.url = url;\r\n        this.defaultPath = '/rtc/v1/play/';\r\n        // 初始化配置\r\n        this.pc = new RTCPeerConnection();\r\n        // 监听流\r\n        this.pc.onaddstream = (event) => {\r\n            if (this.onaddstream) {\r\n                this.onaddstream(event);\r\n            }\r\n        };\r\n        // // 信号监听更改\r\n        // this.pc.onsignalingstatechange = this.onsignalingstatechange;\r\n        // // iceconnection 状态更改\r\n        // this.pc.oniceconnectionstatechange = this.oniceconnectionstatechange;\r\n        // // icegathering 状态更改\r\n        // this.pc.onicegatheringstatechange = this.onicegatheringstatechange;\r\n        // // 监听轨道\r\n        // this.pc.ontrack = this.handleOnTrack;\r\n        // // 啥东西\r\n        // this.pc.onicecandidate = this.onicecandidate;\r\n    }\r\n\r\n    onsignalingstatechange = function(state) {\r\n        console.info('ddddd', state)\r\n    };\r\n\r\n    oniceconnectionstatechange = function(state) {\r\n        console.info('ccccc:', state)\r\n    };\r\n\r\n    onicegatheringstatechange = function(state) {\r\n        console.info('bbbbb:', state)\r\n    };\r\n\r\n    // 切换轨道\r\n    handleOnTrack = function(e) {\r\n        console.log('handleOnTrack', e.streams);\r\n        // if (self.video.srcObject !== e.streams[0]) {\r\n        //     console.log('setting video stream from ontrack');\r\n        //     self.video.srcObject = e.streams[0];\r\n        // }\r\n    };\r\n\r\n    onicecandidate = function(e) {\r\n        if (e.candidate) {\r\n            // self.onWebRtcCandidate(JSON.stringify(e.candidate));\r\n        }\r\n    };\r\n\r\n    async play(url) {\r\n        // 发起订阅\r\n        let conf = this.prepareUrl(url);\r\n        this.pc.addTransceiver(\"audio\", { direction: \"recvonly\" });\r\n        this.pc.addTransceiver(\"video\", { direction: \"recvonly\" });\r\n        let offer = await this.pc.createOffer({\r\n            offerToReceiveAudio: 1,\r\n            offerToReceiveVideo: 1\r\n        });\r\n        await this.pc.setLocalDescription(offer)\r\n        let session = await new Promise((resolve, reject) => {\r\n            let data = {\r\n                api: conf.apiUrl,\r\n                streamurl: conf.streamUrl,\r\n                clientip: null,\r\n                sdp: offer.sdp\r\n            }\r\n            fetch(conf.apiUrl.replace(\"1986\", \"1985\"), {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify(data)\r\n                })\r\n                .then(response => response.json())\r\n                .then(res => {\r\n                    if (res.code) {\r\n                        reject(data);\r\n                    } else {\r\n                        resolve(res)\r\n                    }\r\n                }).catch(error => {\r\n                    console.log(error);\r\n                })\r\n        });\r\n        // 接收订阅\r\n        await this.pc.setRemoteDescription(\r\n                new RTCSessionDescription({ type: 'answer', sdp: session.sdp })\r\n            )\r\n            // console.log('iceConnectionState', this.pc.iceConnectionState)\r\n            // this.pc.onsignalingstatechange = (e) => {\r\n            //     console.log('onsignalingstatechange', e)\r\n            // }\r\n            // this.pc.onloadedmetadata = (e) => {\r\n            //     console.log('onloadedmetadata', e)\r\n            // }\r\n            // this.pc.iceconnectionstatechange = (e) => {\r\n            //     console.log('iceconnectionstatechange', e);\r\n            //     console.log('iceConnectionState1', this.pc.iceConnectionState)\r\n            // }\r\n            // this.pc.oniceconnectionstatechange = (e) => {\r\n            //     console.log('oniceconnectionstatechange', e);\r\n            // }\r\n        return session\r\n    }\r\n    close() {\r\n        this.pc.close();\r\n        this.pc = null;\r\n    }\r\n    prepareUrl(webrtcUrl) {\r\n        let urlObject = this.parse(webrtcUrl)\r\n        let schema = urlObject.user_query.schema;\r\n        schema = schema ? schema + ':' : window.location.protocol;\r\n        let port = urlObject.port || 1985;\r\n        if (schema === 'https:') {\r\n            port = urlObject.port || 443;\r\n        }\r\n        let api = urlObject.user_query.play || this.defaultPath;\r\n        if (api.lastIndexOf('/') !== api.length - 1) {\r\n            api += '/';\r\n        }\r\n        let apiUrl = schema + '//' + urlObject.server + ':' + port + api;\r\n        for (let key in urlObject.user_query) {\r\n            if (key !== 'api' && key !== 'play') {\r\n                apiUrl += '&' + key + '=' + urlObject.user_query[key];\r\n            }\r\n        }\r\n        apiUrl = apiUrl.replace(api + '&', api + '?');\r\n        let streamUrl = urlObject.url;\r\n        return { apiUrl: apiUrl, streamUrl: streamUrl, schema: schema, urlObject: urlObject, port: port };\r\n    }\r\n\r\n    parse(url) {\r\n        let a = document.createElement('a')\r\n        a.href = url.replace(\"rtmp://\", \"http://\")\r\n            .replace(\"webrtc://\", \"http://\")\r\n            .replace(\"rtc://\", \"http://\");\r\n        let vhost = a.hostname\r\n        let app = a.pathname.substr(1, a.pathname.lastIndexOf(\"/\") - 1)\r\n        let stream = a.pathname.substr(a.pathname.lastIndexOf(\"/\") + 1)\r\n        app = app.replace(\"...vhost...\", \"?vhost=\")\r\n        if (app.indexOf(\"?\") >= 0) {\r\n            let params = app.substr(app.indexOf(\"?\"))\r\n            app.substr(0, app.indexOf(\"?\"))\r\n            if (params.indexOf(\"vhost=\") > 0) {\r\n                vhost = params.substr(params.indexOf(\"vhost=\" + \"vhost=\".length))\r\n                if (vhost.indexOf(\"&\") > 0) {\r\n                    vhost = vhost.substr(0, vhost.indexOf(\"&\"))\r\n                }\r\n            }\r\n        }\r\n        if (a.hostname === vhost) {\r\n            let re = /^(\\d+)\\.(\\d+)\\.(\\d+)\\.(\\d+)$/\r\n            if (re.test(a.hostname)) {\r\n                vhost = \"__defaultVhost__\";\r\n            }\r\n        }\r\n        let schema = \"rtmp\"\r\n        if (url.indexOf(\"://\")) {\r\n            schema = url.substr(0, url.indexOf(\"://\"))\r\n        }\r\n        let port = a.port\r\n        if (!port) {\r\n            if (schema === 'http') {\r\n                port = 80;\r\n            } else if (schema === 'https') {\r\n                port = 443;\r\n            } else if (schema === 'rtmp') {\r\n                port = 1935;\r\n            }\r\n        }\r\n        let ret = {\r\n            url: url,\r\n            schema: schema,\r\n            server: a.hostname,\r\n            port: port,\r\n            vhost: vhost,\r\n            app: app,\r\n            stream: stream\r\n        };\r\n        this.fill_query(a.search, ret)\r\n        if (!ret.port) {\r\n            if (schema === 'webrtc' || schema === 'rtc') {\r\n                if (ret.user_query.schema === 'https') {\r\n                    ret.port = 443;\r\n                } else if (window.location.href.indexOf('https://') === 0) {\r\n                    ret.port = 443;\r\n                } else {\r\n                    // For WebRTC, SRS use 1985 as default API port.\r\n                    ret.port = 1985;\r\n                }\r\n            }\r\n        }\r\n        return ret\r\n    }\r\n    fill_query(query_string, obj) {\r\n        obj.user_query = {}\r\n        if (query_string.length === 0) {\r\n            return;\r\n        }\r\n        if (query_string.indexOf(\"?\") >= 0) {\r\n            query_string = query_string.split(\"?\")[1];\r\n        }\r\n        let queries = query_string.split(\"&\");\r\n        for (let i = 0; i < queries.length; i++) {\r\n            let elem = queries[i];\r\n            let query = elem.split(\"=\");\r\n            obj[query[0]] = query[1];\r\n            obj.user_query[query[0]] = query[1];\r\n        }\r\n        if (obj.domain) {\r\n            obj.vhost = obj.domain;\r\n        }\r\n    }\r\n}\r\n\r\n// 1 加入观察者模式\r\n// 2 添加回调类型 play read error end dbclick click\r\n// 3 发布npm包 webo-video.js\r\n\r\n// 基于videojs 播放 flv | webrtc | rtmp | mp4 | hls 等视频格式\r\nexport class weboVideojs {\r\n\r\n    // 播放状态 null ready playing played error\r\n    playStatus = null;\r\n\r\n    // 断流配置\r\n    cutoutConfig = {\r\n        max: 10, // 最大重复次数\r\n        num: 0, //  当前时间重复次数\r\n        time: 0 // 当前时间\r\n    }\r\n\r\n    // flv 倍数播放配置\r\n    flvConfig = {\r\n        maxDelta: 1, // 最大跳帧延迟\r\n        rate1: 1.5, // 倍数播放1\r\n        maxRateDelta: 1, //最大倍数播放延迟\r\n        rate2: 1.5, // 倍数播放2\r\n    }\r\n\r\n    // video 配置\r\n    videoConf = {\r\n        url: '',\r\n        type: '', // flv | webrtc | rtmp | mp4\r\n        el: '', // 可以传video dom 或者视频容器盒子\r\n        isLive: false, //是否直播\r\n    }\r\n\r\n    // 初始化订阅者 \r\n    eventObj = {};\r\n\r\n    // 播放器\r\n    player = null;\r\n\r\n    // 容器\r\n    el = null;\r\n\r\n    // web rtc 容器\r\n    RTC = null;\r\n\r\n    // 定时器\r\n    interTime = 0;\r\n\r\n    constructor(myConfig, videoConfig) {\r\n\r\n        // video 配置\r\n        this.videoConf = this.initVideoConfig(myConfig);\r\n\r\n        // 初始化播放器\r\n        this.initPlay(videoConfig);\r\n    }\r\n\r\n    // 初始化播放器\r\n    initPlay(videoConfig) {\r\n        // videojs 配置\r\n        this.player = videojs(this.el, this.initConfig(videoConfig), () => {\r\n            this.player.on('ready', (e) => {\r\n                this.emit('ready');\r\n                this.setPlayStatus('ready');\r\n            });\r\n            this.player.on('webkitbeginfullscreen', () => {});\r\n            this.player.on('loadedmetadata', () => {});\r\n            this.player.on('click', e => {\r\n                // this.el.play();\r\n                this.emit('click')\r\n            });\r\n            this.player.on('load', (e) => {\r\n                this.emit('load')\r\n            })\r\n            this.player.on('play', () => {\r\n                this.emit('play');\r\n                this.clearTime();\r\n                this.setPlayStatus('playing');\r\n                // 开启定时器\r\n                this.createInterTime();\r\n            });\r\n\r\n            this.player.on('error', (e) => {\r\n                this.emit('error', e);\r\n                this.setPlayStatus('error')\r\n            });\r\n            this.player.on('ended', () => {\r\n                this.emit('ended');\r\n                this.setPlayStatus('played')\r\n            });\r\n            this.player.on('data', (e) => {});\r\n        });\r\n    }\r\n\r\n    // this.el 事件监听\r\n    eventFun(type) {\r\n        let self = this;\r\n\r\n        function onClcik() {\r\n            self.emit('click')\r\n        }\r\n        let funObj = {\r\n            add: () => {\r\n                this.el.addEventListener('click', onClcik);\r\n            },\r\n            remove: () => {\r\n                this.el.removeEventListener('click', onClcik);\r\n            }\r\n        }\r\n        funObj[type]();\r\n    }\r\n\r\n    // 事件监听\r\n    on(eventName, cb) {\r\n        if (!this.eventObj[eventName]) this.eventObj[eventName] = [];\r\n        this.eventObj[eventName].push(cb);\r\n    }\r\n\r\n    // 取消监听\r\n    off(eventName) {\r\n        this.eventObj[eventName] = []\r\n    }\r\n\r\n    // 发布\r\n    emit(eventName, ...rest) {\r\n        if (!this.eventObj[eventName]) return;\r\n        this.eventObj[eventName].forEach(cb => {\r\n            cb(rest)\r\n        });\r\n    }\r\n\r\n    // 默认配置config\r\n    initConfig(config) {\r\n        // 默认配置\r\n        let params = {\r\n            autoplay: true,\r\n            controls: false,\r\n        }\r\n        if (this.videoConf.type == 'flv') {\r\n            // flv 默认配置\r\n            params = {\r\n                autoplay: true, //自动播放\r\n                controls: true, //用户可以与之交互的控件\r\n                loop: true, //视频一结束就重新开始\r\n                muted: true, //默认情况下将使所有音频静音\r\n                // aspectRatio: \"16:9\",//显示比率\r\n                fullscreen: {\r\n                    options: {\r\n                        navigationUI: 'auto'\r\n                    }\r\n                },\r\n                techOrder: [\"html5\", \"flvjs\"], // 兼容顺序\r\n                flvjs: {\r\n                    mediaDataSource: {\r\n                        isLive: false,\r\n                        cors: true,\r\n                        withCredentials: false,\r\n                    },\r\n                    config: {\r\n\r\n                        autoCleanupMaxBackwardDuration: 20,\r\n                        autoCleanupMinBackwardDuration: 20,\r\n                        lazyLoadMaxDuration: 10,\r\n                        lazyLoadRecoverDuration: 10,\r\n\r\n                        // enableWorker: true, // 启用分离的线程进行转换\r\n                        enableStashBuffer: false, // 关闭IO隐藏缓冲区\r\n                        stashInitialSize: 128, // 减少首帧显示等待时长\r\n\r\n                        reuseRedirectedURL: true, //重用301/302重定向url，用于随后的请求，如查找、重新连接等。\r\n                        autoCleanupSourceBuffer: true //自动清除缓存\r\n                    },\r\n                    // sources: [{ src: params.url, type: \"video/x-flv\" }]\r\n                }\r\n            }\r\n        }\r\n        return Object.assign({}, params, config || {})\r\n    }\r\n\r\n    // 默认配置myConfig\r\n    initVideoConfig(config) {\r\n        if (!config.el) return console.error('视频容器必传');\r\n        let isLive = config.type == 'mp4' ? false : true\r\n\r\n        if (config.el.nodeName == 'VIDEO') {\r\n            this.el = config.el;\r\n        } else {\r\n            this.el = document.createElement('video');\r\n            this.el.setAttribute('class', 'video-js');\r\n            this.el.setAttribute('autoplay', 'autoplay');\r\n\r\n            config.el.append(this.el);\r\n        }\r\n\r\n        // 初始化监听双击事件和单机事件\r\n        // if (this.el) {\r\n        //     this.eventFun('add');\r\n        // }\r\n\r\n        return Object.assign({}, {\r\n            url: '',\r\n            type: '', // flv | webrtc | rtmp | mp4\r\n            el: '', // 可以传video dom 或者视频容器盒子\r\n            isLive, //是否直播\r\n        }, config);\r\n    }\r\n\r\n    // 获取播放器\r\n    getPlayer() {\r\n        return this.player;\r\n    }\r\n\r\n    // 获取播放容器\r\n    getVideoEL() {\r\n        return this.el;\r\n    }\r\n\r\n    // 断开连接\r\n    dispose() {\r\n        // 销毁事件\r\n        // if (this.el) {\r\n        //     this.eventFun('remove');\r\n        // }\r\n        // this.player.dispose();\r\n        this.player = null;\r\n        this.el = null;\r\n        this.closeRTC();\r\n        this.clearTime();\r\n    }\r\n\r\n    clearPlayer() {\r\n        this.player.dispose();\r\n        this.dispose();\r\n    }\r\n\r\n    // 关闭RTC\r\n    closeRTC() {\r\n        if (this.RTC) {\r\n            this.RTC.close();\r\n            this.RTC = null;\r\n        }\r\n    }\r\n\r\n    // 关闭定时器\r\n    clearTime() {\r\n        if (this.interTime) {\r\n            clearInterval(this.interTime)\r\n        }\r\n    }\r\n\r\n    // 当视频开始播放 创建一个定时器\r\n    createInterTime() {\r\n        this.interTime = setInterval(() => {\r\n            // 是否直播\r\n            if (this.videoConf.isLive && this.player && this.player.buffered) {\r\n                let end = this.player.buffered().end(0); //获取当前buffered值(缓冲区末尾)\r\n                let delta = end - this.player.currentTime(); //获取buffered与当前播放位置的差值\r\n                // console.log('流的最后一帧', end, '当前播放帧', this.player.currentTime(), '延迟', delta, '重复次数', this.cutoutConfig.num);\r\n                //当视频开始播放 计算播放时间\r\n                if (this.player.currentTime() == this.cutoutConfig.time) {\r\n                    if (this.cutoutConfig.max == this.cutoutConfig.num) {\r\n                        this.cutoutConfig.num = 0;\r\n                        this.clearTime();\r\n                        this.closeRTC();\r\n                        this.emit('staermError');\r\n                        this.setPlayStatus('error')\r\n                    }\r\n                    this.cutoutConfig.num += 1;\r\n\r\n                } else {\r\n                    this.cutoutConfig.time = this.player.currentTime();\r\n                    this.cutoutConfig.num = 0\r\n                }\r\n            }\r\n\r\n            // flv 跳帧\r\n            if (this.videoConf.type == 'flv' && this.player && this.player.buffered) {\r\n                let end = this.player.buffered().end(0); //获取当前buffered值(缓冲区末尾)\r\n                let delta = end - this.player.currentTime(); //获取buffered与当前播放位置的差值\r\n                // console.log('流的最后一帧', end, '当前播放帧', this.player.currentTime(), '延迟', delta, '重复次数', this.cutoutConfig.num);\r\n                // 延迟过大，通过跳帧的方式更新视频\r\n                if (delta > this.flvConfig.maxDelta) {\r\n                    // 跳帧\r\n                    // this.player.currentTime = this.player.buffered().end(0) - 0.5;\r\n                    // 倍数播放\r\n                    this.player.playbackRate(this.flvConfig.rate1); // 1.5\r\n                } else {\r\n                    // 恢复正常倍速\r\n                    this.player.playbackRate(1);\r\n                }\r\n            }\r\n\r\n            // 当视频正在播放\r\n            if (this.getPlayStatus() == 'playing') {\r\n                this.emit('playing')\r\n            }\r\n\r\n            if (this.getPlayStatus() == 'read') {\r\n                this.cutoutConfig.num += 1;\r\n                if (this.cutoutConfig.num == this.cutoutConfig.max) {\r\n                    this.emit('error', { msg: '视频播放失败' })\r\n                }\r\n            }\r\n        }, 1000);\r\n    }\r\n\r\n    // 设置视频配置\r\n    setVideoConfig(obj = { url: '', type: '' }) {\r\n        this.videoConf = this.initVideoConfig(obj);\r\n    }\r\n\r\n    // 播放视频\r\n    play() {\r\n        switch (this.videoConf.type) {\r\n            case \"mp4\":\r\n                // mp4 直接将地址给this.demo\r\n                if (!this.videoConf.url.endsWith('.mp4')) return console.error('视频地址格式不正确');\r\n                this.el.src = this.videoConf.url;\r\n                break;\r\n            case \"webrtc\":\r\n                if (!this.videoConf.url.startsWith('webrtc')) return console.error('视频地址格式不正确');\r\n                this.RTC = new RTC(this.videoConf.url);\r\n                this.RTC.onaddstream = (e) => {\r\n                    this.el.srcObject = e.stream;\r\n                    // this.el.click();\r\n                    this.emit('staermLoad')\r\n                }\r\n                this.RTC.play(this.videoConf.url).then(res => {})\r\n                break;\r\n            case \"hls\":\r\n                break;\r\n            case \"flv\":\r\n                if (!this.videoConf.url.endsWith('.flv')) return console.error('视频地址格式不正确');\r\n                // 设置视频流\r\n                this.player.src([{ src: this.videoConf.url, type: \"video/x-flv\" }]);\r\n                this.player.load(this.videoConf.url);\r\n                this.player.play();\r\n                // setTimeout(() => {\r\n\r\n                // this.el.click();\r\n                // }, 1000);\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 设置播放状态\r\n     * @param {*} type \r\n     */\r\n    setPlayStatus(type) {\r\n        this.playStatus = type;\r\n    }\r\n\r\n    // 返回播放状态\r\n    getPlayStatus() {\r\n        return this.playStatus;\r\n    }\r\n\r\n    // 设置buffer数据\r\n    setBuffer(data) {\r\n        this.player.appendBuffer(data)\r\n    }\r\n\r\n    // 设置静音\r\n    setMuted(val) {\r\n        this.player.muted(Boolean(val));\r\n    }\r\n}\r\n\r\nconst weboVideo = (myConfig, videoConfig) => {\r\n    return new weboVideojs(myConfig, videoConfig)\r\n}\r\n\r\nexport default weboVideo;"],"names":["module","exports","version$5","hooks_","hooks","type","fn","concat","hook","removeHook","index","indexOf","slice","splice","hookOnce","map","original","wrapper","args","FullscreenApi","prefixed","apiMap","specApi","browserApi","i","length","document","history","LogByTypeFactory","name","log","level","lvl","levels","lvlRegExp","RegExp","unshift","toUpperCase","push","window","console","info","test","Array","isArray","createLogger$1","logByType","createLogger","subname","all","off","debug","warn","error","DEFAULT","hasOwnProperty","Error","filter","fname","historyItem","clear","disable","enable","log$1","toString$1","Object","prototype","toString","keys","object","isObject$1","each","forEach","key","reduce","initial","accum","value","isPlain","call","constructor","merge$2","sources","result","source","defineLazyProperty","obj","getValue","setter","set","defineProperty","enumerable","writable","options","configurable","get","Obj","freeze","__proto__","isObject","merge","ANDROID_VERSION","IS_IPOD","IOS_VERSION","IS_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROMIUM","IS_CHROME","CHROMIUM_VERSION","CHROME_VERSION","IE_VERSION","IS_SAFARI","IS_WINDOWS","IS_IPAD","IS_IPHONE","TOUCH_ENABLED","Boolean","isReal","navigator","maxTouchPoints","DocumentTouch","UAD","userAgentData","platform","brands","find","b","brand","version","USER_AGENT","userAgent","match","major","parseFloat","minor","exec","IS_IOS","IS_ANY_SAFARI","browser","isNonBlankString","str","trim","throwIfWhitespace","isEl","nodeType","isInFrame","parent","self","x","createQuerier","method","selector","context","querySelector","ctx","createEl","tagName","properties","attributes","content","el","createElement","getOwnPropertyNames","propName","val","textContent","attrName","setAttribute","appendContent","text","innerText","prependTo","child","firstChild","insertBefore","appendChild","hasClass","element","classToCheck","classList","contains","addClass","classesToAdd","add","prev","current","split","removeClass","classesToRemove","remove","toggleClass","classToToggle","predicate","undefined","className","toggle","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrs","attrVal","getAttribute","attribute","blockTextSelection","body","focus","onselectstart","unblockTextSelection","getBoundingClientRect","parentNode","rect","k","height","computedStyle","width","findPosition","offsetParent","left","top","offsetWidth","offsetHeight","fullscreenElement","offsetLeft","offsetTop","getPointerPosition","event","translated","y","item","nodeName","toLowerCase","transform","values","Number","position","boxTarget","target","box","boxW","boxH","offsetY","offsetX","changedTouches","pageX","pageY","Math","max","min","isTextNode$1","emptyEl","removeChild","normalizeContent","createTextNode","node","insertContent","isSingleLeftClick","button","buttons","$","$$","prop","getComputedStyle","computedStyleValue","e","getPropertyValue","Dom","isTextNode","videojs$1","_windowLoaded","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","mediaEl","autoSetupTimeout","player","wait","vjs","setTimeout","setWindowLoaded","removeEventListener","readyState","addEventListener","createStyleElement","style","setTextContent","styleSheet","cssText","DomData","WeakMap","_supportsPassive","_guid","newGUID","_cleanUpEvents","elem","has","data","handlers","dispatcher","detachEvent","disabled","delete","_handleMultipleEvents","types","callback","fixEvent","fixed_","returnTrue","returnFalse","isPropagationStopped","isImmediatePropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","clientX","doc","documentElement","scrollLeft","clientLeft","clientY","scrollTop","clientTop","which","charCode","keyCode","supportsPassive","opts","passiveEvents","on","guid","hash","handlersCopy","m","n","passive","attachEvent","removeType","t","trigger","elemData","ownerDocument","bubbles","targetData","one","func","apply","this","arguments","any","Events","UPDATE_REFRESH_INTERVAL","bind_","uid","bound","bind","throttle","last","performance","now","debounce","immediate","timeout","cancel","clearTimeout","debounced","later","Fn","EVENT_MAP","EventTarget$2","ael","allowedEvents_","queueTrigger","Map","oldTimeout","size","dispatchEvent","objName","name_","isEvented","eventBusEl_","every","addEventedCallback","eventedCallbacks","isValidEventType","validateTarget","fnName","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","removeListenerOnDispose","removeRemoverOnTargetDispose","largs","targetOrType","typeOrListener","evented","eventBusKey","assign","el_","StatefulMixin","state","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","string","replace","w","toTitleCase$1","titleCaseEquals","str1","str2","Str","toTitleCase","commonjsGlobal","globalThis","global","unwrapExports","__esModule","createCommonjsModule","keycode","searchInput","hasKeyCode","names","foundNamedKey","search","String","codes","aliases","charCodeAt","isEventKey","nameOrCode","code","backspace","tab","enter","ctrl","alt","esc","space","end","home","up","right","down","insert","command","windows","ctl","control","option","pause","break","caps","return","escape","spc","spacebar","pgup","pgdn","ins","del","cmd","fromCharCode","title","alias","Component$1","ready","play","player_","isDisposed_","parentComponent_","options_","id_","id","c","handleLanguagechange","children_","childIndex_","childNameIndex_","setTimeoutIds_","Set","setIntervalIds_","rafIds_","namedRafs_","clearingTimersOnDispose_","initChildren","reportTouchActivity","enableTouchActivity","dispose","readyQueue_","restoreEl","replaceChild","isDisposed","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","getDescendant","acc","currentChild","addChild","component","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","handleAdd","playerOptions","newChild","workingChildren","Tech","some","wchild","isTech","buildCSSClass","sync","isReady_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","parseInt","currentDimension","computedWidthOrHeight","isNaN","rule","currentDimensions","currentWidth","currentHeight","blur","handleKeyDown","handleKeyPress","emitTapEvents","touchStart","firstTouch","tapMovementThreshold","touchTimeThreshold","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","clearTimersOnDispose_","interval","intervalId","requestAnimationFrame","requestNamedAnimationFrame","cancelNamedAnimationFrame","cancelAnimationFrame","idName","cancelName","static","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","rangeCheck","maxIndex","getRange","valueIndex","ranges","rangeIndex","createTimeRangesObj","timeRangesObj","start","Symbol","iterator","createTimeRanges$1","registerComponent","defaultImplementation","seconds","guide","s","floor","h","gm","gh","Infinity","implementation","setFormatTime","customImplementation","resetFormatTime","formatTime","Time","createTimeRanges","createTimeRange","bufferedPercent","buffered","duration","bufferedDuration","MediaError","message","defaultMessages","status","errorTypes","errNum","tuple","SafeParseTuple","reviver","json","JSON","parse","err","isPromise","then","silencePromise","trackToJson_","track","cues","cue","startTime","endTime","textTrackConverter","textTracksToJson","tech","trackEls","trackObjs","trackEl","src","textTracks","jsonToTextTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","super","handleKeyDown_","close_","close","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","label","previouslyActiveEl_","desc","open","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","controls","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","tracks","tracks_","addTrack","labelchange_","removeTrack","rtrack","l","getTrackById","change","addtrack","removetrack","labelchange","disableOthers$1","list","enabled","AudioTrackList","changing_","enabledChange_","disableOthers","selected","VideoTrackList","selectedChange_","TextTrackList","queueChange_","triggerSelectedlanguagechange","triggerSelectedlanguagechange_","kind","selectedlanguagechange_","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","newLabel","parseUrl","url","props","a","href","details","protocol","host","location","getAbsoluteURL","getFileExtension","path","pathParts","pop","isCrossOrigin","winLoc","urlInfo","Url","window_1","_extends_1","_extends","_extends$1","isFunction_1","isFunction","alert","confirm","prompt","getCharset","contentTypeHeader","charset","contentType","_contentType$split","httpHandler","decodeResponseBody","response","responseBody","statusCode","cause","TextDecoder","headers","decode","Uint8Array","createXHR","parseHeaders","row","lib","default_1","forEachArray","array","isEmpty","initParams","uri","params","_createXHR","called","readystatechange","xhr","loadFunc","getBody","responseText","getXml","isJson","errorFunc","evt","timeoutTimer","failureResponse","aborted","useXDR","rawRequest","getAllResponseHeaders","cors","XDomainRequest","XMLHttpRequest","stringify","onreadystatechange","onload","onerror","onprogress","onabort","ontimeout","username","password","withCredentials","abort","setRequestHeader","responseType","beforeSend","send","responseXML","firefoxBugTakenEffect","noop$1","default","parseCues","srcContent","parser","WebVTT","Parser","vttjs","StringDecoder","errors","oncue","onparsingerror","onflush","groupCollapsed","groupEnd","flush","loadTrack","crossOrigin","tech_","loaded_","TextTrack","settings","srclang","mode","default_","activeCues_","preload_","preloadTextTracks","activeCues","changed","timeupdateHandler","rvf_","requestVideoFrameCallback","disposeHandler","stopTracking","startTracking","defineProperties","newMode","ct","currentTime","active","cancelVideoFrameCallback","originalCue","VTTCue","originalCue_","removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","HTMLTrackElement","NONE","LOADED","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","video","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","doccy","minDoc","topLevel","document_1","_objCreate","create","F","o","ParsingError","errorData","parseTimeStamp","input","computeSeconds","f","Settings","parseOptions","keyValueDelim","groupDelim","groups","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","consumeCueSettings","v","region","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","align","center","middle","positionAlign","skipWhitespace","substr","BadSignature","dflt","defaultKey","TEXTAREA_ELEMENT","TAG_NAME","u","ruby","rt","lang","DEFAULT_COLOR_CLASS","white","lime","cyan","red","yellow","magenta","blue","black","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","consume","unescape","innerHTML","shouldAdd","localName","annotation","rootDiv","tagStack","createProcessingInstruction","classes","cl","bgColor","colorName","propValue","join","strongRTLRanges","isStrongRTLChar","currentRange","determineBidi","cueDiv","nodeStack","childNodes","pushNodes","nextTextNode","computeLinePos","textTrackList","mediaElement","trackList","count","StyleBox","CueStyleBox","styleOptions","styles","color","backgroundColor","bottom","display","writingMode","unicodeBidi","applyStyles","div","direction","textAlign","font","whiteSpace","textPos","formatStyle","move","BoxPosition","lh","rects","getClientRects","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","findBestPosition","axis","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","p","intersectPercentage","boxPosition","linePos","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","toCSSCompatValues","WebVTT$1","unit","toMove","overlaps","b2","boxes","container","reference","getSimpleBoxPosition","decodeURIComponent","encodeURIComponent","convertCueToDOMTree","cuetext","FONT_SIZE_PERCENT","FONT_STYLE","CUE_BACKGROUND_PADDING","processCues","overlay","paddedOverlay","shouldCompute","hasBeenReset","displayState","margin","decoder","buffer","reportOrThrowError","collectNextLine","pos","parseRegion","xy","anchor","VTTRegion","lines","regionAnchorX","regionAnchorY","viewportAnchorX","viewportAnchorY","scroll","onregion","parseTimestampMap","ontimestampmap","MPEGTS","LOCAL","parseHeader","stream","alreadyCollectedLine","hasSubstring","vtt","autoKeyword","directionSetting","lr","rl","alignSetting","auto","findDirectionSetting","findAlignSetting","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","pauseOnExit","TypeError","setting","SyntaxError","getCueAsHTML","vttcue","scrollSetting","findScrollSetting","isValidPercentValue","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","vttregion","browserIndex","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","createTrackHelper","onDurationChange_","onDurationChange","trackProgress_","trackProgress","trackCurrentTime_","trackCurrentTime","stopTrackingCurrentTime_","stopTrackingCurrentTime","disposeSourceHandler_","disposeSourceHandler","queuedHanders_","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","manualProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","setCrossOrigin","error_","played","setScrubbing","scrubbing","setCurrentTime","trackListChanges","addWebVttScript_","script","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createRemoteTextTrack","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","requestPictureInPicture","Promise","reject","disablePictureInPicture","setDisablePictureInPicture","cb","setPoster","playsinline","setPlaysinline","overrideNativeAudioTracks","overrideNativeVideoTracks","canPlayType","srcObj","techs_","canPlaySource","defaultTechOrder_","videojs","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","featuresVideoFrameCallback","withSourceHandlers","_Tech","registerSourceHandler","handler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","currentSource_","handleSource","registerTech","middlewares","middlewareInstances","TERMINATOR","use","middleware","next","setSourceHelper","setTech","mw","reduceRight","middlewareIterator","arg","mediate","callMethod","middlewareValue","terminated","executeRight","allowedGetters","muted","seekable","volume","ended","allowedSetters","setMuted","setVolume","allowedMediators","mws","clearCacheForPlayer","getOrCreateFactory","mwFactory","mwf","mwi","lastRun","mwrest","_src","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","m4a","mp3","aac","caf","flac","oga","wav","m3u8","mpd","jpg","jpeg","gif","png","svg","webp","getMimetype","ext","findMimetype","cache_","matchingSources","filterSource","newsrc","srcobj","fixSource","mimetype","MediaLoader","j","techOrder","techName","getTech","isSupported","loadTech_","ClickableComponent","handleMouseOver_","handleMouseOver","handleMouseOut_","handleMouseOut","handleClick_","handleClick","tabIndex_","createControlTextEl","controlTextEl_","controlText_","localizedText","nonIconControl","noUITitleAttributes","enabled_","clickHandler","PosterImage","update","update_","loading","crossorigin","poster","setSrc","darkGray","lightGray","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","updateDisplayHandler","toggleDisplay","preselectTrack","screenOrientation","screen","orientation","changeOrientationEvent","modes","userPref","selectedLanguage","firstDesc","firstCaptions","preferredTrack","translate","clearDisplay","allowMultipleShowingTracks","showingTracks","updateForTrack","descriptionsTrack","captionsSubtitlesTrack","updateDisplayState","overrides","textTrackSettings","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontSize","fontFamily","fontVariant","cueEl","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","mouseused_","handleMouseDown","playPromise","playToggle","playFocus","CloseButton","PlayToggle","replay","handlePlay","handlePause","handleEnded","handleSeeked","TimeDisplay","updateContent","updateTextNode_","span","labelText_","textNode_","time","formattedTime_","oldNode","CurrentTimeDisplay","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","displayNegative","remainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","SeekToLive","updateLiveEdgeStatus","liveTracker","updateLiveEdgeStatusHandler_","textEl_","atLiveEdge","seekToLiveEdge","clamp","number","Num","Slider","handleMouseDown_","handleMouseUp_","handleMouseUp","handleMouseMove_","handleMouseMove","bar","barName","playerEvent","progress","getProgress","progress_","sizeKey","toFixed","getPercent","calculateDistance","stepBack","stepForward","bool","vertical_","percentify","LoadProgressBar","partEls_","loadedText","separator","percentageEl_","isLive","seekableEnd","bufferedEnd","percent_","part","dataset","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","write","updateTime","liveWindow","secondsBehind","PlayProgressBar","timeTooltip","MouseTimeDisplay","STEP_SECONDS","PAGE_KEY_MULTIPLIER","SeekBar","setEventHandlers_","updateInterval","enableIntervalHandler_","enableInterval_","disableIntervalHandler_","disableInterval_","toggleVisibility_","visibilityState","getCurrentTime_","liveCurrentTime","currentTime_","userSeek_","nextSeekedFromUser","seekableStart","videoWasPlaying","mouseDown","newTime","distance","mouseTimeDisplay","handleAction","gotoFraction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","handleMouseUpHandler_","handleMouseDownHandler_","seekBar","playProgressBar","seekBarEl","removeListenersAddedOnMousedownAndTouchstart","PictureInPictureToggle","handlePictureInPictureChange","handlePictureInPictureEnabledChange","currentType","substring","audioPosterMode","audioOnlyMode","isInPictureInPicture","exitPictureInPicture","pictureInPictureEnabled","FullscreenToggle","handleFullscreenChange","fsApi_","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeLevelTooltip","rangeBarRect","rangeBarPoint","volumeBarPointPx","updateVolume","MouseVolumeLevelDisplay","VolumeBar","updateLastVolume_","updateARIAAttributes","mouseVolumeLevelDisplay","volumeBarEl","volumeBarRect","volumeBarPoint","checkMuted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","inline","volumeControl","handleKeyPressHandler_","volumePanelState_","muteToggle","handleVolumeControlKeyUp","sliderActive_","sliderInactive_","Menu","menuButton_","menuButton","focusedChild_","boundHandleBlur_","handleBlur","boundHandleTapClick_","handleTapClick","addEventListenerForItem","removeEventListenerForItem","addItem","childComponent","contentElType","append","btn","buttonPressed_","unpressButton","childComponents","foundComponent","stepChild","MenuButton","buttonClass","handleMenuKeyUp_","handleMenuKeyUp","menu","handleMouseLeave","handleSubmenuKeyDown","createMenu","items","hideThreshold_","titleEl","titleComponent","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","handleSubmenuKeyPress","TrackButton","updateHandler","MenuKeys","MenuItem","selectable","isSelected_","multiSelectable","TextTrackMenuItem","kinds","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","referenceTrack","shouldBeSelected","OffTextTrackMenuItem","allHidden","TextTrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","selectCurrentItem_","track_","findChaptersTrack","setTrack","updateHandler_","remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","parentSpan","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","featuresNativeAudioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","labelElId_","updateVisibility","updateLabel","handlePlaybackRateschange","labelEl_","rates","playbackRates","playbackRateSupported","Spacer","CustomControlSpacer","ControlBar","ErrorDisplay","LOCAL_STORAGE_KEY$1","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","getSelectedOptionValue","selectedIndex","setSelectedOption","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","setValues","localStorage","getItem","setItem","removeItem","ttDisplay","controlBar","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unloadListener_","unobserve","disconnect","resizeObserver","defaults","trackingThreshold","liveTolerance","LiveTracker","trackLiveHandler_","trackLive_","handlePlay_","handleFirstTimeupdate_","handleFirstTimeupdate","handleSeeked_","seekToLiveEdge_","reset_","handleDurationchange","toggleTracking","deltaTime","lastTime_","pastSeekEnd_","pastSeekEnd","isBehind","seekedBehindLive_","timeupdateSeen_","behindLiveEdge_","liveui","isTracking","hasStarted","trackingInterval_","timeDiff","nextSeekedFromUser_","lastSeekEnd_","seekableEnds","sort","seekableStarts","behindLiveEdge","TitleBar","updateDom_","els","techEl","techAriaAttrs","techAriaAttr","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","getInnerHTMLDescriptor","HTMLMediaElement","firstSourceWatch","resetSourceWatch_","innerDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","getSrcDescriptor","setupSourceset","resetSourceset_","srcDescriptor","oldSetAttribute","oldLoad","currentSrc","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","isScrubbing_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","overrideNative_","override","lowerCaseType","eventName","proxyNativeTracksForType_","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","isScrubbing","fastSeek","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","nativeIOSFullscreen","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitDisplayingFullscreen","webkitExitFullScreen","webkitKeys","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","creationTime","TEST_VID","canControlVolume","canControl","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","BREAKPOINT_ORDER","BREAKPOINT_CLASSES","charAt","DEFAULT_BREAKPOINTS","tiny","xsmall","small","medium","large","xlarge","huge","getTagSettings","closest","boundDocumentFullscreenChange_","documentFullscreenChange_","boundFullWindowOnEscKey_","fullWindowOnEscKey","boundUpdateStyleEl_","updateStyleEl_","boundApplyInitTime_","applyInitTime_","boundUpdateCurrentBreakpoint_","updateCurrentBreakpoint_","boundHandleTechClick_","handleTechClick_","boundHandleTechDoubleClick_","handleTechDoubleClick_","boundHandleTechTouchStart_","handleTechTouchStart_","boundHandleTechTouchMove_","handleTechTouchMove_","boundHandleTechTouchEnd_","handleTechTouchEnd_","boundHandleTechTap_","handleTechTap_","isFullscreen_","isPosterFromTech_","queuedCallbacks_","userActive_","debugEnabled_","audioOnlyMode_","audioPosterMode_","audioOnlyCache_","playerHeight","hiddenChildren","tagAttributes","languagesToLower","languages_","resetCache_","poster_","controls_","changingSrc_","playCallbacks_","playTerminatedQueue_","autoplay","plugins","scrubbing_","fullscreenchange","fluid_","playerOptionsCopy","middleware_","majorVersion","userActive","listenForUserActivity_","breakpoints","responsive","styleEl_","playerElIngest_","divEmbed","tabindex","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fill_","fluid","aspectRatio","links","linkEl","techGet_","techCall_","posterImage","privDimension","parsedVal","ratio","aspectRatio_","width_","height_","idClass","videoWidth","videoHeight","ratioParts","ratioMultiplier","unloadTech_","titleTechName","camelTechName","techName_","normalizeAutoplay","techOptions","loop","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechFullscreenError_","handleTechEnterPictureInPicture_","handleTechLeavePictureInPicture_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","addTechControlsListeners_","safety","removeTechControlsListeners_","manualAutoplay_","resolveMuted","previouslyMuted","restoreMuted","mutedPromise","catch","promise","updateSourceCaches_","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateSourceCaches","playerSrc","currentSource","eventSrc","lastSource_","techSrc","techGet","request","lastPlaybackRate","queued","timeWhenWaiting","timeUpdateListener","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","userActions","click","doubleClick","userWasActive","cancelable","toggleFullscreenClass_","targetPlayer","isFs","matches","fullscreen","msMatchesSelector","togglePictureInPictureClass_","initTime","inactivityTimeout","defaultPlaybackRate","media","resolve","play_","isSrcReady","waitToPlay_","runPlayTerminatedQueue_","runPlayCallbacks_","queue","q","callbacks","percentAsDecimal","defaultMuted","isFS","oldValue","fullscreenOptions","offHandler","errorHandler","requestFullscreenHelper_","fsOptions","preferFullWindow","enterFullWindow","exitFullscreenHelper_","exitFullWindow","isFullWindow","docOrigOverflow","overflow","isPiP","isInPictureInPicture_","hotkeys","isContentEditable","excludeElement","handleHotkeys","fullscreenKey","keydownEvent","muteKey","playPauseKey","FSToggle","selectSource","techs","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","foundSourceAndTech","flip","finder","sourceOrder","handleSrc_","isRetry","resetRetryOnError_","middlewareSource","src_","notSupportedMessage","retry","stopListeningForErrors","sourceTech","doReset_","resetControlBarUI_","resetProgressBar_","resetPlaybackRate_","resetVolumeBar_","durationDisplay","currentSources","techAutoplay","newPoster","usingNativeControls_","hookFunction","newErr","suppressNotSupportedError","triggerSuppressedError","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","handleMouseUpAndMouseLeave","isAudio_","enableAudioOnlyUI_","playerChildren","controlBarHeight","disableAudioOnlyUI_","exitPromises","enablePosterModeUI_","disablePosterModeUI_","toJSON","createModal","modal","currentBreakpoint","candidateBreakpoint","breakpoints_","breakpoint_","removeCurrentBreakpoint_","currentBreakpointClass","responsive_","loadMedia","artist","artwork","tt","titleBar","getMedia","baseOptions","tagOptions","dataSetup","childName","previousLogLevel_","newRates","html5","userLanguage","navigationUI","BASE_PLUGIN_NAME","PLUGIN_CACHE_KEY","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createBasicPlugin","plugin","basicPluginWrapper","instance","createPluginFactory","PluginSubClass","getEventHash","Plugin","VERSION","isBasic","deprecate","warned","deprecateForMajor","oldName","newName","registerPlugin","usingPlugin","hasPlugin","normalizeId","getPlayer","defaultView","PlayerComponent","getPlayers","nId","getAllPlayers","comp","writeable","mergeOptions","deregisterPlugin","getPlugins","getPluginVersion","addLanguage","EventTarget","dom","factory","_interopDefaultLegacy","videojs__default","QualityLevel","representation","bitrate","bandwidth","frameRate","QualityLevelList","levels_","selectedIndex_","addQualityLevel","qualityLevel","getQualityLevelById","removeQualityLevel","removed","addqualitylevel","removequalitylevel","initPlugin","originalPluginFn","qualityLevels","qualityLevelList","urlToolkit","URL_REGEX","FIRST_SEGMENT_REGEX","SLASH_DOT_REGEX","SLASH_DOT_DOT_REGEX","URLToolkit","buildAbsoluteURL","baseURL","relativeURL","alwaysNormalize","basePartsForNormalise","parseURL","normalizePath","buildURLFromParts","relativeParts","scheme","baseParts","netLoc","builtParts","query","fragment","baseURLPath","newPath","lastIndexOf","parts","DEFAULT_LOCATION$1","resolveUrl$2","baseUrl","relativeUrl","nativeURL","URL","protocolLess","removeLocation","newUrl","Stream","_proto","_length","_i","pipe","destination","atob$1","atob","Buffer","decodeB64ToUint8Array$1","b64Text","decodedString","LineStream","nextNewline","TAB","parseByterange","byterangeString","offset","attributeSeparator","parseAttributes$1","ParseStream","customParsers","tagMappers","mapper","mappedLine","newLine","tagType","playlistType","allowed","URI","BYTERANGE","byterange","RESOLUTION","resolution","BANDWIDTH","dateTimeString","dateTimeObject","Date","IV","Uint32Array","PRECISE","subkey","addParser","expression","customType","dataParser","segment","addTagMapper","mapFn","camelCase","camelCaseKeys","setHoldBack","manifest","serverControl","targetDuration","partTargetDuration","hb","phb","minTargetDuration","minPartDuration","lineStream","parseStream","uris","currentMap","currentUri","hasParts","defaultMediaGroups","AUDIO","VIDEO","SUBTITLES","widevineUuid","currentTimeline","allowCache","discontinuityStarts","segments","lastByterangeEnd","lastPartByterangeEnd","preloadHints","timeline","preloadSegment","entry","mediaGroup","rendition","endlist","endList","inf","mediaSequence","discontinuitySequence","METHOD","KEYFORMAT","contentProtection","KEYID","schemeIdUri","keyId","pssh","iv","isFinite","playlist","playlists","mediaGroups","TYPE","NAME","mediaGroupType","autoselect","AUTOSELECT","LANGUAGE","instreamId","CHARACTERISTICS","characteristics","FORCED","forced","discontinuity","targetduration","timeOffset","precise","cueOut","cueOutCont","cueIn","skip","warnOnMissingAttributes_","segmentIndex","partIndex","renditionReports","r","canBlockReload","canSkipDateranges","hint","isPart","otherHint","required","partInf","partTarget","comment","custom","identifier","missing","chunk","regexs","webm","ogg","muxerVideo","muxerAudio","muxerText","mediaTypes","upperMediaTypes","translateLegacyCodec","codec","orig","profile","avcLevel","parseCodecs","codecString","codecs","codecType","mediaType","codecsFromDefault","master","audioGroupId","audioGroup","audioType","CODECS","isAudioCodec","isTextCodec","getMimeForCodec","browserSupportsCodec","MediaSource","isTypeSupported","muxerSupportsCodec","DEFAULT_AUDIO_CODEC","DEFAULT_VIDEO_CODEC","MPEGURL_REGEX","DASH_REGEX","simpleTypeFromSourceType","countBits","countBytes","isArrayBufferView","ArrayBuffer","isView","isTypedArray","toUint8","bytes","byteOffset","byteLength","BigInt","BYTE_TABLE","Uint16Array","bytesToNumber","_temp","_ref","_ref$signed","signed","_ref$le","le","total","byte","exponent","numberToBytes","_temp2","_ref2$le","byteCount","byteIndex","stringToBytes","stringIsBytes","view","concatTypedArrays","_len","buffers","_key","totalLen","buf","tempBuffer","bytesMatch","_temp3","_ref3","_ref3$offset","_ref3$mask","mask","bByte","DEFAULT_LOCATION","resolveUrl$1","forEachMediaGroup$1","groupKey","labelKey","mediaProperties","decodeB64ToUint8Array","find$1","ac","oc","MIME_TYPE","HTML","isHTML","XML_APPLICATION","XML_TEXT","XML_XHTML_APPLICATION","XML_SVG_IMAGE","NAMESPACE$3","SVG","XML","XMLNS","conventions","NAMESPACE","NAMESPACE$2","notEmptyString","splitOnASCIIWhitespace","orderedSetReducer","toOrderedSet","arrayIncludes","copy","dest","Class","Super","pt","NodeType","ELEMENT_NODE","ATTRIBUTE_NODE","TEXT_NODE","CDATA_SECTION_NODE","ENTITY_REFERENCE_NODE","ENTITY_NODE","PROCESSING_INSTRUCTION_NODE","COMMENT_NODE","DOCUMENT_NODE","DOCUMENT_TYPE_NODE","DOCUMENT_FRAGMENT_NODE","NOTATION_NODE","ExceptionCode","ExceptionMessage","INDEX_SIZE_ERR","DOMSTRING_SIZE_ERR","HIERARCHY_REQUEST_ERR","WRONG_DOCUMENT_ERR","INVALID_CHARACTER_ERR","NO_DATA_ALLOWED_ERR","NO_MODIFICATION_ALLOWED_ERR","NOT_FOUND_ERR","NOT_SUPPORTED_ERR","INUSE_ATTRIBUTE_ERR","DOMException","captureStackTrace","NodeList","LiveNodeList","refresh","_node","_refresh","_updateLiveList","inc","_inc","ls","__set__","NamedNodeMap","_findNodeIndex","_addNamedNode","newAttr","oldAttr","ownerElement","_onRemoveAttribute","_onAddAttribute","_removeNamedNode","lastIndex","DOMImplementation$1","Node","_xmlEncoder","_visitNode","Document","namespaceURI","_nsMap","prefix","_onUpdateChild","cs","_removeChild","previous","previousSibling","lastChild","hasValidParentNodeType","hasInsertableNodeType","isElementNode","isDocTypeNode","isElementInsertionPossible","parentChildNodes","docTypeNode","isElementReplacementPossible","hasElementChildThatIsNotChild","assertPreInsertionValidity1to5","assertPreInsertionValidityInDocument","nodeChildNodes","nodeChildElements","parentElementChild","assertPreReplacementValidityInDocument","hasDoctypeChildThatIsNotChild","_insertBefore","_inDocumentAssertion","cp","newFirst","newLast","pre","_appendSingleChild","Attr","CharacterData","Text","Comment","CDATASection","DocumentType","Notation","Entity","EntityReference","DocumentFragment","ProcessingInstruction","XMLSerializer","nodeSerializeToString","isHtml","nodeFilter","lookupPrefix","visibleNamespaces","namespace","serializeToString","needNamespaceDefine","ns","addSerializedAttribute","qualifiedName","len","prefixedNodeName","defaultNS","ai","nsi","pubid","publicId","sysid","systemId","sub","internalSubset","importNode","deep","node2","attrs2","_ownerElement","setAttributeNode","INVALID_STATE_ERR","SYNTAX_ERR","INVALID_MODIFICATION_ERR","NAMESPACE_ERR","INVALID_ACCESS_ERR","getNamedItem","setNamedItem","setNamedItemNS","getNamedItemNS","removeNamedItem","removeNamedItemNS","hasFeature","feature","createDocument","doctype","root","createElementNS","createDocumentType","nodeValue","refChild","oldChild","normalize","appendData","hasAttributes","lookupNamespaceURI","isDefaultNamespace","importedNode","getElementById","rtv","getElementsByClassName","classNames","classNamesSet","base","nodeClassNames","nodeClassNamesSet","createComment","createCDATASection","createAttribute","specified","createEntityReference","pl","createAttributeNS","getAttributeNode","removeAttributeNode","setAttributeNodeNS","removeAttributeNS","getAttributeNodeNS","hasAttributeNS","getAttributeNS","setAttributeNS","getElementsByTagNameNS","substringData","insertData","replaceData","deleteData","splitText","newText","newNode","getTextContent","$$length","DOMImplementation","entities","XML_ENTITIES","amp","apos","gt","lt","quot","HTML_ENTITIES","Agrave","Aacute","Acirc","Atilde","Auml","Aring","AElig","Ccedil","Egrave","Eacute","Ecirc","Euml","Igrave","Iacute","Icirc","Iuml","ETH","Ntilde","Ograve","Oacute","Ocirc","Otilde","Ouml","Oslash","Ugrave","Uacute","Ucirc","Uuml","Yacute","THORN","szlig","agrave","aacute","acirc","atilde","auml","aring","aelig","ccedil","egrave","eacute","ecirc","euml","igrave","iacute","icirc","iuml","eth","ntilde","ograve","oacute","ocirc","otilde","ouml","oslash","ugrave","uacute","ucirc","uuml","yacute","thorn","yuml","nbsp","iexcl","cent","pound","curren","yen","brvbar","sect","uml","ordf","laquo","not","shy","reg","macr","deg","plusmn","sup2","sup3","acute","micro","para","middot","cedil","sup1","ordm","raquo","frac14","frac12","frac34","iquest","times","divide","forall","exist","nabla","isin","notin","ni","prod","sum","minus","lowast","radic","infin","ang","and","or","cap","cup","int","there4","sim","cong","asymp","ne","equiv","ge","sup","nsub","sube","supe","oplus","otimes","perp","sdot","Alpha","Beta","Gamma","Delta","Epsilon","Zeta","Eta","Theta","Iota","Kappa","Lambda","Mu","Nu","Xi","Omicron","Pi","Rho","Sigma","Tau","Upsilon","Phi","Chi","Psi","Omega","alpha","beta","gamma","delta","epsilon","zeta","eta","theta","iota","kappa","lambda","mu","nu","xi","omicron","pi","rho","sigmaf","sigma","tau","upsilon","phi","chi","psi","omega","thetasym","upsih","piv","OElig","oelig","Scaron","scaron","Yuml","fnof","circ","tilde","ensp","emsp","thinsp","zwnj","zwj","lrm","rlm","ndash","mdash","lsquo","rsquo","sbquo","ldquo","rdquo","bdquo","dagger","Dagger","bull","hellip","permil","prime","Prime","lsaquo","rsaquo","oline","euro","trade","larr","uarr","rarr","darr","harr","crarr","lceil","rceil","lfloor","rfloor","loz","spades","clubs","hearts","diams","entityMap","NAMESPACE$1","nameStartChar","nameChar","tagNamePattern","S_TAG","S_ATTR","S_ATTR_SPACE","S_EQ","S_ATTR_NOQUOT_VALUE","S_ATTR_END","S_TAG_SPACE","S_TAG_CLOSE","ParseError$1","locator","XMLReader$1","parse$1","defaultNSMapCopy","domBuilder","fixedFromCharCode","surrogate1","surrogate2","entityReplacer","appendText","xt","characters","lineEnd","linePattern","lineStart","lineNumber","columnNumber","parseStack","currentNSMap","closeMap","tagStart","currentElement","localNSMap","endMatch","endElement","endPrefixMapping","fatalError","parseInstruction","parseDCC","ElementAttributes","parseElementStartPart","closed","fixSelfClosed","warning","locator2","copyLocator","appendElement$1","parseHtmlSpecialContent","addAttribute","qname","startIndex","attributeNames","addValue","setTagName","qName","nsp","nsPrefix","_copy","startPrefixMapping","startElement","elStartEnd","elEndStart","startCDATA","endCDATA","matchs","lastMatch","startDTD","endDTD","processingInstruction","defaultNSMap","startDocument","endDocument","getLocalName","getLocator","getQName","getURI","sax","XMLReader","ParseError","normalizeLineEndings","DOMParser$1","buildErrorHandler","errorImpl","DOMHandler","isCallback","Function","build","msg","_locator","cdata","_toString","chars","java","appendElement","hander","parseFromString","mimeType","xmlns","setDocumentLocator","xml","documentURI","ignorableWhitespace","ch","charNode","skippedEntity","comm","impl","dt","DOMParser","__DOMHandler","merge$1","objects","range","flatten","lists","findIndexes","union","keyFunction","INVALID_NUMBER_OF_PERIOD","DASH_EMPTY_MANIFEST","DASH_INVALID_XML","NO_BASE_URL","MISSING_SEGMENT_INFORMATION","SEGMENT_TIME_UNSPECIFIED","UNSUPPORTED_UTC_TIMING_SCHEME","urlTypeToSegment","indexRange","resolvedUri","startRange","endRange","MAX_SAFE_INTEGER","byteRangeToString","parseEndNumber","endNumber","segmentRange","timescale","sourceDuration","periodDuration","segmentDuration","dynamic","NOW","clientOffset","availabilityStartTime","periodStart","minimumUpdatePeriod","timeShiftBufferDepth","periodStartWC","segmentCount","availableStart","availableEnd","toSegments","startNumber","parseByDuration","sectionDuration","segmentsFromBase","initialization","presentationTime","initSegment","sourceURL","segmentTimeInfo","addSidxSegmentsToPlaylist$1","sidx","sidxByteRange","sidxEnd","mediaReferences","references","referenceType","firstOffset","referencedSize","subsegmentDuration","endIndex","SUPPORTED_MEDIA_TYPES","TIME_FUDGE","getUniqueTimelineStarts","timelineStarts","findPlaylistWithName","getMediaGroupPlaylists","mediaGroupPlaylists","group","updateMediaSequenceForPlaylist","updateSequenceNumbers","oldPlaylists","newPlaylists","findIndex","oldPlaylist","firstNewSegment","oldMatchingSegmentIndex","oldSegment","positionManifestOnTimeline","oldManifest","newManifest","generateSidxKey","mergeDiscontiguousPlaylists","addSidxSegmentsToPlaylist","sidxMapping","sidxKey","sidxMatch","addSidxSegmentsToPlaylists","formatAudioPlaylist","isAudioOnly","formatVttPlaylist","m3u8Attributes","organizeAudioPlaylists","mainPlaylist","formattedPlaylists","roleLabel","formatted","organizeVttPlaylists","organizeCaptionServices","captionServices","svcObj","svc","service","channel","easyReader","formatVideoPlaylist","videoOnly","audioOnly","vttOnly","addMediaSequenceValues","flattenMediaGroupPlaylists","mediaGroupObject","labelContents","toM3u8","dashPlaylists","locations","previousManifest","suggestedPresentationDelay","videoPlaylists","audioPlaylists","vttPlaylists","organizedAudioGroup","organizedVttGroup","playlistTimelineStarts","subs","cc","getLiveRValue","parseByTimeline","segmentTimeline","sIndex","S","d","repeat","segmentTime","nextS","identifierPattern","identifierReplacement","format","constructTemplateUrl","parseTemplateInfo","segmentsFromTemplate","templateValues","RepresentationID","Bandwidth","mapSegment","presentationTimeOffset","SegmentURLToSegmentObject","segmentUrl","mediaRange","segmentsFromList","segmentUrls","segmentUrlMap","segmentUrlObject","generateSegments","segmentInfo","segmentAttributes","segmentsFn","template","segmentsInfo","toPlaylists","representations","findChildren","getContent","parseDivisionValue","parseDuration","SECONDS_IN_YEAR","SECONDS_IN_MONTH","SECONDS_IN_DAY","SECONDS_IN_HOUR","SECONDS_IN_MIN","year","month","day","hour","minute","second","parseDate","parsers","mediaPresentationDuration","parsedValue","parseAttributes","parseFn","keySystemsMap","buildBaseUrls","referenceUrls","baseUrlElements","baseUrlElement","getSegmentInformation","adaptationSet","segmentTemplate","segmentList","segmentBase","segmentTimelineParentNode","segmentInitializationParentNode","segmentInitialization","inheritBaseUrls","adaptationSetAttributes","adaptationSetBaseUrls","adaptationSetSegmentInfo","repBaseUrlElements","repBaseUrls","representationSegmentInfo","generateKeySystemInformation","contentProtectionNodes","keySystem","psshNode","parseCaptionServiceMetadata","flags","opt","toRepresentations","periodAttributes","periodBaseUrls","periodSegmentInfo","roleAttributes","accessibility","labelVal","toAdaptationSets","mpdAttributes","mpdBaseUrls","period","adaptationSets","getPeriodStart","priorPeriodAttributes","mpdType","inheritAttributes","manifestUri","periodNodes","periods","priorPeriod","representationInfo","stringToMpdXml","manifestString","parseUTCTimingScheme","UTCTimingNode","parsedManifestInfo","parseUTCTiming","MAX_UINT32","pow","getUint64","uint8","dv","DataView","getBigUint64","getUint32","parseSidx_1","subarray","referenceId","earliestPresentationTime","referenceCount","getUint16","startsWithSap","sapType","sapDeltaTime","ID3","getId3Size","returnSize","getId3Offset","normalizePath$1","normalizePaths$1","paths","findBox","complete","results","EBML_TAGS","EBML","DocType","Segment","SegmentInfo","Tracks","TrackNumber","DefaultDuration","TrackEntry","TrackType","FlagDefault","CodecID","CodecPrivate","Cluster","Timestamp","TimestampScale","BlockGroup","BlockDuration","Block","SimpleBlock","LENGTH_TABLE","getLength","getvint","removeLength","valueBytes","normalizePaths","getInfinityDataSize","innerid","dataHeader","findEbml","dataStart","dataEnd","NAL_TYPE_ONE","NAL_TYPE_TWO","EMULATION_PREVENTION","discardEmulationPreventionBytes","positions","newLength","newData","sourceIndex","findNal","dataType","nalLimit","nalStart","nalsFound","nalOffset","nalType","findH264Nal","findH265Nal","CONSTANTS","matroska","ac3","riff","avi","fmp4","moov","moof","_isLikely","docType","h264","h265","isLikelyTypes","isLikelyFn","secondsToVideoTs","secondsToAudioTs","videoTsToSeconds","audioTsToSeconds","audioTsToVideoTs","videoTsToAudioTs","metadataTsToSeconds","isLikely","detectContainerForBytes","isLikelyFmp4MediaSegment","ONE_SECOND_IN_TS","timestamp","sampleRate","timelineStartPts","keepOriginalTimestamps","clock_1","resolveUrl","resolveManifestRedirect","req","responseURL","logger","TIME_FUDGE_FACTOR","SAFE_TIME_DELTA","filterRanges","timeRanges","findRange","findNextRange","findGaps","bufferIntersection","bufferA","bufferB","arity","extents","printableRange","strArr","timeUntilRebuffer","timeRangesToArray","timeRangesList","isRangeDifferent","lastBufferedEnd","timeAheadOf","segmentDurationWithParts","getPartsAndSegments","si","getLastParts","lastSegment","getKnownPartCount","partCount","liveEdgeDelay","partHoldBack","holdBack","backwardDuration","endSequence","forwardDuration","intervalDuration","expired","backward","forward","totalDuration","sumDurations","defaultDuration","durationList","durations","playlistEnd","useSafeLiveEnd","liveEdgePadding","lastSegmentEndTime","isExcluded","excludeUntil","isIncompatible","isEnabled","excluded","estimateSegmentRequestTime","bytesReceived","isLowestEnabledRendition","currentBandwidth","MAX_VALUE","playlistMatch","someAudioVariant","groupName","variant","Playlist","getMediaInfoForTime","startingSegmentIndex","startingPartIndex","exactManifestTimings","partsAndSegments","partAndSegment","isDisabled","isAes","createPlaylistID","parseManifest","onwarn","oninfo","customTagParsers","customTagMappers","llhls","customParser","forEachMediaGroup","setupMediaPlaylist","playlistErrors_","setupMediaPlaylists","resolveMediaGroupUris","mainForMedia","addPropertiesToMain","phonyUri","audioOnlyMain","groupId","EventTarget$1","addLLHLSQueryDirectives","parameters","nextMSN","nextPart","_HLS_part","_HLS_msn","canSkipUntil","_HLS_skip","parsedUri","searchParams","updateSegment","skipped","updateSegments","oldSegments","newSegments","newIndex","newSegment","resolveSegmentUris","baseUri","getAllSegments","isPlaylistUnchanged","updateMain$1","newMedia","unchangedCheck","oldMedia","mergedPlaylist","skippedSegments","refreshDelay","lastPart","lastDuration","PlaylistLoader","vhs","logger_","vhs_","vhsOptions","handleMediaupdatetimeout_","playlistRequestError","haveMetadata","playlistString","startingState","parseManifest_","playlistObject","lastRequest","pendingMedia_","media_","updateMediaUpdateTimeout_","stopRequest","mediaUpdateTimeout","finalRenditionTimeout","oldRequest","shouldDelay","delay","mediaChange","mainPlaylistRef","started","setupInitialPlaylist","srcUri","videojsXHR","callbackWrapper","reqResponse","responseTime","roundTripTime","requestTime","responseHeaders","timedout","xhrFactory","XhrFunction","beforeRequest","Vhs","newOptions","originalAbort","byterangeStr","byterangeEnd","byterangeStart","segmentXhrHeaders","Range","textRange","formatHexString","formatAsciiString","createTransferableMessage","transferable","initSegmentId","segmentKeyId","hexDump","ascii","tagDump","textRanges","utils","SEGMENT_END_FUDGE_PERCENT","playerTimeToProgramTime","playerTime","transmuxerPrependedSeconds","videoTimingInfo","offsetFromSegmentStart","transmuxedPresentationStart","getTime","originalSegmentVideoDuration","transmuxedPresentationEnd","findSegmentForProgramTime","programTime","lastSegmentStart","lastSegmentDuration","estimatedStart","findSegmentForPlayerTime","segmentEnd","getOffsetFromTimestamp","comparisonTimeStamp","segmentDateTime","programDateTime","segmentTimeEpoch","verifyProgramDateTimeTags","getProgramTime","matchedSegment","seekTime","programTimeObject","mediaSeconds","toISOString","seekToProgramTime","retryCount","seekTo","pauseAfterSeek","mediaOffset","seekToTime","seekedCallback","callbackOnCompleted","containerRequest","id3Offset","finished","endRequestAndCallback","_bytes","progressListener","newPart","overrideMimeType","loaded","dashPlaylistUnchanged","aSegment","bSegment","aByterange","bByterange","parseMainXml","mainXml","srcUrl","updateMain","oldMain","newMain","noChanges","playlistUpdate","equivalentSidx","compareSidxEntry","oldSidxMapping","newSidxMapping","currentSidxInfo","savedSidxInfo","sidxInfo","filterChangedSidxMappings","mediaGroupSidx","DashPlaylistLoader","srcUrlOrPlaylist","mainPlaylistLoader","mainPlaylistLoader_","isMain_","refreshXml_","refreshMedia_","loadedPlaylists_","sidxMapping_","childPlaylist_","requestErrored_","addSidxSegments_","mediaRequest_","fin","internal","playlistExclusionDuration","minimumUpdatePeriodTimeout_","createMupOnMedia_","hasPendingRequest","sidxChanged","isFinalRendition","updateMinimumUpdatePeriodTimeout_","requestMain_","mainChanged","haveMain_","mainXml_","date","mainLoaded_","handleMain_","syncClientServerClock_","done","utcTiming","clientOffset_","serverTime","mpl","mup","createMUPTimeout_","mediaID","mediaChanged","createMediaUpdateTimeout","Config","GOAL_BUFFER_LENGTH","MAX_GOAL_BUFFER_LENGTH","BACK_BUFFER_LENGTH","GOAL_BUFFER_LENGTH_RATE","INITIAL_BANDWIDTH","BANDWIDTH_VARIANCE","BUFFER_LOW_WATER_LINE","MAX_BUFFER_LOW_WATER_LINE","EXPERIMENTAL_MAX_BUFFER_LOW_WATER_LINE","BUFFER_LOW_WATER_LINE_RATE","BUFFER_HIGH_WATER_LINE","stringToArrayBuffer","browserWorkerPolyFill","workerObj","createObjectURL","Blob","blob","BlobBuilder","getBlob","objectUrl","worker","Worker","objURL","terminate","revokeObjectURL","getWorkerString","workerCode$1","Stream$8","init","flushSource","partialFlush","endTimeline","dinf","esds","ftyp","mfhd","minf","mvex","mvhd","trak","tkhd","mdia","mdhd","hdlr","sdtp","stbl","stsd","traf","trex","trun$1","MAJOR_BRAND","MINOR_VERSION","AVC1_BRAND","VIDEO_HDLR","AUDIO_HDLR","HDLR_TYPES","VMHD","SMHD","DREF","STCO","STSC","STSZ","STTS","videoSample","audioSample","audioTrun","videoTrun","trunHeader","MAX_UINT32$1","numbers","avc1","avcC","btrt","dref","mdat","mp4a","pasp","smhd","stco","stsc","stsz","stts","styp","tfdt","tfhd","trun","vmhd","payload","setUint32","audioobjecttype","samplingfrequencyindex","channelcount","samplerate","sequenceNumber","trackFragments","samples","dependsOn","isDependedOn","hasRedundancy","avc1Box","sps","pps","sequenceParameterSets","pictureParameterSets","profileIdc","profileCompatibility","levelIdc","sarRatio","hSpacing","vSpacing","samplesize","trackFragmentHeader","trackFragmentDecodeTime","trackFragmentRun","sampleDependencyTable","dataOffset","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","baseMediaDecodeTime","durationPresent","sizePresent","flagsPresent","compositionTimeOffset","bytesOffest","header","sample","isLeading","paddingValue","isNonSyncSample","degradationPriority","silence","mp4Generator","fileType","movie","createDefaultSample","sampleForFrame","frame","pts","dts","keyFrame","frameUtils$1","groupNalsIntoFrames","nalUnits","currentNal","currentFrame","frames","nalCount","nalUnitType","groupFramesIntoGops","currentGop","gops","extendFirstKeyFrame","generateSampleTable","baseDataOffset","concatenateNalData","nalsByteLength","numberOfNals","generateSampleTableForFrame","concatenateNalDataForFrame","highPrefix","lowPrefix","zeroFill","makeTable","metaTable","arr","silence_1","coneOfSilence","ONE_SECOND_IN_TS$4","clock$2","clock$1","sumFrameByteLengths","audioFrameUtils$1","prefixWithSilence","audioAppendStartTs","videoBaseMediaDecodeTime","baseMediaDecodeTimeTs","silentFrame","firstFrame","frameDuration","audioGapDuration","audioFillFrameCount","audioFillDuration","trimAdtsFramesByEarliestDts","adtsFrames","earliestAllowedDts","minSegmentDts","minSegmentPts","concatenateFrameData","ONE_SECOND_IN_TS$3","trackDecodeInfo$1","clearDtsInfo","maxSegmentDts","maxSegmentPts","calculateTrackBaseMediaDecodeTime","timelineStartInfo","collectDtsInfo","USER_DATA_REGISTERED_ITU_T_T35","RBSP_TRAILING_BITS","captionPacketParser","parseSei","payloadType","payloadSize","parseUserData","sei","parseCaptionPackets","userData","ccData","emulationPreventionBytesPositions","Stream$7","cea708Parser","CaptionStream$2","parse708captions_","parse708captions","captionPackets_","ccStreams_","Cea608Stream","cc708Stream_","Cea708Stream","newCaptionPackets","escapedRBSP","latestDts_","ignoreNextEqualDts_","numSameDts_","flushCCStreams","flushType","flushStream","idx","presortIndex","packet","dispatchCea608Packet","dispatchCea708Packet","activeCea608Channel_","ccStream","setsTextOrXDSActive","setsChannel1Active","setsChannel2Active","CHARACTER_TRANSLATION_708","get708CharFromCode","newCode","within708TextBlock","Cea708Window","windowNum","clearText","pendingNewLine","winAttr","penAttr","penLoc","penColor","visible","rowLock","columnLock","relativePositioning","anchorVertical","anchorHorizontal","anchorPoint","rowCount","virtualRowCount","columnCount","windowStyle","penStyle","getText","rows","rowIdx","beforeRowOverflow","addText","Cea708Service","serviceNum","encoding","currentWindow","createTextDecoder","startPts","win","setCurrentWindow","textDecoder_","serviceProps","captionServiceEncodings","serviceName","serviceEncodings","current708Packet","services","new708Packet","add708Bytes","push708Packet","ptsVals","byte0","byte1","packet708","packetData","blockSize","seq","sizeCode","pushServiceBlock","initService","handleText","multiByteCharacter","extendedCommands","defineWindow","clearWindows","deleteWindows","displayWindows","hideWindows","toggleWindows","setWindowAttributes","setPenAttributes","setPenColor","setPenLocation","isExtended","getPts","flushDisplayed","char","charCodeArray","isMultiByte","extended","currentByte","nextByte","firstByte","secondByte","fillOpacity","fillRed","fillGreen","fillBlue","borderType","borderRed","borderGreen","borderBlue","wordWrap","printDirection","scrollDirection","justify","effectSpeed","effectDirection","displayEffect","displayedText","winId","endPts","pushCaption","textTag","penSize","italics","underline","edgeType","fontStyle","fgOpacity","fgRed","fgGreen","fgBlue","bgOpacity","bgRed","bgGreen","bgBlue","edgeRed","edgeGreen","edgeBlue","column","CHARACTER_TRANSLATION","getCharFromCode","BOTTOM_ROW","ROWS","createDisplayBuffer","field","dataChannel","field_","dataChannel_","setConstants","swap","char0","char1","lastControlCode_","PADDING_","RESUME_CAPTION_LOADING_","mode_","END_OF_CAPTION_","clearFormatting","displayed_","nonDisplayed_","startPts_","ROLL_UP_2_ROWS_","rollUpRows_","setRollUp","ROLL_UP_3_ROWS_","ROLL_UP_4_ROWS_","CARRIAGE_RETURN_","shiftRowsUp_","BACKSPACE_","row_","ERASE_DISPLAYED_MEMORY_","ERASE_NON_DISPLAYED_MEMORY_","RESUME_DIRECT_CAPTIONING_","isSpecialCharacter","column_","isExtCharacter","isMidRowCode","addFormatting","isOffsetControlCode","isPAC","formatting_","isColorPAC","isNormalChar","topRow_","BASE_","EXT_","CONTROL_","OFFSET_","newBaseRow","popOn","baseRow","rollUp","paintOn","captionStream","CaptionStream","streamTypes","H264_STREAM_TYPE","ADTS_STREAM_TYPE","METADATA_STREAM_TYPE","Stream$6","MAX_TS","RO_THRESH","TYPE_SHARED","handleRollover$1","TimestampRolloverStream$1","lastDTS","referenceDTS","type_","MetadataStream","timestampRolloverStream","TimestampRolloverStream","handleRollover","typedArrayIndexOf$1","typedArray","fromIndex","currentIndex","StreamTypes$3","typedArrayIndexOf","textEncodingDescriptionByte","Iso88591","Utf16","Utf16be","Utf8","percentEncode$1","parseUtf8","parseIso88591$1","parseSyncSafeInteger$1","frameParsers","APIC","mimeTypeEndIndex","descriptionEndIndex","LINK_MIME_TYPE","pictureType","pictureData","TXXX","WXXX","PRIV","owner","privateData","tagSize","bufferSize","dispatchType","frameStart","frameSize","dataAlignmentIndicator","timeStamp","TransportPacketStream","TransportParseStream","ElementaryStream","metadataStream","Stream$4","CaptionStream$1","StreamTypes$2","MP2T_PACKET_LENGTH$1","SYNC_BYTE$1","bytesInBuffer","everything","parsePsi","parsePat","parsePmt","packetsWaitingForPmt","programMapTable","payloadUnitStartIndicator","pat","section_number","last_section_number","pmtPid","pmt","tableEnd","streamType","pid","processPes_","STREAM_TYPES","adts","segmentHadPmt","timedMetadata","parsePes","pes","ptsDtsFlags","startPrefix","packetLength","forceFlush","packetFlushable","trackId","flushStreams_","m2ts$1","PAT_PID","MP2T_PACKET_LENGTH","AdtsStream$1","m2ts_1","Stream$3","ONE_SECOND_IN_TS$2","ADTS_SAMPLING_FREQUENCIES$1","handlePartialSegments","frameNum","skipWarn_","frameLength","protectionSkipBytes","oldBuffer","sampleCount","adtsFrameDuration","ExpGolomb$1","workingData","workingBytesAvailable","workingWord","workingBitsAvailable","bitsAvailable","loadWord","workingBytes","availableBytes","skipBits","skipBytes","readBits","bits","valu","skipLeadingZeros","leadingZeroCount","skipUnsignedExpGolomb","skipExpGolomb","readUnsignedExpGolomb","clz","readExpGolomb","readBoolean","readUnsignedByte","H264Stream$1","NalByteStream","PROFILES_WITH_OPTIONAL_SPS_DATA","Stream$2","ExpGolomb","syncPoint","swapBuffer","currentPts","currentDts","readSequenceParameterSet","skipScalingList","nalByteStream","nalUnitTypeCode","expGolombDecoder","lastScale","nextScale","chromaFormatIdc","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","scalingListCount","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","AacStream$1","H264Stream","ADTS_SAMPLING_FREQUENCIES","parseId3TagSize","parseSyncSafeInteger","percentEncode","parseIso88591","isLikelyAacData","parseAdtsSize","lowThree","parseType","parseSampleRate","parseAacTimestamp","aacUtils","setTimestamp","bytesLeft","tempLength","VideoSegmentStream","AudioSegmentStream","Transmuxer","CoalesceStream","audioProperties","videoProperties","frameUtils","audioFrameUtils","trackDecodeInfo","m2ts","clock","AdtsStream","AacStream","ONE_SECOND_IN_TS$1","AUDIO_PROPERTIES","VIDEO_PROPERTIES","retriggerForStream","addPipelineLogRetriggers","transmuxer","pipeline","arrayEquals","generateSegmentTimingInfo","startDts","endDts","prependedContentDuration","firstSequenceNumber","setEarliestDts","earliestDts","setVideoBaseMediaDecodeTime","setAudioAppendStart","videoClockCyclesOfSilencePrefixed","gopsToAlignWith","minPTS","gopCache_","nalUnit","gopForFusion","firstGop","lastGop","resetStream_","getGopForFusion_","alignedGops","alignGopsAtEnd","alignGopsAtEnd_","alignGopsAtStart_","gop","dtsDistance","nearestGopObj","currentGopObj","halfSecond","allowableOverlap","nearestDistance","alignIndex","gopIndex","alignEndIndex","matchFound","trimIndex","alignGopsWith","newGopsToAlignWith","numberOfTracks","remux","remuxTracks","pendingTracks","videoTrack","pendingBoxes","pendingCaptions","pendingMetadata","pendingBytes","emittedTracks","output","audioTrack","caption","id3","captionStreams","cueTime","setRemux","hasFlushed","transmuxPipeline_","setupAacPipeline","aacStream","audioTimestampRolloverStream","timedMetadataTimestampRolloverStream","adtsStream","coalesceStream","headOfPipeline","audioSegmentStream","getLogTrigger_","hasAudio","hasVideo","setupTsPipeline","packetStream","elementaryStream","h264Stream","videoSegmentStream","id3Frame","setBaseMediaDecodeTime","isAac","resetCaptions","compositionStartTime","getVideoTrackIds","getTracks","getTimescaleFromMediaHeader","bin","toUnsigned","toHexString","parseType_1","toUnsigned$2","parseType$2","findBox$2","subresults","findBox_1","toUnsigned$1","getUint64$1","parseTfdt$2","parseSampleFlags","parseTrun$2","dataOffsetPresent","firstSampleFlagsPresent","sampleDurationPresent","sampleSizePresent","sampleFlagsPresent","sampleCompositionTimeOffsetPresent","getInt32","parseTfhd$2","baseDataOffsetPresent","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","durationIsEmpty","defaultBaseIsMoof","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","baseDataOffsetIsMoof","findBox$1","parseTfdt$1","parseTrun$1","parseTfhd$1","window$2","mapToSample","approximateOffset","findSeiNals","avcStream","seiNal","lastMatchedSample","avcView","logs","seiNals","matchingSample","parseSamples","truns","allSamples","parseCaptionNals","videoTrackId","trafs","mdats","captionNals","mdatTrafPairs","matchingTraf","pair","headerInfo","parseEmbeddedCaptions","trackNals","CaptionParser","segmentCache","parsedCaptions","parsingPartial","isInitialized","isPartial","isNewInit","videoTrackIds","timescales","parsedData","cachedSegment","pushNals","nals","nal","clearParsedCaptions","resetCaptionStream","clearAllCaptions","captionParser","parseType$1","parseTfhd","parseTrun","parseTfdt","window$1","lowestTime","baseTime","scale","trafBoxes","parsedTrun","traks","hdlrs","tkhds","handlerType","getUint8","tkhdVersion","sampleDescriptions","codecConfig","codecBox","probe$2","StreamTypes$1","parsePid","parsePayloadUnitStartIndicator","parseAdaptionField","parsePesTime","parseNalUnitType","probe$1","pusi","payloadOffset","parsePesType","videoPacketContainsKeyFrame","frameBuffer","frameI","frameSyncPoint","foundKeyFrame","StreamTypes","probe","SYNC_BYTE","parsePsi_","table","parseAudioPes_","pesType","parsed","endLoop","parseVideoPes_","firstKeyFrame","adjustTimestamp_","baseTimestamp","audioBaseTimestamp","dtsTime","ptsTime","videoBaseTimestamp","inspectAac_","audioCount","audioTimescale","inspectTs_","tsInspector","inspect","wireTransmuxerEvents","initArray","postMessage","action","gopInfo","timingInfo","videoSegmentTimingInfo","presentation","audioSegmentTimingInfo","trackInfo","audioTimingInfo","MessageHandlers","pushMp4Captions","trackIds","probeMp4StartTime","probeMp4Tracks","probeTs","baseStartTime","tsStartTime","timeInfo","videoStart","audioStart","clearAllMp4Captions","clearParsedMp4Captions","setTimestampOffset","timestampOffset","appendStart","onmessage","messageHandlers","TransmuxWorker","handleData_","transmuxedData","videoFrameDtsTime","videoFramePtsTime","handleDone_","handleGopInfo_","processTransmux","audioAppendStart","onData","onTrackInfo","onAudioTimingInfo","onVideoTimingInfo","onVideoSegmentTimingInfo","onAudioSegmentTimingInfo","onId3","onCaptions","onDone","onEndedTimeline","onTransmuxerLog","isEndOfTimeline","waitForEndedTimelineEvent","handleMessage","currentTransmux","dequeue","transmuxQueue","processAction","enqueueAction","transmux","segmentTransmuxer","createTransmuxer","term","workerCallback","endAction","listenForEndEvent","isArrayBuffer","transfers","REQUEST_ERRORS","FAILURE","TIMEOUT","ABORTED","abortAll","activeXhrs","getRequestStats","getProgressStats","progressEvent","stats","handleErrors","handleKeyResponse","finishProcessingFn","errorObj","parseInitSegment","handleInitSegmentResponse","encryptedBytes","parseError","handleSegmentResponse","newBytes","lastReachedChar","transmuxAndNotify","trackInfoFn","timingInfoFn","videoSegmentTimingInfoFn","audioSegmentTimingInfoFn","id3Fn","captionsFn","endedTimelineFn","dataFn","doneFn","fmp4Tracks","isMuxed","audioStartFn","audioEndFn","videoStartFn","videoEndFn","finish","id3Frames","probeResult","handleSegmentBytes","bytesAsUint8Array","isFmp4","audioCodec","videoCodec","finishLoading","decrypt","decryptionWorker","decryptionHandler","decrypted","keyBytes","encrypted","decryptSegment","requestId","decryptedBytes","waitForCompletion","didError","segmentFinish","endOfAllRequests","handleLoadEnd","loadendState","abortFn","calledAbortFn","handleProgress","progressFn","firstBytesReceivedAt","mediaSegmentRequest","xhrOptions","keyXhr","mapKeyXhr","initSegmentXhr","segmentRequestOptions","segmentXhr","activeXhr","logFn$1","getCodecs","mediaAttributes","isMaat","unwrapCodecList","codecList","codecCount","codecObj","codecsForPlaylist","codecInfo","defaultCodecs","logFn","representationToString","safeGetComputedStyle","property","stableSort","sortFn","newArray","cmp","comparePlaylistBandwidth","leftBandwidth","rightBandwidth","comparePlaylistResolution","leftWidth","rightWidth","simpleSelector","playerBandwidth","playerWidth","limitRenditionByPlayerDimensions","playlistController","getAudioTrackPlaylists_","sortedPlaylistReps","rep","enabledPlaylistReps","bandwidthPlaylistReps","highestRemainingBandwidthRep","bandwidthBestRep","chosenRep","haveResolution","resolutionBestRepList","resolutionBestRep","resolutionPlusOneList","resolutionPlusOneSmallest","resolutionPlusOneRep","leastPixelDiffRep","leastPixelDiffSelector","leastPixelDiffList","pixelDiff","lastBandwidthSelector","pixelRatio","useDevicePixelRatio","devicePixelRatio","systemBandwidth","playlistController_","movingAverageBandwidthSelector","decay","average","lastSystemBandwidth","minRebufferMaxBandwidthSelector","syncController","compatiblePlaylists","enabledPlaylists","rebufferingEstimates","numRequests","getSyncPoint","rebufferingImpact","noRebufferingPlaylists","estimate","lowestBitrateCompatibleVariantSelector","concatSegments","segmentObj","createCaptionsTrackIfNotExists","inbandTextTracks","def","captionService","addCaptionData","captionArray","Cue","WebKitDataCue","deprecateOldCue","addMetadata","metadataArray","videoDuration","metadataTrack","metadataTrack_","cuesArray","cuesGroupedByStartTime","timeSlot","sortedStartTimes","cueGroup","nextTime","createMetadataTrackIfNotExists","inBandMetadataTrackDispatchType","removeCuesFromTrack","removeDuplicateCuesFromTrack","duplicates","occurrences","dupe","gopsSafeToAlignWith","mapping","currentTimePts","updateGopBuffer","removeGopBuffer","updatedBuffer","shallowEqual","akeys","bkeys","QUOTA_EXCEEDED_ERR","getSyncSegmentCandidate","targetTime","timelineSegments","MIN_BACK_BUFFER","CHECK_BUFFER_DELAY","finite","MIN_SEGMENT_DURATION_TO_SAVE_STATS","illegalMediaSwitch","loaderType","startingMedia","safeBackBufferTrimTime","trimTime","maxTrimTime","segmentInfoString","startOfSegment","mediaIndex","segmentLen","selection","isSyncRequest","independent","hasPartIndex","zeroBasedPartCount","timingInfoPropertyForMedia","timestampOffsetForSegment","overrideCheck","shouldWaitForTimelineChange","timelineChangeController","audioDisabled","lastMainTimelineChange","lastTimelineChange","pendingAudioTimelineChange","pendingTimelineChange","mediaDuration","timingInfos","maxDuration","typeTimingInfo","segmentTooLong","getTroublesomeSegmentDurationMessage","sourceType","isSegmentWayTooLong","isSegmentSlightlyTooLong","segmentTooLongMessage","severity","SegmentLoader","mediaSource","throughput","roundTrip","resetStats_","hasPlayed_","hasPlayed","seekable_","seeking_","mediaSource_","loaderType_","currentMediaInfo_","startingMediaInfo_","segmentMetadataTrack_","segmentMetadataTrack","goalBufferLength_","goalBufferLength","sourceType_","sourceUpdater_","sourceUpdater","inbandTextTracks_","state_","timelineChangeController_","shouldSaveSegmentTimingInfo_","useDtsForTimestampOffset_","useDtsForTimestampOffset","captionServices_","checkBufferTimeout_","currentTimeline_","pendingSegment_","xhrOptions_","pendingSegments_","audioDisabled_","isPendingTimestampOffset_","gopBuffer_","timeMapping_","safeAppend_","appendInitSegment_","playlistOfLastInitSegment_","callQueue_","loadQueue_","metadataQueue_","waitingOnRemove_","quotaExceededErrorRetryTimeout_","activeInitSegmentId_","initSegments_","cacheEncryptionKeys_","cacheEncryptionKeys","keyCache_","decrypter_","decrypter","syncController_","syncPoint_","transmuxer_","createTransmuxer_","triggerSyncInfoUpdate_","isEndOfStream_","ended_","fetchAtBuffer_","newState","hasEnoughInfoToAppend_","processCallQueue_","hasEnoughInfoToLoad_","processLoadQueue_","mediaBytesTransferred","mediaRequests","mediaRequestsAborted","mediaRequestsTimedout","mediaRequestsErrored","mediaTransferDuration","mediaSecondsLoaded","mediaAppends","abort_","setAudio","removeAudio","monitorBuffer_","abortRequests","clearPendingTimelineChange","checkForAbort_","endOfStream","buffered_","getMediaInfo_","videoBuffered","audioBuffered","initSegmentForMap","storedMap","segmentKey","storedKey","couldBeginLoading_","playlist_","init_","resetEverything","newPlaylist","syncInfo","setDateTimeMappingForStart","oldId","resyncLoader","resetLoader","mediaSequenceDiff","saveExpiredSegmentInfo","force","removesRemaining","removeFinished","removeVideo","monitorBufferTick_","fillBuffer_","updating","chooseNextRequest_","loadSegment_","appendedLastSegment","appendedLastPart","bufferedTime","preloaded","haveEnoughBuffer","nextSegment","lastSegmentLastPart","generateSegmentInfo_","forceTimestampOffset","random","timestampOffsetForSegment_","audioBufferedEnd","audioTimestampOffset","videoTimestampOffset","earlyAbortWhenNeeded_","measuredBandwidth","requestTimeRemaining","timeUntilRebuffer$1","switchCandidate","timeSavedBySwitching","minimumTimeSaving","handleAbort_","handleProgress_","simpleSegment","handleTrackInfo_","checkForIllegalMediaSwitch","handleTimingInfo_","timeType","timingInfoProperty","handleCaptions_","captionData","hasAppendedData_","captionTracks","captionTrack","trackName","handleId3_","processMetadataQueue_","callQueue","fun","loadQueue","getCurrentMediaInfo_","setTimeMapping_","updateMediaSecondsLoaded_","useVideoTimingInfo","firstVideoFrameTimeForData","trueSegmentStart_","currentStart","currentVideoTimestampOffset","updateAppendInitSegmentStatus","updateSourceBufferTimestampOffset_","updateTimingInfoEnd_","saveSegmentTimingInfo","shouldSaveTimelineMapping","appendData_","changedTimestampOffset","getInitSegmentAndUpdateState_","handleQuotaExceededError_","audioBufferStart","audioBufferEnd","videoBufferStart","videoBufferEnd","appendToSourceBuffer_","timeToRemoveUntil","handleAppendError_","appendBuffer","handleSegmentTimingInfo_","segmentTimingInfo","transmuxedDecodeStart","transmuxedDecodeEnd","trimBackBuffer_","updateTransmuxerAndRequestSegment_","shouldUpdateTransmuxerTimestampOffset_","createSimplifiedSegmentObj_","isEndOfStream","isWalkingForward","isDiscontinuity","segmentRequestFinished_","removeToTime","previousSegment","saveTransferStats_","saveBandwidthRelatedStats_","handleTimeout_","waitForAppendsToComplete_","timelineMapping","mappingForTimeline","waitForVideo","waitForAudio","waitingOnAppends","checkAppendsDone_","videoQueueCallback","audioQueueCallback","handleAppendsDone_","illegalMediaSwitchError","didChange","getSegmentStartTimeForTimestampOffsetCalculation_","prioritizedTimingInfo","segmentDurationMessage","recordThroughput_","addSegmentMetadataCue_","badSegmentGuess","badPartGuess","segmentProcessingTime","segmentProcessingThroughput","bufferTypes","sourceBuffer","queuePending","nextQueueIndexOfType","queueEntry","shiftQueue","queueIndex","cleanupBuffer","titleType","inSourceBuffers","sourceBuffers","actions","onError","addSourceBuffer","mime","removeSourceBuffer","changeType","pushQueue","onUpdateend","SourceUpdater","sourceopenListener_","audioTimestampOffset_","videoTimestampOffset_","delayedAudioAppendQueue_","videoAppendQueued_","onVideoUpdateEnd_","onAudioUpdateEnd_","onVideoError_","videoError_","onAudioError_","audioError_","createdSourceBuffers_","initializedEme_","triggeredReady_","initializedEme","hasCreatedSourceBuffers","hasInitializedAnyEme","createSourceBuffers","addOrChangeSourceBuffers","canRemoveSourceBuffer","SourceBuffer","canChangeType","processedAppend_","videoBuffer","que","audioBuffer","setDuration","uint8ToUtf8","uintArray","VTT_LINE_TERMINATORS","VTTSegmentLoader","subtitlesTrack_","featuresNativeTextTracks_","combinedByteLength","combinedSegment","timestampOffsetForTimeline","checkTimestampOffset","skipEmptySegments_","stopForError","loadHandler","requested","parseVTTCues_","updateTimeMapping_","timelines","decodeBytesToString","timestampmap","mapData","segmentData","mappingObj","diff","firstStart","lastStart","findAdCue","mediaTime","adStartTime","adEndTime","updateAdCues","adOffset","adTotal","MAX_MEDIA_SEQUENCE_DIFF_FOR_SYNC","syncPointStrategies","run","timelineToDatetimeMappings","lastDistance","datetimeMapping","z","discontinuitySync","discontinuities","SyncController","syncPoints","runStrategies_","selectSyncPoint_","getExpiredTime","strategy","bestSyncPoint","bestDistance","bestStrategy","newDistance","lastRemovedSegment","firstSegment","playlistTimestamp","didCalculateSegmentTimeMapping","calculateSegmentTimeMapping_","saveDiscontinuitySyncInfo_","dateTime","accuracy","mediaIndexDiff","TimelineChangeController","pendingTimelineChanges_","lastTimelineChanges_","workerCode","unpad","padded","precompute","tables","encTable","decTable","sbox","sboxInv","xInv","th","x2","x4","x8","tEnc","tDec","aesTables","AES","tmp","_tables","keyLen","rcon","encKey","decKey","encrypted0","encrypted1","encrypted2","encrypted3","out","a2","c2","nInnerRounds","kIndex","table0","table1","table2","table3","AsyncStream","jobs","timeout_","processJob_","job","ntoh","word","initVector","encrypted32","Int32Array","decipher","decrypted32","init0","init1","init2","init3","wordIx","Decrypter","STEP","asyncStream_","decryptChunk_","audioTrackKind_","stopLoaders","segmentLoader","activePlaylistLoader","startLoaders","playlistLoader","onGroupChanged","segmentLoaders","mainSegmentLoader","activeTrack","activeGroup","getActiveGroup","previousActiveLoader","lastGroup","lastGroup_","lastTrack_","isMainPlaylist","onGroupChanging","onTrackChanged","lastTrack","pc","selectPlaylist","fastQualityChange_","excludePlaylist","defaultTrack","setupListeners","requestOptions","initialize","variantLabel","newProps","groupMatch","variants","groupKeys","groupPropertyList","activeTrack_","setupMediaGroups","audioSegmentLoader","onAudioTrackChanged","createMediaTypes","ABORT_EARLY_EXCLUSION_SECONDS","Vhs$1","loaderStats","sumLoaderStat","stat","audioSegmentLoader_","mainSegmentLoader_","shouldSwitchToMedia","currentPlaylist","nextPlaylist","bufferLowWaterLine","bufferHighWaterLine","bufferBasedABR","sharedLogLine","isBuffered","forwardBuffer","maxBufferLowWaterLine","nextBandwidth","currBandwidth","logLine","PlaylistController","externVhs","useCueTags","enableLowInitialPlaylist","maxPlaylistRetries","useCueTags_","cueTagsTrack_","requestOptions_","pauseLoading","mediaTypes_","handleDurationChange_","handleSourceOpen_","handleSourceEnded_","segmentLoaderSettings","setupMainPlaylistLoaderListeners_","subtitleSegmentLoader_","setupSegmentLoaderListeners_","startABRTimer_","stopABRTimer_","triggeredFmp4Usage","loadOnPlay_","timeToLoadedData__","mainAppendsToLoadedData__","audioAppendsToLoadedData__","timeToLoadedDataStart","mainAppendsToLoadedData_","audioAppendsToLoadedData_","appendsToLoadedData_","timeToLoadedData_","checkABR_","shouldSwitchToMedia_","switchMedia_","newId","abrTimer_","defaultPlaylists","defaultGroup","requestTimeout","triggerPresenceUsage_","setupFirstPlay","updatedPlaylist","selectedMedia","excludeUnsupportedVariants_","selectInitialPlaylist","initialMedia_","handleUpdatedMediaPlaylist","playlistToExclude","lastExcludeReason_","stuckAtPlaylistEnd_","updateAdCues_","updateDuration","defaultDemuxed","audioGroupKeys","onSyncInfoUpdate_","onEndOfStream","delegateLoaders_","updateCodecs","tryToCreateSourceBuffers_","getCodecsOrExclude_","mediaSecondsLoaded_","mainMediaInfo","absolutePlaylistEnd","reincluded","errorMessage","delayDuration","fnNames","loaders","dontFilterPlaylist","loader","audioSeekable","mainSeekable","oldEnd","oldStart","updateDuration_","areMediaTypesKnown_","usingAudioLoader","hasMainMediaInfo","hasAudioMediaInfo","playlistCodecs","supportFunction","unsupportedCodecs","unsupportedAudio","supporter","switchMessages","newCodec","oldCodec","excludeIncompatibleVariants_","ids","unsupported","codecCount_","videoDetails","audioDetails","exclusionReasons","variantCodecs","variantCodecCount","variantVideoDetails","variantAudioDetails","newMax","enableFunction","playlistID","changePlaylistFn","incompatible","currentlyEnabled","Representation","vhsHandler","qualityChangeFunction","renditionSelectionMixin","timerCancelEvents","PlaybackWatcher","allowSeeksWithinUnsafeLiveWindow","liveRangeSafeTimeDelta","consecutiveUpdates","lastRecordedTime","checkCurrentTimeTimeout_","playHandler","monitorCurrentTime_","canPlayHandler","waitingHandler","techWaiting_","cancelTimerHandler","resetTimeUpdate_","loaderTypes","loaderChecks","resetSegmentDownloads_","updateend","checkSegmentDownloads_","setSeekingHandlers","seekingAppendCheck_","fixesBadSeeks_","clearSeekingAppendCheck_","watchForBadSeeking_","checkCurrentTime_","isBufferedDifferent","playlistId","waiting_","afterSeekableWindow_","beforeSeekableWindow_","minAppendedDuration","bufferedToCheck","nextRange","livePoint","videoUnderflow_","skipTheGap_","allowedEnd","gap","lastVideoRange","videoRange","audioRange","gapFromVideoUnderflow_","scheduledCurrentTime","gaps","defaultOptions","errorInterval","getSource","IWillNotUseThisInPlugins","lastCalled","localOptions","loadedMetadataHandler","cleanupEvents","reinitPlugin","reloadSourceOnError","version$4","version$3","version$2","version$1","STANDARD_PLAYLIST_SELECTOR","INITIAL_PLAYLIST_SELECTOR","LOCAL_STORAGE_KEY","handleVhsMediaChange","handleVhsLoadedMetadata","emeKeySystems","keySystemOptions","audioPlaylist","videoContentType","audioContentType","keySystemContentTypes","getAllPsshKeySystemsOptions","keySystems","keySystemsArr","keySystemsOptions","keySystemsObj","waitForKeySessionCreation","sourceKeySystems","audioMedia","mainPlaylists","eme","initializeMediaKeys","keySystemsOptionsArr","initializationFinishedPromises","keySessionCreatedPromises","race","setupEmeOptions","sourceOptions","getVhsLocalStorage","storedObject","updateVhsLocalStorage","objectToStore","expandDataUri","dataUri","supportsNativeHls","canItPlay","supportsNativeDash","supportsTypeNatively","Component","VhsHandler","initialBandwidth","_player","source_","ignoreNextSeekingEvent_","setOptions_","overrideNative","featuresNativeVideoTracks","webkitFullscreenElement","mozFullScreenElement","msFullscreenElement","useBandwidthFromLocalStorage","useNetworkInformationApi","playbackWatcherOptions","playbackWatcher_","defaultSelector","playerBandwidthEst","networkInformation","connection","mozConnection","webkitConnection","tenMbpsAsBitsPerSecond","networkInfoBandwidthEstBitsPerSec","downlink","invBandwidth","invThroughput","mediaRequests_","mediaRequestsAborted_","mediaRequestsTimedout_","mediaRequestsErrored_","mediaTransferDuration_","mediaBytesTransferred_","mediaAppends_","mainAppendsToLoadedData","audioAppendsToLoadedData","appendsToLoadedData","timeToLoadedData","currentTech","playerDimensions","setupEme_","setupQualityLevels_","mediaSourceUrl_","createKeySessions_","audioPlaylistLoader","handleWaitingForKey_","didSetupEmeOptions","excludedHDPlaylists","qualityLevels_","convertToProgramTime","VhsSourceHandler","supportedType","util","mediaDataSource","Flvjs","_Html","_inherits","_super","_createSuper","_classCallCheck","_createClass","flvPlayer","detachMediaElement","destroy","flvjs","createPlayer","attachMediaElement","_get","_getPrototypeOf","formats","RTC","_this","_defineProperty","streams","candidate","defaultPath","RTCPeerConnection","onaddstream","_play","_regeneratorRuntime","mark","_callee","conf","offer","session","wrap","_context","prepareUrl","addTransceiver","createOffer","offerToReceiveAudio","offerToReceiveVideo","sent","setLocalDescription","api","apiUrl","streamurl","streamUrl","clientip","sdp","fetch","res","setRemoteDescription","RTCSessionDescription","abrupt","stop","_x","webrtcUrl","urlObject","schema","user_query","port","server","vhost","hostname","app","pathname","fill_query","query_string","queries","domain","weboVideojs","myConfig","videoConfig","maxDelta","rate1","maxRateDelta","rate2","videoConf","initVideoConfig","initPlay","_this2","initConfig","emit","setPlayStatus","clearTime","createInterTime","_this3","onClcik","rest","autoCleanupMaxBackwardDuration","autoCleanupMinBackwardDuration","lazyLoadMaxDuration","lazyLoadRecoverDuration","enableStashBuffer","stashInitialSize","reuseRedirectedURL","autoCleanupSourceBuffer","closeRTC","interTime","_this4","cutoutConfig","flvConfig","getPlayStatus","_this5","endsWith","startsWith","srcObject","playStatus"],"mappings":"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","x_google_ignoreList":[0]}